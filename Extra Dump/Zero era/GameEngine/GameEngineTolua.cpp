/*
** Lua binding: GameEngineTolua
** Generated automatically by tolua++-1.0.92 on 04/20/16 20:27:13.
*/

#ifndef __cplusplus
#include "stdlib.h"
#endif
#include "string.h"

#include "tolua++.h"

/* Exported function */
TOLUA_API int  tolua_GameEngineTolua_open (lua_State* tolua_S);

#include "ServerTimer.h"
#include "GameSkill_Mgr.h"
#include "GameOpt.h"
#include "GameActor_Attr.h"
#include "GameQiYue.h"
#include "GameActor.h"
#include "GameBufStatus.h"
#include "GameSkill_Common.h"
#include "GameSkill_DefToLua.h"
#include "GameSkill_Control.h"
#include "Equip.h"
#include "Container.h"
#include "Item.h"
#include "ItemDefine.h"
#include "Equip_Common.h"
#include "GameMsgPrint.h"
#include "Container_Common.h"
#include "GameSkill_IControl.h"
#include "GameSkill_Base.h"
#include "GameActor_Move.h"
#include "GameNpc.h"
#include "GameActor_Rider.h"
#include "GameActor_Pet.h"
#include "GameMainPlayer.h"
#include "GameActorManager.h"
#include "GameDiathesis.h"
#include "GameActor_Trump.h"
#include "GameActor_PVP.h"
#include "GameDamageHealCounter.h"
#include "PworldLimitInfo.h"
#include "BattleLimitInfo.h"
#include "GameCBT.h"
#include "GameActor_MonsterMachine.h"
#include "GhostSchema.h"
#include "GameEffect_Mgr.h"
#include "GameActor_RoleText.h"
#include "WorldCity.h"

/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_tagAberrantList_ToLua (lua_State* tolua_S)
{
 tagAberrantList_ToLua* self = (tagAberrantList_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagAddAttrList_ToLua (lua_State* tolua_S)
{
 tagAddAttrList_ToLua* self = (tagAddAttrList_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagIdentifiableItem_ToLua (lua_State* tolua_S)
{
 tagIdentifiableItem_ToLua* self = (tagIdentifiableItem_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagRideNpcSelect_ToLua (lua_State* tolua_S)
{
 tagRideNpcSelect_ToLua* self = (tagRideNpcSelect_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagMarketContainer (lua_State* tolua_S)
{
 tagMarketContainer* self = (tagMarketContainer*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagAttrResult_ToLua (lua_State* tolua_S)
{
 tagAttrResult_ToLua* self = (tagAttrResult_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagStarAttr_ToLua (lua_State* tolua_S)
{
 tagStarAttr_ToLua* self = (tagStarAttr_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagSparContainer (lua_State* tolua_S)
{
 tagSparContainer* self = (tagSparContainer*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagResPosEngine_ToLua (lua_State* tolua_S)
{
 tagResPosEngine_ToLua* self = (tagResPosEngine_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagAddAttrRandList_ToLua (lua_State* tolua_S)
{
 tagAddAttrRandList_ToLua* self = (tagAddAttrRandList_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagRideInfo (lua_State* tolua_S)
{
 tagRideInfo* self = (tagRideInfo*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_size_t (lua_State* tolua_S)
{
 size_t* self = (size_t*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagBaseAttrInfo_ToLua (lua_State* tolua_S)
{
 tagBaseAttrInfo_ToLua* self = (tagBaseAttrInfo_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagSundriesContainer (lua_State* tolua_S)
{
 tagSundriesContainer* self = (tagSundriesContainer*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagPetDiathesisData_ToTua (lua_State* tolua_S)
{
 tagPetDiathesisData_ToTua* self = (tagPetDiathesisData_ToTua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagTemContainer (lua_State* tolua_S)
{
 tagTemContainer* self = (tagTemContainer*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagSkillResult_ToLua (lua_State* tolua_S)
{
 tagSkillResult_ToLua* self = (tagSkillResult_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagMonBootyMoney_ToLua (lua_State* tolua_S)
{
 tagMonBootyMoney_ToLua* self = (tagMonBootyMoney_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagGemInfo_ToLua (lua_State* tolua_S)
{
 tagGemInfo_ToLua* self = (tagGemInfo_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagAINormalSkill_ToLua (lua_State* tolua_S)
{
 tagAINormalSkill_ToLua* self = (tagAINormalSkill_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_ServerTime_ToLua (lua_State* tolua_S)
{
 ServerTime_ToLua* self = (ServerTime_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagStashContainer (lua_State* tolua_S)
{
 tagStashContainer* self = (tagStashContainer*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_HOLEGEM (lua_State* tolua_S)
{
 HOLEGEM* self = (HOLEGEM*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagDiathesisData_toLua (lua_State* tolua_S)
{
 tagDiathesisData_toLua* self = (tagDiathesisData_toLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagConvoyTask (lua_State* tolua_S)
{
 tagConvoyTask* self = (tagConvoyTask*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagTaskContainer (lua_State* tolua_S)
{
 tagTaskContainer* self = (tagTaskContainer*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagExtendContainer (lua_State* tolua_S)
{
 tagExtendContainer* self = (tagExtendContainer*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagRideStuff_ToLua (lua_State* tolua_S)
{
 tagRideStuff_ToLua* self = (tagRideStuff_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_Item (lua_State* tolua_S)
{
 Item* self = (Item*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tdr_ulonglong (lua_State* tolua_S)
{
 tdr_ulonglong* self = (tdr_ulonglong*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagPetSkillGrid_ToLua (lua_State* tolua_S)
{
 tagPetSkillGrid_ToLua* self = (tagPetSkillGrid_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagCSCityMemInfo_ToLua (lua_State* tolua_S)
{
 tagCSCityMemInfo_ToLua* self = (tagCSCityMemInfo_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagArmStarInfo_ToLua (lua_State* tolua_S)
{
 tagArmStarInfo_ToLua* self = (tagArmStarInfo_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagFairyStuffRate_ToLua (lua_State* tolua_S)
{
 tagFairyStuffRate_ToLua* self = (tagFairyStuffRate_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagAddAttrInst_ToLua (lua_State* tolua_S)
{
 tagAddAttrInst_ToLua* self = (tagAddAttrInst_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagAIInsertSkill_ToLua (lua_State* tolua_S)
{
 tagAIInsertSkill_ToLua* self = (tagAIInsertSkill_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagMonBootyItem_ToLua (lua_State* tolua_S)
{
 tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagMachinePassengerUIInfo_ToLua (lua_State* tolua_S)
{
 tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagMonMachineOreLimit_ToLua (lua_State* tolua_S)
{
 tagMonMachineOreLimit_ToLua* self = (tagMonMachineOreLimit_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_SKILLRESULT (lua_State* tolua_S)
{
 SKILLRESULT* self = (SKILLRESULT*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_TARGETSTATUSONE (lua_State* tolua_S)
{
 TARGETSTATUSONE* self = (TARGETSTATUSONE*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_ARMTYPE (lua_State* tolua_S)
{
 ARMTYPE* self = (ARMTYPE*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_BattleLimitData (lua_State* tolua_S)
{
 BattleLimitData* self = (BattleLimitData*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagItemMapInfo_ToLua (lua_State* tolua_S)
{
 tagItemMapInfo_ToLua* self = (tagItemMapInfo_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagFairySkill_ToLua (lua_State* tolua_S)
{
 tagFairySkill_ToLua* self = (tagFairySkill_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_Ogre__Point2D (lua_State* tolua_S)
{
 Ogre::Point2D* self = (Ogre::Point2D*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagDisplayItem_ToLua (lua_State* tolua_S)
{
 tagDisplayItem_ToLua* self = (tagDisplayItem_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagPressInit_ToLua (lua_State* tolua_S)
{
 tagPressInit_ToLua* self = (tagPressInit_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagArmResult_ToLua (lua_State* tolua_S)
{
 tagArmResult_ToLua* self = (tagArmResult_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_PworldLimitData (lua_State* tolua_S)
{
 PworldLimitData* self = (PworldLimitData*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagRndHole_ToLua (lua_State* tolua_S)
{
 tagRndHole_ToLua* self = (tagRndHole_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagResult_ToLua (lua_State* tolua_S)
{
 tagResult_ToLua* self = (tagResult_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagAddMonBootyGroup_ToLua (lua_State* tolua_S)
{
 tagAddMonBootyGroup_ToLua* self = (tagAddMonBootyGroup_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_PetGrowRange (lua_State* tolua_S)
{
 PetGrowRange* self = (PetGrowRange*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_RESPOS (lua_State* tolua_S)
{
 RESPOS* self = (RESPOS*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagSuitAttr_ToLua (lua_State* tolua_S)
{
 tagSuitAttr_ToLua* self = (tagSuitAttr_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagAddAttrRangeInfo_ToLua (lua_State* tolua_S)
{
 tagAddAttrRangeInfo_ToLua* self = (tagAddAttrRangeInfo_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_PetGrowValue (lua_State* tolua_S)
{
 PetGrowValue* self = (PetGrowValue*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagPetGeniusNamesDef_ToLua (lua_State* tolua_S)
{
 tagPetGeniusNamesDef_ToLua* self = (tagPetGeniusNamesDef_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagPetGenius_ToLua (lua_State* tolua_S)
{
 tagPetGenius_ToLua* self = (tagPetGenius_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagCDTime (lua_State* tolua_S)
{
 tagCDTime* self = (tagCDTime*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagBaoXiangItem_ToLua (lua_State* tolua_S)
{
 tagBaoXiangItem_ToLua* self = (tagBaoXiangItem_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagArmSkillOne_ToLua (lua_State* tolua_S)
{
 tagArmSkillOne_ToLua* self = (tagArmSkillOne_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagLevelFengExpDec_ToLua (lua_State* tolua_S)
{
 tagLevelFengExpDec_ToLua* self = (tagLevelFengExpDec_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagAINextSkill_ToLua (lua_State* tolua_S)
{
 tagAINextSkill_ToLua* self = (tagAINextSkill_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_SKILLARMCHG (lua_State* tolua_S)
{
 SKILLARMCHG* self = (SKILLARMCHG*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagStuffContainer (lua_State* tolua_S)
{
 tagStuffContainer* self = (tagStuffContainer*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_GameXYZ (lua_State* tolua_S)
{
 GameXYZ* self = (GameXYZ*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagStatusResult_ToLua (lua_State* tolua_S)
{
 tagStatusResult_ToLua* self = (tagStatusResult_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagAmmContainer (lua_State* tolua_S)
{
 tagAmmContainer* self = (tagAmmContainer*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagMoneyUse_ToLua (lua_State* tolua_S)
{
 tagMoneyUse_ToLua* self = (tagMoneyUse_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagStarMulInfo_ToLua (lua_State* tolua_S)
{
 tagStarMulInfo_ToLua* self = (tagStarMulInfo_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_tagCangBaoTuMapInfo_ToLua (lua_State* tolua_S)
{
 tagCangBaoTuMapInfo_ToLua* self = (tagCangBaoTuMapInfo_ToLua*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif


/* function to register type */
static void tolua_reg_types (lua_State* tolua_S)
{
 tolua_usertype(tolua_S,"tagItemDef_ToLua");
 tolua_usertype(tolua_S,"tagAberrantList_ToLua");
 tolua_usertype(tolua_S,"tagAddAttrList_ToLua");
 tolua_usertype(tolua_S,"tagIdentifiableItem_ToLua");
 tolua_usertype(tolua_S,"tagAchievementCategoryDef_ToLua");
 tolua_usertype(tolua_S,"Ogre::Singleton<ActorManager>");
 tolua_usertype(tolua_S,"tagMarketContainer");
 tolua_usertype(tolua_S,"tagPetImpUpDef_ToLua");
 tolua_usertype(tolua_S,"GamePet");
 tolua_usertype(tolua_S,"tagGemPagDef_ToLua");
 tolua_usertype(tolua_S,"tagArmHideAttrDef_ToLua");
 tolua_usertype(tolua_S,"tagAddAttrBaseDef_ToLua");
 tolua_usertype(tolua_S,"tagItemData");
 tolua_usertype(tolua_S,"tagResPosEngine_ToLua");
 tolua_usertype(tolua_S,"tagAddAttrRandList_ToLua");
 tolua_usertype(tolua_S,"tagWearPre_ToLua");
 tolua_usertype(tolua_S,"tagBaseAttrInfo_ToLua");
 tolua_usertype(tolua_S,"tagSkillDyAttrib");
 tolua_usertype(tolua_S,"tagCangBaoTuDef_ToLua");
 tolua_usertype(tolua_S,"tagRideRoleInfo");
 tolua_usertype(tolua_S,"tagPetDef_ToLua");
 tolua_usertype(tolua_S,"tagPetDiathesisData_ToTua");
 tolua_usertype(tolua_S,"GameNPC");
 tolua_usertype(tolua_S,"tagTemContainer");
 tolua_usertype(tolua_S,"tagFittingList_ToLua");
 tolua_usertype(tolua_S,"tagMonBootyMoney_ToLua");
 tolua_usertype(tolua_S,"tagCSPetFuseUI_ToLua");
 tolua_usertype(tolua_S,"MainGamePlayer");
 tolua_usertype(tolua_S,"tagGemInfo_ToLua");
 tolua_usertype(tolua_S,"tagAINormalSkill_ToLua");
 tolua_usertype(tolua_S,"ServerTime_ToLua");
 tolua_usertype(tolua_S,"tagLevelUP_ToLua");
 tolua_usertype(tolua_S,"SKILLSTATUSCHG");
 tolua_usertype(tolua_S,"HOLEGEM");
 tolua_usertype(tolua_S,"tagDiathesisData_toLua");
 tolua_usertype(tolua_S,"tagStatusOverlayDef_ToLua");
 tolua_usertype(tolua_S,"tagAchievementCond_ToLua");
 tolua_usertype(tolua_S,"tagTaskContainer");
 tolua_usertype(tolua_S,"GameActor");
 tolua_usertype(tolua_S,"ROLEARM");
 tolua_usertype(tolua_S,"tagSkillAttrib");
 tolua_usertype(tolua_S,"ActorManager");
 tolua_usertype(tolua_S,"tagArmStarInfo_ToLua");
 tolua_usertype(tolua_S,"tagPetSkillGridDef_ToLua");
 tolua_usertype(tolua_S,"tagRoleFairy_ToLua");
 tolua_usertype(tolua_S,"tagAtkerHurtChg_ToLua");
 tolua_usertype(tolua_S,"tagSuitSet_ToLua");
 tolua_usertype(tolua_S,"GameXYZ");
 tolua_usertype(tolua_S,"tagPetStrengthenDef_ToLua");
 tolua_usertype(tolua_S,"Rider");
 tolua_usertype(tolua_S,"tagArmAddAttrDef_ToLua");
 tolua_usertype(tolua_S,"tagAIInsertSkill_ToLua");
 tolua_usertype(tolua_S,"tagCSCityMemInfo_ToLua");
 tolua_usertype(tolua_S,"tagMachinePassengerUIInfo_ToLua");
 tolua_usertype(tolua_S,"resPos_ToLua");
 tolua_usertype(tolua_S,"tagSkillUpRate_ToLua");
 tolua_usertype(tolua_S,"tagNetBarInfo_ToLua");
 tolua_usertype(tolua_S,"CityBuildInfo");
 tolua_usertype(tolua_S,"EntityEffect");
 tolua_usertype(tolua_S,"tagLevelFeng_ToLua");
 tolua_usertype(tolua_S,"tagSkillLearn_ToLua");
 tolua_usertype(tolua_S,"EffectManage");
 tolua_usertype(tolua_S,"tagResult_ToLua");
 tolua_usertype(tolua_S,"tagMonMachineDef_ToLua");
 tolua_usertype(tolua_S,"tagMonMachineOreLimit_ToLua");
 tolua_usertype(tolua_S,"tagMachinePlayerInfo");
 tolua_usertype(tolua_S,"tagRoleArm_ToLua");
 tolua_usertype(tolua_S,"tagOfflineExpParameter_ToLua");
 tolua_usertype(tolua_S,"tagCSActionMachinePassengerInfo_ToLua");
 tolua_usertype(tolua_S,"GameQiYue");
 tolua_usertype(tolua_S,"RESPOS");
 tolua_usertype(tolua_S,"tagSuitAttr_ToLua");
 tolua_usertype(tolua_S,"Container");
 tolua_usertype(tolua_S,"tagStarAttr_ToLua");
 tolua_usertype(tolua_S,"GameTrump");
 tolua_usertype(tolua_S,"tagAddAttrInst_ToLua");
 tolua_usertype(tolua_S,"BattleLimitInfo");
 tolua_usertype(tolua_S,"BattleLimitData");
 tolua_usertype(tolua_S,"ROLEITEM");
 tolua_usertype(tolua_S,"PworldLimitInfo");
 tolua_usertype(tolua_S,"tagAchievementDef_ToLua");
 tolua_usertype(tolua_S,"SKILLARMCHG");
 tolua_usertype(tolua_S,"tagPetFightAttr_ToLua");
 tolua_usertype(tolua_S,"Equip");
 tolua_usertype(tolua_S,"tagPetGeniusNamesDef_ToLua");
 tolua_usertype(tolua_S,"tagAmmContainer");
 tolua_usertype(tolua_S,"tagArmStarDef_ToLua");
 tolua_usertype(tolua_S,"GameSpell");
 tolua_usertype(tolua_S,"GameBossInfo");
 tolua_usertype(tolua_S,"tagCSPetFuseBaby_ToLua");
 tolua_usertype(tolua_S,"tagFairyStarStuffDef_ToLua");
 tolua_usertype(tolua_S,"tagItemMapInfo_ToLua");
 tolua_usertype(tolua_S,"GameDamageHealInfo");
 tolua_usertype(tolua_S,"tagRndHole_ToLua");
 tolua_usertype(tolua_S,"GameActor_PVP");
 tolua_usertype(tolua_S,"tagLevelExpDef_ToLua");
 tolua_usertype(tolua_S,"tagFairyStarStuff_ToLua");
 tolua_usertype(tolua_S,"tagFairyStuffRate_ToLua");
 tolua_usertype(tolua_S,"tagDiathesisInfo_toLua");
 tolua_usertype(tolua_S,"tagAttrResult_ToLua");
 tolua_usertype(tolua_S,"tagMarketInfo");
 tolua_usertype(tolua_S,"tagArmDur_ToLua");
 tolua_usertype(tolua_S,"tagFairyDef_ToLua");
 tolua_usertype(tolua_S,"tagAddAttrRangeInfo_ToLua");
 tolua_usertype(tolua_S,"tagEvolveStuff_ToLua");
 tolua_usertype(tolua_S,"tagBootyInfo");
 tolua_usertype(tolua_S,"tagTrumpId");
 tolua_usertype(tolua_S,"DiathesisManager");
 tolua_usertype(tolua_S,"tagRidePinZhiDef_ToLua");
 tolua_usertype(tolua_S,"GameSkill_Package");
 tolua_usertype(tolua_S,"tagRideInfo");
 tolua_usertype(tolua_S,"tdr_longlong");
 tolua_usertype(tolua_S,"tagBaoXiangItem_ToLua");
 tolua_usertype(tolua_S,"tagLevelFengExpDec_ToLua");
 tolua_usertype(tolua_S,"GamePlayer");
 tolua_usertype(tolua_S,"tagItemResultDesc_ToLua");
 tolua_usertype(tolua_S,"tagArmTeshuDef_ToLua");
 tolua_usertype(tolua_S,"IAutoFind");
 tolua_usertype(tolua_S,"tagRideDef_ToLua");
 tolua_usertype(tolua_S,"Ogre::Point2D");
 tolua_usertype(tolua_S,"tagMachineMonsterInfo");
 tolua_usertype(tolua_S,"tagAddAttrRandDef_ToLua");
 tolua_usertype(tolua_S,"tagDisplayItem_ToLua");
 tolua_usertype(tolua_S,"tagFairyStarDef_ToLua");
 tolua_usertype(tolua_S,"tagRolePet_ToLua");
 tolua_usertype(tolua_S,"tagReviveDef_ToLua");
 tolua_usertype(tolua_S,"tagReviveMoney_ToLua");
 tolua_usertype(tolua_S,"tagRespactEntry_ToLua");
 tolua_usertype(tolua_S,"tagRideNpcSelect_ToLua");
 tolua_usertype(tolua_S,"tagBindSkill_ToLua");
 tolua_usertype(tolua_S,"GameBuf");
 tolua_usertype(tolua_S,"PetGrowRange");
 tolua_usertype(tolua_S,"tagPlayerPosInfo");
 tolua_usertype(tolua_S,"tagPetLevelDef_ToLua");
 tolua_usertype(tolua_S,"tagPetImpUpAttrDef_ToLua");
 tolua_usertype(tolua_S,"tagSkillResult_ToLua");
 tolua_usertype(tolua_S,"tagPetMoneyDef_ToLua");
 tolua_usertype(tolua_S,"tagPetGeniusDef_ToLua");
 tolua_usertype(tolua_S,"tagExtendedResult_ToLua");
 tolua_usertype(tolua_S,"tagPetId_ToLua");
 tolua_usertype(tolua_S,"ISpellControler");
 tolua_usertype(tolua_S,"GameDamageHealCounter");
 tolua_usertype(tolua_S,"WorldCityManager");
 tolua_usertype(tolua_S,"PetGrowValue");
 tolua_usertype(tolua_S,"tagCSPetFuseInviteInfo_ToLua");
 tolua_usertype(tolua_S,"MonsterMachine");
 tolua_usertype(tolua_S,"tagPetNativeSkill_ToLua");
 tolua_usertype(tolua_S,"tagSkillDef_ToLua");
 tolua_usertype(tolua_S,"tagPetGenius_ToLua");
 tolua_usertype(tolua_S,"tagCSRideOnInfo");
 tolua_usertype(tolua_S,"GameSettingConfig");
 tolua_usertype(tolua_S,"tagConvoyTask");
 tolua_usertype(tolua_S,"SpecialMove");
 tolua_usertype(tolua_S,"tagRideStuff_ToLua");
 tolua_usertype(tolua_S,"std::vector<int>");
 tolua_usertype(tolua_S,"size_t");
 tolua_usertype(tolua_S,"tagPressInit_ToLua");
 tolua_usertype(tolua_S,"tagMonColorLevel_ToLua");
 tolua_usertype(tolua_S,"ISpellUIControl");
 tolua_usertype(tolua_S,"SKILLRESULT");
 tolua_usertype(tolua_S,"tagExtendContainer");
 tolua_usertype(tolua_S,"tagArmGradeDef_ToLua");
 tolua_usertype(tolua_S,"tagAddMonBootyGroup_ToLua");
 tolua_usertype(tolua_S,"Item");
 tolua_usertype(tolua_S,"GameBufStatus");
 tolua_usertype(tolua_S,"tdr_ulonglong");
 tolua_usertype(tolua_S,"tagPetHeti_ToLua");
 tolua_usertype(tolua_S,"tagPetSkillGrid_ToLua");
 tolua_usertype(tolua_S,"tagPetSkill_ToLua");
 tolua_usertype(tolua_S,"tagCangBaoTuInfo_ToLua");
 tolua_usertype(tolua_S,"NetMsgHandler");
 tolua_usertype(tolua_S,"GameSpellControler");
 tolua_usertype(tolua_S,"tagPetDiathesis_ToLua");
 tolua_usertype(tolua_S,"tagCDTime");
 tolua_usertype(tolua_S,"RESRANGE");
 tolua_usertype(tolua_S,"tagAddAttrCareerLimit_ToLua");
 tolua_usertype(tolua_S,"tagMonBooty_ToLua");
 tolua_usertype(tolua_S,"tagSparContainer");
 tolua_usertype(tolua_S,"tagAIRefreshedSkill_ToLua");
 tolua_usertype(tolua_S,"tagFairySkill_ToLua");
 tolua_usertype(tolua_S,"tagMonBootyItem_ToLua");
 tolua_usertype(tolua_S,"tagNewAddAttrDef_ToLua");
 tolua_usertype(tolua_S,"tagAtkeeHurtChg_ToLua");
 tolua_usertype(tolua_S,"tagDiathesisDef_ToLua");
 tolua_usertype(tolua_S,"TARGETSTATUSONE");
 tolua_usertype(tolua_S,"ARMTYPE");
 tolua_usertype(tolua_S,"tagStashContainer");
 tolua_usertype(tolua_S,"tagSundriesContainer");
 tolua_usertype(tolua_S,"tagFixedAddAttr_ToLua");
 tolua_usertype(tolua_S,"tagStuffContainer");
 tolua_usertype(tolua_S,"tagNpcDisplayInfo_ToLua");
 tolua_usertype(tolua_S,"RoleAttr");
 tolua_usertype(tolua_S,"SkillManager");
 tolua_usertype(tolua_S,"PworldLimitData");
 tolua_usertype(tolua_S,"tagLevelBuffExpDef_ToLua");
 tolua_usertype(tolua_S,"tagArmSkillData_ToLua");
 tolua_usertype(tolua_S,"tagAddAttrWearPosLimit_ToLua");
 tolua_usertype(tolua_S,"tagCSCityMapPosInfo_ToLua");
 tolua_usertype(tolua_S,"tagResRange_ToLua");
 tolua_usertype(tolua_S,"tagQiYueInfo_ToLua");
 tolua_usertype(tolua_S,"tagArmResult_ToLua");
 tolua_usertype(tolua_S,"tagAddAttrDef_ToLua");
 tolua_usertype(tolua_S,"tagStatusDef_ToLua");
 tolua_usertype(tolua_S,"tagAINextSkill_ToLua");
 tolua_usertype(tolua_S,"tagBaoXiangDef_ToLua");
 tolua_usertype(tolua_S,"tagMoneyUse_ToLua");
 tolua_usertype(tolua_S,"tagMonsterDef_ToLua");
 tolua_usertype(tolua_S,"tagItemTmp_ToLua");
 tolua_usertype(tolua_S,"GameCBT");
 tolua_usertype(tolua_S,"tagRoleItem_ToLua");
 tolua_usertype(tolua_S,"tagMonCollect_ToLua");
 tolua_usertype(tolua_S,"tagStatusDef");
 tolua_usertype(tolua_S,"tagStatusResult_ToLua");
 tolua_usertype(tolua_S,"tagPetTraitDef_ToLua");
 tolua_usertype(tolua_S,"tagArmSkillOne_ToLua");
 tolua_usertype(tolua_S,"tagStarMulInfo_ToLua");
 tolua_usertype(tolua_S,"tagCangBaoTuMapInfo_ToLua");
}

/* get function: sec of class  ServerTime_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_ServerTime_ToLua_unsigned_sec
static int tolua_get_ServerTime_ToLua_unsigned_sec(lua_State* tolua_S)
{
  ServerTime_ToLua* self = (ServerTime_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'sec'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->sec);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: sec of class  ServerTime_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_ServerTime_ToLua_unsigned_sec
static int tolua_set_ServerTime_ToLua_unsigned_sec(lua_State* tolua_S)
{
  ServerTime_ToLua* self = (ServerTime_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'sec'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->sec = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: usec of class  ServerTime_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_ServerTime_ToLua_unsigned_usec
static int tolua_get_ServerTime_ToLua_unsigned_usec(lua_State* tolua_S)
{
  ServerTime_ToLua* self = (ServerTime_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'usec'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->usec);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: usec of class  ServerTime_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_ServerTime_ToLua_unsigned_usec
static int tolua_set_ServerTime_ToLua_unsigned_usec(lua_State* tolua_S)
{
  ServerTime_ToLua* self = (ServerTime_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'usec'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->usec = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: getServerTime */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getServerTime00
static int tolua_GameEngineTolua_getServerTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ServerTime_ToLua tolua_ret = (ServerTime_ToLua)  getServerTime();
   {
#ifdef __cplusplus
    void* tolua_obj = new ServerTime_ToLua(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"ServerTime_ToLua");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(ServerTime_ToLua));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"ServerTime_ToLua");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getServerTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: isSameDay */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_isSameDay00
static int tolua_GameEngineTolua_isSameDay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int time = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  isSameDay(time);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isSameDay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getWeekDay */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getWeekDay00
static int tolua_GameEngineTolua_getWeekDay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  getWeekDay();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWeekDay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isNormalSkill of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_isNormalSkill00
static int tolua_GameEngineTolua_SkillManager_isNormalSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isNormalSkill'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isNormalSkill(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isNormalSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isNormalSkill of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_isNormalSkill01
static int tolua_GameEngineTolua_SkillManager_isNormalSkill01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isNormalSkill'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isNormalSkill(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_isNormalSkill00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: isSkillPassive of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_isSkillPassive00
static int tolua_GameEngineTolua_SkillManager_isSkillPassive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isSkillPassive'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isSkillPassive(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isSkillPassive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isSkillPassive of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_isSkillPassive01
static int tolua_GameEngineTolua_SkillManager_isSkillPassive01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isSkillPassive'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isSkillPassive(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_isSkillPassive00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: isSkillLearned of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_isSkillLearned00
static int tolua_GameEngineTolua_SkillManager_isSkillLearned00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isSkillLearned'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isSkillLearned(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isSkillLearned'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextLearnedSkill of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getNextLearnedSkill00
static int tolua_GameEngineTolua_SkillManager_getNextLearnedSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextLearnedSkill'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextLearnedSkill(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextLearnedSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reloadSkill of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_reloadSkill00
static int tolua_GameEngineTolua_SkillManager_reloadSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reloadSkill'",NULL);
#endif
  {
   self->reloadSkill();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reloadSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reSetSkilList of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_reSetSkilList00
static int tolua_GameEngineTolua_SkillManager_reSetSkilList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reSetSkilList'",NULL);
#endif
  {
   self->reSetSkilList();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reSetSkilList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellControler of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpellControler00
static int tolua_GameEngineTolua_SkillManager_getSpellControler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellControler'",NULL);
#endif
  {
   GameSpellControler* tolua_ret = (GameSpellControler*)  self->getSpellControler();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameSpellControler");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellControler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellUIControl of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpellUIControl00
static int tolua_GameEngineTolua_SkillManager_getSpellUIControl00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellUIControl'",NULL);
#endif
  {
   ISpellUIControl* tolua_ret = (ISpellUIControl*)  self->getSpellUIControl();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"ISpellUIControl");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellUIControl'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSpellUIControl of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setSpellUIControl00
static int tolua_GameEngineTolua_SkillManager_setSpellUIControl00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ISpellUIControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  ISpellUIControl* p = ((ISpellUIControl*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSpellUIControl'",NULL);
#endif
  {
   self->setSpellUIControl(p);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSpellUIControl'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellLv of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpellLv00
static int tolua_GameEngineTolua_SkillManager_getSpellLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellLv'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpellLv(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellCollectNumUse of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpellCollectNumUse00
static int tolua_GameEngineTolua_SkillManager_getSpellCollectNumUse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int skillid = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellCollectNumUse'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpellCollectNumUse(skillid,lv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellCollectNumUse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellCollectNumCur of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpellCollectNumCur00
static int tolua_GameEngineTolua_SkillManager_getSpellCollectNumCur00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int skillid = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellCollectNumCur'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpellCollectNumCur(skillid);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellCollectNumCur'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSpellCollectNumCur of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setSpellCollectNumCur00
static int tolua_GameEngineTolua_SkillManager_setSpellCollectNumCur00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int nCollectNum = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSpellCollectNumCur'",NULL);
#endif
  {
   self->setSpellCollectNumCur(id,nCollectNum);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSpellCollectNumCur'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellDes of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpellDes00
static int tolua_GameEngineTolua_SkillManager_getSpellDes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int skillid = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellDes'",NULL);
#endif
  {
   tagSkillAttrib* tolua_ret = (tagSkillAttrib*)  self->getSpellDes(skillid);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagSkillAttrib");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellDes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellStaticAtt of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpellStaticAtt00
static int tolua_GameEngineTolua_SkillManager_getSpellStaticAtt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int skillid = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellStaticAtt'",NULL);
#endif
  {
   const tagSkillDef_ToLua* tolua_ret = (const tagSkillDef_ToLua*)  self->getSpellStaticAtt(skillid,lv);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagSkillDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellStaticAtt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDiathesisDef of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getDiathesisDef00
static int tolua_GameEngineTolua_SkillManager_getDiathesisDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDiathesisDef'",NULL);
#endif
  {
   tagDiathesisDef_ToLua* tolua_ret = (tagDiathesisDef_ToLua*)  self->getDiathesisDef(id,lv);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagDiathesisDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDiathesisDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTmpSkill of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setTmpSkill00
static int tolua_GameEngineTolua_SkillManager_setTmpSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
  int skillId = ((int)  tolua_tonumber(tolua_S,3,0));
  int skillLv = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTmpSkill'",NULL);
#endif
  {
   self->setTmpSkill(index,skillId,skillLv);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTmpSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTmpSkillId of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getTmpSkillId00
static int tolua_GameEngineTolua_SkillManager_getTmpSkillId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTmpSkillId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getTmpSkillId(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTmpSkillId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTmpSkillLv of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getTmpSkillLv00
static int tolua_GameEngineTolua_SkillManager_getTmpSkillLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTmpSkillLv'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getTmpSkillLv(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTmpSkillLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checkMagic of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_checkMagic00
static int tolua_GameEngineTolua_SkillManager_checkMagic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int skillid = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checkMagic'",NULL);
#endif
  {
   int tolua_ret = (int)  self->checkMagic(skillid);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkMagic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isXPSkill of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_isXPSkill00
static int tolua_GameEngineTolua_SkillManager_isXPSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int skillid = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isXPSkill'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isXPSkill(skillid);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isXPSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLevelSkillId of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getLevelSkillId00
static int tolua_GameEngineTolua_SkillManager_getLevelSkillId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int nRace = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLv = ((int)  tolua_tonumber(tolua_S,3,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLevelSkillId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getLevelSkillId(nRace,nLv,nIndex);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLevelSkillId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIntentSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getIntentSpell00
static int tolua_GameEngineTolua_SkillManager_getIntentSpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIntentSpell'",NULL);
#endif
  {
   GameSpell* tolua_ret = (GameSpell*)  self->getIntentSpell();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameSpell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntentSpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clearIntentSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_clearIntentSpell00
static int tolua_GameEngineTolua_SkillManager_clearIntentSpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clearIntentSpell'",NULL);
#endif
  {
   self->clearIntentSpell();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearIntentSpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getReadySpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getReadySpell00
static int tolua_GameEngineTolua_SkillManager_getReadySpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getReadySpell'",NULL);
#endif
  {
   GameSpell* tolua_ret = (GameSpell*)  self->getReadySpell();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameSpell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getReadySpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setReadySpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setReadySpell00
static int tolua_GameEngineTolua_SkillManager_setReadySpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameSpell",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  GameSpell* pSpell = ((GameSpell*)  tolua_tousertype(tolua_S,2,NULL));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setReadySpell'",NULL);
#endif
  {
   self->setReadySpell(pSpell);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setReadySpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTurnSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getTurnSpell00
static int tolua_GameEngineTolua_SkillManager_getTurnSpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTurnSpell'",NULL);
#endif
  {
   GameSpell* tolua_ret = (GameSpell*)  self->getTurnSpell();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameSpell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTurnSpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTurnSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setTurnSpell00
static int tolua_GameEngineTolua_SkillManager_setTurnSpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameSpell",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  GameSpell* pSpell = ((GameSpell*)  tolua_tousertype(tolua_S,2,NULL));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTurnSpell'",NULL);
#endif
  {
   self->setTurnSpell(pSpell);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTurnSpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAngleSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setAngleSpell00
static int tolua_GameEngineTolua_SkillManager_setAngleSpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameSpell",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  GameSpell* pSpell = ((GameSpell*)  tolua_tousertype(tolua_S,2,NULL));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAngleSpell'",NULL);
#endif
  {
   self->setAngleSpell(pSpell);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAngleSpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAngleSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getAngleSpell00
static int tolua_GameEngineTolua_SkillManager_getAngleSpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAngleSpell'",NULL);
#endif
  {
   GameSpell* tolua_ret = (GameSpell*)  self->getAngleSpell();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameSpell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAngleSpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sendBreakMsg of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_sendBreakMsg00
static int tolua_GameEngineTolua_SkillManager_sendBreakMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  GameSpell* pSpell = ((GameSpell*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sendBreakMsg'",NULL);
#endif
  {
   self->sendBreakMsg(pSpell);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendBreakMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sendPrepareMsg of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_sendPrepareMsg00
static int tolua_GameEngineTolua_SkillManager_sendPrepareMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  GameSpell* pSpell = ((GameSpell*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sendPrepareMsg'",NULL);
#endif
  {
   self->sendPrepareMsg(pSpell);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendPrepareMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sendAttackMsg of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_sendAttackMsg00
static int tolua_GameEngineTolua_SkillManager_sendAttackMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  GameSpell* pSpell = ((GameSpell*)  tolua_tousertype(tolua_S,2,0));
  int BulletId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sendAttackMsg'",NULL);
#endif
  {
   self->sendAttackMsg(pSpell,BulletId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendAttackMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sendAttackMsg of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_sendAttackMsg01
static int tolua_GameEngineTolua_SkillManager_sendAttackMsg01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  GameSpell* pSpell = ((GameSpell*)  tolua_tousertype(tolua_S,2,0));
  int skillReq = ((int)  tolua_tonumber(tolua_S,3,0));
  int BulletId = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sendAttackMsg'",NULL);
#endif
  {
   self->sendAttackMsg(pSpell,skillReq,BulletId);
  }
 }
 return 0;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_sendAttackMsg00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: sendHitMsg of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_sendHitMsg00
static int tolua_GameEngineTolua_SkillManager_sendHitMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  GameSpell* pSpell = ((GameSpell*)  tolua_tousertype(tolua_S,2,0));
  int BulletId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sendHitMsg'",NULL);
#endif
  {
   self->sendHitMsg(pSpell,BulletId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendHitMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNextSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setNextSpell00
static int tolua_GameEngineTolua_SkillManager_setNextSpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameSpell",1,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  GameSpell* pSpell = ((GameSpell*)  tolua_tousertype(tolua_S,2,NULL));
  int id = ((int)  tolua_tonumber(tolua_S,3,0));
  bool immediately = ((bool)  tolua_toboolean(tolua_S,4,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNextSpell'",NULL);
#endif
  {
   self->setNextSpell(pSpell,id,immediately);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNextSpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNextSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setNextSpell01
static int tolua_GameEngineTolua_SkillManager_setNextSpell01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int skillId = ((int)  tolua_tonumber(tolua_S,2,0));
  bool immediately = ((bool)  tolua_toboolean(tolua_S,3,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNextSpell'",NULL);
#endif
  {
   self->setNextSpell(skillId,immediately);
  }
 }
 return 0;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_setNextSpell00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNextSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setNextSpell02
static int tolua_GameEngineTolua_SkillManager_setNextSpell02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int skillId = ((int)  tolua_tonumber(tolua_S,2,0));
  int targetId = ((int)  tolua_tonumber(tolua_S,3,0));
  bool immediately = ((bool)  tolua_toboolean(tolua_S,4,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNextSpell'",NULL);
#endif
  {
   self->setNextSpell(skillId,targetId,immediately);
  }
 }
 return 0;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_setNextSpell01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNextSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setNextSpell03
static int tolua_GameEngineTolua_SkillManager_setNextSpell03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int skillId = ((int)  tolua_tonumber(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
  bool immediately = ((bool)  tolua_toboolean(tolua_S,5,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNextSpell'",NULL);
#endif
  {
   self->setNextSpell(skillId,x,y,immediately);
  }
 }
 return 0;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_setNextSpell02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNextSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setNextSpell04
static int tolua_GameEngineTolua_SkillManager_setNextSpell04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int skillId = ((int)  tolua_tonumber(tolua_S,2,0));
  int targetId = ((int)  tolua_tonumber(tolua_S,3,0));
  int x = ((int)  tolua_tonumber(tolua_S,4,0));
  int y = ((int)  tolua_tonumber(tolua_S,5,0));
  bool immediately = ((bool)  tolua_toboolean(tolua_S,6,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNextSpell'",NULL);
#endif
  {
   self->setNextSpell(skillId,targetId,x,y,immediately);
  }
 }
 return 0;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_setNextSpell03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getNextSpell00
static int tolua_GameEngineTolua_SkillManager_getNextSpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextSpell'",NULL);
#endif
  {
   GameSpell* tolua_ret = (GameSpell*)  self->getNextSpell();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameSpell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextSpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillReq of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillReq00
static int tolua_GameEngineTolua_SkillManager_getSkillReq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillReq'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getSkillReq();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillReq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSkillReq of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setSkillReq00
static int tolua_GameEngineTolua_SkillManager_setSkillReq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  unsigned int i = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSkillReq'",NULL);
#endif
  {
   self->setSkillReq(i);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSkillReq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delSkillDyAttrib of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_delSkillDyAttrib00
static int tolua_GameEngineTolua_SkillManager_delSkillDyAttrib00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delSkillDyAttrib'",NULL);
#endif
  {
   self->delSkillDyAttrib(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delSkillDyAttrib'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSkillDyAttrib of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setSkillDyAttrib00
static int tolua_GameEngineTolua_SkillManager_setSkillDyAttrib00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"tagSkillDyAttrib",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  tagSkillDyAttrib* attrib = ((tagSkillDyAttrib*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSkillDyAttrib'",NULL);
#endif
  {
   self->setSkillDyAttrib(id,attrib);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSkillDyAttrib'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillCommCoolTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillCommCoolTime00
static int tolua_GameEngineTolua_SkillManager_getSkillCommCoolTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillCommCoolTime'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getSkillCommCoolTime(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillCommCoolTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillSelfCoolTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillSelfCoolTime00
static int tolua_GameEngineTolua_SkillManager_getSkillSelfCoolTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillSelfCoolTime'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getSkillSelfCoolTime(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillSelfCoolTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillDistance of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillDistance00
static int tolua_GameEngineTolua_SkillManager_getSkillDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillDistance'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSkillDistance(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillDistance of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillDistance01
static int tolua_GameEngineTolua_SkillManager_getSkillDistance01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillDistance'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSkillDistance(id,lv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_getSkillDistance00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillPrepareTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillPrepareTime00
static int tolua_GameEngineTolua_SkillManager_getSkillPrepareTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillPrepareTime'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getSkillPrepareTime(id,lv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillPrepareTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillPrepareTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillPrepareTime01
static int tolua_GameEngineTolua_SkillManager_getSkillPrepareTime01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillPrepareTime'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getSkillPrepareTime(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_getSkillPrepareTime00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillCollectTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillCollectTime00
static int tolua_GameEngineTolua_SkillManager_getSkillCollectTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillCollectTime'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getSkillCollectTime(id,lv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillCollectTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillCollectTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillCollectTime01
static int tolua_GameEngineTolua_SkillManager_getSkillCollectTime01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillCollectTime'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getSkillCollectTime(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_getSkillCollectTime00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillCollectNum of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillCollectNum00
static int tolua_GameEngineTolua_SkillManager_getSkillCollectNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillCollectNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSkillCollectNum(id,lv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillCollectNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillCollectNum of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillCollectNum01
static int tolua_GameEngineTolua_SkillManager_getSkillCollectNum01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillCollectNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSkillCollectNum(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_getSkillCollectNum00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillPilotTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillPilotTime00
static int tolua_GameEngineTolua_SkillManager_getSkillPilotTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillPilotTime'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getSkillPilotTime(id,lv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillPilotTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillPilotTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillPilotTime01
static int tolua_GameEngineTolua_SkillManager_getSkillPilotTime01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillPilotTime'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getSkillPilotTime(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_getSkillPilotTime00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillPilotNum of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillPilotNum00
static int tolua_GameEngineTolua_SkillManager_getSkillPilotNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillPilotNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSkillPilotNum(id,lv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillPilotNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillPilotNum of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillPilotNum01
static int tolua_GameEngineTolua_SkillManager_getSkillPilotNum01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillPilotNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSkillPilotNum(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_getSkillPilotNum00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillCostMp of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillCostMp00
static int tolua_GameEngineTolua_SkillManager_getSkillCostMp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillCostMp'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSkillCostMp(id,lv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillCostMp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillCostMp of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillCostMp01
static int tolua_GameEngineTolua_SkillManager_getSkillCostMp01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillCostMp'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSkillCostMp(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_getSkillCostMp00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillCostCollect of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillCostCollect00
static int tolua_GameEngineTolua_SkillManager_getSkillCostCollect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillCostCollect'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSkillCostCollect(id,lv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillCostCollect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillCostCollect of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillCostCollect01
static int tolua_GameEngineTolua_SkillManager_getSkillCostCollect01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillCostCollect'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSkillCostCollect(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_getSkillCostCollect00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillCostXp of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillCostXp00
static int tolua_GameEngineTolua_SkillManager_getSkillCostXp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillCostXp'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSkillCostXp(id,lv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillCostXp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillCostXp of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillCostXp01
static int tolua_GameEngineTolua_SkillManager_getSkillCostXp01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillCostXp'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSkillCostXp(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_getSkillCostXp00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillMainRange of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillMainRange00
static int tolua_GameEngineTolua_SkillManager_getSkillMainRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillMainRange'",NULL);
#endif
  {
   const RESRANGE& tolua_ret = (const RESRANGE&)  self->getSkillMainRange(id);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const RESRANGE");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillMainRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillMaxTargets of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillMaxTargets00
static int tolua_GameEngineTolua_SkillManager_getSkillMaxTargets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillMaxTargets'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getSkillMaxTargets(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillMaxTargets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillDyAttrib of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillDyAttrib00
static int tolua_GameEngineTolua_SkillManager_getSkillDyAttrib00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillDyAttrib'",NULL);
#endif
  {
   tagSkillDyAttrib* tolua_ret = (tagSkillDyAttrib*)  self->getSkillDyAttrib(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagSkillDyAttrib");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillDyAttrib'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addTmpSkill of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_addTmpSkill00
static int tolua_GameEngineTolua_SkillManager_addTmpSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addTmpSkill'",NULL);
#endif
  {
   self->addTmpSkill(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addTmpSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delTmpSkill of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_delTmpSkill00
static int tolua_GameEngineTolua_SkillManager_delTmpSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delTmpSkill'",NULL);
#endif
  {
   self->delTmpSkill(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delTmpSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isTmpSkill of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_isTmpSkill00
static int tolua_GameEngineTolua_SkillManager_isTmpSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isTmpSkill'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isTmpSkill(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTmpSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canMoveAttack of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_canMoveAttack00
static int tolua_GameEngineTolua_SkillManager_canMoveAttack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canMoveAttack'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canMoveAttack(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canMoveAttack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isNoPrepareSkill of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_isNoPrepareSkill00
static int tolua_GameEngineTolua_SkillManager_isNoPrepareSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isNoPrepareSkill'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isNoPrepareSkill(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isNoPrepareSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canCastSelf of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_canCastSelf00
static int tolua_GameEngineTolua_SkillManager_canCastSelf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canCastSelf'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canCastSelf(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canCastSelf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCommonCDTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setCommonCDTime00
static int tolua_GameEngineTolua_SkillManager_setCommonCDTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCommonCDTime'",NULL);
#endif
  {
   self->setCommonCDTime(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCommonCDTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resetSkillCDTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_resetSkillCDTime00
static int tolua_GameEngineTolua_SkillManager_resetSkillCDTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resetSkillCDTime'",NULL);
#endif
  {
   self->resetSkillCDTime(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resetSkillCDTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSkillCDTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setSkillCDTime00
static int tolua_GameEngineTolua_SkillManager_setSkillCDTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSkillCDTime'",NULL);
#endif
  {
   self->setSkillCDTime(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSkillCDTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSkillCDTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_setSkillCDTime01
static int tolua_GameEngineTolua_SkillManager_setSkillCDTime01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  unsigned int left = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSkillCDTime'",NULL);
#endif
  {
   self->setSkillCDTime(id,left);
  }
 }
 return 0;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_setSkillCDTime00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: reduceCD of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_reduceCD00
static int tolua_GameEngineTolua_SkillManager_reduceCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  unsigned int reduceTime = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reduceCD'",NULL);
#endif
  {
   self->reduceCD(id,reduceTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reduceCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clearCD of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_clearCD00
static int tolua_GameEngineTolua_SkillManager_clearCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clearCD'",NULL);
#endif
  {
   self->clearCD(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clearAllCD of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_clearAllCD00
static int tolua_GameEngineTolua_SkillManager_clearAllCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clearAllCD'",NULL);
#endif
  {
   self->clearAllCD();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearAllCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checkCD_resetTypeCD of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_checkCD_resetTypeCD00
static int tolua_GameEngineTolua_SkillManager_checkCD_resetTypeCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int t = ((int)  tolua_tonumber(tolua_S,2,0));
  unsigned int v = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checkCD_resetTypeCD'",NULL);
#endif
  {
   self->checkCD_resetTypeCD(t,v);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkCD_resetTypeCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checkCD_setTypeCD of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_checkCD_setTypeCD00
static int tolua_GameEngineTolua_SkillManager_checkCD_setTypeCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int t = ((int)  tolua_tonumber(tolua_S,2,0));
  unsigned int v = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  unsigned int time = ((unsigned int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checkCD_setTypeCD'",NULL);
#endif
  {
   self->checkCD_setTypeCD(t,v,time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkCD_setTypeCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillCDTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSkillCDTime00
static int tolua_GameEngineTolua_SkillManager_getSkillCDTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillCDTime'",NULL);
#endif
  {
   const tagCDTime& tolua_ret = (const tagCDTime&)  self->getSkillCDTime(id);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagCDTime");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillCDTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCommonCDTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getCommonCDTime00
static int tolua_GameEngineTolua_SkillManager_getCommonCDTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCommonCDTime'",NULL);
#endif
  {
   const tagCDTime& tolua_ret = (const tagCDTime&)  self->getCommonCDTime();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagCDTime");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCommonCDTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCDTime of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getCDTime00
static int tolua_GameEngineTolua_SkillManager_getCDTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCDTime'",NULL);
#endif
  {
   const tagCDTime& tolua_ret = (const tagCDTime&)  self->getCDTime(id);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagCDTime");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCDTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castInspect of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castInspect00
static int tolua_GameEngineTolua_SkillManager_castInspect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castInspect'",NULL);
#endif
  {
   int tolua_ret = (int)  self->castInspect(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castInspect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellSample of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpellSample00
static int tolua_GameEngineTolua_SkillManager_getSpellSample00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellSample'",NULL);
#endif
  {
   GameSpell* tolua_ret = (GameSpell*)  self->getSpellSample(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameSpell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellSample'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_createSpell00
static int tolua_GameEngineTolua_SkillManager_createSpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"ISpellControler",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  ISpellControler* sc = ((ISpellControler*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createSpell'",NULL);
#endif
  {
   GameSpell* tolua_ret = (GameSpell*)  self->createSpell(id,sc);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameSpell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createSpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_update00
static int tolua_GameEngineTolua_SkillManager_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  unsigned int dtick = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'",NULL);
#endif
  {
   self->update(dtick);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deleteActorSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_deleteActorSpell00
static int tolua_GameEngineTolua_SkillManager_deleteActorSpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deleteActorSpell'",NULL);
#endif
  {
   self->deleteActorSpell(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deleteActorSpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellWeaponType of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpellWeaponType00
static int tolua_GameEngineTolua_SkillManager_getSpellWeaponType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  unsigned int idx = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellWeaponType'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpellWeaponType(id,idx);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellWeaponType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellWeaponType of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpellWeaponType01
static int tolua_GameEngineTolua_SkillManager_getSpellWeaponType01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
  unsigned int idx = ((unsigned int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellWeaponType'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpellWeaponType(id,lv,idx);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_getSpellWeaponType00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: castInMap of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castInMap00
static int tolua_GameEngineTolua_SkillManager_castInMap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castInMap'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castInMap(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castInMap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castInMap of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castInMap01
static int tolua_GameEngineTolua_SkillManager_castInMap01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castInMap'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castInMap(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_castInMap00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: castInPworld of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castInPworld00
static int tolua_GameEngineTolua_SkillManager_castInPworld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castInPworld'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castInPworld(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castInPworld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castInPworld of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castInPworld01
static int tolua_GameEngineTolua_SkillManager_castInPworld01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castInPworld'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castInPworld(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_castInPworld00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: castWeapon of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castWeapon00
static int tolua_GameEngineTolua_SkillManager_castWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castWeapon'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castWeapon(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castWeapon of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castWeapon01
static int tolua_GameEngineTolua_SkillManager_castWeapon01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castWeapon'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castWeapon(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_castWeapon00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: castSkillCD of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castSkillCD00
static int tolua_GameEngineTolua_SkillManager_castSkillCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castSkillCD'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castSkillCD(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castSkillCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castCommonCD of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castCommonCD00
static int tolua_GameEngineTolua_SkillManager_castCommonCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castCommonCD'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castCommonCD(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castCommonCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castCD of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castCD00
static int tolua_GameEngineTolua_SkillManager_castCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castCD'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castCD(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castMP of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castMP00
static int tolua_GameEngineTolua_SkillManager_castMP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castMP'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castMP(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castMP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castMP of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castMP01
static int tolua_GameEngineTolua_SkillManager_castMP01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castMP'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castMP(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_castMP00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: castXP of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castXP00
static int tolua_GameEngineTolua_SkillManager_castXP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castXP'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castXP(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castXP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castXP of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castXP01
static int tolua_GameEngineTolua_SkillManager_castXP01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castXP'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castXP(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_castXP00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: castCollect of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castCollect00
static int tolua_GameEngineTolua_SkillManager_castCollect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castCollect'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castCollect(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castCollect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castCollect of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castCollect01
static int tolua_GameEngineTolua_SkillManager_castCollect01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castCollect'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castCollect(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_castCollect00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: castEnergy of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castEnergy00
static int tolua_GameEngineTolua_SkillManager_castEnergy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castEnergy'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castEnergy(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castEnergy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castEnergy of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castEnergy01
static int tolua_GameEngineTolua_SkillManager_castEnergy01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castEnergy'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castEnergy(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_castEnergy00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: castMachineEnergy of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castMachineEnergy00
static int tolua_GameEngineTolua_SkillManager_castMachineEnergy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castMachineEnergy'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castMachineEnergy(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castMachineEnergy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castMachineEnergy of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castMachineEnergy01
static int tolua_GameEngineTolua_SkillManager_castMachineEnergy01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castMachineEnergy'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castMachineEnergy(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_castMachineEnergy00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: castMorph of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castMorph00
static int tolua_GameEngineTolua_SkillManager_castMorph00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castMorph'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castMorph(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castMorph'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castPlayerLv of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castPlayerLv00
static int tolua_GameEngineTolua_SkillManager_castPlayerLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castPlayerLv'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castPlayerLv(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castPlayerLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castPlayerLv of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castPlayerLv01
static int tolua_GameEngineTolua_SkillManager_castPlayerLv01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castPlayerLv'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castPlayerLv(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_castPlayerLv00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: castItem of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castItem00
static int tolua_GameEngineTolua_SkillManager_castItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castItem'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castItem(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'castItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: castItem of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_castItem01
static int tolua_GameEngineTolua_SkillManager_castItem01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'castItem'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->castItem(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_castItem00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: useSpellOnce of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_useSpellOnce00
static int tolua_GameEngineTolua_SkillManager_useSpellOnce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'useSpellOnce'",NULL);
#endif
  {
   int tolua_ret = (int)  self->useSpellOnce(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'useSpellOnce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: useSpellOnce of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_useSpellOnce01
static int tolua_GameEngineTolua_SkillManager_useSpellOnce01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int target = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'useSpellOnce'",NULL);
#endif
  {
   int tolua_ret = (int)  self->useSpellOnce(id,target);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_useSpellOnce00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: useSpellOnce of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_useSpellOnce02
static int tolua_GameEngineTolua_SkillManager_useSpellOnce02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'useSpellOnce'",NULL);
#endif
  {
   int tolua_ret = (int)  self->useSpellOnce(id,x,y);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_useSpellOnce01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: useSpellOnce of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_useSpellOnce03
static int tolua_GameEngineTolua_SkillManager_useSpellOnce03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int target = ((int)  tolua_tonumber(tolua_S,3,0));
  int x = ((int)  tolua_tonumber(tolua_S,4,0));
  int y = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'useSpellOnce'",NULL);
#endif
  {
   int tolua_ret = (int)  self->useSpellOnce(id,target,x,y);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_useSpellOnce02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: useSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_useSpell00
static int tolua_GameEngineTolua_SkillManager_useSpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'useSpell'",NULL);
#endif
  {
   int tolua_ret = (int)  self->useSpell(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'useSpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: useSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_useSpell01
static int tolua_GameEngineTolua_SkillManager_useSpell01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int target = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'useSpell'",NULL);
#endif
  {
   int tolua_ret = (int)  self->useSpell(id,target);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_useSpell00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: useSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_useSpell02
static int tolua_GameEngineTolua_SkillManager_useSpell02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'useSpell'",NULL);
#endif
  {
   int tolua_ret = (int)  self->useSpell(id,x,y);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_useSpell01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: useSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_useSpell03
static int tolua_GameEngineTolua_SkillManager_useSpell03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int target = ((int)  tolua_tonumber(tolua_S,3,0));
  int x = ((int)  tolua_tonumber(tolua_S,4,0));
  int y = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'useSpell'",NULL);
#endif
  {
   int tolua_ret = (int)  self->useSpell(id,target,x,y);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_useSpell02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: testResult of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_testResult00
static int tolua_GameEngineTolua_SkillManager_testResult00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int result = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'testResult'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->testResult(result);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'testResult'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unUseSpell of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_unUseSpell00
static int tolua_GameEngineTolua_SkillManager_unUseSpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unUseSpell'",NULL);
#endif
  {
   self->unUseSpell();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unUseSpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: normalAttack of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_normalAttack00
static int tolua_GameEngineTolua_SkillManager_normalAttack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'normalAttack'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->normalAttack(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'normalAttack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onStart of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_onStart00
static int tolua_GameEngineTolua_SkillManager_onStart00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  GameSpell* pSpell = ((GameSpell*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onStart'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onStart(pSpell);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onStart'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onStop of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_onStop00
static int tolua_GameEngineTolua_SkillManager_onStop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onStop'",NULL);
#endif
  {
   self->onStop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onStop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: spellAttack of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_spellAttack00
static int tolua_GameEngineTolua_SkillManager_spellAttack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  GameSpell* p = ((GameSpell*)  tolua_tousertype(tolua_S,2,0));
  unsigned int delay = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'spellAttack'",NULL);
#endif
  {
   self->spellAttack(p,delay);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'spellAttack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: spellStop of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_spellStop00
static int tolua_GameEngineTolua_SkillManager_spellStop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  GameSpell* p = ((GameSpell*)  tolua_tousertype(tolua_S,2,0));
  unsigned int delay = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'spellStop'",NULL);
#endif
  {
   self->spellStop(p,delay);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'spellStop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: spellBreak of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_spellBreak00
static int tolua_GameEngineTolua_SkillManager_spellBreak00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  GameSpell* p = ((GameSpell*)  tolua_tousertype(tolua_S,2,0));
  unsigned int delay = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'spellBreak'",NULL);
#endif
  {
   self->spellBreak(p,delay);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'spellBreak'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: execSpellStop of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_execSpellStop00
static int tolua_GameEngineTolua_SkillManager_execSpellStop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'execSpellStop'",NULL);
#endif
  {
   self->execSpellStop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'execSpellStop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNormalAttackSkill of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getNormalAttackSkill00
static int tolua_GameEngineTolua_SkillManager_getNormalAttackSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int actorId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNormalAttackSkill'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getNormalAttackSkill(actorId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNormalAttackSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNormalAttackSkill of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getNormalAttackSkill01
static int tolua_GameEngineTolua_SkillManager_getNormalAttackSkill01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNormalAttackSkill'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getNormalAttackSkill();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_getNormalAttackSkill00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInsteadSkillId of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getInsteadSkillId00
static int tolua_GameEngineTolua_SkillManager_getInsteadSkillId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInsteadSkillId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getInsteadSkillId(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInsteadSkillId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addInsteadBind of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_addInsteadBind00
static int tolua_GameEngineTolua_SkillManager_addInsteadBind00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int repId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addInsteadBind'",NULL);
#endif
  {
   self->addInsteadBind(id,repId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addInsteadBind'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delInsteadBind of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_delInsteadBind00
static int tolua_GameEngineTolua_SkillManager_delInsteadBind00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int repId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delInsteadBind'",NULL);
#endif
  {
   self->delInsteadBind(id,repId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delInsteadBind'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRuneSkillId of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getRuneSkillId00
static int tolua_GameEngineTolua_SkillManager_getRuneSkillId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRuneSkillId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getRuneSkillId(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRuneSkillId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getReserveSkillId of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getReserveSkillId00
static int tolua_GameEngineTolua_SkillManager_getReserveSkillId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getReserveSkillId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getReserveSkillId(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getReserveSkillId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellRuneEnable of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpellRuneEnable00
static int tolua_GameEngineTolua_SkillManager_getSpellRuneEnable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellRuneEnable'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getSpellRuneEnable(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellRuneEnable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellRuneType of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpellRuneType00
static int tolua_GameEngineTolua_SkillManager_getSpellRuneType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellRuneType'",NULL);
#endif
  {
   char tolua_ret = (char)  self->getSpellRuneType(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellRuneType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellRuneItemId of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpellRuneItemId00
static int tolua_GameEngineTolua_SkillManager_getSpellRuneItemId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellRuneItemId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpellRuneItemId(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellRuneItemId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellRuneItemId of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpellRuneItemId01
static int tolua_GameEngineTolua_SkillManager_getSpellRuneItemId01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int type = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellRuneItemId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpellRuneItemId(id,type);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_getSpellRuneItemId00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpkillRuneDesc of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpkillRuneDesc00
static int tolua_GameEngineTolua_SkillManager_getSpkillRuneDesc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
  int type = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpkillRuneDesc'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getSpkillRuneDesc(id,level,type);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpkillRuneDesc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpkillRuneDesc of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpkillRuneDesc01
static int tolua_GameEngineTolua_SkillManager_getSpkillRuneDesc01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int type = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpkillRuneDesc'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getSpkillRuneDesc(id,type);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_SkillManager_getSpkillRuneDesc00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpkillRuneSkillId of class  SkillManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SkillManager_getSpkillRuneSkillId00
static int tolua_GameEngineTolua_SkillManager_getSpkillRuneSkillId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillManager* self = (SkillManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int type = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpkillRuneSkillId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpkillRuneSkillId(id,type);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpkillRuneSkillId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBaseAttriValue of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getBaseAttriValue00
static int tolua_GameEngineTolua_RoleAttr_getBaseAttriValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RoleAttr* self = (const RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int attriId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBaseAttriValue'",NULL);
#endif
  {
   unsigned short tolua_ret = (unsigned short)  self->getBaseAttriValue(attriId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBaseAttriValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getClanWID of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getClanWID00
static int tolua_GameEngineTolua_RoleAttr_getClanWID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getClanWID'",NULL);
#endif
  {
   tdr_ulonglong tolua_ret = (tdr_ulonglong)  self->getClanWID();
   {
#ifdef __cplusplus
    void* tolua_obj = new tdr_ulonglong(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(tdr_ulonglong));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getClanWID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getClanID of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getClanID00
static int tolua_GameEngineTolua_RoleAttr_getClanID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getClanID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getClanID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getClanID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setClanWID of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setClanWID00
static int tolua_GameEngineTolua_RoleAttr_setClanWID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  tdr_ulonglong clanWID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setClanWID'",NULL);
#endif
  {
   self->setClanWID(clanWID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setClanWID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInSameClan of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_isInSameClan00
static int tolua_GameEngineTolua_RoleAttr_isInSameClan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  tdr_ulonglong uClanWID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInSameClan'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInSameClan(uClanWID);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInSameClan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInClan of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_isInClan00
static int tolua_GameEngineTolua_RoleAttr_isInClan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInClan'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInClan();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInClan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPkValue of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setPkValue00
static int tolua_GameEngineTolua_RoleAttr_setPkValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int nPkValue = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPkValue'",NULL);
#endif
  {
   self->setPkValue(nPkValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPkValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRoleWId of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getRoleWId00
static int tolua_GameEngineTolua_RoleAttr_getRoleWId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRoleWId'",NULL);
#endif
  {
   tdr_ulonglong tolua_ret = (tdr_ulonglong)  self->getRoleWId();
   {
#ifdef __cplusplus
    void* tolua_obj = new tdr_ulonglong(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(tdr_ulonglong));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRoleWId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRoleWId of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setRoleWId00
static int tolua_GameEngineTolua_RoleAttr_setRoleWId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  tdr_ulonglong wId = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRoleWId'",NULL);
#endif
  {
   self->setRoleWId(wId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRoleWId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getShortAttriValule of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getShortAttriValule00
static int tolua_GameEngineTolua_RoleAttr_getShortAttriValule00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RoleAttr* self = (const RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int attriId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getShortAttriValule'",NULL);
#endif
  {
   unsigned short tolua_ret = (unsigned short)  self->getShortAttriValule(attriId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getShortAttriValule'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIntAttriValue of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getIntAttriValue00
static int tolua_GameEngineTolua_RoleAttr_getIntAttriValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RoleAttr* self = (const RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int attriId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIntAttriValue'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getIntAttriValue(attriId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntAttriValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSignedShortAttriValule of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getSignedShortAttriValule00
static int tolua_GameEngineTolua_RoleAttr_getSignedShortAttriValule00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RoleAttr* self = (const RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int attriId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSignedShortAttriValule'",NULL);
#endif
  {
   short tolua_ret = (short)  self->getSignedShortAttriValule(attriId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSignedShortAttriValule'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setName00
static int tolua_GameEngineTolua_RoleAttr_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  const char* pname = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'",NULL);
#endif
  {
   self->setName(pname);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getName00
static int tolua_GameEngineTolua_RoleAttr_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setStallName of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setStallName00
static int tolua_GameEngineTolua_RoleAttr_setStallName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  const char* pName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setStallName'",NULL);
#endif
  {
   self->setStallName(pName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setStallName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStallName of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getStallName00
static int tolua_GameEngineTolua_RoleAttr_getStallName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStallName'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getStallName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStallName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHead of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getHead00
static int tolua_GameEngineTolua_RoleAttr_getHead00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHead'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getHead();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHead'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFace of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getFace00
static int tolua_GameEngineTolua_RoleAttr_getFace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFace'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getFace();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHair of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getHair00
static int tolua_GameEngineTolua_RoleAttr_getHair00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHair'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getHair();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHair'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setViewFlg of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setViewFlg00
static int tolua_GameEngineTolua_RoleAttr_setViewFlg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int flag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setViewFlg'",NULL);
#endif
  {
   self->setViewFlg(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setViewFlg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setClanName of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setClanName00
static int tolua_GameEngineTolua_RoleAttr_setClanName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  const char* pszClanName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setClanName'",NULL);
#endif
  {
   self->setClanName(pszClanName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setClanName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getClanName of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getClanName00
static int tolua_GameEngineTolua_RoleAttr_getClanName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getClanName'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getClanName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getClanName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTeamName of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setTeamName00
static int tolua_GameEngineTolua_RoleAttr_setTeamName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  const char* pname = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTeamName'",NULL);
#endif
  {
   self->setTeamName(pname);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTeamName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTeamName of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getTeamName00
static int tolua_GameEngineTolua_RoleAttr_getTeamName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTeamName'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getTeamName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTeamName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOwnerTeamWID of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getOwnerTeamWID00
static int tolua_GameEngineTolua_RoleAttr_getOwnerTeamWID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOwnerTeamWID'",NULL);
#endif
  {
   tdr_ulonglong tolua_ret = (tdr_ulonglong)  self->getOwnerTeamWID();
   {
#ifdef __cplusplus
    void* tolua_obj = new tdr_ulonglong(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(tdr_ulonglong));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOwnerTeamWID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOwnerTeamWID of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setOwnerTeamWID00
static int tolua_GameEngineTolua_RoleAttr_setOwnerTeamWID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  tdr_ulonglong uTeamWID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOwnerTeamWID'",NULL);
#endif
  {
   self->setOwnerTeamWID(uTeamWID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOwnerTeamWID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTeamWID of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getTeamWID00
static int tolua_GameEngineTolua_RoleAttr_getTeamWID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTeamWID'",NULL);
#endif
  {
   tdr_ulonglong tolua_ret = (tdr_ulonglong)  self->getTeamWID();
   {
#ifdef __cplusplus
    void* tolua_obj = new tdr_ulonglong(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(tdr_ulonglong));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTeamWID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInSameTeam of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_isInSameTeam00
static int tolua_GameEngineTolua_RoleAttr_isInSameTeam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  tdr_ulonglong uTeamWID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInSameTeam'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInSameTeam(uTeamWID);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInSameTeam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTeamWID of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setTeamWID00
static int tolua_GameEngineTolua_RoleAttr_setTeamWID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  tdr_ulonglong uTeamWID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTeamWID'",NULL);
#endif
  {
   self->setTeamWID(uTeamWID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTeamWID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInTeam of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_isInTeam00
static int tolua_GameEngineTolua_RoleAttr_isInTeam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInTeam'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInTeam();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInTeam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCaptain of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setCaptain00
static int tolua_GameEngineTolua_RoleAttr_setCaptain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  bool bFlag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCaptain'",NULL);
#endif
  {
   self->setCaptain(bFlag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCaptain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isCaptain of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_isCaptain00
static int tolua_GameEngineTolua_RoleAttr_isCaptain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isCaptain'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isCaptain();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCaptain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setType of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setType00
static int tolua_GameEngineTolua_RoleAttr_setType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int type = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setType'",NULL);
#endif
  {
   self->setType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getType00
static int tolua_GameEngineTolua_RoleAttr_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGender of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getGender00
static int tolua_GameEngineTolua_RoleAttr_getGender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGender'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getGender();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRace of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getRace00
static int tolua_GameEngineTolua_RoleAttr_getRace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRace'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getRace();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemNum of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getItemNum00
static int tolua_GameEngineTolua_RoleAttr_getItemNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setArmStar of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setArmStar00
static int tolua_GameEngineTolua_RoleAttr_setArmStar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int star = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setArmStar'",NULL);
#endif
  {
   self->setArmStar(star);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setArmStar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmStar of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getArmStar00
static int tolua_GameEngineTolua_RoleAttr_getArmStar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmStar'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getArmStar();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmStar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHP of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setHP00
static int tolua_GameEngineTolua_RoleAttr_setHP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int hp = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHP'",NULL);
#endif
  {
   self->setHP(hp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTmpHp of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setTmpHp00
static int tolua_GameEngineTolua_RoleAttr_setTmpHp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int hp = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTmpHp'",NULL);
#endif
  {
   self->setTmpHp(hp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTmpHp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reSetHp of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_reSetHp00
static int tolua_GameEngineTolua_RoleAttr_reSetHp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int hp = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reSetHp'",NULL);
#endif
  {
   self->reSetHp(hp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reSetHp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHP of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getHP00
static int tolua_GameEngineTolua_RoleAttr_getHP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHP'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getHP();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxHP of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setMaxHP00
static int tolua_GameEngineTolua_RoleAttr_setMaxHP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int hp = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxHP'",NULL);
#endif
  {
   self->setMaxHP(hp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxHP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxHP of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getMaxHP00
static int tolua_GameEngineTolua_RoleAttr_getMaxHP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxHP'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getMaxHP();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxHP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMP of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setMP00
static int tolua_GameEngineTolua_RoleAttr_setMP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int mp = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMP'",NULL);
#endif
  {
   self->setMP(mp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMP of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getMP00
static int tolua_GameEngineTolua_RoleAttr_getMP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMP'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getMP();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxMP of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setMaxMP00
static int tolua_GameEngineTolua_RoleAttr_setMaxMP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int mp = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxMP'",NULL);
#endif
  {
   self->setMaxMP(mp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxMP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxMP of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getMaxMP00
static int tolua_GameEngineTolua_RoleAttr_getMaxMP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxMP'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getMaxMP();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxMP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVigor of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setVigor00
static int tolua_GameEngineTolua_RoleAttr_setVigor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int vigor = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVigor'",NULL);
#endif
  {
   self->setVigor(vigor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVigor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVigor of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getVigor00
static int tolua_GameEngineTolua_RoleAttr_getVigor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVigor'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getVigor();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVigor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVigorMax of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setVigorMax00
static int tolua_GameEngineTolua_RoleAttr_setVigorMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int vigorMax = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVigorMax'",NULL);
#endif
  {
   self->setVigorMax(vigorMax);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVigorMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVigorMax of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getVigorMax00
static int tolua_GameEngineTolua_RoleAttr_getVigorMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVigorMax'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getVigorMax();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVigorMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getXP of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getXP00
static int tolua_GameEngineTolua_RoleAttr_getXP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getXP'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getXP();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getXP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setXP of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setXP00
static int tolua_GameEngineTolua_RoleAttr_setXP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int xp = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setXP'",NULL);
#endif
  {
   self->setXP(xp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setXP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxXP of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getMaxXP00
static int tolua_GameEngineTolua_RoleAttr_getMaxXP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxXP'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxXP();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxXP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVIM of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getVIM00
static int tolua_GameEngineTolua_RoleAttr_getVIM00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVIM'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getVIM();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVIM'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxVIM of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getMaxVIM00
static int tolua_GameEngineTolua_RoleAttr_getMaxVIM00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxVIM'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxVIM();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxVIM'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLv of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setLv00
static int tolua_GameEngineTolua_RoleAttr_setLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int lv = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLv'",NULL);
#endif
  {
   self->setLv(lv);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLv of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getLv00
static int tolua_GameEngineTolua_RoleAttr_getLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLv'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getLv();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getExp of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getExp00
static int tolua_GameEngineTolua_RoleAttr_getExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getExp'",NULL);
#endif
  {
   long long tolua_ret = (long long)  self->getExp();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLvExp of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getLvExp00
static int tolua_GameEngineTolua_RoleAttr_getLvExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int lv = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLvExp'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getLvExp(lv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLvExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOfflineLvExp of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getOfflineLvExp00
static int tolua_GameEngineTolua_RoleAttr_getOfflineLvExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int lv = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOfflineLvExp'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getOfflineLvExp(lv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOfflineLvExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMoney of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getMoney00
static int tolua_GameEngineTolua_RoleAttr_getMoney00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMoney'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getMoney();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMoney'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBull of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getBull00
static int tolua_GameEngineTolua_RoleAttr_getBull00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBull'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getBull();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBull'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStashMoney of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getStashMoney00
static int tolua_GameEngineTolua_RoleAttr_getStashMoney00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStashMoney'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getStashMoney();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStashMoney'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStashBull of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getStashBull00
static int tolua_GameEngineTolua_RoleAttr_getStashBull00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStashBull'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getStashBull();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStashBull'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGodCoin of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getGodCoin00
static int tolua_GameEngineTolua_RoleAttr_getGodCoin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGodCoin'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getGodCoin();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGodCoin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBindGodCoin of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getBindGodCoin00
static int tolua_GameEngineTolua_RoleAttr_getBindGodCoin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBindGodCoin'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getBindGodCoin();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBindGodCoin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVipPoint of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getVipPoint00
static int tolua_GameEngineTolua_RoleAttr_getVipPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVipPoint'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getVipPoint();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVipPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnerge of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setEnerge00
static int tolua_GameEngineTolua_RoleAttr_setEnerge00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int nValue = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnerge'",NULL);
#endif
  {
   self->setEnerge(nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnerge'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnerge of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getEnerge00
static int tolua_GameEngineTolua_RoleAttr_getEnerge00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnerge'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getEnerge();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnerge'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxEnerge of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setMaxEnerge00
static int tolua_GameEngineTolua_RoleAttr_setMaxEnerge00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int nValue = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxEnerge'",NULL);
#endif
  {
   self->setMaxEnerge(nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxEnerge'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxEnerge of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getMaxEnerge00
static int tolua_GameEngineTolua_RoleAttr_getMaxEnerge00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxEnerge'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxEnerge();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxEnerge'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpeMove of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getSpeMove00
static int tolua_GameEngineTolua_RoleAttr_getSpeMove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpeMove'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpeMove();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpeMove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxSpeMove of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getMaxSpeMove00
static int tolua_GameEngineTolua_RoleAttr_getMaxSpeMove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxSpeMove'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxSpeMove();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxSpeMove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkillPoint of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getSkillPoint00
static int tolua_GameEngineTolua_RoleAttr_getSkillPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkillPoint'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSkillPoint();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setQiYue of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setQiYue00
static int tolua_GameEngineTolua_RoleAttr_setQiYue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int nQiYue = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setQiYue'",NULL);
#endif
  {
   self->setQiYue(nQiYue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setQiYue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getQiYue of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getQiYue00
static int tolua_GameEngineTolua_RoleAttr_getQiYue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getQiYue'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getQiYue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getQiYue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isCamp of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_isCamp00
static int tolua_GameEngineTolua_RoleAttr_isCamp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  unsigned short camp = ((unsigned short)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isCamp'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isCamp(camp);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCamp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOwnerFlag of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setOwnerFlag00
static int tolua_GameEngineTolua_RoleAttr_setOwnerFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int flag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOwnerFlag'",NULL);
#endif
  {
   self->setOwnerFlag(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOwnerFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOwnerName of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setOwnerName00
static int tolua_GameEngineTolua_RoleAttr_setOwnerName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  const char* pszOwnerName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOwnerName'",NULL);
#endif
  {
   self->setOwnerName(pszOwnerName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOwnerName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOwnerName of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getOwnerName00
static int tolua_GameEngineTolua_RoleAttr_getOwnerName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOwnerName'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getOwnerName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOwnerName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOwnerId of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setOwnerId00
static int tolua_GameEngineTolua_RoleAttr_setOwnerId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOwnerId'",NULL);
#endif
  {
   self->setOwnerId(nId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOwnerId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOwnerId of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getOwnerId00
static int tolua_GameEngineTolua_RoleAttr_getOwnerId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOwnerId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getOwnerId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOwnerId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getClanPosition of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getClanPosition00
static int tolua_GameEngineTolua_RoleAttr_getClanPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getClanPosition'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getClanPosition();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getClanPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetIconId of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getPetIconId00
static int tolua_GameEngineTolua_RoleAttr_getPetIconId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetIconId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetIconId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetIconId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetDefId of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getPetDefId00
static int tolua_GameEngineTolua_RoleAttr_getPetDefId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetDefId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetDefId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetDefId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDesignation of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setDesignation00
static int tolua_GameEngineTolua_RoleAttr_setDesignation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  const char* pszDesignation = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDesignation'",NULL);
#endif
  {
   self->setDesignation(pszDesignation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDesignation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDesignation of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getDesignation00
static int tolua_GameEngineTolua_RoleAttr_getDesignation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDesignation'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getDesignation();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDesignation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDesignationID of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_setDesignationID00
static int tolua_GameEngineTolua_RoleAttr_setDesignationID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  int nDesignationID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDesignationID'",NULL);
#endif
  {
   self->setDesignationID(nDesignationID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDesignationID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDesignationID of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getDesignationID00
static int tolua_GameEngineTolua_RoleAttr_getDesignationID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDesignationID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getDesignationID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDesignationID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCampIdx of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getCampIdx00
static int tolua_GameEngineTolua_RoleAttr_getCampIdx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCampIdx'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCampIdx();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCampIdx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isSameRoleWId of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_isSameRoleWId00
static int tolua_GameEngineTolua_RoleAttr_isSameRoleWId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  RoleAttr* other = ((RoleAttr*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isSameRoleWId'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isSameRoleWId(other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isSameRoleWId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isSameRoleWId of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_isSameRoleWId01
static int tolua_GameEngineTolua_RoleAttr_isSameRoleWId01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
  tdr_ulonglong wId = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isSameRoleWId'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isSameRoleWId(wId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_RoleAttr_isSameRoleWId00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBattleGlory of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getBattleGlory00
static int tolua_GameEngineTolua_RoleAttr_getBattleGlory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBattleGlory'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getBattleGlory();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBattleGlory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAoShanBrand of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getAoShanBrand00
static int tolua_GameEngineTolua_RoleAttr_getAoShanBrand00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAoShanBrand'",NULL);
#endif
  {
   unsigned short tolua_ret = (unsigned short)  self->getAoShanBrand();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAoShanBrand'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLiftBrand of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getLiftBrand00
static int tolua_GameEngineTolua_RoleAttr_getLiftBrand00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLiftBrand'",NULL);
#endif
  {
   unsigned short tolua_ret = (unsigned short)  self->getLiftBrand();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLiftBrand'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCharm of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getCharm00
static int tolua_GameEngineTolua_RoleAttr_getCharm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCharm'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getCharm();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCharm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSchoolVal of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getSchoolVal00
static int tolua_GameEngineTolua_RoleAttr_getSchoolVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSchoolVal'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getSchoolVal();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSchoolVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDaoBaClanWid of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getDaoBaClanWid00
static int tolua_GameEngineTolua_RoleAttr_getDaoBaClanWid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDaoBaClanWid'",NULL);
#endif
  {
   tdr_ulonglong tolua_ret = (tdr_ulonglong)  self->getDaoBaClanWid();
   {
#ifdef __cplusplus
    void* tolua_obj = new tdr_ulonglong(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(tdr_ulonglong));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDaoBaClanWid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDaoBaEnd of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getDaoBaEnd00
static int tolua_GameEngineTolua_RoleAttr_getDaoBaEnd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDaoBaEnd'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getDaoBaEnd();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDaoBaEnd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDaoBaName of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getDaoBaName00
static int tolua_GameEngineTolua_RoleAttr_getDaoBaName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDaoBaName'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getDaoBaName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDaoBaName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getClanGroupID of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getClanGroupID00
static int tolua_GameEngineTolua_RoleAttr_getClanGroupID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getClanGroupID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getClanGroupID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getClanGroupID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInClanGroup of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_isInClanGroup00
static int tolua_GameEngineTolua_RoleAttr_isInClanGroup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInClanGroup'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInClanGroup();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInClanGroup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpartaGlory of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getSpartaGlory00
static int tolua_GameEngineTolua_RoleAttr_getSpartaGlory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpartaGlory'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getSpartaGlory();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpartaGlory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpartaFightVal of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getSpartaFightVal00
static int tolua_GameEngineTolua_RoleAttr_getSpartaFightVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpartaFightVal'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpartaFightVal();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpartaFightVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getZhengYiPoint of class  RoleAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_RoleAttr_getZhengYiPoint00
static int tolua_GameEngineTolua_RoleAttr_getZhengYiPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RoleAttr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RoleAttr* self = (RoleAttr*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getZhengYiPoint'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getZhengYiPoint();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getZhengYiPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CurrQiYueID of class  tagQiYueInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagQiYueInfo_ToLua_unsigned_CurrQiYueID
static int tolua_get_tagQiYueInfo_ToLua_unsigned_CurrQiYueID(lua_State* tolua_S)
{
  tagQiYueInfo_ToLua* self = (tagQiYueInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CurrQiYueID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CurrQiYueID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CurrQiYueID of class  tagQiYueInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagQiYueInfo_ToLua_unsigned_CurrQiYueID
static int tolua_set_tagQiYueInfo_ToLua_unsigned_CurrQiYueID(lua_State* tolua_S)
{
  tagQiYueInfo_ToLua* self = (tagQiYueInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CurrQiYueID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CurrQiYueID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: QiYueNum of class  tagQiYueInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagQiYueInfo_ToLua_unsigned_QiYueNum
static int tolua_get_tagQiYueInfo_ToLua_unsigned_QiYueNum(lua_State* tolua_S)
{
  tagQiYueInfo_ToLua* self = (tagQiYueInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'QiYueNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->QiYueNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: QiYueNum of class  tagQiYueInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagQiYueInfo_ToLua_unsigned_QiYueNum
static int tolua_set_tagQiYueInfo_ToLua_unsigned_QiYueNum(lua_State* tolua_S)
{
  tagQiYueInfo_ToLua* self = (tagQiYueInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'QiYueNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->QiYueNum = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: QiYueMax of class  tagQiYueInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagQiYueInfo_ToLua_unsigned_QiYueMax
static int tolua_get_tagQiYueInfo_ToLua_unsigned_QiYueMax(lua_State* tolua_S)
{
  tagQiYueInfo_ToLua* self = (tagQiYueInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'QiYueMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->QiYueMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: QiYueMax of class  tagQiYueInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagQiYueInfo_ToLua_unsigned_QiYueMax
static int tolua_set_tagQiYueInfo_ToLua_unsigned_QiYueMax(lua_State* tolua_S)
{
  tagQiYueInfo_ToLua* self = (tagQiYueInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'QiYueMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->QiYueMax = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: QiYueList of class  tagQiYueInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagQiYueInfo_ToLua_QiYueList
static int tolua_get_GameEngineTolua_tagQiYueInfo_ToLua_QiYueList(lua_State* tolua_S)
{
 int tolua_index;
  tagQiYueInfo_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagQiYueInfo_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=QIYUE_MAX_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->QiYueList[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: QiYueList of class  tagQiYueInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagQiYueInfo_ToLua_QiYueList
static int tolua_set_GameEngineTolua_tagQiYueInfo_ToLua_QiYueList(lua_State* tolua_S)
{
 int tolua_index;
  tagQiYueInfo_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagQiYueInfo_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=QIYUE_MAX_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->QiYueList[tolua_index] = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getQiYueList of class  GameQiYue */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameQiYue_getQiYueList00
static int tolua_GameEngineTolua_GameQiYue_getQiYueList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const GameQiYue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const GameQiYue* self = (const GameQiYue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getQiYueList'",NULL);
#endif
  {
   const tagQiYueInfo_ToLua& tolua_ret = (const tagQiYueInfo_ToLua&)  self->getQiYueList();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagQiYueInfo_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getQiYueList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getQiYueList of class  GameQiYue */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameQiYue_getQiYueList01
static int tolua_GameEngineTolua_GameQiYue_getQiYueList01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameQiYue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GameQiYue* self = (GameQiYue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getQiYueList'",NULL);
#endif
  {
   const tagQiYueInfo_ToLua& tolua_ret = (const tagQiYueInfo_ToLua&)  self->getQiYueList();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagQiYueInfo_ToLua");
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GameQiYue_getQiYueList00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* get function: id of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_unsigned_id
static int tolua_get_tagNpcDisplayInfo_ToLua_unsigned_id(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'id'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->id);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: id of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_unsigned_id
static int tolua_set_tagNpcDisplayInfo_ToLua_unsigned_id(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'id'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->id = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: name of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_name
static int tolua_get_tagNpcDisplayInfo_ToLua_name(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: name of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_name
static int tolua_set_tagNpcDisplayInfo_ToLua_name(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->name,tolua_tostring(tolua_S,2,0),RES_NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: model of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_model
static int tolua_get_tagNpcDisplayInfo_ToLua_model(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'model'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->model);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: model of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_model
static int tolua_set_tagNpcDisplayInfo_ToLua_model(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'model'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->model,tolua_tostring(tolua_S,2,0),RES_PATH_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: scale of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_scale
static int tolua_get_tagNpcDisplayInfo_ToLua_scale(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'scale'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->scale);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: scale of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_scale
static int tolua_set_tagNpcDisplayInfo_ToLua_scale(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'scale'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->scale = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: alpha of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_alpha
static int tolua_get_tagNpcDisplayInfo_ToLua_alpha(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'alpha'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->alpha);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: alpha of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_alpha
static int tolua_set_tagNpcDisplayInfo_ToLua_alpha(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'alpha'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->alpha = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: skin1 of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_skin1
static int tolua_get_tagNpcDisplayInfo_ToLua_skin1(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'skin1'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->skin1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: skin1 of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_skin1
static int tolua_set_tagNpcDisplayInfo_ToLua_skin1(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'skin1'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->skin1,tolua_tostring(tolua_S,2,0),RES_PATH_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: skin2 of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_skin2
static int tolua_get_tagNpcDisplayInfo_ToLua_skin2(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'skin2'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->skin2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: skin2 of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_skin2
static int tolua_set_tagNpcDisplayInfo_ToLua_skin2(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'skin2'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->skin2,tolua_tostring(tolua_S,2,0),RES_PATH_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: skin3 of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_skin3
static int tolua_get_tagNpcDisplayInfo_ToLua_skin3(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'skin3'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->skin3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: skin3 of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_skin3
static int tolua_set_tagNpcDisplayInfo_ToLua_skin3(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'skin3'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->skin3,tolua_tostring(tolua_S,2,0),RES_PATH_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: sound of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_unsigned_sound
static int tolua_get_tagNpcDisplayInfo_ToLua_unsigned_sound(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'sound'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->sound);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: sound of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_unsigned_sound
static int tolua_set_tagNpcDisplayInfo_ToLua_unsigned_sound(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'sound'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->sound = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: race of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_race
static int tolua_get_tagNpcDisplayInfo_ToLua_race(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'race'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->race);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: race of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_race
static int tolua_set_tagNpcDisplayInfo_ToLua_race(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'race'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->race = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: gender of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_gender
static int tolua_get_tagNpcDisplayInfo_ToLua_gender(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'gender'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->gender);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: gender of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_gender
static int tolua_set_tagNpcDisplayInfo_ToLua_gender(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'gender'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->gender = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: deadstate of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_unsigned_deadstate
static int tolua_get_tagNpcDisplayInfo_ToLua_unsigned_deadstate(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'deadstate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->deadstate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: deadstate of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_unsigned_deadstate
static int tolua_set_tagNpcDisplayInfo_ToLua_unsigned_deadstate(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'deadstate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->deadstate = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: normalrot of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_unsigned_normalrot
static int tolua_get_tagNpcDisplayInfo_ToLua_unsigned_normalrot(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normalrot'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->normalrot);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: normalrot of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_unsigned_normalrot
static int tolua_set_tagNpcDisplayInfo_ToLua_unsigned_normalrot(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normalrot'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->normalrot = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: userdata of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagNpcDisplayInfo_ToLua_userdata
static int tolua_get_GameEngineTolua_tagNpcDisplayInfo_ToLua_userdata(lua_State* tolua_S)
{
 int tolua_index;
  tagNpcDisplayInfo_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagNpcDisplayInfo_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=24)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->userdata[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: userdata of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagNpcDisplayInfo_ToLua_userdata
static int tolua_set_GameEngineTolua_tagNpcDisplayInfo_ToLua_userdata(lua_State* tolua_S)
{
 int tolua_index;
  tagNpcDisplayInfo_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagNpcDisplayInfo_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=24)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->userdata[tolua_index] = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: radius of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_unsigned_radius
static int tolua_get_tagNpcDisplayInfo_ToLua_unsigned_radius(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'radius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->radius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: radius of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_unsigned_radius
static int tolua_set_tagNpcDisplayInfo_ToLua_unsigned_radius(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'radius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->radius = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: height of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_unsigned_height
static int tolua_get_tagNpcDisplayInfo_ToLua_unsigned_height(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'height'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->height);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: height of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_unsigned_height
static int tolua_set_tagNpcDisplayInfo_ToLua_unsigned_height(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'height'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->height = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: size of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_size
static int tolua_get_tagNpcDisplayInfo_ToLua_size(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'size'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->size);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: size of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_size
static int tolua_set_tagNpcDisplayInfo_ToLua_size(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'size'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->size = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: rideact of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_rideact
static int tolua_get_tagNpcDisplayInfo_ToLua_rideact(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'rideact'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->rideact);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: rideact of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_rideact
static int tolua_set_tagNpcDisplayInfo_ToLua_rideact(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'rideact'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->rideact = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: visuals of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_visuals
static int tolua_get_tagNpcDisplayInfo_ToLua_visuals(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'visuals'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->visuals);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: visuals of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_visuals
static int tolua_set_tagNpcDisplayInfo_ToLua_visuals(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'visuals'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->visuals,tolua_tostring(tolua_S,2,0),RES_PATH_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: npcdesc of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_npcdesc
static int tolua_get_tagNpcDisplayInfo_ToLua_npcdesc(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'npcdesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->npcdesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: npcdesc of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_npcdesc
static int tolua_set_tagNpcDisplayInfo_ToLua_npcdesc(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'npcdesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->npcdesc,tolua_tostring(tolua_S,2,0),RES_NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: effect of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_effect
static int tolua_get_tagNpcDisplayInfo_ToLua_effect(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'effect'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->effect);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: effect of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_effect
static int tolua_set_tagNpcDisplayInfo_ToLua_effect(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'effect'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->effect,tolua_tostring(tolua_S,2,0),RES_EFFECT_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ZHigh of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_ZHigh
static int tolua_get_tagNpcDisplayInfo_ToLua_ZHigh(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ZHigh'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ZHigh);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ZHigh of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_ZHigh
static int tolua_set_tagNpcDisplayInfo_ToLua_ZHigh(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ZHigh'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ZHigh = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MiscType of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_unsigned_MiscType
static int tolua_get_tagNpcDisplayInfo_ToLua_unsigned_MiscType(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MiscType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MiscType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MiscType of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_unsigned_MiscType
static int tolua_set_tagNpcDisplayInfo_ToLua_unsigned_MiscType(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MiscType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MiscType = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PoseType of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_PoseType
static int tolua_get_tagNpcDisplayInfo_ToLua_PoseType(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PoseType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PoseType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PoseType of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_PoseType
static int tolua_set_tagNpcDisplayInfo_ToLua_PoseType(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PoseType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PoseType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: passengeract of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_passengeract
static int tolua_get_tagNpcDisplayInfo_ToLua_passengeract(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'passengeract'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->passengeract);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: passengeract of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_passengeract
static int tolua_set_tagNpcDisplayInfo_ToLua_passengeract(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'passengeract'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->passengeract = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: socket of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_socket
static int tolua_get_tagNpcDisplayInfo_ToLua_socket(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'socket'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->socket);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: socket of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_socket
static int tolua_set_tagNpcDisplayInfo_ToLua_socket(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'socket'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->socket,tolua_tostring(tolua_S,2,0),RES_PATH_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: dieeffect of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_dieeffect
static int tolua_get_tagNpcDisplayInfo_ToLua_dieeffect(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dieeffect'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->dieeffect);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: dieeffect of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_dieeffect
static int tolua_set_tagNpcDisplayInfo_ToLua_dieeffect(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dieeffect'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->dieeffect = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: birth of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNpcDisplayInfo_ToLua_birth
static int tolua_get_tagNpcDisplayInfo_ToLua_birth(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'birth'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->birth);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: birth of class  tagNpcDisplayInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNpcDisplayInfo_ToLua_birth
static int tolua_set_tagNpcDisplayInfo_ToLua_birth(lua_State* tolua_S)
{
  tagNpcDisplayInfo_ToLua* self = (tagNpcDisplayInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'birth'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->birth = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_Level
static int tolua_get_tagLevelUP_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_Level
static int tolua_set_tagLevelUP_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LevelNextExp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_LevelNextExp
static int tolua_get_tagLevelUP_ToLua_unsigned_LevelNextExp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelNextExp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LevelNextExp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LevelNextExp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_LevelNextExp
static int tolua_set_tagLevelUP_ToLua_unsigned_LevelNextExp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelNextExp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LevelNextExp = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoneyLimit of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_MoneyLimit
static int tolua_get_tagLevelUP_ToLua_unsigned_MoneyLimit(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoneyLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoneyLimit of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_MoneyLimit
static int tolua_set_tagLevelUP_ToLua_unsigned_MoneyLimit(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoneyLimit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LevelStand of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_LevelStand
static int tolua_get_tagLevelUP_ToLua_unsigned_LevelStand(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelStand'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LevelStand);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LevelStand of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_LevelStand
static int tolua_set_tagLevelUP_ToLua_unsigned_LevelStand(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelStand'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LevelStand = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ContributeExp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_ContributeExp
static int tolua_get_tagLevelUP_ToLua_unsigned_ContributeExp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ContributeExp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ContributeExp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ContributeExp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_ContributeExp
static int tolua_set_tagLevelUP_ToLua_unsigned_ContributeExp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ContributeExp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ContributeExp = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ContributeMoney of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_ContributeMoney
static int tolua_get_tagLevelUP_ToLua_unsigned_ContributeMoney(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ContributeMoney'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ContributeMoney);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ContributeMoney of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_ContributeMoney
static int tolua_set_tagLevelUP_ToLua_unsigned_ContributeMoney(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ContributeMoney'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ContributeMoney = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SitAddMp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_SitAddMp
static int tolua_get_tagLevelUP_ToLua_unsigned_SitAddMp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SitAddMp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SitAddMp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SitAddMp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_SitAddMp
static int tolua_set_tagLevelUP_ToLua_unsigned_SitAddMp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SitAddMp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SitAddMp = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SitAddHp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_SitAddHp
static int tolua_get_tagLevelUP_ToLua_unsigned_SitAddHp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SitAddHp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SitAddHp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SitAddHp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_SitAddHp
static int tolua_set_tagLevelUP_ToLua_unsigned_SitAddHp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SitAddHp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SitAddHp = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WarriorSkillList of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagLevelUP_ToLua_WarriorSkillList
static int tolua_get_GameEngineTolua_tagLevelUP_ToLua_WarriorSkillList(lua_State* tolua_S)
{
 int tolua_index;
  tagLevelUP_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagLevelUP_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_LEVELUP_SKILL_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->WarriorSkillList[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WarriorSkillList of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagLevelUP_ToLua_WarriorSkillList
static int tolua_set_GameEngineTolua_tagLevelUP_ToLua_WarriorSkillList(lua_State* tolua_S)
{
 int tolua_index;
  tagLevelUP_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagLevelUP_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_LEVELUP_SKILL_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->WarriorSkillList[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MagicorSkillList of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagLevelUP_ToLua_MagicorSkillList
static int tolua_get_GameEngineTolua_tagLevelUP_ToLua_MagicorSkillList(lua_State* tolua_S)
{
 int tolua_index;
  tagLevelUP_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagLevelUP_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_LEVELUP_SKILL_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->MagicorSkillList[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MagicorSkillList of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagLevelUP_ToLua_MagicorSkillList
static int tolua_set_GameEngineTolua_tagLevelUP_ToLua_MagicorSkillList(lua_State* tolua_S)
{
 int tolua_index;
  tagLevelUP_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagLevelUP_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_LEVELUP_SKILL_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->MagicorSkillList[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GunerSkillList of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagLevelUP_ToLua_GunerSkillList
static int tolua_get_GameEngineTolua_tagLevelUP_ToLua_GunerSkillList(lua_State* tolua_S)
{
 int tolua_index;
  tagLevelUP_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagLevelUP_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_LEVELUP_SKILL_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->GunerSkillList[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GunerSkillList of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagLevelUP_ToLua_GunerSkillList
static int tolua_set_GameEngineTolua_tagLevelUP_ToLua_GunerSkillList(lua_State* tolua_S)
{
 int tolua_index;
  tagLevelUP_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagLevelUP_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_LEVELUP_SKILL_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->GunerSkillList[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ChurchSkillList of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagLevelUP_ToLua_ChurchSkillList
static int tolua_get_GameEngineTolua_tagLevelUP_ToLua_ChurchSkillList(lua_State* tolua_S)
{
 int tolua_index;
  tagLevelUP_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagLevelUP_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_LEVELUP_SKILL_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->ChurchSkillList[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ChurchSkillList of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagLevelUP_ToLua_ChurchSkillList
static int tolua_set_GameEngineTolua_tagLevelUP_ToLua_ChurchSkillList(lua_State* tolua_S)
{
 int tolua_index;
  tagLevelUP_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagLevelUP_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_LEVELUP_SKILL_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->ChurchSkillList[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DayExpLimit of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_DayExpLimit
static int tolua_get_tagLevelUP_ToLua_unsigned_DayExpLimit(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DayExpLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DayExpLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DayExpLimit of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_DayExpLimit
static int tolua_set_tagLevelUP_ToLua_unsigned_DayExpLimit(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DayExpLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DayExpLimit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WarriorLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_WarriorLiliang
static int tolua_get_tagLevelUP_ToLua_unsigned_WarriorLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WarriorLiliang'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WarriorLiliang);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WarriorLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_WarriorLiliang
static int tolua_set_tagLevelUP_ToLua_unsigned_WarriorLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WarriorLiliang'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WarriorLiliang = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MagicorLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_MagicorLiliang
static int tolua_get_tagLevelUP_ToLua_unsigned_MagicorLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MagicorLiliang'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MagicorLiliang);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MagicorLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_MagicorLiliang
static int tolua_set_tagLevelUP_ToLua_unsigned_MagicorLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MagicorLiliang'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MagicorLiliang = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GunerLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_GunerLiliang
static int tolua_get_tagLevelUP_ToLua_unsigned_GunerLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GunerLiliang'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GunerLiliang);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GunerLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_GunerLiliang
static int tolua_set_tagLevelUP_ToLua_unsigned_GunerLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GunerLiliang'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GunerLiliang = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ChurchLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_ChurchLiliang
static int tolua_get_tagLevelUP_ToLua_unsigned_ChurchLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ChurchLiliang'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ChurchLiliang);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ChurchLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_ChurchLiliang
static int tolua_set_tagLevelUP_ToLua_unsigned_ChurchLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ChurchLiliang'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ChurchLiliang = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WarriorZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_WarriorZhili
static int tolua_get_tagLevelUP_ToLua_unsigned_WarriorZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WarriorZhili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WarriorZhili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WarriorZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_WarriorZhili
static int tolua_set_tagLevelUP_ToLua_unsigned_WarriorZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WarriorZhili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WarriorZhili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MagicorZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_MagicorZhili
static int tolua_get_tagLevelUP_ToLua_unsigned_MagicorZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MagicorZhili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MagicorZhili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MagicorZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_MagicorZhili
static int tolua_set_tagLevelUP_ToLua_unsigned_MagicorZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MagicorZhili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MagicorZhili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GunerZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_GunerZhili
static int tolua_get_tagLevelUP_ToLua_unsigned_GunerZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GunerZhili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GunerZhili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GunerZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_GunerZhili
static int tolua_set_tagLevelUP_ToLua_unsigned_GunerZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GunerZhili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GunerZhili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ChurchZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_ChurchZhili
static int tolua_get_tagLevelUP_ToLua_unsigned_ChurchZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ChurchZhili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ChurchZhili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ChurchZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_ChurchZhili
static int tolua_set_tagLevelUP_ToLua_unsigned_ChurchZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ChurchZhili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ChurchZhili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WarriorTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_WarriorTili
static int tolua_get_tagLevelUP_ToLua_unsigned_WarriorTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WarriorTili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WarriorTili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WarriorTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_WarriorTili
static int tolua_set_tagLevelUP_ToLua_unsigned_WarriorTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WarriorTili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WarriorTili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MagicorTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_MagicorTili
static int tolua_get_tagLevelUP_ToLua_unsigned_MagicorTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MagicorTili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MagicorTili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MagicorTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_MagicorTili
static int tolua_set_tagLevelUP_ToLua_unsigned_MagicorTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MagicorTili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MagicorTili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GunerTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_GunerTili
static int tolua_get_tagLevelUP_ToLua_unsigned_GunerTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GunerTili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GunerTili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GunerTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_GunerTili
static int tolua_set_tagLevelUP_ToLua_unsigned_GunerTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GunerTili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GunerTili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ChurchTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_ChurchTili
static int tolua_get_tagLevelUP_ToLua_unsigned_ChurchTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ChurchTili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ChurchTili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ChurchTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_ChurchTili
static int tolua_set_tagLevelUP_ToLua_unsigned_ChurchTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ChurchTili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ChurchTili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WarriorJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_WarriorJingshen
static int tolua_get_tagLevelUP_ToLua_unsigned_WarriorJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WarriorJingshen'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WarriorJingshen);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WarriorJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_WarriorJingshen
static int tolua_set_tagLevelUP_ToLua_unsigned_WarriorJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WarriorJingshen'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WarriorJingshen = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MagicorJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_MagicorJingshen
static int tolua_get_tagLevelUP_ToLua_unsigned_MagicorJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MagicorJingshen'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MagicorJingshen);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MagicorJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_MagicorJingshen
static int tolua_set_tagLevelUP_ToLua_unsigned_MagicorJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MagicorJingshen'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MagicorJingshen = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GunerJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_GunerJingshen
static int tolua_get_tagLevelUP_ToLua_unsigned_GunerJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GunerJingshen'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GunerJingshen);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GunerJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_GunerJingshen
static int tolua_set_tagLevelUP_ToLua_unsigned_GunerJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GunerJingshen'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GunerJingshen = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ChurchJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_ChurchJingshen
static int tolua_get_tagLevelUP_ToLua_unsigned_ChurchJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ChurchJingshen'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ChurchJingshen);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ChurchJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_ChurchJingshen
static int tolua_set_tagLevelUP_ToLua_unsigned_ChurchJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ChurchJingshen'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ChurchJingshen = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WarriorFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_WarriorFangyu
static int tolua_get_tagLevelUP_ToLua_unsigned_WarriorFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WarriorFangyu'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WarriorFangyu);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WarriorFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_WarriorFangyu
static int tolua_set_tagLevelUP_ToLua_unsigned_WarriorFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WarriorFangyu'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WarriorFangyu = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MagicorFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_MagicorFangyu
static int tolua_get_tagLevelUP_ToLua_unsigned_MagicorFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MagicorFangyu'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MagicorFangyu);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MagicorFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_MagicorFangyu
static int tolua_set_tagLevelUP_ToLua_unsigned_MagicorFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MagicorFangyu'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MagicorFangyu = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GunerFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_GunerFangyu
static int tolua_get_tagLevelUP_ToLua_unsigned_GunerFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GunerFangyu'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GunerFangyu);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GunerFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_GunerFangyu
static int tolua_set_tagLevelUP_ToLua_unsigned_GunerFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GunerFangyu'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GunerFangyu = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ChurchFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_ChurchFangyu
static int tolua_get_tagLevelUP_ToLua_unsigned_ChurchFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ChurchFangyu'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ChurchFangyu);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ChurchFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_ChurchFangyu
static int tolua_set_tagLevelUP_ToLua_unsigned_ChurchFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ChurchFangyu'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ChurchFangyu = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: VimAdd of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_VimAdd
static int tolua_get_tagLevelUP_ToLua_unsigned_VimAdd(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'VimAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->VimAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: VimAdd of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_VimAdd
static int tolua_set_tagLevelUP_ToLua_unsigned_VimAdd(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'VimAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->VimAdd = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: VimMax of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_VimMax
static int tolua_get_tagLevelUP_ToLua_unsigned_VimMax(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'VimMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->VimMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: VimMax of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_VimMax
static int tolua_set_tagLevelUP_ToLua_unsigned_VimMax(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'VimMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->VimMax = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddRolePetGrid of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_AddRolePetGrid
static int tolua_get_tagLevelUP_ToLua_unsigned_AddRolePetGrid(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddRolePetGrid'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AddRolePetGrid);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddRolePetGrid of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_AddRolePetGrid
static int tolua_set_tagLevelUP_ToLua_unsigned_AddRolePetGrid(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddRolePetGrid'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AddRolePetGrid = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxOfflineExp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_MaxOfflineExp
static int tolua_get_tagLevelUP_ToLua_MaxOfflineExp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxOfflineExp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxOfflineExp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxOfflineExp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_MaxOfflineExp
static int tolua_set_tagLevelUP_ToLua_MaxOfflineExp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxOfflineExp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxOfflineExp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WarriorAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_WarriorAgile
static int tolua_get_tagLevelUP_ToLua_unsigned_WarriorAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WarriorAgile'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WarriorAgile);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WarriorAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_WarriorAgile
static int tolua_set_tagLevelUP_ToLua_unsigned_WarriorAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WarriorAgile'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WarriorAgile = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MagicorAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_MagicorAgile
static int tolua_get_tagLevelUP_ToLua_unsigned_MagicorAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MagicorAgile'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MagicorAgile);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MagicorAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_MagicorAgile
static int tolua_set_tagLevelUP_ToLua_unsigned_MagicorAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MagicorAgile'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MagicorAgile = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GunerAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_GunerAgile
static int tolua_get_tagLevelUP_ToLua_unsigned_GunerAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GunerAgile'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GunerAgile);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GunerAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_GunerAgile
static int tolua_set_tagLevelUP_ToLua_unsigned_GunerAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GunerAgile'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GunerAgile = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ChurchAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_ChurchAgile
static int tolua_get_tagLevelUP_ToLua_unsigned_ChurchAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ChurchAgile'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ChurchAgile);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ChurchAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_ChurchAgile
static int tolua_set_tagLevelUP_ToLua_unsigned_ChurchAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ChurchAgile'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ChurchAgile = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkLevelMul of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_AtkLevelMul
static int tolua_get_tagLevelUP_ToLua_unsigned_AtkLevelMul(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkLevelMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkLevelMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkLevelMul of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_AtkLevelMul
static int tolua_set_tagLevelUP_ToLua_unsigned_AtkLevelMul(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkLevelMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkLevelMul = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DefLevelMul of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_DefLevelMul
static int tolua_get_tagLevelUP_ToLua_unsigned_DefLevelMul(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefLevelMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DefLevelMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DefLevelMul of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_DefLevelMul
static int tolua_set_tagLevelUP_ToLua_unsigned_DefLevelMul(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefLevelMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DefLevelMul = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonDefHeavyHit of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_MonDefHeavyHit
static int tolua_get_tagLevelUP_ToLua_MonDefHeavyHit(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonDefHeavyHit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonDefHeavyHit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonDefHeavyHit of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_MonDefHeavyHit
static int tolua_set_tagLevelUP_ToLua_MonDefHeavyHit(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonDefHeavyHit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonDefHeavyHit = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SwordWarriorLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorLiliang
static int tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SwordWarriorLiliang'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SwordWarriorLiliang);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SwordWarriorLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorLiliang
static int tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SwordWarriorLiliang'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SwordWarriorLiliang = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireMagicorLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorLiliang
static int tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireMagicorLiliang'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireMagicorLiliang);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireMagicorLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorLiliang
static int tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireMagicorLiliang'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireMagicorLiliang = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DoubleGunerLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerLiliang
static int tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleGunerLiliang'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DoubleGunerLiliang);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DoubleGunerLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerLiliang
static int tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleGunerLiliang'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DoubleGunerLiliang = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderChurchLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchLiliang
static int tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderChurchLiliang'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderChurchLiliang);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderChurchLiliang of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchLiliang
static int tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchLiliang(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderChurchLiliang'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderChurchLiliang = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SwordWarriorZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorZhili
static int tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SwordWarriorZhili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SwordWarriorZhili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SwordWarriorZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorZhili
static int tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SwordWarriorZhili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SwordWarriorZhili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireMagicorZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorZhili
static int tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireMagicorZhili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireMagicorZhili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireMagicorZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorZhili
static int tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireMagicorZhili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireMagicorZhili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DoubleGunerZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerZhili
static int tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleGunerZhili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DoubleGunerZhili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DoubleGunerZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerZhili
static int tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleGunerZhili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DoubleGunerZhili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderChurchZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchZhili
static int tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderChurchZhili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderChurchZhili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderChurchZhili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchZhili
static int tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchZhili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderChurchZhili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderChurchZhili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SwordWarriorTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorTili
static int tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SwordWarriorTili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SwordWarriorTili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SwordWarriorTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorTili
static int tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SwordWarriorTili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SwordWarriorTili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireMagicorTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorTili
static int tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireMagicorTili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireMagicorTili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireMagicorTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorTili
static int tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireMagicorTili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireMagicorTili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DoubleGunerTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerTili
static int tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleGunerTili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DoubleGunerTili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DoubleGunerTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerTili
static int tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleGunerTili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DoubleGunerTili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderChurchTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchTili
static int tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderChurchTili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderChurchTili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderChurchTili of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchTili
static int tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchTili(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderChurchTili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderChurchTili = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SwordWarriorJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorJingshen
static int tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SwordWarriorJingshen'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SwordWarriorJingshen);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SwordWarriorJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorJingshen
static int tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SwordWarriorJingshen'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SwordWarriorJingshen = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireMagicorJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorJingshen
static int tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireMagicorJingshen'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireMagicorJingshen);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireMagicorJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorJingshen
static int tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireMagicorJingshen'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireMagicorJingshen = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DoubleGunerJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerJingshen
static int tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleGunerJingshen'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DoubleGunerJingshen);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DoubleGunerJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerJingshen
static int tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleGunerJingshen'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DoubleGunerJingshen = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderChurchJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchJingshen
static int tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderChurchJingshen'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderChurchJingshen);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderChurchJingshen of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchJingshen
static int tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchJingshen(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderChurchJingshen'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderChurchJingshen = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SwordWarriorFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorFangyu
static int tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SwordWarriorFangyu'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SwordWarriorFangyu);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SwordWarriorFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorFangyu
static int tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SwordWarriorFangyu'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SwordWarriorFangyu = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireMagicorFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorFangyu
static int tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireMagicorFangyu'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireMagicorFangyu);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireMagicorFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorFangyu
static int tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireMagicorFangyu'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireMagicorFangyu = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DoubleGunerFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerFangyu
static int tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleGunerFangyu'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DoubleGunerFangyu);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DoubleGunerFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerFangyu
static int tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleGunerFangyu'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DoubleGunerFangyu = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderChurchFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchFangyu
static int tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderChurchFangyu'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderChurchFangyu);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderChurchFangyu of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchFangyu
static int tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchFangyu(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderChurchFangyu'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderChurchFangyu = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SwordWarriorAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorAgile
static int tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SwordWarriorAgile'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SwordWarriorAgile);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SwordWarriorAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorAgile
static int tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SwordWarriorAgile'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SwordWarriorAgile = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireMagicorAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorAgile
static int tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireMagicorAgile'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireMagicorAgile);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireMagicorAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorAgile
static int tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireMagicorAgile'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireMagicorAgile = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DoubleGunerAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerAgile
static int tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleGunerAgile'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DoubleGunerAgile);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DoubleGunerAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerAgile
static int tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleGunerAgile'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DoubleGunerAgile = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderChurchAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchAgile
static int tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderChurchAgile'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderChurchAgile);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderChurchAgile of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchAgile
static int tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchAgile(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderChurchAgile'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderChurchAgile = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UIBaseFlee of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_UIBaseFlee
static int tolua_get_tagLevelUP_ToLua_UIBaseFlee(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UIBaseFlee'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UIBaseFlee);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UIBaseFlee of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_UIBaseFlee
static int tolua_set_tagLevelUP_ToLua_UIBaseFlee(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UIBaseFlee'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UIBaseFlee = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BattleWinExp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_BattleWinExp
static int tolua_get_tagLevelUP_ToLua_BattleWinExp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BattleWinExp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BattleWinExp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BattleWinExp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_BattleWinExp
static int tolua_set_tagLevelUP_ToLua_BattleWinExp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BattleWinExp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BattleWinExp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BattleFailExp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_BattleFailExp
static int tolua_get_tagLevelUP_ToLua_BattleFailExp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BattleFailExp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BattleFailExp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BattleFailExp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_BattleFailExp
static int tolua_set_tagLevelUP_ToLua_BattleFailExp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BattleFailExp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BattleFailExp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxPworldOffExp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_MaxPworldOffExp
static int tolua_get_tagLevelUP_ToLua_MaxPworldOffExp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxPworldOffExp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxPworldOffExp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxPworldOffExp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_MaxPworldOffExp
static int tolua_set_tagLevelUP_ToLua_MaxPworldOffExp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxPworldOffExp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxPworldOffExp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonLevelHit of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_MonLevelHit
static int tolua_get_tagLevelUP_ToLua_MonLevelHit(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonLevelHit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonLevelHit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonLevelHit of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_MonLevelHit
static int tolua_set_tagLevelUP_ToLua_MonLevelHit(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonLevelHit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonLevelHit = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddSparPkg of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_AddSparPkg
static int tolua_get_tagLevelUP_ToLua_AddSparPkg(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddSparPkg'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AddSparPkg);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddSparPkg of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_AddSparPkg
static int tolua_set_tagLevelUP_ToLua_AddSparPkg(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddSparPkg'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AddSparPkg = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: VigUp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_VigUp
static int tolua_get_tagLevelUP_ToLua_VigUp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'VigUp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->VigUp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: VigUp of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_VigUp
static int tolua_set_tagLevelUP_ToLua_VigUp(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'VigUp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->VigUp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxStashMoney of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_MaxStashMoney
static int tolua_get_tagLevelUP_ToLua_MaxStashMoney(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxStashMoney'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxStashMoney);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxStashMoney of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_MaxStashMoney
static int tolua_set_tagLevelUP_ToLua_MaxStashMoney(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxStashMoney'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxStashMoney = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxPackageMoney of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_MaxPackageMoney
static int tolua_get_tagLevelUP_ToLua_MaxPackageMoney(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxPackageMoney'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxPackageMoney);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxPackageMoney of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_MaxPackageMoney
static int tolua_set_tagLevelUP_ToLua_MaxPackageMoney(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxPackageMoney'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxPackageMoney = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DailyUseBull of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_DailyUseBull
static int tolua_get_tagLevelUP_ToLua_DailyUseBull(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DailyUseBull'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DailyUseBull);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DailyUseBull of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_DailyUseBull
static int tolua_set_tagLevelUP_ToLua_DailyUseBull(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DailyUseBull'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DailyUseBull = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FzMod of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_FzMod
static int tolua_get_tagLevelUP_ToLua_FzMod(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FzMod'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FzMod);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FzMod of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_FzMod
static int tolua_set_tagLevelUP_ToLua_FzMod(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FzMod'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FzMod = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ExpLeiji of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_ExpLeiji
static int tolua_get_tagLevelUP_ToLua_ExpLeiji(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExpLeiji'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ExpLeiji);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ExpLeiji of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_ExpLeiji
static int tolua_set_tagLevelUP_ToLua_ExpLeiji(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExpLeiji'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ExpLeiji = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DayZhengyiLimit of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_DayZhengyiLimit
static int tolua_get_tagLevelUP_ToLua_unsigned_DayZhengyiLimit(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DayZhengyiLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DayZhengyiLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DayZhengyiLimit of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_DayZhengyiLimit
static int tolua_set_tagLevelUP_ToLua_unsigned_DayZhengyiLimit(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DayZhengyiLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DayZhengyiLimit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BaseGenius of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_BaseGenius
static int tolua_get_tagLevelUP_ToLua_BaseGenius(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BaseGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BaseGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BaseGenius of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_BaseGenius
static int tolua_set_tagLevelUP_ToLua_BaseGenius(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BaseGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BaseGenius = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GreenGemLimit of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_unsigned_GreenGemLimit
static int tolua_get_tagLevelUP_ToLua_unsigned_GreenGemLimit(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GreenGemLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GreenGemLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GreenGemLimit of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_unsigned_GreenGemLimit
static int tolua_set_tagLevelUP_ToLua_unsigned_GreenGemLimit(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GreenGemLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GreenGemLimit = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RemainTm of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelUP_ToLua_RemainTm
static int tolua_get_tagLevelUP_ToLua_RemainTm(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RemainTm'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RemainTm);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RemainTm of class  tagLevelUP_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelUP_ToLua_RemainTm
static int tolua_set_tagLevelUP_ToLua_RemainTm(lua_State* tolua_S)
{
  tagLevelUP_ToLua* self = (tagLevelUP_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RemainTm'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RemainTm = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerIceHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerIceHurtMul
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerIceHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerIceHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerIceHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerIceHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerIceHurtMul
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerIceHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerIceHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerIceHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerPhsicHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerPhsicHurtMul
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerPhsicHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerPhsicHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerPhsicHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerPhsicHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerPhsicHurtMul
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerPhsicHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerPhsicHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerPhsicHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerSiegeHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerSiegeHurtMul
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerSiegeHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerSiegeHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerSiegeHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerSiegeHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerSiegeHurtMul
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerSiegeHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerSiegeHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerSiegeHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerHolyHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerHolyHurtMul
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerHolyHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerHolyHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerHolyHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerHolyHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerHolyHurtMul
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerHolyHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerHolyHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerHolyHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerMachineHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerMachineHurtMul
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerMachineHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerMachineHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerMachineHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerMachineHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerMachineHurtMul
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerMachineHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerMachineHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerMachineHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerFireHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerFireHurtMul
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerFireHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerFireHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerFireHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerFireHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerFireHurtMul
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerFireHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerFireHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerFireHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerThunderHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerThunderHurtMul
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerThunderHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerThunderHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerThunderHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerThunderHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerThunderHurtMul
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerThunderHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerThunderHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerThunderHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerLightHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerLightHurtMul
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerLightHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerLightHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerLightHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerLightHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerLightHurtMul
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerLightHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerLightHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerLightHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerNightHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerNightHurtMul
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerNightHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerNightHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerNightHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerNightHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerNightHurtMul
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerNightHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerNightHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerNightHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerWaterHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerWaterHurtMul
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerWaterHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerWaterHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerWaterHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerWaterHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerWaterHurtMul
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerWaterHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerWaterHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerWaterHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerMagicHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerMagicHurtMul
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerMagicHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerMagicHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerMagicHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerMagicHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerMagicHurtMul
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerMagicHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerMagicHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerMagicHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerHurtMul
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerHurtMul of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerHurtMul
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerHurtMul(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerPhsicHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerPhsicHurtAdd
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerPhsicHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerPhsicHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerPhsicHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerPhsicHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerPhsicHurtAdd
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerPhsicHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerPhsicHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerPhsicHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerIceHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerIceHurtAdd
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerIceHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerIceHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerIceHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerIceHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerIceHurtAdd
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerIceHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerIceHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerIceHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerSiegeHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerSiegeHurtAdd
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerSiegeHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerSiegeHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerSiegeHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerSiegeHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerSiegeHurtAdd
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerSiegeHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerSiegeHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerSiegeHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerHolyHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerHolyHurtAdd
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerHolyHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerHolyHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerHolyHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerHolyHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerHolyHurtAdd
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerHolyHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerHolyHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerHolyHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerMachineHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerMachineHurtAdd
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerMachineHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerMachineHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerMachineHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerMachineHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerMachineHurtAdd
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerMachineHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerMachineHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerMachineHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerFireHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerFireHurtAdd
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerFireHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerFireHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerFireHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerFireHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerFireHurtAdd
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerFireHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerFireHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerFireHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerThunderHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerThunderHurtAdd
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerThunderHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerThunderHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerThunderHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerThunderHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerThunderHurtAdd
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerThunderHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerThunderHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerThunderHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerLightHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerLightHurtAdd
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerLightHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerLightHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerLightHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerLightHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerLightHurtAdd
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerLightHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerLightHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerLightHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerNightHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerNightHurtAdd
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerNightHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerNightHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerNightHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerNightHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerNightHurtAdd
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerNightHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerNightHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerNightHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerWaterHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerWaterHurtAdd
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerWaterHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerWaterHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerWaterHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerWaterHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerWaterHurtAdd
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerWaterHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerWaterHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerWaterHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerMagicHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerMagicHurtAdd
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerMagicHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerMagicHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerMagicHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerMagicHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerMagicHurtAdd
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerMagicHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerMagicHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerMagicHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkerHurtChg_ToLua_AtkerHurtAdd
static int tolua_get_tagAtkerHurtChg_ToLua_AtkerHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkerHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerHurtAdd of class  tagAtkerHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkerHurtChg_ToLua_AtkerHurtAdd
static int tolua_set_tagAtkerHurtChg_ToLua_AtkerHurtAdd(lua_State* tolua_S)
{
  tagAtkerHurtChg_ToLua* self = (tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeePhsicHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeePhsicHurtMul
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeePhsicHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeePhsicHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeePhsicHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeePhsicHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeePhsicHurtMul
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeePhsicHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeePhsicHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeePhsicHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeIceHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeIceHurtMul
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeIceHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeIceHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeIceHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeIceHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeIceHurtMul
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeIceHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeIceHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeIceHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeSiegeHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeSiegeHurtMul
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeSiegeHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeSiegeHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeSiegeHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeSiegeHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeSiegeHurtMul
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeSiegeHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeSiegeHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeSiegeHurtMul = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeHolyHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeHolyHurtMul
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeHolyHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeHolyHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeHolyHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeHolyHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeHolyHurtMul
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeHolyHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeHolyHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeHolyHurtMul = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeMachineHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeMachineHurtMul
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeMachineHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeMachineHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeMachineHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeMachineHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeMachineHurtMul
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeMachineHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeMachineHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeMachineHurtMul = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeFireHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeFireHurtMul
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeFireHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeFireHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeFireHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeFireHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeFireHurtMul
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeFireHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeFireHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeFireHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeThunderHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeThunderHurtMul
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeThunderHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeThunderHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeThunderHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeThunderHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeThunderHurtMul
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeThunderHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeThunderHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeThunderHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeLightHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeLightHurtMul
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeLightHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeLightHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeLightHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeLightHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeLightHurtMul
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeLightHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeLightHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeLightHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeNightHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeNightHurtMul
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeNightHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeNightHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeNightHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeNightHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeNightHurtMul
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeNightHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeNightHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeNightHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeWaterHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeWaterHurtMul
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeWaterHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeWaterHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeWaterHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeWaterHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeWaterHurtMul
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeWaterHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeWaterHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeWaterHurtMul = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeMagicHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeMagicHurtMul
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeMagicHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeMagicHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeMagicHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeMagicHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeMagicHurtMul
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeMagicHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeMagicHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeMagicHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeHurtMul
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeHurtMul of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeHurtMul
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeHurtMul(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeePhsicHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeePhsicHurtAdd
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeePhsicHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeePhsicHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeePhsicHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeePhsicHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeePhsicHurtAdd
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeePhsicHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeePhsicHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeePhsicHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeIceHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeIceHurtAdd
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeIceHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeIceHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeIceHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeIceHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeIceHurtAdd
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeIceHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeIceHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeIceHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeSiegeHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeSiegeHurtAdd
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeSiegeHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeSiegeHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeSiegeHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeSiegeHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeSiegeHurtAdd
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeSiegeHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeSiegeHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeSiegeHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeHolyHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeHolyHurtAdd
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeHolyHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeHolyHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeHolyHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeHolyHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeHolyHurtAdd
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeHolyHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeHolyHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeHolyHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeMachineHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeMachineHurtAdd
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeMachineHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeMachineHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeMachineHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeMachineHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeMachineHurtAdd
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeMachineHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeMachineHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeMachineHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeFireHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeFireHurtAdd
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeFireHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeFireHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeFireHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeFireHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeFireHurtAdd
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeFireHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeFireHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeFireHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeThunderHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeThunderHurtAdd
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeThunderHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeThunderHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeThunderHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeThunderHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeThunderHurtAdd
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeThunderHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeThunderHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeThunderHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeLightHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeLightHurtAdd
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeLightHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeLightHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeLightHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeLightHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeLightHurtAdd
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeLightHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeLightHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeLightHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeNightHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeNightHurtAdd
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeNightHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeNightHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeNightHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeNightHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeNightHurtAdd
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeNightHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeNightHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeNightHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeWaterHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeWaterHurtAdd
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeWaterHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeWaterHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeWaterHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeWaterHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeWaterHurtAdd
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeWaterHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeWaterHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeWaterHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeMagicHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeMagicHurtAdd
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeMagicHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeMagicHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeMagicHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeMagicHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeMagicHurtAdd
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeMagicHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeMagicHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeMagicHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAtkeeHurtChg_ToLua_AtkeeHurtAdd
static int tolua_get_tagAtkeeHurtChg_ToLua_AtkeeHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeHurtAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkeeHurtAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeHurtAdd of class  tagAtkeeHurtChg_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAtkeeHurtChg_ToLua_AtkeeHurtAdd
static int tolua_set_tagAtkeeHurtChg_ToLua_AtkeeHurtAdd(lua_State* tolua_S)
{
  tagAtkeeHurtChg_ToLua* self = (tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeHurtAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeHurtAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PressInitType of class  tagPressInit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPressInit_ToLua_unsigned_PressInitType
static int tolua_get_tagPressInit_ToLua_unsigned_PressInitType(lua_State* tolua_S)
{
  tagPressInit_ToLua* self = (tagPressInit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PressInitType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PressInitType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PressInitType of class  tagPressInit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPressInit_ToLua_unsigned_PressInitType
static int tolua_set_tagPressInit_ToLua_unsigned_PressInitType(lua_State* tolua_S)
{
  tagPressInit_ToLua* self = (tagPressInit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PressInitType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PressInitType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Val1 of class  tagPressInit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPressInit_ToLua_unsigned_Val1
static int tolua_get_tagPressInit_ToLua_unsigned_Val1(lua_State* tolua_S)
{
  tagPressInit_ToLua* self = (tagPressInit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Val1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Val1 of class  tagPressInit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPressInit_ToLua_unsigned_Val1
static int tolua_set_tagPressInit_ToLua_unsigned_Val1(lua_State* tolua_S)
{
  tagPressInit_ToLua* self = (tagPressInit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Val1 = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Val2 of class  tagPressInit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPressInit_ToLua_unsigned_Val2
static int tolua_get_tagPressInit_ToLua_unsigned_Val2(lua_State* tolua_S)
{
  tagPressInit_ToLua* self = (tagPressInit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Val2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Val2 of class  tagPressInit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPressInit_ToLua_unsigned_Val2
static int tolua_set_tagPressInit_ToLua_unsigned_Val2(lua_State* tolua_S)
{
  tagPressInit_ToLua* self = (tagPressInit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Val2 = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillID of class  tagAINextSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAINextSkill_ToLua_unsigned_SkillID
static int tolua_get_tagAINextSkill_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagAINextSkill_ToLua* self = (tagAINextSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillID of class  tagAINextSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAINextSkill_ToLua_unsigned_SkillID
static int tolua_set_tagAINextSkill_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagAINextSkill_ToLua* self = (tagAINextSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillLevel of class  tagAINextSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAINextSkill_ToLua_unsigned_SkillLevel
static int tolua_get_tagAINextSkill_ToLua_unsigned_SkillLevel(lua_State* tolua_S)
{
  tagAINextSkill_ToLua* self = (tagAINextSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillLevel of class  tagAINextSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAINextSkill_ToLua_unsigned_SkillLevel
static int tolua_set_tagAINextSkill_ToLua_unsigned_SkillLevel(lua_State* tolua_S)
{
  tagAINextSkill_ToLua* self = (tagAINextSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillLevel = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillID of class  tagAINormalSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAINormalSkill_ToLua_unsigned_SkillID
static int tolua_get_tagAINormalSkill_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagAINormalSkill_ToLua* self = (tagAINormalSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillID of class  tagAINormalSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAINormalSkill_ToLua_unsigned_SkillID
static int tolua_set_tagAINormalSkill_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagAINormalSkill_ToLua* self = (tagAINormalSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillLevel of class  tagAINormalSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAINormalSkill_ToLua_unsigned_SkillLevel
static int tolua_get_tagAINormalSkill_ToLua_unsigned_SkillLevel(lua_State* tolua_S)
{
  tagAINormalSkill_ToLua* self = (tagAINormalSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillLevel of class  tagAINormalSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAINormalSkill_ToLua_unsigned_SkillLevel
static int tolua_set_tagAINormalSkill_ToLua_unsigned_SkillLevel(lua_State* tolua_S)
{
  tagAINormalSkill_ToLua* self = (tagAINormalSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ConditionID of class  tagAINormalSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAINormalSkill_ToLua_ConditionID
static int tolua_get_tagAINormalSkill_ToLua_ConditionID(lua_State* tolua_S)
{
  tagAINormalSkill_ToLua* self = (tagAINormalSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ConditionID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ConditionID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ConditionID of class  tagAINormalSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAINormalSkill_ToLua_ConditionID
static int tolua_set_tagAINormalSkill_ToLua_ConditionID(lua_State* tolua_S)
{
  tagAINormalSkill_ToLua* self = (tagAINormalSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ConditionID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ConditionID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ConditionVal of class  tagAINormalSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAINormalSkill_ToLua_ConditionVal
static int tolua_get_tagAINormalSkill_ToLua_ConditionVal(lua_State* tolua_S)
{
  tagAINormalSkill_ToLua* self = (tagAINormalSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ConditionVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ConditionVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ConditionVal of class  tagAINormalSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAINormalSkill_ToLua_ConditionVal
static int tolua_set_tagAINormalSkill_ToLua_ConditionVal(lua_State* tolua_S)
{
  tagAINormalSkill_ToLua* self = (tagAINormalSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ConditionVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ConditionVal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Rate of class  tagAINormalSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAINormalSkill_ToLua_unsigned_Rate
static int tolua_get_tagAINormalSkill_ToLua_unsigned_Rate(lua_State* tolua_S)
{
  tagAINormalSkill_ToLua* self = (tagAINormalSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Rate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Rate of class  tagAINormalSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAINormalSkill_ToLua_unsigned_Rate
static int tolua_set_tagAINormalSkill_ToLua_unsigned_Rate(lua_State* tolua_S)
{
  tagAINormalSkill_ToLua* self = (tagAINormalSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Rate = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Once of class  tagAINormalSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAINormalSkill_ToLua_Once
static int tolua_get_tagAINormalSkill_ToLua_Once(lua_State* tolua_S)
{
  tagAINormalSkill_ToLua* self = (tagAINormalSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Once'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Once);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Once of class  tagAINormalSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAINormalSkill_ToLua_Once
static int tolua_set_tagAINormalSkill_ToLua_Once(lua_State* tolua_S)
{
  tagAINormalSkill_ToLua* self = (tagAINormalSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Once'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Once = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NextSkill of class  tagAINormalSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagAINormalSkill_ToLua_NextSkill
static int tolua_get_GameEngineTolua_tagAINormalSkill_ToLua_NextSkill(lua_State* tolua_S)
{
 int tolua_index;
  tagAINormalSkill_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagAINormalSkill_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_NEXT_SKILL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->NextSkill[tolua_index],"tagAINextSkill_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NextSkill of class  tagAINormalSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagAINormalSkill_ToLua_NextSkill
static int tolua_set_GameEngineTolua_tagAINormalSkill_ToLua_NextSkill(lua_State* tolua_S)
{
 int tolua_index;
  tagAINormalSkill_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagAINormalSkill_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_NEXT_SKILL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->NextSkill[tolua_index] = *((tagAINextSkill_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillID of class  tagAIInsertSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAIInsertSkill_ToLua_unsigned_SkillID
static int tolua_get_tagAIInsertSkill_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagAIInsertSkill_ToLua* self = (tagAIInsertSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillID of class  tagAIInsertSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAIInsertSkill_ToLua_unsigned_SkillID
static int tolua_set_tagAIInsertSkill_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagAIInsertSkill_ToLua* self = (tagAIInsertSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillLevel of class  tagAIInsertSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAIInsertSkill_ToLua_unsigned_SkillLevel
static int tolua_get_tagAIInsertSkill_ToLua_unsigned_SkillLevel(lua_State* tolua_S)
{
  tagAIInsertSkill_ToLua* self = (tagAIInsertSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillLevel of class  tagAIInsertSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAIInsertSkill_ToLua_unsigned_SkillLevel
static int tolua_set_tagAIInsertSkill_ToLua_unsigned_SkillLevel(lua_State* tolua_S)
{
  tagAIInsertSkill_ToLua* self = (tagAIInsertSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillLevel = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ConditionID of class  tagAIInsertSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAIInsertSkill_ToLua_ConditionID
static int tolua_get_tagAIInsertSkill_ToLua_ConditionID(lua_State* tolua_S)
{
  tagAIInsertSkill_ToLua* self = (tagAIInsertSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ConditionID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ConditionID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ConditionID of class  tagAIInsertSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAIInsertSkill_ToLua_ConditionID
static int tolua_set_tagAIInsertSkill_ToLua_ConditionID(lua_State* tolua_S)
{
  tagAIInsertSkill_ToLua* self = (tagAIInsertSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ConditionID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ConditionID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ConditionVal of class  tagAIInsertSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAIInsertSkill_ToLua_ConditionVal
static int tolua_get_tagAIInsertSkill_ToLua_ConditionVal(lua_State* tolua_S)
{
  tagAIInsertSkill_ToLua* self = (tagAIInsertSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ConditionVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ConditionVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ConditionVal of class  tagAIInsertSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAIInsertSkill_ToLua_ConditionVal
static int tolua_set_tagAIInsertSkill_ToLua_ConditionVal(lua_State* tolua_S)
{
  tagAIInsertSkill_ToLua* self = (tagAIInsertSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ConditionVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ConditionVal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Rate of class  tagAIInsertSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAIInsertSkill_ToLua_Rate
static int tolua_get_tagAIInsertSkill_ToLua_Rate(lua_State* tolua_S)
{
  tagAIInsertSkill_ToLua* self = (tagAIInsertSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Rate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Rate of class  tagAIInsertSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAIInsertSkill_ToLua_Rate
static int tolua_set_tagAIInsertSkill_ToLua_Rate(lua_State* tolua_S)
{
  tagAIInsertSkill_ToLua* self = (tagAIInsertSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Rate = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Once of class  tagAIInsertSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAIInsertSkill_ToLua_Once
static int tolua_get_tagAIInsertSkill_ToLua_Once(lua_State* tolua_S)
{
  tagAIInsertSkill_ToLua* self = (tagAIInsertSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Once'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Once);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Once of class  tagAIInsertSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAIInsertSkill_ToLua_Once
static int tolua_set_tagAIInsertSkill_ToLua_Once(lua_State* tolua_S)
{
  tagAIInsertSkill_ToLua* self = (tagAIInsertSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Once'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Once = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillID of class  tagAIRefreshedSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAIRefreshedSkill_ToLua_unsigned_SkillID
static int tolua_get_tagAIRefreshedSkill_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagAIRefreshedSkill_ToLua* self = (tagAIRefreshedSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillID of class  tagAIRefreshedSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAIRefreshedSkill_ToLua_unsigned_SkillID
static int tolua_set_tagAIRefreshedSkill_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagAIRefreshedSkill_ToLua* self = (tagAIRefreshedSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillLevel of class  tagAIRefreshedSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAIRefreshedSkill_ToLua_unsigned_SkillLevel
static int tolua_get_tagAIRefreshedSkill_ToLua_unsigned_SkillLevel(lua_State* tolua_S)
{
  tagAIRefreshedSkill_ToLua* self = (tagAIRefreshedSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillLevel of class  tagAIRefreshedSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAIRefreshedSkill_ToLua_unsigned_SkillLevel
static int tolua_set_tagAIRefreshedSkill_ToLua_unsigned_SkillLevel(lua_State* tolua_S)
{
  tagAIRefreshedSkill_ToLua* self = (tagAIRefreshedSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillLevel = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Rate of class  tagAIRefreshedSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAIRefreshedSkill_ToLua_Rate
static int tolua_get_tagAIRefreshedSkill_ToLua_Rate(lua_State* tolua_S)
{
  tagAIRefreshedSkill_ToLua* self = (tagAIRefreshedSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Rate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Rate of class  tagAIRefreshedSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAIRefreshedSkill_ToLua_Rate
static int tolua_set_tagAIRefreshedSkill_ToLua_Rate(lua_State* tolua_S)
{
  tagAIRefreshedSkill_ToLua* self = (tagAIRefreshedSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Rate = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Self of class  tagAIRefreshedSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAIRefreshedSkill_ToLua_Self
static int tolua_get_tagAIRefreshedSkill_ToLua_Self(lua_State* tolua_S)
{
  tagAIRefreshedSkill_ToLua* self = (tagAIRefreshedSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Self'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Self);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Self of class  tagAIRefreshedSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAIRefreshedSkill_ToLua_Self
static int tolua_set_tagAIRefreshedSkill_ToLua_Self(lua_State* tolua_S)
{
  tagAIRefreshedSkill_ToLua* self = (tagAIRefreshedSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Self'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Self = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoneyAttrID of class  tagMonBootyMoney_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBootyMoney_ToLua_unsigned_MoneyAttrID
static int tolua_get_tagMonBootyMoney_ToLua_unsigned_MoneyAttrID(lua_State* tolua_S)
{
  tagMonBootyMoney_ToLua* self = (tagMonBootyMoney_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyAttrID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoneyAttrID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoneyAttrID of class  tagMonBootyMoney_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBootyMoney_ToLua_unsigned_MoneyAttrID
static int tolua_set_tagMonBootyMoney_ToLua_unsigned_MoneyAttrID(lua_State* tolua_S)
{
  tagMonBootyMoney_ToLua* self = (tagMonBootyMoney_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyAttrID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoneyAttrID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Rate of class  tagMonBootyMoney_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBootyMoney_ToLua_unsigned_Rate
static int tolua_get_tagMonBootyMoney_ToLua_unsigned_Rate(lua_State* tolua_S)
{
  tagMonBootyMoney_ToLua* self = (tagMonBootyMoney_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Rate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Rate of class  tagMonBootyMoney_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBootyMoney_ToLua_unsigned_Rate
static int tolua_set_tagMonBootyMoney_ToLua_unsigned_Rate(lua_State* tolua_S)
{
  tagMonBootyMoney_ToLua* self = (tagMonBootyMoney_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Rate = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoneyVal of class  tagMonBootyMoney_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBootyMoney_ToLua_unsigned_MoneyVal
static int tolua_get_tagMonBootyMoney_ToLua_unsigned_MoneyVal(lua_State* tolua_S)
{
  tagMonBootyMoney_ToLua* self = (tagMonBootyMoney_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoneyVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoneyVal of class  tagMonBootyMoney_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBootyMoney_ToLua_unsigned_MoneyVal
static int tolua_set_tagMonBootyMoney_ToLua_unsigned_MoneyVal(lua_State* tolua_S)
{
  tagMonBootyMoney_ToLua* self = (tagMonBootyMoney_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoneyVal = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemID of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBootyItem_ToLua_unsigned_ItemID
static int tolua_get_tagMonBootyItem_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemID of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBootyItem_ToLua_unsigned_ItemID
static int tolua_set_tagMonBootyItem_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Rate of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBootyItem_ToLua_unsigned_Rate
static int tolua_get_tagMonBootyItem_ToLua_unsigned_Rate(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Rate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Rate of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBootyItem_ToLua_unsigned_Rate
static int tolua_set_tagMonBootyItem_ToLua_unsigned_Rate(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Rate = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TeamBootyType of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBootyItem_ToLua_unsigned_TeamBootyType
static int tolua_get_tagMonBootyItem_ToLua_unsigned_TeamBootyType(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TeamBootyType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TeamBootyType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TeamBootyType of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBootyItem_ToLua_unsigned_TeamBootyType
static int tolua_set_tagMonBootyItem_ToLua_unsigned_TeamBootyType(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TeamBootyType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TeamBootyType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Num of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBootyItem_ToLua_unsigned_Num
static int tolua_get_tagMonBootyItem_ToLua_unsigned_Num(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Num'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Num);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Num of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBootyItem_ToLua_unsigned_Num
static int tolua_set_tagMonBootyItem_ToLua_unsigned_Num(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Num'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Num = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DirectPakage of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBootyItem_ToLua_unsigned_DirectPakage
static int tolua_get_tagMonBootyItem_ToLua_unsigned_DirectPakage(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DirectPakage'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DirectPakage);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DirectPakage of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBootyItem_ToLua_unsigned_DirectPakage
static int tolua_set_tagMonBootyItem_ToLua_unsigned_DirectPakage(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DirectPakage'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DirectPakage = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MinLevel of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBootyItem_ToLua_unsigned_MinLevel
static int tolua_get_tagMonBootyItem_ToLua_unsigned_MinLevel(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MinLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MinLevel of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBootyItem_ToLua_unsigned_MinLevel
static int tolua_set_tagMonBootyItem_ToLua_unsigned_MinLevel(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MinLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxLevel of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBootyItem_ToLua_unsigned_MaxLevel
static int tolua_get_tagMonBootyItem_ToLua_unsigned_MaxLevel(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxLevel of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBootyItem_ToLua_unsigned_MaxLevel
static int tolua_set_tagMonBootyItem_ToLua_unsigned_MaxLevel(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Career of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBootyItem_ToLua_unsigned_Career
static int tolua_get_tagMonBootyItem_ToLua_unsigned_Career(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Career'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Career);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Career of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBootyItem_ToLua_unsigned_Career
static int tolua_set_tagMonBootyItem_ToLua_unsigned_Career(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Career'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Career = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TaskID1 of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBootyItem_ToLua_unsigned_TaskID1
static int tolua_get_tagMonBootyItem_ToLua_unsigned_TaskID1(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TaskID1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TaskID1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TaskID1 of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBootyItem_ToLua_unsigned_TaskID1
static int tolua_set_tagMonBootyItem_ToLua_unsigned_TaskID1(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TaskID1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TaskID1 = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TaskID2 of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBootyItem_ToLua_unsigned_TaskID2
static int tolua_get_tagMonBootyItem_ToLua_unsigned_TaskID2(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TaskID2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TaskID2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TaskID2 of class  tagMonBootyItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBootyItem_ToLua_unsigned_TaskID2
static int tolua_set_tagMonBootyItem_ToLua_unsigned_TaskID2(lua_State* tolua_S)
{
  tagMonBootyItem_ToLua* self = (tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TaskID2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TaskID2 = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Exp of class  tagMonBooty_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBooty_ToLua_unsigned_Exp
static int tolua_get_tagMonBooty_ToLua_unsigned_Exp(lua_State* tolua_S)
{
  tagMonBooty_ToLua* self = (tagMonBooty_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Exp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Exp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Exp of class  tagMonBooty_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBooty_ToLua_unsigned_Exp
static int tolua_set_tagMonBooty_ToLua_unsigned_Exp(lua_State* tolua_S)
{
  tagMonBooty_ToLua* self = (tagMonBooty_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Exp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Exp = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Moneys of class  tagMonBooty_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMonBooty_ToLua_Moneys
static int tolua_get_GameEngineTolua_tagMonBooty_ToLua_Moneys(lua_State* tolua_S)
{
 int tolua_index;
  tagMonBooty_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonBooty_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MONBOOTY_MONEY)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Moneys[tolua_index],"tagMonBootyMoney_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Moneys of class  tagMonBooty_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMonBooty_ToLua_Moneys
static int tolua_set_GameEngineTolua_tagMonBooty_ToLua_Moneys(lua_State* tolua_S)
{
 int tolua_index;
  tagMonBooty_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonBooty_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MONBOOTY_MONEY)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Moneys[tolua_index] = *((tagMonBootyMoney_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Items of class  tagMonBooty_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMonBooty_ToLua_Items
static int tolua_get_GameEngineTolua_tagMonBooty_ToLua_Items(lua_State* tolua_S)
{
 int tolua_index;
  tagMonBooty_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonBooty_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MONBOOTY_ITEM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Items[tolua_index],"tagMonBootyItem_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Items of class  tagMonBooty_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMonBooty_ToLua_Items
static int tolua_set_GameEngineTolua_tagMonBooty_ToLua_Items(lua_State* tolua_S)
{
 int tolua_index;
  tagMonBooty_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonBooty_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MONBOOTY_ITEM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Items[tolua_index] = *((tagMonBootyItem_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BootyPetEgg of class  tagMonBooty_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBooty_ToLua_unsigned_BootyPetEgg
static int tolua_get_tagMonBooty_ToLua_unsigned_BootyPetEgg(lua_State* tolua_S)
{
  tagMonBooty_ToLua* self = (tagMonBooty_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BootyPetEgg'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BootyPetEgg);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BootyPetEgg of class  tagMonBooty_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBooty_ToLua_unsigned_BootyPetEgg
static int tolua_set_tagMonBooty_ToLua_unsigned_BootyPetEgg(lua_State* tolua_S)
{
  tagMonBooty_ToLua* self = (tagMonBooty_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BootyPetEgg'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BootyPetEgg = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BootyPetEggRate of class  tagMonBooty_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBooty_ToLua_BootyPetEggRate
static int tolua_get_tagMonBooty_ToLua_BootyPetEggRate(lua_State* tolua_S)
{
  tagMonBooty_ToLua* self = (tagMonBooty_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BootyPetEggRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BootyPetEggRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BootyPetEggRate of class  tagMonBooty_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBooty_ToLua_BootyPetEggRate
static int tolua_set_tagMonBooty_ToLua_BootyPetEggRate(lua_State* tolua_S)
{
  tagMonBooty_ToLua* self = (tagMonBooty_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BootyPetEggRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BootyPetEggRate = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Respact of class  tagMonBooty_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonBooty_ToLua_Respact
static int tolua_get_tagMonBooty_ToLua_Respact(lua_State* tolua_S)
{
  tagMonBooty_ToLua* self = (tagMonBooty_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Respact'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Respact,"tagRespactEntry_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Respact of class  tagMonBooty_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonBooty_ToLua_Respact
static int tolua_set_tagMonBooty_ToLua_Respact(lua_State* tolua_S)
{
  tagMonBooty_ToLua* self = (tagMonBooty_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Respact'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagRespactEntry_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Respact = *((tagRespactEntry_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BlackLevel of class  tagMonColorLevel_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonColorLevel_ToLua_unsigned_BlackLevel
static int tolua_get_tagMonColorLevel_ToLua_unsigned_BlackLevel(lua_State* tolua_S)
{
  tagMonColorLevel_ToLua* self = (tagMonColorLevel_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BlackLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BlackLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BlackLevel of class  tagMonColorLevel_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonColorLevel_ToLua_unsigned_BlackLevel
static int tolua_set_tagMonColorLevel_ToLua_unsigned_BlackLevel(lua_State* tolua_S)
{
  tagMonColorLevel_ToLua* self = (tagMonColorLevel_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BlackLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BlackLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RedLevel of class  tagMonColorLevel_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonColorLevel_ToLua_unsigned_RedLevel
static int tolua_get_tagMonColorLevel_ToLua_unsigned_RedLevel(lua_State* tolua_S)
{
  tagMonColorLevel_ToLua* self = (tagMonColorLevel_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RedLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RedLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RedLevel of class  tagMonColorLevel_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonColorLevel_ToLua_unsigned_RedLevel
static int tolua_set_tagMonColorLevel_ToLua_unsigned_RedLevel(lua_State* tolua_S)
{
  tagMonColorLevel_ToLua* self = (tagMonColorLevel_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RedLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RedLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WhiteLevel of class  tagMonColorLevel_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonColorLevel_ToLua_unsigned_WhiteLevel
static int tolua_get_tagMonColorLevel_ToLua_unsigned_WhiteLevel(lua_State* tolua_S)
{
  tagMonColorLevel_ToLua* self = (tagMonColorLevel_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WhiteLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WhiteLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WhiteLevel of class  tagMonColorLevel_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonColorLevel_ToLua_unsigned_WhiteLevel
static int tolua_set_tagMonColorLevel_ToLua_unsigned_WhiteLevel(lua_State* tolua_S)
{
  tagMonColorLevel_ToLua* self = (tagMonColorLevel_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WhiteLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WhiteLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GreenLevel of class  tagMonColorLevel_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonColorLevel_ToLua_unsigned_GreenLevel
static int tolua_get_tagMonColorLevel_ToLua_unsigned_GreenLevel(lua_State* tolua_S)
{
  tagMonColorLevel_ToLua* self = (tagMonColorLevel_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GreenLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GreenLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GreenLevel of class  tagMonColorLevel_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonColorLevel_ToLua_unsigned_GreenLevel
static int tolua_set_tagMonColorLevel_ToLua_unsigned_GreenLevel(lua_State* tolua_S)
{
  tagMonColorLevel_ToLua* self = (tagMonColorLevel_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GreenLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GreenLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TaskID of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMonCollect_ToLua_TaskID
static int tolua_get_GameEngineTolua_tagMonCollect_ToLua_TaskID(lua_State* tolua_S)
{
 int tolua_index;
  tagMonCollect_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonCollect_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MON_COLLECT_TASK_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->TaskID[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TaskID of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMonCollect_ToLua_TaskID
static int tolua_set_GameEngineTolua_tagMonCollect_ToLua_TaskID(lua_State* tolua_S)
{
 int tolua_index;
  tagMonCollect_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonCollect_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MON_COLLECT_TASK_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->TaskID[tolua_index] = ((unsigned short)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectOnce of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonCollect_ToLua_unsigned_CollectOnce
static int tolua_get_tagMonCollect_ToLua_unsigned_CollectOnce(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectOnce'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectOnce);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectOnce of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonCollect_ToLua_unsigned_CollectOnce
static int tolua_set_tagMonCollect_ToLua_unsigned_CollectOnce(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectOnce'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectOnce = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectTime of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonCollect_ToLua_unsigned_CollectTime
static int tolua_get_tagMonCollect_ToLua_unsigned_CollectTime(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectTime of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonCollect_ToLua_unsigned_CollectTime
static int tolua_set_tagMonCollect_ToLua_unsigned_CollectTime(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectTime = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectArmDur of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonCollect_ToLua_unsigned_CollectArmDur
static int tolua_get_tagMonCollect_ToLua_unsigned_CollectArmDur(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectArmDur'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectArmDur);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectArmDur of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonCollect_ToLua_unsigned_CollectArmDur
static int tolua_set_tagMonCollect_ToLua_unsigned_CollectArmDur(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectArmDur'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectArmDur = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectSkillID of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonCollect_ToLua_unsigned_CollectSkillID
static int tolua_get_tagMonCollect_ToLua_unsigned_CollectSkillID(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectSkillID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectSkillID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectSkillID of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonCollect_ToLua_unsigned_CollectSkillID
static int tolua_set_tagMonCollect_ToLua_unsigned_CollectSkillID(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectSkillID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectSkillID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectArm of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonCollect_ToLua_unsigned_CollectArm
static int tolua_get_tagMonCollect_ToLua_unsigned_CollectArm(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectArm'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectArm);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectArm of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonCollect_ToLua_unsigned_CollectArm
static int tolua_set_tagMonCollect_ToLua_unsigned_CollectArm(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectArm'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectArm = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectItem of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonCollect_ToLua_unsigned_CollectItem
static int tolua_get_tagMonCollect_ToLua_unsigned_CollectItem(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectItem'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectItem);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectItem of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonCollect_ToLua_unsigned_CollectItem
static int tolua_set_tagMonCollect_ToLua_unsigned_CollectItem(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectItem'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectItem = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectItemDur of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonCollect_ToLua_unsigned_CollectItemDur
static int tolua_get_tagMonCollect_ToLua_unsigned_CollectItemDur(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectItemDur'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectItemDur);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectItemDur of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonCollect_ToLua_unsigned_CollectItemDur
static int tolua_set_tagMonCollect_ToLua_unsigned_CollectItemDur(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectItemDur'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectItemDur = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectSecondarySkillType of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonCollect_ToLua_unsigned_CollectSecondarySkillType
static int tolua_get_tagMonCollect_ToLua_unsigned_CollectSecondarySkillType(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectSecondarySkillType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectSecondarySkillType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectSecondarySkillType of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonCollect_ToLua_unsigned_CollectSecondarySkillType
static int tolua_set_tagMonCollect_ToLua_unsigned_CollectSecondarySkillType(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectSecondarySkillType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectSecondarySkillType = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectRecipeID of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonCollect_ToLua_unsigned_CollectRecipeID
static int tolua_get_tagMonCollect_ToLua_unsigned_CollectRecipeID(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectRecipeID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectRecipeID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectRecipeID of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonCollect_ToLua_unsigned_CollectRecipeID
static int tolua_set_tagMonCollect_ToLua_unsigned_CollectRecipeID(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectRecipeID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectRecipeID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NoDecHP of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonCollect_ToLua_NoDecHP
static int tolua_get_tagMonCollect_ToLua_NoDecHP(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoDecHP'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NoDecHP);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NoDecHP of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonCollect_ToLua_NoDecHP
static int tolua_set_tagMonCollect_ToLua_NoDecHP(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoDecHP'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NoDecHP = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectType of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonCollect_ToLua_CollectType
static int tolua_get_tagMonCollect_ToLua_CollectType(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectType of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonCollect_ToLua_CollectType
static int tolua_set_tagMonCollect_ToLua_CollectType(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectPackgeItem of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMonCollect_ToLua_CollectPackgeItem
static int tolua_get_GameEngineTolua_tagMonCollect_ToLua_CollectPackgeItem(lua_State* tolua_S)
{
 int tolua_index;
  tagMonCollect_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonCollect_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MON_COLLECT_PACKAGE_ITEM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->CollectPackgeItem[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectPackgeItem of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMonCollect_ToLua_CollectPackgeItem
static int tolua_set_GameEngineTolua_tagMonCollect_ToLua_CollectPackgeItem(lua_State* tolua_S)
{
 int tolua_index;
  tagMonCollect_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonCollect_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MON_COLLECT_PACKAGE_ITEM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->CollectPackgeItem[tolua_index] = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectFlag of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonCollect_ToLua_CollectFlag
static int tolua_get_tagMonCollect_ToLua_CollectFlag(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectFlag of class  tagMonCollect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonCollect_ToLua_CollectFlag
static int tolua_set_tagMonCollect_ToLua_CollectFlag(lua_State* tolua_S)
{
  tagMonCollect_ToLua* self = (tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectFlag = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonsterID of class  tagAberrantList_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAberrantList_ToLua_unsigned_MonsterID
static int tolua_get_tagAberrantList_ToLua_unsigned_MonsterID(lua_State* tolua_S)
{
  tagAberrantList_ToLua* self = (tagAberrantList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonsterID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonsterID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonsterID of class  tagAberrantList_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAberrantList_ToLua_unsigned_MonsterID
static int tolua_set_tagAberrantList_ToLua_unsigned_MonsterID(lua_State* tolua_S)
{
  tagAberrantList_ToLua* self = (tagAberrantList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonsterID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonsterID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Rate of class  tagAberrantList_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAberrantList_ToLua_unsigned_Rate
static int tolua_get_tagAberrantList_ToLua_unsigned_Rate(lua_State* tolua_S)
{
  tagAberrantList_ToLua* self = (tagAberrantList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Rate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Rate of class  tagAberrantList_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAberrantList_ToLua_unsigned_Rate
static int tolua_set_tagAberrantList_ToLua_unsigned_Rate(lua_State* tolua_S)
{
  tagAberrantList_ToLua* self = (tagAberrantList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Rate = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GroupID of class  tagAddMonBootyGroup_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddMonBootyGroup_ToLua_GroupID
static int tolua_get_tagAddMonBootyGroup_ToLua_GroupID(lua_State* tolua_S)
{
  tagAddMonBootyGroup_ToLua* self = (tagAddMonBootyGroup_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GroupID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GroupID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GroupID of class  tagAddMonBootyGroup_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddMonBootyGroup_ToLua_GroupID
static int tolua_set_tagAddMonBootyGroup_ToLua_GroupID(lua_State* tolua_S)
{
  tagAddMonBootyGroup_ToLua* self = (tagAddMonBootyGroup_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GroupID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GroupID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectTime of class  tagAddMonBootyGroup_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddMonBootyGroup_ToLua_CollectTime
static int tolua_get_tagAddMonBootyGroup_ToLua_CollectTime(lua_State* tolua_S)
{
  tagAddMonBootyGroup_ToLua* self = (tagAddMonBootyGroup_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectTime of class  tagAddMonBootyGroup_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddMonBootyGroup_ToLua_CollectTime
static int tolua_set_tagAddMonBootyGroup_ToLua_CollectTime(lua_State* tolua_S)
{
  tagAddMonBootyGroup_ToLua* self = (tagAddMonBootyGroup_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectTime = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Flag of class  tagAddMonBootyGroup_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddMonBootyGroup_ToLua_Flag
static int tolua_get_tagAddMonBootyGroup_ToLua_Flag(lua_State* tolua_S)
{
  tagAddMonBootyGroup_ToLua* self = (tagAddMonBootyGroup_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Flag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Flag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Flag of class  tagAddMonBootyGroup_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddMonBootyGroup_ToLua_Flag
static int tolua_set_tagAddMonBootyGroup_ToLua_Flag(lua_State* tolua_S)
{
  tagAddMonBootyGroup_ToLua* self = (tagAddMonBootyGroup_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Flag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Flag = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonsterID of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_MonsterID
static int tolua_get_tagMonsterDef_ToLua_unsigned_MonsterID(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonsterID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonsterID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonsterID of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_MonsterID
static int tolua_set_tagMonsterDef_ToLua_unsigned_MonsterID(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonsterID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonsterID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_Name
static int tolua_get_tagMonsterDef_ToLua_Name(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_Name
static int tolua_set_tagMonsterDef_ToLua_Name(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Name,tolua_tostring(tolua_S,2,0),RES_NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IconID of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_IconID
static int tolua_get_tagMonsterDef_ToLua_IconID(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IconID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IconID of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_IconID
static int tolua_set_tagMonsterDef_ToLua_IconID(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IconID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HP of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_HP
static int tolua_get_tagMonsterDef_ToLua_unsigned_HP(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HP'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HP);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HP of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_HP
static int tolua_set_tagMonsterDef_ToLua_unsigned_HP(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HP'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HP = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_IceAtk
static int tolua_get_tagMonsterDef_ToLua_unsigned_IceAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_IceAtk
static int tolua_set_tagMonsterDef_ToLua_unsigned_IceAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceAtk = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_IceDef
static int tolua_get_tagMonsterDef_ToLua_unsigned_IceDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_IceDef
static int tolua_set_tagMonsterDef_ToLua_unsigned_IceDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceDef = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_FireAtk
static int tolua_get_tagMonsterDef_ToLua_unsigned_FireAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_FireAtk
static int tolua_set_tagMonsterDef_ToLua_unsigned_FireAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireAtk = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_FireDef
static int tolua_get_tagMonsterDef_ToLua_unsigned_FireDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_FireDef
static int tolua_set_tagMonsterDef_ToLua_unsigned_FireDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireDef = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_ThunderAtk
static int tolua_get_tagMonsterDef_ToLua_unsigned_ThunderAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_ThunderAtk
static int tolua_set_tagMonsterDef_ToLua_unsigned_ThunderAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderAtk = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_ThunderDef
static int tolua_get_tagMonsterDef_ToLua_unsigned_ThunderDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_ThunderDef
static int tolua_set_tagMonsterDef_ToLua_unsigned_ThunderDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderDef = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LightAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_LightAtk
static int tolua_get_tagMonsterDef_ToLua_unsigned_LightAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LightAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LightAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_LightAtk
static int tolua_set_tagMonsterDef_ToLua_unsigned_LightAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LightAtk = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LightDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_LightDef
static int tolua_get_tagMonsterDef_ToLua_unsigned_LightDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LightDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LightDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_LightDef
static int tolua_set_tagMonsterDef_ToLua_unsigned_LightDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LightDef = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NightAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_NightAtk
static int tolua_get_tagMonsterDef_ToLua_unsigned_NightAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NightAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NightAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_NightAtk
static int tolua_set_tagMonsterDef_ToLua_unsigned_NightAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NightAtk = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NightDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_NightDef
static int tolua_get_tagMonsterDef_ToLua_unsigned_NightDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NightDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NightDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_NightDef
static int tolua_set_tagMonsterDef_ToLua_unsigned_NightDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NightDef = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_PhsicAtk
static int tolua_get_tagMonsterDef_ToLua_unsigned_PhsicAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_PhsicAtk
static int tolua_set_tagMonsterDef_ToLua_unsigned_PhsicAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicAtk = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_PhsicDef
static int tolua_get_tagMonsterDef_ToLua_unsigned_PhsicDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_PhsicDef
static int tolua_set_tagMonsterDef_ToLua_unsigned_PhsicDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicDef = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WaterAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_WaterAtk
static int tolua_get_tagMonsterDef_ToLua_unsigned_WaterAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WaterAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WaterAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_WaterAtk
static int tolua_set_tagMonsterDef_ToLua_unsigned_WaterAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WaterAtk = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WaterDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_WaterDef
static int tolua_get_tagMonsterDef_ToLua_unsigned_WaterDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WaterDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WaterDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_WaterDef
static int tolua_set_tagMonsterDef_ToLua_unsigned_WaterDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WaterDef = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SiegeAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_SiegeAtk
static int tolua_get_tagMonsterDef_ToLua_unsigned_SiegeAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SiegeAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SiegeAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SiegeAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_SiegeAtk
static int tolua_set_tagMonsterDef_ToLua_unsigned_SiegeAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SiegeAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SiegeAtk = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SiegeDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_SiegeDef
static int tolua_get_tagMonsterDef_ToLua_unsigned_SiegeDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SiegeDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SiegeDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SiegeDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_SiegeDef
static int tolua_set_tagMonsterDef_ToLua_unsigned_SiegeDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SiegeDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SiegeDef = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HolyAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_HolyAtk
static int tolua_get_tagMonsterDef_ToLua_unsigned_HolyAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HolyAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HolyAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HolyAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_HolyAtk
static int tolua_set_tagMonsterDef_ToLua_unsigned_HolyAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HolyAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HolyAtk = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HolyDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_HolyDef
static int tolua_get_tagMonsterDef_ToLua_unsigned_HolyDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HolyDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HolyDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HolyDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_HolyDef
static int tolua_set_tagMonsterDef_ToLua_unsigned_HolyDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HolyDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HolyDef = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MachineAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_MachineAtk
static int tolua_get_tagMonsterDef_ToLua_unsigned_MachineAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MachineAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MachineAtk of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_MachineAtk
static int tolua_set_tagMonsterDef_ToLua_unsigned_MachineAtk(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MachineAtk = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MachineDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_MachineDef
static int tolua_get_tagMonsterDef_ToLua_unsigned_MachineDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MachineDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MachineDef of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_MachineDef
static int tolua_set_tagMonsterDef_ToLua_unsigned_MachineDef(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MachineDef = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkerHurtChg of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_AtkerHurtChg
static int tolua_get_tagMonsterDef_ToLua_AtkerHurtChg(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerHurtChg'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->AtkerHurtChg,"tagAtkerHurtChg_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkerHurtChg of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_AtkerHurtChg
static int tolua_set_tagMonsterDef_ToLua_AtkerHurtChg(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkerHurtChg'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagAtkerHurtChg_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkerHurtChg = *((tagAtkerHurtChg_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkeeHurtChg of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_AtkeeHurtChg
static int tolua_get_tagMonsterDef_ToLua_AtkeeHurtChg(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeHurtChg'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->AtkeeHurtChg,"tagAtkeeHurtChg_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkeeHurtChg of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_AtkeeHurtChg
static int tolua_set_tagMonsterDef_ToLua_AtkeeHurtChg(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkeeHurtChg'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagAtkeeHurtChg_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkeeHurtChg = *((tagAtkeeHurtChg_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Hit of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_Hit
static int tolua_get_tagMonsterDef_ToLua_unsigned_Hit(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Hit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Hit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Hit of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_Hit
static int tolua_set_tagMonsterDef_ToLua_unsigned_Hit(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Hit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Hit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Flee of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_Flee
static int tolua_get_tagMonsterDef_ToLua_unsigned_Flee(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Flee'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Flee);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Flee of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_Flee
static int tolua_set_tagMonsterDef_ToLua_unsigned_Flee(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Flee'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Flee = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Type of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_Type
static int tolua_get_tagMonsterDef_ToLua_unsigned_Type(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Type of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_Type
static int tolua_set_tagMonsterDef_ToLua_unsigned_Type(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Type = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BackMul of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_BackMul
static int tolua_get_tagMonsterDef_ToLua_BackMul(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BackMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BackMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BackMul of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_BackMul
static int tolua_set_tagMonsterDef_ToLua_BackMul(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BackMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BackMul = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NotRefresh of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_NotRefresh
static int tolua_get_tagMonsterDef_ToLua_unsigned_NotRefresh(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NotRefresh'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NotRefresh);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NotRefresh of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_NotRefresh
static int tolua_set_tagMonsterDef_ToLua_unsigned_NotRefresh(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NotRefresh'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NotRefresh = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DynAttr of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_DynAttr
static int tolua_get_tagMonsterDef_ToLua_unsigned_DynAttr(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DynAttr'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DynAttr);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DynAttr of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_DynAttr
static int tolua_set_tagMonsterDef_ToLua_unsigned_DynAttr(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DynAttr'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DynAttr = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoveSpd of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_MoveSpd
static int tolua_get_tagMonsterDef_ToLua_unsigned_MoveSpd(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveSpd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoveSpd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoveSpd of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_MoveSpd
static int tolua_set_tagMonsterDef_ToLua_unsigned_MoveSpd(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveSpd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoveSpd = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FightMoveSpd of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_FightMoveSpd
static int tolua_get_tagMonsterDef_ToLua_unsigned_FightMoveSpd(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FightMoveSpd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FightMoveSpd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FightMoveSpd of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_FightMoveSpd
static int tolua_set_tagMonsterDef_ToLua_unsigned_FightMoveSpd(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FightMoveSpd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FightMoveSpd = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HomeMoveSpd of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_HomeMoveSpd
static int tolua_get_tagMonsterDef_ToLua_unsigned_HomeMoveSpd(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HomeMoveSpd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HomeMoveSpd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HomeMoveSpd of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_HomeMoveSpd
static int tolua_set_tagMonsterDef_ToLua_unsigned_HomeMoveSpd(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HomeMoveSpd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HomeMoveSpd = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RefreshTime of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_RefreshTime
static int tolua_get_tagMonsterDef_ToLua_RefreshTime(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RefreshTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RefreshTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RefreshTime of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_RefreshTime
static int tolua_set_tagMonsterDef_ToLua_RefreshTime(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RefreshTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RefreshTime = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DeadAddResourceMul of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_DeadAddResourceMul
static int tolua_get_tagMonsterDef_ToLua_DeadAddResourceMul(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DeadAddResourceMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DeadAddResourceMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DeadAddResourceMul of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_DeadAddResourceMul
static int tolua_set_tagMonsterDef_ToLua_DeadAddResourceMul(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DeadAddResourceMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DeadAddResourceMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PressInit of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMonsterDef_ToLua_PressInit
static int tolua_get_GameEngineTolua_tagMonsterDef_ToLua_PressInit(lua_State* tolua_S)
{
 int tolua_index;
  tagMonsterDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonsterDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PRESS_INIT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->PressInit[tolua_index],"tagPressInit_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PressInit of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMonsterDef_ToLua_PressInit
static int tolua_set_GameEngineTolua_tagMonsterDef_ToLua_PressInit(lua_State* tolua_S)
{
 int tolua_index;
  tagMonsterDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonsterDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PRESS_INIT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->PressInit[tolua_index] = *((tagPressInit_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PressHurtRate of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_PressHurtRate
static int tolua_get_tagMonsterDef_ToLua_unsigned_PressHurtRate(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PressHurtRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PressHurtRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PressHurtRate of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_PressHurtRate
static int tolua_set_tagMonsterDef_ToLua_unsigned_PressHurtRate(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PressHurtRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PressHurtRate = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PressSelectAdd of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_PressSelectAdd
static int tolua_get_tagMonsterDef_ToLua_unsigned_PressSelectAdd(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PressSelectAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PressSelectAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PressSelectAdd of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_PressSelectAdd
static int tolua_set_tagMonsterDef_ToLua_unsigned_PressSelectAdd(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PressSelectAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PressSelectAdd = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AINormalSkills of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMonsterDef_ToLua_AINormalSkills
static int tolua_get_GameEngineTolua_tagMonsterDef_ToLua_AINormalSkills(lua_State* tolua_S)
{
 int tolua_index;
  tagMonsterDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonsterDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_NORM_SKILL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->AINormalSkills[tolua_index],"tagAINormalSkill_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AINormalSkills of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMonsterDef_ToLua_AINormalSkills
static int tolua_set_GameEngineTolua_tagMonsterDef_ToLua_AINormalSkills(lua_State* tolua_S)
{
 int tolua_index;
  tagMonsterDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonsterDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_NORM_SKILL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->AINormalSkills[tolua_index] = *((tagAINormalSkill_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AIAtkeeSkills of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMonsterDef_ToLua_AIAtkeeSkills
static int tolua_get_GameEngineTolua_tagMonsterDef_ToLua_AIAtkeeSkills(lua_State* tolua_S)
{
 int tolua_index;
  tagMonsterDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonsterDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ATKEE_SKILL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->AIAtkeeSkills[tolua_index],"tagAIInsertSkill_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AIAtkeeSkills of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMonsterDef_ToLua_AIAtkeeSkills
static int tolua_set_GameEngineTolua_tagMonsterDef_ToLua_AIAtkeeSkills(lua_State* tolua_S)
{
 int tolua_index;
  tagMonsterDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonsterDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ATKEE_SKILL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->AIAtkeeSkills[tolua_index] = *((tagAIInsertSkill_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AIAtkerSkills of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMonsterDef_ToLua_AIAtkerSkills
static int tolua_get_GameEngineTolua_tagMonsterDef_ToLua_AIAtkerSkills(lua_State* tolua_S)
{
 int tolua_index;
  tagMonsterDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonsterDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ATKER_SKILL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->AIAtkerSkills[tolua_index],"tagAIInsertSkill_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AIAtkerSkills of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMonsterDef_ToLua_AIAtkerSkills
static int tolua_set_GameEngineTolua_tagMonsterDef_ToLua_AIAtkerSkills(lua_State* tolua_S)
{
 int tolua_index;
  tagMonsterDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonsterDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ATKER_SKILL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->AIAtkerSkills[tolua_index] = *((tagAIInsertSkill_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ViewDist of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_ViewDist
static int tolua_get_tagMonsterDef_ToLua_unsigned_ViewDist(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ViewDist'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ViewDist);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ViewDist of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_ViewDist
static int tolua_set_tagMonsterDef_ToLua_unsigned_ViewDist(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ViewDist'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ViewDist = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TraceDist of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_TraceDist
static int tolua_get_tagMonsterDef_ToLua_unsigned_TraceDist(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TraceDist'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TraceDist);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TraceDist of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_TraceDist
static int tolua_set_tagMonsterDef_ToLua_unsigned_TraceDist(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TraceDist'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TraceDist = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoveType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_MoveType
static int tolua_get_tagMonsterDef_ToLua_unsigned_MoveType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoveType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoveType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_MoveType
static int tolua_set_tagMonsterDef_ToLua_unsigned_MoveType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoveType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_AtkType
static int tolua_get_tagMonsterDef_ToLua_unsigned_AtkType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_AtkType
static int tolua_set_tagMonsterDef_ToLua_unsigned_AtkType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RandSelect of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_RandSelect
static int tolua_get_tagMonsterDef_ToLua_unsigned_RandSelect(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RandSelect'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RandSelect);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RandSelect of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_RandSelect
static int tolua_set_tagMonsterDef_ToLua_unsigned_RandSelect(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RandSelect'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RandSelect = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HeavyHitRate of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_HeavyHitRate
static int tolua_get_tagMonsterDef_ToLua_unsigned_HeavyHitRate(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HeavyHitRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HeavyHitRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HeavyHitRate of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_HeavyHitRate
static int tolua_set_tagMonsterDef_ToLua_unsigned_HeavyHitRate(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HeavyHitRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HeavyHitRate = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Radius of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_Radius
static int tolua_get_tagMonsterDef_ToLua_unsigned_Radius(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Radius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Radius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Radius of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_Radius
static int tolua_set_tagMonsterDef_ToLua_unsigned_Radius(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Radius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Radius = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DynMask of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_DynMask
static int tolua_get_tagMonsterDef_ToLua_unsigned_DynMask(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DynMask'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DynMask);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DynMask of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_DynMask
static int tolua_set_tagMonsterDef_ToLua_unsigned_DynMask(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DynMask'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DynMask = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DynMaskX of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_DynMaskX
static int tolua_get_tagMonsterDef_ToLua_unsigned_DynMaskX(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DynMaskX'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DynMaskX);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DynMaskX of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_DynMaskX
static int tolua_set_tagMonsterDef_ToLua_unsigned_DynMaskX(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DynMaskX'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DynMaskX = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DynMaskY of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_DynMaskY
static int tolua_get_tagMonsterDef_ToLua_unsigned_DynMaskY(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DynMaskY'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DynMaskY);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DynMaskY of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_DynMaskY
static int tolua_set_tagMonsterDef_ToLua_unsigned_DynMaskY(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DynMaskY'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DynMaskY = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Height of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_Height
static int tolua_get_tagMonsterDef_ToLua_unsigned_Height(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Height'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Height);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Height of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_Height
static int tolua_set_tagMonsterDef_ToLua_unsigned_Height(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Height'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Height = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_Level
static int tolua_get_tagMonsterDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_Level
static int tolua_set_tagMonsterDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BirthTime of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_BirthTime
static int tolua_get_tagMonsterDef_ToLua_unsigned_BirthTime(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BirthTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BirthTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BirthTime of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_BirthTime
static int tolua_set_tagMonsterDef_ToLua_unsigned_BirthTime(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BirthTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BirthTime = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SubType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_SubType
static int tolua_get_tagMonsterDef_ToLua_unsigned_SubType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SubType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SubType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SubType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_SubType
static int tolua_set_tagMonsterDef_ToLua_unsigned_SubType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SubType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SubType = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Booty of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_Booty
static int tolua_get_tagMonsterDef_ToLua_Booty(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Booty'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Booty,"tagMonBooty_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Booty of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_Booty
static int tolua_set_tagMonsterDef_ToLua_Booty(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Booty'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagMonBooty_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Booty = *((tagMonBooty_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ColorLevel of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_ColorLevel
static int tolua_get_tagMonsterDef_ToLua_ColorLevel(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ColorLevel'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->ColorLevel,"tagMonColorLevel_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ColorLevel of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_ColorLevel
static int tolua_set_tagMonsterDef_ToLua_ColorLevel(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ColorLevel'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagMonColorLevel_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ColorLevel = *((tagMonColorLevel_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Collect of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_Collect
static int tolua_get_tagMonsterDef_ToLua_Collect(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Collect'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Collect,"tagMonCollect_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Collect of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_Collect
static int tolua_set_tagMonsterDef_ToLua_Collect(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Collect'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagMonCollect_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Collect = *((tagMonCollect_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RefreshRadius of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_RefreshRadius
static int tolua_get_tagMonsterDef_ToLua_unsigned_RefreshRadius(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RefreshRadius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RefreshRadius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RefreshRadius of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_RefreshRadius
static int tolua_set_tagMonsterDef_ToLua_unsigned_RefreshRadius(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RefreshRadius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RefreshRadius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonAttrType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_MonAttrType
static int tolua_get_tagMonsterDef_ToLua_unsigned_MonAttrType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonAttrType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonAttrType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonAttrType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_MonAttrType
static int tolua_set_tagMonsterDef_ToLua_unsigned_MonAttrType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonAttrType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonAttrType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Aberrants of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMonsterDef_ToLua_Aberrants
static int tolua_get_GameEngineTolua_tagMonsterDef_ToLua_Aberrants(lua_State* tolua_S)
{
 int tolua_index;
  tagMonsterDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonsterDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MON_ABERRANT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Aberrants[tolua_index],"tagAberrantList_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Aberrants of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMonsterDef_ToLua_Aberrants
static int tolua_set_GameEngineTolua_tagMonsterDef_ToLua_Aberrants(lua_State* tolua_S)
{
 int tolua_index;
  tagMonsterDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonsterDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MON_ABERRANT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Aberrants[tolua_index] = *((tagAberrantList_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RunAwayHP of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_RunAwayHP
static int tolua_get_tagMonsterDef_ToLua_RunAwayHP(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RunAwayHP'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RunAwayHP);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RunAwayHP of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_RunAwayHP
static int tolua_set_tagMonsterDef_ToLua_RunAwayHP(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RunAwayHP'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RunAwayHP = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RunAwayTime of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_RunAwayTime
static int tolua_get_tagMonsterDef_ToLua_unsigned_RunAwayTime(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RunAwayTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RunAwayTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RunAwayTime of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_RunAwayTime
static int tolua_set_tagMonsterDef_ToLua_unsigned_RunAwayTime(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RunAwayTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RunAwayTime = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CallHelpHP of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_CallHelpHP
static int tolua_get_tagMonsterDef_ToLua_CallHelpHP(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CallHelpHP'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CallHelpHP);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CallHelpHP of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_CallHelpHP
static int tolua_set_tagMonsterDef_ToLua_CallHelpHP(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CallHelpHP'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CallHelpHP = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CallHelpDist of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_CallHelpDist
static int tolua_get_tagMonsterDef_ToLua_CallHelpDist(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CallHelpDist'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CallHelpDist);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CallHelpDist of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_CallHelpDist
static int tolua_set_tagMonsterDef_ToLua_CallHelpDist(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CallHelpDist'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CallHelpDist = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CallHelpMonsterID of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMonsterDef_ToLua_CallHelpMonsterID
static int tolua_get_GameEngineTolua_tagMonsterDef_ToLua_CallHelpMonsterID(lua_State* tolua_S)
{
 int tolua_index;
  tagMonsterDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonsterDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_CALL_MOSTER_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->CallHelpMonsterID[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CallHelpMonsterID of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMonsterDef_ToLua_CallHelpMonsterID
static int tolua_set_GameEngineTolua_tagMonsterDef_ToLua_CallHelpMonsterID(lua_State* tolua_S)
{
 int tolua_index;
  tagMonsterDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonsterDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_CALL_MOSTER_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->CallHelpMonsterID[tolua_index] = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HoldDistanceRandom of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_HoldDistanceRandom
static int tolua_get_tagMonsterDef_ToLua_HoldDistanceRandom(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HoldDistanceRandom'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HoldDistanceRandom);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HoldDistanceRandom of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_HoldDistanceRandom
static int tolua_set_tagMonsterDef_ToLua_HoldDistanceRandom(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HoldDistanceRandom'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HoldDistanceRandom = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BootyXp of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_BootyXp
static int tolua_get_tagMonsterDef_ToLua_BootyXp(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BootyXp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BootyXp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BootyXp of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_BootyXp
static int tolua_set_tagMonsterDef_ToLua_BootyXp(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BootyXp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BootyXp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkMulByCaller of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_AtkMulByCaller
static int tolua_get_tagMonsterDef_ToLua_AtkMulByCaller(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkMulByCaller'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkMulByCaller);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkMulByCaller of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_AtkMulByCaller
static int tolua_set_tagMonsterDef_ToLua_AtkMulByCaller(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkMulByCaller'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkMulByCaller = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BootyDropType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_BootyDropType
static int tolua_get_tagMonsterDef_ToLua_BootyDropType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BootyDropType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BootyDropType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BootyDropType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_BootyDropType
static int tolua_set_tagMonsterDef_ToLua_BootyDropType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BootyDropType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BootyDropType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AIRefreshedSkill of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_AIRefreshedSkill
static int tolua_get_tagMonsterDef_ToLua_AIRefreshedSkill(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AIRefreshedSkill'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->AIRefreshedSkill,"tagAIRefreshedSkill_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AIRefreshedSkill of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_AIRefreshedSkill
static int tolua_set_tagMonsterDef_ToLua_AIRefreshedSkill(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AIRefreshedSkill'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagAIRefreshedSkill_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AIRefreshedSkill = *((tagAIRefreshedSkill_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BootyViewType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_BootyViewType
static int tolua_get_tagMonsterDef_ToLua_unsigned_BootyViewType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BootyViewType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BootyViewType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BootyViewType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_BootyViewType
static int tolua_set_tagMonsterDef_ToLua_unsigned_BootyViewType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BootyViewType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BootyViewType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MiscType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_MiscType
static int tolua_get_tagMonsterDef_ToLua_unsigned_MiscType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MiscType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MiscType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MiscType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_MiscType
static int tolua_set_tagMonsterDef_ToLua_unsigned_MiscType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MiscType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MiscType = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectActDesc of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_CollectActDesc
static int tolua_get_tagMonsterDef_ToLua_CollectActDesc(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectActDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->CollectActDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectActDesc of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_CollectActDesc
static int tolua_set_tagMonsterDef_ToLua_CollectActDesc(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectActDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->CollectActDesc,tolua_tostring(tolua_S,2,0),MON_COLLECT_DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BootyGroup of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMonsterDef_ToLua_BootyGroup
static int tolua_get_GameEngineTolua_tagMonsterDef_ToLua_BootyGroup(lua_State* tolua_S)
{
 int tolua_index;
  tagMonsterDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonsterDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MON_BOOTY_GROUP_LIST)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->BootyGroup[tolua_index],"tagAddMonBootyGroup_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BootyGroup of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMonsterDef_ToLua_BootyGroup
static int tolua_set_GameEngineTolua_tagMonsterDef_ToLua_BootyGroup(lua_State* tolua_S)
{
 int tolua_index;
  tagMonsterDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonsterDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MON_BOOTY_GROUP_LIST)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->BootyGroup[tolua_index] = *((tagAddMonBootyGroup_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ShowType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_ShowType
static int tolua_get_tagMonsterDef_ToLua_ShowType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ShowType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ShowType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ShowType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_ShowType
static int tolua_set_tagMonsterDef_ToLua_ShowType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ShowType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ShowType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BossType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_BossType
static int tolua_get_tagMonsterDef_ToLua_BossType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BossType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BossType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BossType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_BossType
static int tolua_set_tagMonsterDef_ToLua_BossType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BossType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BossType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Vig of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_Vig
static int tolua_get_tagMonsterDef_ToLua_Vig(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Vig'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Vig);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Vig of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_Vig
static int tolua_set_tagMonsterDef_ToLua_Vig(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Vig'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Vig = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DartCarType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_unsigned_DartCarType
static int tolua_get_tagMonsterDef_ToLua_unsigned_DartCarType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DartCarType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DartCarType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DartCarType of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_unsigned_DartCarType
static int tolua_set_tagMonsterDef_ToLua_unsigned_DartCarType(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DartCarType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DartCarType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GetRes of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_GetRes
static int tolua_get_tagMonsterDef_ToLua_GetRes(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GetRes'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GetRes);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GetRes of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_GetRes
static int tolua_set_tagMonsterDef_ToLua_GetRes(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GetRes'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GetRes = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ClanBooty of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_ClanBooty
static int tolua_get_tagMonsterDef_ToLua_ClanBooty(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ClanBooty'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ClanBooty);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ClanBooty of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_ClanBooty
static int tolua_set_tagMonsterDef_ToLua_ClanBooty(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ClanBooty'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ClanBooty = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Zhengyi of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_Zhengyi
static int tolua_get_tagMonsterDef_ToLua_Zhengyi(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Zhengyi'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Zhengyi);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Zhengyi of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_Zhengyi
static int tolua_set_tagMonsterDef_ToLua_Zhengyi(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Zhengyi'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Zhengyi = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IsJicheng of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_IsJicheng
static int tolua_get_tagMonsterDef_ToLua_IsJicheng(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsJicheng'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IsJicheng);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IsJicheng of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_IsJicheng
static int tolua_set_tagMonsterDef_ToLua_IsJicheng(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsJicheng'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IsJicheng = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ChengshuID of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonsterDef_ToLua_ChengshuID
static int tolua_get_tagMonsterDef_ToLua_ChengshuID(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ChengshuID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ChengshuID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ChengshuID of class  tagMonsterDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonsterDef_ToLua_ChengshuID
static int tolua_set_tagMonsterDef_ToLua_ChengshuID(lua_State* tolua_S)
{
  tagMonsterDef_ToLua* self = (tagMonsterDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ChengshuID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ChengshuID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ExpCount of class  tagLevelFengExpDec_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelFengExpDec_ToLua_ExpCount
static int tolua_get_tagLevelFengExpDec_ToLua_ExpCount(lua_State* tolua_S)
{
  tagLevelFengExpDec_ToLua* self = (tagLevelFengExpDec_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExpCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ExpCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ExpCount of class  tagLevelFengExpDec_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelFengExpDec_ToLua_ExpCount
static int tolua_set_tagLevelFengExpDec_ToLua_ExpCount(lua_State* tolua_S)
{
  tagLevelFengExpDec_ToLua* self = (tagLevelFengExpDec_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExpCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ExpCount = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ExpRate of class  tagLevelFengExpDec_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelFengExpDec_ToLua_ExpRate
static int tolua_get_tagLevelFengExpDec_ToLua_ExpRate(lua_State* tolua_S)
{
  tagLevelFengExpDec_ToLua* self = (tagLevelFengExpDec_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExpRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ExpRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ExpRate of class  tagLevelFengExpDec_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelFengExpDec_ToLua_ExpRate
static int tolua_set_tagLevelFengExpDec_ToLua_ExpRate(lua_State* tolua_S)
{
  tagLevelFengExpDec_ToLua* self = (tagLevelFengExpDec_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExpRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ExpRate = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagLevelFeng_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelFeng_ToLua_Level
static int tolua_get_tagLevelFeng_ToLua_Level(lua_State* tolua_S)
{
  tagLevelFeng_ToLua* self = (tagLevelFeng_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagLevelFeng_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelFeng_ToLua_Level
static int tolua_set_tagLevelFeng_ToLua_Level(lua_State* tolua_S)
{
  tagLevelFeng_ToLua* self = (tagLevelFeng_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LevelFengMax of class  tagLevelFeng_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelFeng_ToLua_LevelFengMax
static int tolua_get_tagLevelFeng_ToLua_LevelFengMax(lua_State* tolua_S)
{
  tagLevelFeng_ToLua* self = (tagLevelFeng_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelFengMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LevelFengMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LevelFengMax of class  tagLevelFeng_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelFeng_ToLua_LevelFengMax
static int tolua_set_tagLevelFeng_ToLua_LevelFengMax(lua_State* tolua_S)
{
  tagLevelFeng_ToLua* self = (tagLevelFeng_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelFengMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LevelFengMax = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LevelFengMin of class  tagLevelFeng_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelFeng_ToLua_LevelFengMin
static int tolua_get_tagLevelFeng_ToLua_LevelFengMin(lua_State* tolua_S)
{
  tagLevelFeng_ToLua* self = (tagLevelFeng_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelFengMin'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LevelFengMin);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LevelFengMin of class  tagLevelFeng_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelFeng_ToLua_LevelFengMin
static int tolua_set_tagLevelFeng_ToLua_LevelFengMin(lua_State* tolua_S)
{
  tagLevelFeng_ToLua* self = (tagLevelFeng_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelFengMin'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LevelFengMin = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LevelFengTimeDec of class  tagLevelFeng_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelFeng_ToLua_LevelFengTimeDec
static int tolua_get_tagLevelFeng_ToLua_LevelFengTimeDec(lua_State* tolua_S)
{
  tagLevelFeng_ToLua* self = (tagLevelFeng_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelFengTimeDec'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LevelFengTimeDec);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LevelFengTimeDec of class  tagLevelFeng_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelFeng_ToLua_LevelFengTimeDec
static int tolua_set_tagLevelFeng_ToLua_LevelFengTimeDec(lua_State* tolua_S)
{
  tagLevelFeng_ToLua* self = (tagLevelFeng_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelFengTimeDec'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LevelFengTimeDec = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ExpRateDec of class  tagLevelFeng_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagLevelFeng_ToLua_ExpRateDec
static int tolua_get_GameEngineTolua_tagLevelFeng_ToLua_ExpRateDec(lua_State* tolua_S)
{
 int tolua_index;
  tagLevelFeng_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagLevelFeng_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_LEV_FENG_EXPDEC)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->ExpRateDec[tolua_index],"tagLevelFengExpDec_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ExpRateDec of class  tagLevelFeng_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagLevelFeng_ToLua_ExpRateDec
static int tolua_set_GameEngineTolua_tagLevelFeng_ToLua_ExpRateDec(lua_State* tolua_S)
{
 int tolua_index;
  tagLevelFeng_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagLevelFeng_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_LEV_FENG_EXPDEC)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->ExpRateDec[tolua_index] = *((tagLevelFengExpDec_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CategoryID of class  tagAchievementCategoryDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementCategoryDef_ToLua_CategoryID
static int tolua_get_tagAchievementCategoryDef_ToLua_CategoryID(lua_State* tolua_S)
{
  tagAchievementCategoryDef_ToLua* self = (tagAchievementCategoryDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CategoryID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CategoryID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CategoryID of class  tagAchievementCategoryDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementCategoryDef_ToLua_CategoryID
static int tolua_set_tagAchievementCategoryDef_ToLua_CategoryID(lua_State* tolua_S)
{
  tagAchievementCategoryDef_ToLua* self = (tagAchievementCategoryDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CategoryID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CategoryID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Icon of class  tagAchievementCategoryDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementCategoryDef_ToLua_Icon
static int tolua_get_tagAchievementCategoryDef_ToLua_Icon(lua_State* tolua_S)
{
  tagAchievementCategoryDef_ToLua* self = (tagAchievementCategoryDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Icon'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Icon);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Icon of class  tagAchievementCategoryDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementCategoryDef_ToLua_Icon
static int tolua_set_tagAchievementCategoryDef_ToLua_Icon(lua_State* tolua_S)
{
  tagAchievementCategoryDef_ToLua* self = (tagAchievementCategoryDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Icon'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Icon = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  tagAchievementCategoryDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementCategoryDef_ToLua_Name
static int tolua_get_tagAchievementCategoryDef_ToLua_Name(lua_State* tolua_S)
{
  tagAchievementCategoryDef_ToLua* self = (tagAchievementCategoryDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  tagAchievementCategoryDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementCategoryDef_ToLua_Name
static int tolua_set_tagAchievementCategoryDef_ToLua_Name(lua_State* tolua_S)
{
  tagAchievementCategoryDef_ToLua* self = (tagAchievementCategoryDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Name,tolua_tostring(tolua_S,2,0),ROLE_NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagAchievementCategoryDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementCategoryDef_ToLua_Level
static int tolua_get_tagAchievementCategoryDef_ToLua_Level(lua_State* tolua_S)
{
  tagAchievementCategoryDef_ToLua* self = (tagAchievementCategoryDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagAchievementCategoryDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementCategoryDef_ToLua_Level
static int tolua_set_tagAchievementCategoryDef_ToLua_Level(lua_State* tolua_S)
{
  tagAchievementCategoryDef_ToLua* self = (tagAchievementCategoryDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NextLevel of class  tagAchievementCategoryDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementCategoryDef_ToLua_NextLevel
static int tolua_get_tagAchievementCategoryDef_ToLua_NextLevel(lua_State* tolua_S)
{
  tagAchievementCategoryDef_ToLua* self = (tagAchievementCategoryDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NextLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NextLevel of class  tagAchievementCategoryDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementCategoryDef_ToLua_NextLevel
static int tolua_set_tagAchievementCategoryDef_ToLua_NextLevel(lua_State* tolua_S)
{
  tagAchievementCategoryDef_ToLua* self = (tagAchievementCategoryDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NextLevel = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AchievementID of class  tagAchievementCategoryDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagAchievementCategoryDef_ToLua_AchievementID
static int tolua_get_GameEngineTolua_tagAchievementCategoryDef_ToLua_AchievementID(lua_State* tolua_S)
{
 int tolua_index;
  tagAchievementCategoryDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagAchievementCategoryDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_CATEGORY_ACHIEVEMENT_TOLUA)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->AchievementID[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AchievementID of class  tagAchievementCategoryDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagAchievementCategoryDef_ToLua_AchievementID
static int tolua_set_GameEngineTolua_tagAchievementCategoryDef_ToLua_AchievementID(lua_State* tolua_S)
{
 int tolua_index;
  tagAchievementCategoryDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagAchievementCategoryDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_CATEGORY_ACHIEVEMENT_TOLUA)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->AchievementID[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Des of class  tagAchievementCond_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementCond_ToLua_Des
static int tolua_get_tagAchievementCond_ToLua_Des(lua_State* tolua_S)
{
  tagAchievementCond_ToLua* self = (tagAchievementCond_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Des'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Des);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Des of class  tagAchievementCond_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementCond_ToLua_Des
static int tolua_set_tagAchievementCond_ToLua_Des(lua_State* tolua_S)
{
  tagAchievementCond_ToLua* self = (tagAchievementCond_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Des'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Des,tolua_tostring(tolua_S,2,0),ACHIEVEMENT_COND_DES_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Type of class  tagAchievementCond_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementCond_ToLua_Type
static int tolua_get_tagAchievementCond_ToLua_Type(lua_State* tolua_S)
{
  tagAchievementCond_ToLua* self = (tagAchievementCond_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Type of class  tagAchievementCond_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementCond_ToLua_Type
static int tolua_set_tagAchievementCond_ToLua_Type(lua_State* tolua_S)
{
  tagAchievementCond_ToLua* self = (tagAchievementCond_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Type = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Val1 of class  tagAchievementCond_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementCond_ToLua_Val1
static int tolua_get_tagAchievementCond_ToLua_Val1(lua_State* tolua_S)
{
  tagAchievementCond_ToLua* self = (tagAchievementCond_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Val1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Val1 of class  tagAchievementCond_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementCond_ToLua_Val1
static int tolua_set_tagAchievementCond_ToLua_Val1(lua_State* tolua_S)
{
  tagAchievementCond_ToLua* self = (tagAchievementCond_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Val1 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Val2 of class  tagAchievementCond_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementCond_ToLua_Val2
static int tolua_get_tagAchievementCond_ToLua_Val2(lua_State* tolua_S)
{
  tagAchievementCond_ToLua* self = (tagAchievementCond_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Val2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Val2 of class  tagAchievementCond_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementCond_ToLua_Val2
static int tolua_set_tagAchievementCond_ToLua_Val2(lua_State* tolua_S)
{
  tagAchievementCond_ToLua* self = (tagAchievementCond_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Val2 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Val3 of class  tagAchievementCond_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementCond_ToLua_Val3
static int tolua_get_tagAchievementCond_ToLua_Val3(lua_State* tolua_S)
{
  tagAchievementCond_ToLua* self = (tagAchievementCond_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Val3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Val3 of class  tagAchievementCond_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementCond_ToLua_Val3
static int tolua_set_tagAchievementCond_ToLua_Val3(lua_State* tolua_S)
{
  tagAchievementCond_ToLua* self = (tagAchievementCond_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Val3 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AchievementID of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementDef_ToLua_AchievementID
static int tolua_get_tagAchievementDef_ToLua_AchievementID(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AchievementID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AchievementID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AchievementID of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementDef_ToLua_AchievementID
static int tolua_set_tagAchievementDef_ToLua_AchievementID(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AchievementID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AchievementID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CategoryID of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementDef_ToLua_CategoryID
static int tolua_get_tagAchievementDef_ToLua_CategoryID(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CategoryID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CategoryID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CategoryID of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementDef_ToLua_CategoryID
static int tolua_set_tagAchievementDef_ToLua_CategoryID(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CategoryID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CategoryID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Icon of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementDef_ToLua_Icon
static int tolua_get_tagAchievementDef_ToLua_Icon(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Icon'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Icon);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Icon of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementDef_ToLua_Icon
static int tolua_set_tagAchievementDef_ToLua_Icon(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Icon'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Icon = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IconRate of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementDef_ToLua_IconRate
static int tolua_get_tagAchievementDef_ToLua_IconRate(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IconRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IconRate of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementDef_ToLua_IconRate
static int tolua_set_tagAchievementDef_ToLua_IconRate(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IconRate = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementDef_ToLua_Name
static int tolua_get_tagAchievementDef_ToLua_Name(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementDef_ToLua_Name
static int tolua_set_tagAchievementDef_ToLua_Name(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Name,tolua_tostring(tolua_S,2,0),64-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Cond of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementDef_ToLua_Cond
static int tolua_get_tagAchievementDef_ToLua_Cond(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Cond'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Cond,"tagAchievementCond_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Cond of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementDef_ToLua_Cond
static int tolua_set_tagAchievementDef_ToLua_Cond(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Cond'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagAchievementCond_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Cond = *((tagAchievementCond_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Result of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementDef_ToLua_Result
static int tolua_get_tagAchievementDef_ToLua_Result(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Result'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Result,"tagResult_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Result of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementDef_ToLua_Result
static int tolua_set_tagAchievementDef_ToLua_Result(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Result'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagResult_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Result = *((tagResult_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GuideDes of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAchievementDef_ToLua_GuideDes
static int tolua_get_tagAchievementDef_ToLua_GuideDes(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GuideDes'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->GuideDes);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GuideDes of class  tagAchievementDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAchievementDef_ToLua_GuideDes
static int tolua_set_tagAchievementDef_ToLua_GuideDes(lua_State* tolua_S)
{
  tagAchievementDef_ToLua* self = (tagAchievementDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GuideDes'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->GuideDes,tolua_tostring(tolua_S,2,0),ACHIEVEMENT_GUIDE_DES_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: GetNpcDisplayInfo */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GetNpcDisplayInfo00
static int tolua_GameEngineTolua_GetNpcDisplayInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagNpcDisplayInfo_ToLua& tolua_ret = (const tagNpcDisplayInfo_ToLua&)  GetNpcDisplayInfo(id);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagNpcDisplayInfo_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNpcDisplayInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getLevelUP */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getLevelUP00
static int tolua_GameEngineTolua_getLevelUP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int lv = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagLevelUP_ToLua* tolua_ret = (const tagLevelUP_ToLua*)  getLevelUP(lv);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagLevelUP_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLevelUP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getPlayerDisplayId */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getPlayerDisplayId00
static int tolua_GameEngineTolua_getPlayerDisplayId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int gender = ((int)  tolua_tonumber(tolua_S,1,0));
  int race = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  getPlayerDisplayId(gender,race);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerDisplayId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getLevelFeng */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getLevelFeng00
static int tolua_GameEngineTolua_getLevelFeng00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int lv = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagLevelFeng_ToLua* tolua_ret = (const tagLevelFeng_ToLua*)  getLevelFeng(lv);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagLevelFeng_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLevelFeng'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getMonsterDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getMonsterDef00
static int tolua_GameEngineTolua_getMonsterDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagMonsterDef_ToLua* tolua_ret = (const tagMonsterDef_ToLua*)  getMonsterDef(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagMonsterDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nPosX of class  tagPlayerPosInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagPlayerPosInfo_m_nPosX
static int tolua_get_tagPlayerPosInfo_m_nPosX(lua_State* tolua_S)
{
  tagPlayerPosInfo* self = (tagPlayerPosInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nPosX'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nPosX);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nPosX of class  tagPlayerPosInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagPlayerPosInfo_m_nPosX
static int tolua_set_tagPlayerPosInfo_m_nPosX(lua_State* tolua_S)
{
  tagPlayerPosInfo* self = (tagPlayerPosInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nPosX'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nPosX = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nPosZ of class  tagPlayerPosInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagPlayerPosInfo_m_nPosZ
static int tolua_get_tagPlayerPosInfo_m_nPosZ(lua_State* tolua_S)
{
  tagPlayerPosInfo* self = (tagPlayerPosInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nPosZ'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nPosZ);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nPosZ of class  tagPlayerPosInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagPlayerPosInfo_m_nPosZ
static int tolua_set_tagPlayerPosInfo_m_nPosZ(lua_State* tolua_S)
{
  tagPlayerPosInfo* self = (tagPlayerPosInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nPosZ'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nPosZ = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: GetModePathById */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GetModePathById00
static int tolua_GameEngineTolua_GetModePathById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nModelId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const char* tolua_ret = (const char*)  GetModePathById(nModelId);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetModePathById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: GetSocketPathById */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GetSocketPathById00
static int tolua_GameEngineTolua_GetSocketPathById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nModelId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const char* tolua_ret = (const char*)  GetSocketPathById(nModelId);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSocketPathById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nID of class  tagPetDiathesisData_ToTua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDiathesisData_ToTua_m_nID
static int tolua_get_tagPetDiathesisData_ToTua_m_nID(lua_State* tolua_S)
{
  tagPetDiathesisData_ToTua* self = (tagPetDiathesisData_ToTua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nID of class  tagPetDiathesisData_ToTua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDiathesisData_ToTua_m_nID
static int tolua_set_tagPetDiathesisData_ToTua_m_nID(lua_State* tolua_S)
{
  tagPetDiathesisData_ToTua* self = (tagPetDiathesisData_ToTua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nLevel of class  tagPetDiathesisData_ToTua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDiathesisData_ToTua_m_nLevel
static int tolua_get_tagPetDiathesisData_ToTua_m_nLevel(lua_State* tolua_S)
{
  tagPetDiathesisData_ToTua* self = (tagPetDiathesisData_ToTua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nLevel of class  tagPetDiathesisData_ToTua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDiathesisData_ToTua_m_nLevel
static int tolua_set_tagPetDiathesisData_ToTua_m_nLevel(lua_State* tolua_S)
{
  tagPetDiathesisData_ToTua* self = (tagPetDiathesisData_ToTua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nLevel = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nFightMode of class  tagPetDiathesis_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDiathesis_ToLua_m_nFightMode
static int tolua_get_tagPetDiathesis_ToLua_m_nFightMode(lua_State* tolua_S)
{
  tagPetDiathesis_ToLua* self = (tagPetDiathesis_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nFightMode'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nFightMode);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nFightMode of class  tagPetDiathesis_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDiathesis_ToLua_m_nFightMode
static int tolua_set_tagPetDiathesis_ToLua_m_nFightMode(lua_State* tolua_S)
{
  tagPetDiathesis_ToLua* self = (tagPetDiathesis_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nFightMode'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nFightMode = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_diathesisData of class  tagPetDiathesis_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagPetDiathesis_ToLua_m_diathesisData
static int tolua_get_GameEngineTolua_tagPetDiathesis_ToLua_m_diathesisData(lua_State* tolua_S)
{
 int tolua_index;
  tagPetDiathesis_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetDiathesis_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_SKILL_GRID)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->m_diathesisData[tolua_index],"tagPetDiathesisData_ToTua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_diathesisData of class  tagPetDiathesis_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagPetDiathesis_ToLua_m_diathesisData
static int tolua_set_GameEngineTolua_tagPetDiathesis_ToLua_m_diathesisData(lua_State* tolua_S)
{
 int tolua_index;
  tagPetDiathesis_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetDiathesis_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_SKILL_GRID)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_diathesisData[tolua_index] = *((tagPetDiathesisData_ToTua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nNum of class  tagPetDiathesis_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDiathesis_ToLua_m_nNum
static int tolua_get_tagPetDiathesis_ToLua_m_nNum(lua_State* tolua_S)
{
  tagPetDiathesis_ToLua* self = (tagPetDiathesis_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nNum of class  tagPetDiathesis_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDiathesis_ToLua_m_nNum
static int tolua_set_tagPetDiathesis_ToLua_m_nNum(lua_State* tolua_S)
{
  tagPetDiathesis_ToLua* self = (tagPetDiathesis_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DynValueNum of class  tagNetBarInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNetBarInfo_ToLua_DynValueNum
static int tolua_get_tagNetBarInfo_ToLua_DynValueNum(lua_State* tolua_S)
{
  tagNetBarInfo_ToLua* self = (tagNetBarInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DynValueNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DynValueNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DynValueNum of class  tagNetBarInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNetBarInfo_ToLua_DynValueNum
static int tolua_set_tagNetBarInfo_ToLua_DynValueNum(lua_State* tolua_S)
{
  tagNetBarInfo_ToLua* self = (tagNetBarInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DynValueNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DynValueNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DynValue of class  tagNetBarInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagNetBarInfo_ToLua_DynValue
static int tolua_get_GameEngineTolua_tagNetBarInfo_ToLua_DynValue(lua_State* tolua_S)
{
 int tolua_index;
  tagNetBarInfo_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagNetBarInfo_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_FAKE_STATUS_DYN_VALUE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->DynValue[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DynValue of class  tagNetBarInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagNetBarInfo_ToLua_DynValue
static int tolua_set_GameEngineTolua_tagNetBarInfo_ToLua_DynValue(lua_State* tolua_S)
{
 int tolua_index;
  tagNetBarInfo_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagNetBarInfo_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_FAKE_STATUS_DYN_VALUE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->DynValue[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: logPrivateInfo */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_logPrivateInfo00
static int tolua_GameEngineTolua_logPrivateInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pMessage = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   logPrivateInfo(pMessage);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'logPrivateInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setType of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_setType00
static int tolua_GameEngineTolua_GameActor_setType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int type = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setType'",NULL);
#endif
  {
   self->setType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSubType of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_setSubType00
static int tolua_GameEngineTolua_GameActor_setSubType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int nSubType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSubType'",NULL);
#endif
  {
   self->setSubType(nSubType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSubType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: breakBTypePre of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_breakBTypePre00
static int tolua_GameEngineTolua_GameActor_breakBTypePre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'breakBTypePre'",NULL);
#endif
  {
   self->breakBTypePre();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'breakBTypePre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTeamColor of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_setTeamColor00
static int tolua_GameEngineTolua_GameActor_setTeamColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int r = ((int)  tolua_tonumber(tolua_S,2,0));
  int g = ((int)  tolua_tonumber(tolua_S,3,0));
  int b = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTeamColor'",NULL);
#endif
  {
   self->setTeamColor(r,g,b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTeamColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasOtherBooty of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_hasOtherBooty00
static int tolua_GameEngineTolua_GameActor_hasOtherBooty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasOtherBooty'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasOtherBooty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasOtherBooty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPosition of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_SetPosition00
static int tolua_GameEngineTolua_GameActor_SetPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
  int height = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPosition'",NULL);
#endif
  {
   self->SetPosition(x,z,height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPosition of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_GetPosition00
static int tolua_GameEngineTolua_GameActor_GetPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPosition'",NULL);
#endif
  {
   GameXYZ tolua_ret = (GameXYZ)  self->GetPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new GameXYZ(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"GameXYZ");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(GameXYZ));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"GameXYZ");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hide of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_hide00
static int tolua_GameEngineTolua_GameActor_hide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  bool b = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hide'",NULL);
#endif
  {
   self->hide(b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isShow of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isShow00
static int tolua_GameEngineTolua_GameActor_isShow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isShow'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isShow();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isShow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetShow of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_SetShow00
static int tolua_GameEngineTolua_GameActor_SetShow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  bool tshow = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetShow'",NULL);
#endif
  {
   self->SetShow(tshow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetShow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: needAddButtonName of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_needAddButtonName00
static int tolua_GameEngineTolua_GameActor_needAddButtonName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'needAddButtonName'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->needAddButtonName();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'needAddButtonName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCollectInfo of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_setCollectInfo00
static int tolua_GameEngineTolua_GameActor_setCollectInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int nRace = ((int)  tolua_tonumber(tolua_S,2,0));
  bool bEnable = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCollectInfo'",NULL);
#endif
  {
   self->setCollectInfo(nRace,bEnable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCollectInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enableCollect of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_enableCollect00
static int tolua_GameEngineTolua_GameActor_enableCollect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  bool bEnable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'enableCollect'",NULL);
#endif
  {
   self->enableCollect(bEnable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enableCollect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canCollect of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_canCollect00
static int tolua_GameEngineTolua_GameActor_canCollect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canCollect'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canCollect();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canCollect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPetFightMode of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_setPetFightMode00
static int tolua_GameEngineTolua_GameActor_setPetFightMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int nFightMode = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPetFightMode'",NULL);
#endif
  {
   self->setPetFightMode(nFightMode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPetFightMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetFightMode of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getPetFightMode00
static int tolua_GameEngineTolua_GameActor_getPetFightMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetFightMode'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetFightMode();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetFightMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCatchPet of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_GetCatchPet00
static int tolua_GameEngineTolua_GameActor_GetCatchPet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCatchPet'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCatchPet();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCatchPet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerX of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getPlayerX00
static int tolua_GameEngineTolua_GameActor_getPlayerX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerX'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPlayerX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerZ of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getPlayerZ00
static int tolua_GameEngineTolua_GameActor_getPlayerZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerZ'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPlayerZ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMapId of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getMapId00
static int tolua_GameEngineTolua_GameActor_getMapId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMapId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getMapId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMapId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMapRealId of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getMapRealId00
static int tolua_GameEngineTolua_GameActor_getMapRealId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMapRealId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getMapRealId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMapRealId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDead of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isDead00
static int tolua_GameEngineTolua_GameActor_isDead00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDead'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDead();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDead'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInStall of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isInStall00
static int tolua_GameEngineTolua_GameActor_isInStall00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInStall'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInStall();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInStall'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInFly of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isInFly00
static int tolua_GameEngineTolua_GameActor_isInFly00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInFly'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInFly();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInFly'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInMove of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isInMove00
static int tolua_GameEngineTolua_GameActor_isInMove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInMove'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInMove();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInMove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInFight of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isInFight00
static int tolua_GameEngineTolua_GameActor_isInFight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInFight'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInFight();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInFight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInStand of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isInStand00
static int tolua_GameEngineTolua_GameActor_isInStand00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInStand'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInStand();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInStand'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInRide of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isInRide00
static int tolua_GameEngineTolua_GameActor_isInRide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInRide'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInRide();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInRide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInMorph of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isInMorph00
static int tolua_GameEngineTolua_GameActor_isInMorph00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInMorph'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInMorph();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInMorph'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInScene of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isInScene00
static int tolua_GameEngineTolua_GameActor_isInScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInScene'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInScene();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInMap of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isInMap00
static int tolua_GameEngineTolua_GameActor_isInMap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInMap'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInMap();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInMap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsInSpecialPworldNotShowTitle of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_IsInSpecialPworldNotShowTitle00
static int tolua_GameEngineTolua_GameActor_IsInSpecialPworldNotShowTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsInSpecialPworldNotShowTitle'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsInSpecialPworldNotShowTitle();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsInSpecialPworldNotShowTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RawSetSelectTarget of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_RawSetSelectTarget00
static int tolua_GameEngineTolua_GameActor_RawSetSelectTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int nTargetId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RawSetSelectTarget'",NULL);
#endif
  {
   self->RawSetSelectTarget(nTargetId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RawSetSelectTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canSelectTarget of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_canSelectTarget00
static int tolua_GameEngineTolua_GameActor_canSelectTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pTarget = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canSelectTarget'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canSelectTarget(pTarget);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canSelectTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSelectTarget of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_SetSelectTarget00
static int tolua_GameEngineTolua_GameActor_SetSelectTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int nTargetId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSelectTarget'",NULL);
#endif
  {
   self->SetSelectTarget(nTargetId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSelectTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateTargetDrawTitle of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_UpdateTargetDrawTitle00
static int tolua_GameEngineTolua_GameActor_UpdateTargetDrawTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int nTargetID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UpdateTargetDrawTitle'",NULL);
#endif
  {
   self->UpdateTargetDrawTitle(nTargetID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UpdateTargetDrawTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetModePathById of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_GetModePathById00
static int tolua_GameEngineTolua_GameActor_GetModePathById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int nModelId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetModePathById'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->GetModePathById(nModelId);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetModePathById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIconId of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getIconId00
static int tolua_GameEngineTolua_GameActor_getIconId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIconId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getIconId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIconId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTargetID of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_GetTargetID00
static int tolua_GameEngineTolua_GameActor_GetTargetID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTargetID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetTargetID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTargetID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetID of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_GetID00
static int tolua_GameEngineTolua_GameActor_GetID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMorphResID of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_GetMorphResID00
static int tolua_GameEngineTolua_GameActor_GetMorphResID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMorphResID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetMorphResID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMorphResID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAtkType of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getAtkType00
static int tolua_GameEngineTolua_GameActor_getAtkType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAtkType'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getAtkType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAtkType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSubType of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getSubType00
static int tolua_GameEngineTolua_GameActor_getSubType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSubType'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSubType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSubType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getResId of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getResId00
static int tolua_GameEngineTolua_GameActor_getResId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getResId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getResId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getResId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRealId of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getRealId00
static int tolua_GameEngineTolua_GameActor_getRealId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRealId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getRealId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRealId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRealId of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_setRealId00
static int tolua_GameEngineTolua_GameActor_setRealId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int realid = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRealId'",NULL);
#endif
  {
   self->setRealId(realid);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRealId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSelectTarget of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_GetSelectTarget00
static int tolua_GameEngineTolua_GameActor_GetSelectTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSelectTarget'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetSelectTarget();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSelectTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAngle of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getAngle00
static int tolua_GameEngineTolua_GameActor_getAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAngle'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getAngle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpeed of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getSpeed00
static int tolua_GameEngineTolua_GameActor_getSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpeed'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: BuildTitle of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_BuildTitle00
static int tolua_GameEngineTolua_GameActor_BuildTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BuildTitle'",NULL);
#endif
  {
   self->BuildTitle();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BuildTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBufStatus of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getBufStatus00
static int tolua_GameEngineTolua_GameActor_getBufStatus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBufStatus'",NULL);
#endif
  {
   GameBufStatus* tolua_ret = (GameBufStatus*)  self->getBufStatus();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameBufStatus");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBufStatus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRider of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getRider00
static int tolua_GameEngineTolua_GameActor_getRider00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRider'",NULL);
#endif
  {
   Rider* tolua_ret = (Rider*)  self->getRider();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"Rider");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRider'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpecialMove of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getSpecialMove00
static int tolua_GameEngineTolua_GameActor_getSpecialMove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpecialMove'",NULL);
#endif
  {
   SpecialMove* tolua_ret = (SpecialMove*)  self->getSpecialMove();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"SpecialMove");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpecialMove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playMotion of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_playMotion00
static int tolua_GameEngineTolua_GameActor_playMotion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  const char* szEffect = ((const char*)  tolua_tostring(tolua_S,2,0));
  bool bResetPlay = ((bool)  tolua_toboolean(tolua_S,3,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playMotion'",NULL);
#endif
  {
   self->playMotion(szEffect,bResetPlay);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playMotion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stopMotion of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_stopMotion00
static int tolua_GameEngineTolua_GameActor_stopMotion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  const char* szEffect = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stopMotion'",NULL);
#endif
  {
   self->stopMotion(szEffect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stopMotion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playMotion of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_playMotion01
static int tolua_GameEngineTolua_GameActor_playMotion01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  const char* szEffect = ((const char*)  tolua_tostring(tolua_S,2,0));
  int motionclass = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playMotion'",NULL);
#endif
  {
   self->playMotion(szEffect,motionclass);
  }
 }
 return 0;
tolua_lerror:
 return tolua_GameEngineTolua_GameActor_playMotion00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: isMotionPlaying of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isMotionPlaying00
static int tolua_GameEngineTolua_GameActor_isMotionPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  const char* szEffect = ((const char*)  tolua_tostring(tolua_S,2,0));
  int motionclass = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isMotionPlaying'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isMotionPlaying(szEffect,motionclass);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isMotionPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playAction of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_playAction00
static int tolua_GameEngineTolua_GameActor_playAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int actId = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* szEffect = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playAction'",NULL);
#endif
  {
   self->playAction(actId,szEffect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNpcQuestShow of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getNpcQuestShow00
static int tolua_GameEngineTolua_GameActor_getNpcQuestShow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNpcQuestShow'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getNpcQuestShow();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNpcQuestShow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerPostion of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getPlayerPostion00
static int tolua_GameEngineTolua_GameActor_getPlayerPostion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerPostion'",NULL);
#endif
  {
   tagPlayerPosInfo& tolua_ret = (tagPlayerPosInfo&)  self->getPlayerPostion();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"tagPlayerPosInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerPostion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPet of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getPet00
static int tolua_GameEngineTolua_GameActor_getPet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPet'",NULL);
#endif
  {
   GamePet* tolua_ret = (GamePet*)  self->getPet();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GamePet");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getQiYue of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getQiYue00
static int tolua_GameEngineTolua_GameActor_getQiYue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getQiYue'",NULL);
#endif
  {
   GameQiYue& tolua_ret = (GameQiYue&)  self->getQiYue();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"GameQiYue");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getQiYue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTrump of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getTrump00
static int tolua_GameEngineTolua_GameActor_getTrump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTrump'",NULL);
#endif
  {
   GameTrump* tolua_ret = (GameTrump*)  self->getTrump();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameTrump");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTrump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCBTInfo of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getCBTInfo00
static int tolua_GameEngineTolua_GameActor_getCBTInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCBTInfo'",NULL);
#endif
  {
   GameCBT& tolua_ret = (GameCBT&)  self->getCBTInfo();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"GameCBT");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCBTInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPrepareSkill of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getPrepareSkill00
static int tolua_GameEngineTolua_GameActor_getPrepareSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPrepareSkill'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPrepareSkill();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPrepareSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPrepareTime of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getPrepareTime00
static int tolua_GameEngineTolua_GameActor_getPrepareTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPrepareTime'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPrepareTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPrepareTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTotalPrepareTime of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getTotalPrepareTime00
static int tolua_GameEngineTolua_GameActor_getTotalPrepareTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTotalPrepareTime'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getTotalPrepareTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTotalPrepareTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cancelWeiXing of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_cancelWeiXing00
static int tolua_GameEngineTolua_GameActor_cancelWeiXing00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cancelWeiXing'",NULL);
#endif
  {
   self->cancelWeiXing();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cancelWeiXing'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetDiathesis of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getPetDiathesis00
static int tolua_GameEngineTolua_GameActor_getPetDiathesis00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetDiathesis'",NULL);
#endif
  {
   tagPetDiathesis_ToLua& tolua_ret = (tagPetDiathesis_ToLua&)  self->getPetDiathesis();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"tagPetDiathesis_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetDiathesis'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startGray of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_startGray00
static int tolua_GameEngineTolua_GameActor_startGray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startGray'",NULL);
#endif
  {
   self->startGray();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startGray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stopGray of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_stopGray00
static int tolua_GameEngineTolua_GameActor_stopGray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stopGray'",NULL);
#endif
  {
   self->stopGray();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stopGray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCollectSlotMax of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getCollectSlotMax00
static int tolua_GameEngineTolua_GameActor_getCollectSlotMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCollectSlotMax'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCollectSlotMax();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCollectSlotMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCollectSlotCurr of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getCollectSlotCurr00
static int tolua_GameEngineTolua_GameActor_getCollectSlotCurr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCollectSlotCurr'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCollectSlotCurr();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCollectSlotCurr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCollectSlotType of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getCollectSlotType00
static int tolua_GameEngineTolua_GameActor_getCollectSlotType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCollectSlotType'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCollectSlotType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCollectSlotType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canPlayChatAction of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_canPlayChatAction00
static int tolua_GameEngineTolua_GameActor_canPlayChatAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canPlayChatAction'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canPlayChatAction();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canPlayChatAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playChatAction of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_playChatAction00
static int tolua_GameEngineTolua_GameActor_playChatAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int actionID = ((int)  tolua_tonumber(tolua_S,2,0));
  bool bReset = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playChatAction'",NULL);
#endif
  {
   self->playChatAction(actionID,bReset);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playChatAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMonsterMachine of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getMonsterMachine00
static int tolua_GameEngineTolua_GameActor_getMonsterMachine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMonsterMachine'",NULL);
#endif
  {
   MonsterMachine* tolua_ret = (MonsterMachine*)  self->getMonsterMachine();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"MonsterMachine");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterMachine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isOnMonsterMachine of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isOnMonsterMachine00
static int tolua_GameEngineTolua_GameActor_isOnMonsterMachine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isOnMonsterMachine'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isOnMonsterMachine();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isOnMonsterMachine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInCarry of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isInCarry00
static int tolua_GameEngineTolua_GameActor_isInCarry00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInCarry'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInCarry();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInCarry'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInSafeOverlay of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isInSafeOverlay00
static int tolua_GameEngineTolua_GameActor_isInSafeOverlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInSafeOverlay'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInSafeOverlay();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInSafeOverlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetGenius of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getPetGenius00
static int tolua_GameEngineTolua_GameActor_getPetGenius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetGenius'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetGenius();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetGenius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetGeniusId of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getPetGeniusId00
static int tolua_GameEngineTolua_GameActor_getPetGeniusId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetGeniusId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetGeniusId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetGeniusId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetGeniusLv of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getPetGeniusLv00
static int tolua_GameEngineTolua_GameActor_getPetGeniusLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetGeniusLv'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetGeniusLv();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetGeniusLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isRollItem of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isRollItem00
static int tolua_GameEngineTolua_GameActor_isRollItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isRollItem'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isRollItem();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isRollItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isNeedShowSafeAreaBuf of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isNeedShowSafeAreaBuf00
static int tolua_GameEngineTolua_GameActor_isNeedShowSafeAreaBuf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isNeedShowSafeAreaBuf'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isNeedShowSafeAreaBuf();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isNeedShowSafeAreaBuf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurActionId of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getCurActionId00
static int tolua_GameEngineTolua_GameActor_getCurActionId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurActionId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCurActionId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurActionId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addPopWindow of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_addPopWindow00
static int tolua_GameEngineTolua_GameActor_addPopWindow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  const char* szText = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addPopWindow'",NULL);
#endif
  {
   self->addPopWindow(szText);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addPopWindow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isAFK of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isAFK00
static int tolua_GameEngineTolua_GameActor_isAFK00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isAFK'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isAFK();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isAFK'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isShowHead of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isShowHead00
static int tolua_GameEngineTolua_GameActor_isShowHead00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isShowHead'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isShowHead();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isShowHead'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isShowFashion of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isShowFashion00
static int tolua_GameEngineTolua_GameActor_isShowFashion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isShowFashion'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isShowFashion();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isShowFashion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isShowBack of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isShowBack00
static int tolua_GameEngineTolua_GameActor_isShowBack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isShowBack'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isShowBack();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isShowBack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isShowFace of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isShowFace00
static int tolua_GameEngineTolua_GameActor_isShowFace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isShowFace'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isShowFace();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isShowFace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isShowLove of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isShowLove00
static int tolua_GameEngineTolua_GameActor_isShowLove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isShowLove'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isShowLove();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isShowLove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHitTargetID of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_setHitTargetID00
static int tolua_GameEngineTolua_GameActor_setHitTargetID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int nTargetID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHitTargetID'",NULL);
#endif
  {
   self->setHitTargetID(nTargetID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHitTargetID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHitTargetID of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getHitTargetID00
static int tolua_GameEngineTolua_GameActor_getHitTargetID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHitTargetID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getHitTargetID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHitTargetID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canPickUp of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_canPickUp00
static int tolua_GameEngineTolua_GameActor_canPickUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canPickUp'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canPickUp();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canPickUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getServerId of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getServerId00
static int tolua_GameEngineTolua_GameActor_getServerId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getServerId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getServerId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getServerId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNetBarInfo of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getNetBarInfo00
static int tolua_GameEngineTolua_GameActor_getNetBarInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNetBarInfo'",NULL);
#endif
  {
   tagNetBarInfo_ToLua* tolua_ret = (tagNetBarInfo_ToLua*)  self->getNetBarInfo();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagNetBarInfo_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNetBarInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPickItem of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isPickItem00
static int tolua_GameEngineTolua_GameActor_isPickItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPickItem'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPickItem();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPickItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAchievementDef of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getAchievementDef00
static int tolua_GameEngineTolua_GameActor_getAchievementDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int achievementId = ((int)  tolua_tonumber(tolua_S,2,0));
  int categoryId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAchievementDef'",NULL);
#endif
  {
   tagAchievementDef_ToLua* tolua_ret = (tagAchievementDef_ToLua*)  self->getAchievementDef(achievementId,categoryId);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagAchievementDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAchievementDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAchievementCategoryDef of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getAchievementCategoryDef00
static int tolua_GameEngineTolua_GameActor_getAchievementCategoryDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int categoryId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAchievementCategoryDef'",NULL);
#endif
  {
   tagAchievementCategoryDef_ToLua* tolua_ret = (tagAchievementCategoryDef_ToLua*)  self->getAchievementCategoryDef(categoryId);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagAchievementCategoryDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAchievementCategoryDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextureByID of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_setTextureByID00
static int tolua_GameEngineTolua_GameActor_setTextureByID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* szPath = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextureByID'",NULL);
#endif
  {
   self->setTextureByID(id,szPath);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextureByID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWanMeiStarNum of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getWanMeiStarNum00
static int tolua_GameEngineTolua_GameActor_getWanMeiStarNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWanMeiStarNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getWanMeiStarNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWanMeiStarNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMonsterPhysicType of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getMonsterPhysicType00
static int tolua_GameEngineTolua_GameActor_getMonsterPhysicType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMonsterPhysicType'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getMonsterPhysicType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterPhysicType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isCollectMachine of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_isCollectMachine00
static int tolua_GameEngineTolua_GameActor_isCollectMachine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isCollectMachine'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isCollectMachine();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCollectMachine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActorWorldName of class  GameActor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_getActorWorldName00
static int tolua_GameEngineTolua_GameActor_getActorWorldName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor* self = (GameActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActorWorldName'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getActorWorldName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorWorldName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillID of class  tagBindSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBindSkill_ToLua_unsigned_SkillID
static int tolua_get_tagBindSkill_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagBindSkill_ToLua* self = (tagBindSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillID of class  tagBindSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBindSkill_ToLua_unsigned_SkillID
static int tolua_set_tagBindSkill_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagBindSkill_ToLua* self = (tagBindSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagBindSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBindSkill_ToLua_unsigned_Level
static int tolua_get_tagBindSkill_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagBindSkill_ToLua* self = (tagBindSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagBindSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBindSkill_ToLua_unsigned_Level
static int tolua_set_tagBindSkill_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagBindSkill_ToLua* self = (tagBindSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Trig of class  tagBindSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBindSkill_ToLua_unsigned_Trig
static int tolua_get_tagBindSkill_ToLua_unsigned_Trig(lua_State* tolua_S)
{
  tagBindSkill_ToLua* self = (tagBindSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Trig'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Trig);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Trig of class  tagBindSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBindSkill_ToLua_unsigned_Trig
static int tolua_set_tagBindSkill_ToLua_unsigned_Trig(lua_State* tolua_S)
{
  tagBindSkill_ToLua* self = (tagBindSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Trig'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Trig = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultID of class  tagStatusResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusResult_ToLua_unsigned_ResultID
static int tolua_get_tagStatusResult_ToLua_unsigned_ResultID(lua_State* tolua_S)
{
  tagStatusResult_ToLua* self = (tagStatusResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultID of class  tagStatusResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusResult_ToLua_unsigned_ResultID
static int tolua_set_tagStatusResult_ToLua_unsigned_ResultID(lua_State* tolua_S)
{
  tagStatusResult_ToLua* self = (tagStatusResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal1 of class  tagStatusResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusResult_ToLua_ResultVal1
static int tolua_get_tagStatusResult_ToLua_ResultVal1(lua_State* tolua_S)
{
  tagStatusResult_ToLua* self = (tagStatusResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal1 of class  tagStatusResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusResult_ToLua_ResultVal1
static int tolua_set_tagStatusResult_ToLua_ResultVal1(lua_State* tolua_S)
{
  tagStatusResult_ToLua* self = (tagStatusResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal1 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal2 of class  tagStatusResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusResult_ToLua_ResultVal2
static int tolua_get_tagStatusResult_ToLua_ResultVal2(lua_State* tolua_S)
{
  tagStatusResult_ToLua* self = (tagStatusResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal2 of class  tagStatusResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusResult_ToLua_ResultVal2
static int tolua_set_tagStatusResult_ToLua_ResultVal2(lua_State* tolua_S)
{
  tagStatusResult_ToLua* self = (tagStatusResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal2 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal3 of class  tagStatusResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusResult_ToLua_ResultVal3
static int tolua_get_tagStatusResult_ToLua_ResultVal3(lua_State* tolua_S)
{
  tagStatusResult_ToLua* self = (tagStatusResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal3 of class  tagStatusResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusResult_ToLua_ResultVal3
static int tolua_set_tagStatusResult_ToLua_ResultVal3(lua_State* tolua_S)
{
  tagStatusResult_ToLua* self = (tagStatusResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal3 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal4 of class  tagStatusResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusResult_ToLua_ResultVal4
static int tolua_get_tagStatusResult_ToLua_ResultVal4(lua_State* tolua_S)
{
  tagStatusResult_ToLua* self = (tagStatusResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal4'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal4);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal4 of class  tagStatusResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusResult_ToLua_ResultVal4
static int tolua_set_tagStatusResult_ToLua_ResultVal4(lua_State* tolua_S)
{
  tagStatusResult_ToLua* self = (tagStatusResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal4'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal4 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StatusID of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_StatusID
static int tolua_get_tagStatusDef_ToLua_unsigned_StatusID(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StatusID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StatusID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StatusID of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_StatusID
static int tolua_set_tagStatusDef_ToLua_unsigned_StatusID(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StatusID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StatusID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_Level
static int tolua_get_tagStatusDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_Level
static int tolua_set_tagStatusDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_Name
static int tolua_get_tagStatusDef_ToLua_Name(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_Name
static int tolua_set_tagStatusDef_ToLua_Name(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Name,tolua_tostring(tolua_S,2,0),RES_NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IconID of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_IconID
static int tolua_get_tagStatusDef_ToLua_IconID(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IconID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IconID of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_IconID
static int tolua_set_tagStatusDef_ToLua_IconID(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IconID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ModeID of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_ModeID
static int tolua_get_tagStatusDef_ToLua_ModeID(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ModeID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ModeID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ModeID of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_ModeID
static int tolua_set_tagStatusDef_ToLua_ModeID(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ModeID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ModeID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: EffectID of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_EffectID
static int tolua_get_tagStatusDef_ToLua_EffectID(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EffectID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->EffectID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: EffectID of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_EffectID
static int tolua_set_tagStatusDef_ToLua_EffectID(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EffectID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->EffectID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BindPoint of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_BindPoint
static int tolua_get_tagStatusDef_ToLua_BindPoint(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BindPoint'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BindPoint);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BindPoint of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_BindPoint
static int tolua_set_tagStatusDef_ToLua_BindPoint(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BindPoint'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BindPoint = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Type of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_Type
static int tolua_get_tagStatusDef_ToLua_unsigned_Type(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Type of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_Type
static int tolua_set_tagStatusDef_ToLua_unsigned_Type(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Type = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SubType of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_SubType
static int tolua_get_tagStatusDef_ToLua_unsigned_SubType(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SubType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SubType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SubType of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_SubType
static int tolua_set_tagStatusDef_ToLua_unsigned_SubType(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SubType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SubType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DeadClear of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_DeadClear
static int tolua_get_tagStatusDef_ToLua_unsigned_DeadClear(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DeadClear'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DeadClear);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DeadClear of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_DeadClear
static int tolua_set_tagStatusDef_ToLua_unsigned_DeadClear(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DeadClear'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DeadClear = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: OverlayLimit of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_OverlayLimit
static int tolua_get_tagStatusDef_ToLua_unsigned_OverlayLimit(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OverlayLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->OverlayLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: OverlayLimit of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_OverlayLimit
static int tolua_set_tagStatusDef_ToLua_unsigned_OverlayLimit(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OverlayLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->OverlayLimit = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BindSkill of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_BindSkill
static int tolua_get_tagStatusDef_ToLua_BindSkill(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BindSkill'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->BindSkill,"tagBindSkill_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BindSkill of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_BindSkill
static int tolua_set_tagStatusDef_ToLua_BindSkill(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BindSkill'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagBindSkill_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BindSkill = *((tagBindSkill_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Result of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagStatusDef_ToLua_Result
static int tolua_get_GameEngineTolua_tagStatusDef_ToLua_Result(lua_State* tolua_S)
{
 int tolua_index;
  tagStatusDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagStatusDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_STATUS_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Result[tolua_index],"tagStatusResult_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Result of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagStatusDef_ToLua_Result
static int tolua_set_GameEngineTolua_tagStatusDef_ToLua_Result(lua_State* tolua_S)
{
 int tolua_index;
  tagStatusDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagStatusDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_STATUS_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Result[tolua_index] = *((tagStatusResult_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StatusDesc of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_StatusDesc
static int tolua_get_tagStatusDef_ToLua_StatusDesc(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StatusDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->StatusDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StatusDesc of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_StatusDesc
static int tolua_set_tagStatusDef_ToLua_StatusDesc(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StatusDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->StatusDesc,tolua_tostring(tolua_S,2,0),DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: EffectType of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_EffectType
static int tolua_get_tagStatusDef_ToLua_EffectType(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EffectType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->EffectType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: EffectType of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_EffectType
static int tolua_set_tagStatusDef_ToLua_EffectType(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EffectType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->EffectType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ZaRate of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_ZaRate
static int tolua_get_tagStatusDef_ToLua_unsigned_ZaRate(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ZaRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ZaRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ZaRate of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_ZaRate
static int tolua_set_tagStatusDef_ToLua_unsigned_ZaRate(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ZaRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ZaRate = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NormRate of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_NormRate
static int tolua_get_tagStatusDef_ToLua_unsigned_NormRate(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NormRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NormRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NormRate of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_NormRate
static int tolua_set_tagStatusDef_ToLua_unsigned_NormRate(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NormRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NormRate = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: JinYinRate of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_JinYinRate
static int tolua_get_tagStatusDef_ToLua_unsigned_JinYinRate(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'JinYinRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->JinYinRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: JinYinRate of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_JinYinRate
static int tolua_set_tagStatusDef_ToLua_unsigned_JinYinRate(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'JinYinRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->JinYinRate = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BossRate of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_BossRate
static int tolua_get_tagStatusDef_ToLua_unsigned_BossRate(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BossRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BossRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BossRate of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_BossRate
static int tolua_set_tagStatusDef_ToLua_unsigned_BossRate(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BossRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BossRate = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PlayerRate of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_PlayerRate
static int tolua_get_tagStatusDef_ToLua_unsigned_PlayerRate(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PlayerRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PlayerRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PlayerRate of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_PlayerRate
static int tolua_set_tagStatusDef_ToLua_unsigned_PlayerRate(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PlayerRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PlayerRate = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ConsumeStatusType of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_ConsumeStatusType
static int tolua_get_tagStatusDef_ToLua_unsigned_ConsumeStatusType(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ConsumeStatusType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ConsumeStatusType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ConsumeStatusType of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_ConsumeStatusType
static int tolua_set_tagStatusDef_ToLua_unsigned_ConsumeStatusType(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ConsumeStatusType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ConsumeStatusType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ConsumeStatusValue of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_ConsumeStatusValue
static int tolua_get_tagStatusDef_ToLua_unsigned_ConsumeStatusValue(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ConsumeStatusValue'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ConsumeStatusValue);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ConsumeStatusValue of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_ConsumeStatusValue
static int tolua_set_tagStatusDef_ToLua_unsigned_ConsumeStatusValue(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ConsumeStatusValue'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ConsumeStatusValue = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IsWushuang of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_IsWushuang
static int tolua_get_tagStatusDef_ToLua_unsigned_IsWushuang(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsWushuang'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IsWushuang);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IsWushuang of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_IsWushuang
static int tolua_set_tagStatusDef_ToLua_unsigned_IsWushuang(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsWushuang'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IsWushuang = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CanCancel of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_CanCancel
static int tolua_get_tagStatusDef_ToLua_unsigned_CanCancel(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CanCancel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CanCancel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CanCancel of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_CanCancel
static int tolua_set_tagStatusDef_ToLua_unsigned_CanCancel(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CanCancel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CanCancel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StatusFlag of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_StatusFlag
static int tolua_get_tagStatusDef_ToLua_unsigned_StatusFlag(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StatusFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StatusFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StatusFlag of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_StatusFlag
static int tolua_set_tagStatusDef_ToLua_unsigned_StatusFlag(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StatusFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StatusFlag = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: OverlayType of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_OverlayType
static int tolua_get_tagStatusDef_ToLua_unsigned_OverlayType(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OverlayType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->OverlayType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: OverlayType of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_OverlayType
static int tolua_set_tagStatusDef_ToLua_unsigned_OverlayType(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OverlayType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->OverlayType = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IsCltShow of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_IsCltShow
static int tolua_get_tagStatusDef_ToLua_IsCltShow(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsCltShow'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IsCltShow);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IsCltShow of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_IsCltShow
static int tolua_set_tagStatusDef_ToLua_IsCltShow(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsCltShow'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IsCltShow = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: OutFightKeep of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_OutFightKeep
static int tolua_get_tagStatusDef_ToLua_OutFightKeep(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OutFightKeep'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->OutFightKeep);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: OutFightKeep of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_OutFightKeep
static int tolua_set_tagStatusDef_ToLua_OutFightKeep(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OutFightKeep'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->OutFightKeep = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddModelID of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_AddModelID
static int tolua_get_tagStatusDef_ToLua_AddModelID(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddModelID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AddModelID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddModelID of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_AddModelID
static int tolua_set_tagStatusDef_ToLua_AddModelID(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddModelID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AddModelID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MachineRate of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_MachineRate
static int tolua_get_tagStatusDef_ToLua_unsigned_MachineRate(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MachineRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MachineRate of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_MachineRate
static int tolua_set_tagStatusDef_ToLua_unsigned_MachineRate(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MachineRate = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CltMiscFlag of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_CltMiscFlag
static int tolua_get_tagStatusDef_ToLua_unsigned_CltMiscFlag(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CltMiscFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CltMiscFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CltMiscFlag of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_CltMiscFlag
static int tolua_set_tagStatusDef_ToLua_unsigned_CltMiscFlag(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CltMiscFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CltMiscFlag = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StatusInterVal of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_StatusInterVal
static int tolua_get_tagStatusDef_ToLua_unsigned_StatusInterVal(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StatusInterVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StatusInterVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StatusInterVal of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_StatusInterVal
static int tolua_set_tagStatusDef_ToLua_unsigned_StatusInterVal(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StatusInterVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StatusInterVal = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ByAtkClear of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusDef_ToLua_unsigned_ByAtkClear
static int tolua_get_tagStatusDef_ToLua_unsigned_ByAtkClear(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ByAtkClear'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ByAtkClear);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ByAtkClear of class  tagStatusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusDef_ToLua_unsigned_ByAtkClear
static int tolua_set_tagStatusDef_ToLua_unsigned_ByAtkClear(lua_State* tolua_S)
{
  tagStatusDef_ToLua* self = (tagStatusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ByAtkClear'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ByAtkClear = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StatusID of class  tagStatusOverlayDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusOverlayDef_ToLua_unsigned_StatusID
static int tolua_get_tagStatusOverlayDef_ToLua_unsigned_StatusID(lua_State* tolua_S)
{
  tagStatusOverlayDef_ToLua* self = (tagStatusOverlayDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StatusID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StatusID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StatusID of class  tagStatusOverlayDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusOverlayDef_ToLua_unsigned_StatusID
static int tolua_set_tagStatusOverlayDef_ToLua_unsigned_StatusID(lua_State* tolua_S)
{
  tagStatusOverlayDef_ToLua* self = (tagStatusOverlayDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StatusID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StatusID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagStatusOverlayDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusOverlayDef_ToLua_unsigned_Level
static int tolua_get_tagStatusOverlayDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagStatusOverlayDef_ToLua* self = (tagStatusOverlayDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagStatusOverlayDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusOverlayDef_ToLua_unsigned_Level
static int tolua_set_tagStatusOverlayDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagStatusOverlayDef_ToLua* self = (tagStatusOverlayDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Overlay of class  tagStatusOverlayDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusOverlayDef_ToLua_unsigned_Overlay
static int tolua_get_tagStatusOverlayDef_ToLua_unsigned_Overlay(lua_State* tolua_S)
{
  tagStatusOverlayDef_ToLua* self = (tagStatusOverlayDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Overlay'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Overlay);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Overlay of class  tagStatusOverlayDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusOverlayDef_ToLua_unsigned_Overlay
static int tolua_set_tagStatusOverlayDef_ToLua_unsigned_Overlay(lua_State* tolua_S)
{
  tagStatusOverlayDef_ToLua* self = (tagStatusOverlayDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Overlay'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Overlay = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Mul of class  tagStatusOverlayDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStatusOverlayDef_ToLua_Mul
static int tolua_get_tagStatusOverlayDef_ToLua_Mul(lua_State* tolua_S)
{
  tagStatusOverlayDef_ToLua* self = (tagStatusOverlayDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Mul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Mul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Mul of class  tagStatusOverlayDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStatusOverlayDef_ToLua_Mul
static int tolua_set_tagStatusOverlayDef_ToLua_Mul(lua_State* tolua_S)
{
  tagStatusOverlayDef_ToLua* self = (tagStatusOverlayDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Mul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Mul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: getStatusDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getStatusDef00
static int tolua_GameEngineTolua_getStatusDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  int lv = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   const tagStatusDef_ToLua* tolua_ret = (const tagStatusDef_ToLua*)  getStatusDef(id,lv);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagStatusDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStatusDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getStatusOverlayDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getStatusOverlayDef00
static int tolua_GameEngineTolua_getStatusOverlayDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  int lv = ((int)  tolua_tonumber(tolua_S,2,0));
  int overlay = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   const tagStatusOverlayDef_ToLua* tolua_ret = (const tagStatusOverlayDef_ToLua*)  getStatusOverlayDef(id,lv,overlay);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagStatusOverlayDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStatusOverlayDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: isBuffCanCancel */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_isBuffCanCancel00
static int tolua_GameEngineTolua_isBuffCanCancel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  int lv = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  isBuffCanCancel(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isBuffCanCancel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: canShowBuff */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_canShowBuff00
static int tolua_GameEngineTolua_canShowBuff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  int lv = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  canShowBuff(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canShowBuff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: isStatusShowAsDebuff */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_isStatusShowAsDebuff00
static int tolua_GameEngineTolua_isStatusShowAsDebuff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  int lv = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  isStatusShowAsDebuff(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isStatusShowAsDebuff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: isCltShowBuff */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_isCltShowBuff00
static int tolua_GameEngineTolua_isCltShowBuff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  int lv = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  isCltShowBuff(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCltShowBuff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndex of class  GameBuf */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBuf_getIndex00
static int tolua_GameEngineTolua_GameBuf_getIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBuf* self = (GameBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndex'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIconId of class  GameBuf */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBuf_getIconId00
static int tolua_GameEngineTolua_GameBuf_getIconId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBuf* self = (GameBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIconId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getIconId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIconId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBufId of class  GameBuf */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBuf_getBufId00
static int tolua_GameEngineTolua_GameBuf_getBufId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBuf* self = (GameBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBufId'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getBufId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBufId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBufLv of class  GameBuf */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBuf_getBufLv00
static int tolua_GameEngineTolua_GameBuf_getBufLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBuf* self = (GameBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBufLv'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getBufLv();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBufLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLife of class  GameBuf */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBuf_getLife00
static int tolua_GameEngineTolua_GameBuf_getLife00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBuf* self = (GameBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLife'",NULL);
#endif
  {
   double tolua_ret = (double)  self->getLife();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLife'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isShow of class  GameBuf */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBuf_isShow00
static int tolua_GameEngineTolua_GameBuf_isShow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBuf* self = (GameBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isShow'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isShow();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isShow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOverlay of class  GameBuf */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBuf_getOverlay00
static int tolua_GameEngineTolua_GameBuf_getOverlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBuf* self = (GameBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOverlay'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getOverlay();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOverlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTotalLife of class  GameBuf */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBuf_getTotalLife00
static int tolua_GameEngineTolua_GameBuf_getTotalLife00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBuf* self = (GameBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTotalLife'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getTotalLife();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTotalLife'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isSkillStop of class  GameBuf */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBuf_isSkillStop00
static int tolua_GameEngineTolua_GameBuf_isSkillStop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBuf* self = (GameBuf*)  tolua_tousertype(tolua_S,1,0);
  int skillId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isSkillStop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isSkillStop(skillId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isSkillStop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isSkillStop of class  GameBuf */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBuf_isSkillStop01
static int tolua_GameEngineTolua_GameBuf_isSkillStop01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GameBuf* self = (GameBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isSkillStop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isSkillStop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GameBuf_isSkillStop00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: isMoveStop of class  GameBuf */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBuf_isMoveStop00
static int tolua_GameEngineTolua_GameBuf_isMoveStop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBuf* self = (GameBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isMoveStop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isMoveStop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isMoveStop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isHasResult of class  GameBuf */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBuf_isHasResult00
static int tolua_GameEngineTolua_GameBuf_isHasResult00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBuf* self = (GameBuf*)  tolua_tousertype(tolua_S,1,0);
  unsigned short result = ((unsigned short)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isHasResult'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isHasResult(result);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isHasResult'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEndure of class  GameBuf */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBuf_isEndure00
static int tolua_GameEngineTolua_GameBuf_isEndure00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBuf* self = (GameBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEndure'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEndure();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEndure'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cancelBuffer of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_cancelBuffer00
static int tolua_GameEngineTolua_GameBufStatus_cancelBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
  int nBufferID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nBuffLevel = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cancelBuffer'",NULL);
#endif
  {
   self->cancelBuffer(nBufferID,nBuffLevel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cancelBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGoodStatusCount of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_getGoodStatusCount00
static int tolua_GameEngineTolua_GameBufStatus_getGoodStatusCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGoodStatusCount'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getGoodStatusCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGoodStatusCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBadStatusCount of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_getBadStatusCount00
static int tolua_GameEngineTolua_GameBufStatus_getBadStatusCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBadStatusCount'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getBadStatusCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBadStatusCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNolimitStatusCount of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_getNolimitStatusCount00
static int tolua_GameEngineTolua_GameBufStatus_getNolimitStatusCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNolimitStatusCount'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getNolimitStatusCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNolimitStatusCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getJiaStatusCount of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_getJiaStatusCount00
static int tolua_GameEngineTolua_GameBufStatus_getJiaStatusCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getJiaStatusCount'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getJiaStatusCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getJiaStatusCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGoodStatus of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_getGoodStatus00
static int tolua_GameEngineTolua_GameBufStatus_getGoodStatus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGoodStatus'",NULL);
#endif
  {
   GameBuf* tolua_ret = (GameBuf*)  self->getGoodStatus(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGoodStatus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBadStatus of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_getBadStatus00
static int tolua_GameEngineTolua_GameBufStatus_getBadStatus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBadStatus'",NULL);
#endif
  {
   GameBuf* tolua_ret = (GameBuf*)  self->getBadStatus(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBadStatus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNolimitStatus of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_getNolimitStatus00
static int tolua_GameEngineTolua_GameBufStatus_getNolimitStatus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNolimitStatus'",NULL);
#endif
  {
   GameBuf* tolua_ret = (GameBuf*)  self->getNolimitStatus(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNolimitStatus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getJiaStatus of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_getJiaStatus00
static int tolua_GameEngineTolua_GameBufStatus_getJiaStatus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getJiaStatus'",NULL);
#endif
  {
   GameBuf* tolua_ret = (GameBuf*)  self->getJiaStatus(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getJiaStatus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canUsedSpell of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_canUsedSpell00
static int tolua_GameEngineTolua_GameBufStatus_canUsedSpell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
  int nSkillId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canUsedSpell'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canUsedSpell(nSkillId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canUsedSpell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canUsedSpell of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_canUsedSpell01
static int tolua_GameEngineTolua_GameBufStatus_canUsedSpell01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canUsedSpell'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canUsedSpell();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GameBufStatus_canUsedSpell00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInEndure of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_isInEndure00
static int tolua_GameEngineTolua_GameBufStatus_isInEndure00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInEndure'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInEndure();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInEndure'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInNoSkill of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_isInNoSkill00
static int tolua_GameEngineTolua_GameBufStatus_isInNoSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInNoSkill'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInNoSkill();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInNoSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canMove of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_canMove00
static int tolua_GameEngineTolua_GameBufStatus_canMove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canMove'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canMove();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canMove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checkBuf of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_checkBuf00
static int tolua_GameEngineTolua_GameBufStatus_checkBuf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
  int nBufId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checkBuf'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->checkBuf(nBufId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkBuf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBufStatus of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_getBufStatus00
static int tolua_GameEngineTolua_GameBufStatus_getBufStatus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
  int nBufId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBufStatus'",NULL);
#endif
  {
   GameBuf* tolua_ret = (GameBuf*)  self->getBufStatus(nBufId,nLv);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBufStatus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBufResult of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_getBufResult00
static int tolua_GameEngineTolua_GameBufStatus_getBufResult00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
  unsigned short result = ((unsigned short)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBufResult'",NULL);
#endif
  {
   GameBuf* tolua_ret = (GameBuf*)  self->getBufResult(result);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBufResult'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStatusDef of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_getStatusDef00
static int tolua_GameEngineTolua_GameBufStatus_getStatusDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   const tagStatusDef& tolua_ret = (const tagStatusDef&)  GameBufStatus::getStatusDef(id,lv);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagStatusDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStatusDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StatusNoSkill of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_StatusNoSkill00
static int tolua_GameEngineTolua_GameBufStatus_StatusNoSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  GameBufStatus::StatusNoSkill(id,lv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StatusNoSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addJiaStatus of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_addJiaStatus00
static int tolua_GameEngineTolua_GameBufStatus_addJiaStatus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
  int nID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addJiaStatus'",NULL);
#endif
  {
   self->addJiaStatus(nID,nLv);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addJiaStatus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delJiaStatus of class  GameBufStatus */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameBufStatus_delJiaStatus00
static int tolua_GameEngineTolua_GameBufStatus_delJiaStatus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameBufStatus",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameBufStatus* self = (GameBufStatus*)  tolua_tousertype(tolua_S,1,0);
  int nID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delJiaStatus'",NULL);
#endif
  {
   self->delJiaStatus(nID,nLv);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delJiaStatus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LastTime of class  tagCDTime */
#ifndef TOLUA_DISABLE_tolua_get_tagCDTime_unsigned_LastTime
static int tolua_get_tagCDTime_unsigned_LastTime(lua_State* tolua_S)
{
  tagCDTime* self = (tagCDTime*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LastTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LastTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LastTime of class  tagCDTime */
#ifndef TOLUA_DISABLE_tolua_set_tagCDTime_unsigned_LastTime
static int tolua_set_tagCDTime_unsigned_LastTime(lua_State* tolua_S)
{
  tagCDTime* self = (tagCDTime*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LastTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LastTime = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: startTime of class  tagCDTime */
#ifndef TOLUA_DISABLE_tolua_get_tagCDTime_unsigned_startTime
static int tolua_get_tagCDTime_unsigned_startTime(lua_State* tolua_S)
{
  tagCDTime* self = (tagCDTime*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'startTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->startTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: startTime of class  tagCDTime */
#ifndef TOLUA_DISABLE_tolua_set_tagCDTime_unsigned_startTime
static int tolua_set_tagCDTime_unsigned_startTime(lua_State* tolua_S)
{
  tagCDTime* self = (tagCDTime*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'startTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->startTime = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  tagCDTime */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagCDTime_new00
static int tolua_GameEngineTolua_tagCDTime_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagCDTime",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagCDTime* tolua_ret = (tagCDTime*)  new tagCDTime();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagCDTime");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  tagCDTime */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagCDTime_new00_local
static int tolua_GameEngineTolua_tagCDTime_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagCDTime",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagCDTime* tolua_ret = (tagCDTime*)  new tagCDTime();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"tagCDTime");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: past of class  tagCDTime */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagCDTime_past00
static int tolua_GameEngineTolua_tagCDTime_past00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const tagCDTime",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const tagCDTime* self = (const tagCDTime*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'past'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->past();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'past'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remain of class  tagCDTime */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagCDTime_remain00
static int tolua_GameEngineTolua_tagCDTime_remain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const tagCDTime",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const tagCDTime* self = (const tagCDTime*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remain'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->remain();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: total of class  tagCDTime */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagCDTime_total00
static int tolua_GameEngineTolua_tagCDTime_total00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const tagCDTime",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const tagCDTime* self = (const tagCDTime*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'total'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->total();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'total'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LevelMin of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillLearn_ToLua_unsigned_LevelMin
static int tolua_get_tagSkillLearn_ToLua_unsigned_LevelMin(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelMin'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LevelMin);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LevelMin of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillLearn_ToLua_unsigned_LevelMin
static int tolua_set_tagSkillLearn_ToLua_unsigned_LevelMin(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelMin'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LevelMin = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Career of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillLearn_ToLua_unsigned_Career
static int tolua_get_tagSkillLearn_ToLua_unsigned_Career(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Career'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Career);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Career of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillLearn_ToLua_unsigned_Career
static int tolua_set_tagSkillLearn_ToLua_unsigned_Career(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Career'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Career = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PreDiathesisID of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillLearn_ToLua_unsigned_PreDiathesisID
static int tolua_get_tagSkillLearn_ToLua_unsigned_PreDiathesisID(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PreDiathesisID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PreDiathesisID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PreDiathesisID of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillLearn_ToLua_unsigned_PreDiathesisID
static int tolua_set_tagSkillLearn_ToLua_unsigned_PreDiathesisID(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PreDiathesisID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PreDiathesisID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemID of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillLearn_ToLua_unsigned_ItemID
static int tolua_get_tagSkillLearn_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemID of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillLearn_ToLua_unsigned_ItemID
static int tolua_set_tagSkillLearn_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TaskID of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillLearn_ToLua_unsigned_TaskID
static int tolua_get_tagSkillLearn_ToLua_unsigned_TaskID(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TaskID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TaskID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TaskID of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillLearn_ToLua_unsigned_TaskID
static int tolua_set_tagSkillLearn_ToLua_unsigned_TaskID(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TaskID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TaskID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoneyAttrID of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillLearn_ToLua_unsigned_MoneyAttrID
static int tolua_get_tagSkillLearn_ToLua_unsigned_MoneyAttrID(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyAttrID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoneyAttrID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoneyAttrID of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillLearn_ToLua_unsigned_MoneyAttrID
static int tolua_set_tagSkillLearn_ToLua_unsigned_MoneyAttrID(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyAttrID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoneyAttrID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoneyVal of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillLearn_ToLua_unsigned_MoneyVal
static int tolua_get_tagSkillLearn_ToLua_unsigned_MoneyVal(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoneyVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoneyVal of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillLearn_ToLua_unsigned_MoneyVal
static int tolua_set_tagSkillLearn_ToLua_unsigned_MoneyVal(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoneyVal = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Mode of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillLearn_ToLua_unsigned_Mode
static int tolua_get_tagSkillLearn_ToLua_unsigned_Mode(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Mode'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Mode);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Mode of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillLearn_ToLua_unsigned_Mode
static int tolua_set_tagSkillLearn_ToLua_unsigned_Mode(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Mode'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Mode = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PreDiathesisLevel of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillLearn_ToLua_unsigned_PreDiathesisLevel
static int tolua_get_tagSkillLearn_ToLua_unsigned_PreDiathesisLevel(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PreDiathesisLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PreDiathesisLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PreDiathesisLevel of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillLearn_ToLua_unsigned_PreDiathesisLevel
static int tolua_set_tagSkillLearn_ToLua_unsigned_PreDiathesisLevel(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PreDiathesisLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PreDiathesisLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Exp of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillLearn_ToLua_unsigned_Exp
static int tolua_get_tagSkillLearn_ToLua_unsigned_Exp(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Exp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Exp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Exp of class  tagSkillLearn_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillLearn_ToLua_unsigned_Exp
static int tolua_set_tagSkillLearn_ToLua_unsigned_Exp(lua_State* tolua_S)
{
  tagSkillLearn_ToLua* self = (tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Exp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Exp = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ID of class  tagFittingList_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFittingList_ToLua_unsigned_ID
static int tolua_get_tagFittingList_ToLua_unsigned_ID(lua_State* tolua_S)
{
  tagFittingList_ToLua* self = (tagFittingList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ID of class  tagFittingList_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFittingList_ToLua_unsigned_ID
static int tolua_set_tagFittingList_ToLua_unsigned_ID(lua_State* tolua_S)
{
  tagFittingList_ToLua* self = (tagFittingList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Group of class  tagFittingList_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFittingList_ToLua_unsigned_Group
static int tolua_get_tagFittingList_ToLua_unsigned_Group(lua_State* tolua_S)
{
  tagFittingList_ToLua* self = (tagFittingList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Group'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Group);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Group of class  tagFittingList_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFittingList_ToLua_unsigned_Group
static int tolua_set_tagFittingList_ToLua_unsigned_Group(lua_State* tolua_S)
{
  tagFittingList_ToLua* self = (tagFittingList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Group'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Group = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RangeType of class  tagResRange_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagResRange_ToLua_unsigned_RangeType
static int tolua_get_tagResRange_ToLua_unsigned_RangeType(lua_State* tolua_S)
{
  tagResRange_ToLua* self = (tagResRange_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RangeType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RangeType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RangeType of class  tagResRange_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagResRange_ToLua_unsigned_RangeType
static int tolua_set_tagResRange_ToLua_unsigned_RangeType(lua_State* tolua_S)
{
  tagResRange_ToLua* self = (tagResRange_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RangeType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RangeType = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RangeVal1 of class  tagResRange_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagResRange_ToLua_unsigned_RangeVal1
static int tolua_get_tagResRange_ToLua_unsigned_RangeVal1(lua_State* tolua_S)
{
  tagResRange_ToLua* self = (tagResRange_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RangeVal1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RangeVal1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RangeVal1 of class  tagResRange_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagResRange_ToLua_unsigned_RangeVal1
static int tolua_set_tagResRange_ToLua_unsigned_RangeVal1(lua_State* tolua_S)
{
  tagResRange_ToLua* self = (tagResRange_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RangeVal1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RangeVal1 = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RangeVal2 of class  tagResRange_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagResRange_ToLua_unsigned_RangeVal2
static int tolua_get_tagResRange_ToLua_unsigned_RangeVal2(lua_State* tolua_S)
{
  tagResRange_ToLua* self = (tagResRange_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RangeVal2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RangeVal2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RangeVal2 of class  tagResRange_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagResRange_ToLua_unsigned_RangeVal2
static int tolua_set_tagResRange_ToLua_unsigned_RangeVal2(lua_State* tolua_S)
{
  tagResRange_ToLua* self = (tagResRange_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RangeVal2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RangeVal2 = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillResultID of class  tagSkillResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillResult_ToLua_unsigned_SkillResultID
static int tolua_get_tagSkillResult_ToLua_unsigned_SkillResultID(lua_State* tolua_S)
{
  tagSkillResult_ToLua* self = (tagSkillResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillResultID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillResultID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillResultID of class  tagSkillResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillResult_ToLua_unsigned_SkillResultID
static int tolua_set_tagSkillResult_ToLua_unsigned_SkillResultID(lua_State* tolua_S)
{
  tagSkillResult_ToLua* self = (tagSkillResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillResultID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillResultID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillResultVal1 of class  tagSkillResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillResult_ToLua_SkillResultVal1
static int tolua_get_tagSkillResult_ToLua_SkillResultVal1(lua_State* tolua_S)
{
  tagSkillResult_ToLua* self = (tagSkillResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillResultVal1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillResultVal1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillResultVal1 of class  tagSkillResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillResult_ToLua_SkillResultVal1
static int tolua_set_tagSkillResult_ToLua_SkillResultVal1(lua_State* tolua_S)
{
  tagSkillResult_ToLua* self = (tagSkillResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillResultVal1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillResultVal1 = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillResultVal2 of class  tagSkillResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillResult_ToLua_SkillResultVal2
static int tolua_get_tagSkillResult_ToLua_SkillResultVal2(lua_State* tolua_S)
{
  tagSkillResult_ToLua* self = (tagSkillResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillResultVal2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillResultVal2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillResultVal2 of class  tagSkillResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillResult_ToLua_SkillResultVal2
static int tolua_set_tagSkillResult_ToLua_SkillResultVal2(lua_State* tolua_S)
{
  tagSkillResult_ToLua* self = (tagSkillResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillResultVal2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillResultVal2 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillResultVal3 of class  tagSkillResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillResult_ToLua_SkillResultVal3
static int tolua_get_tagSkillResult_ToLua_SkillResultVal3(lua_State* tolua_S)
{
  tagSkillResult_ToLua* self = (tagSkillResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillResultVal3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillResultVal3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillResultVal3 of class  tagSkillResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillResult_ToLua_SkillResultVal3
static int tolua_set_tagSkillResult_ToLua_SkillResultVal3(lua_State* tolua_S)
{
  tagSkillResult_ToLua* self = (tagSkillResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillResultVal3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillResultVal3 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillResultVal4 of class  tagSkillResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillResult_ToLua_SkillResultVal4
static int tolua_get_tagSkillResult_ToLua_SkillResultVal4(lua_State* tolua_S)
{
  tagSkillResult_ToLua* self = (tagSkillResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillResultVal4'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillResultVal4);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillResultVal4 of class  tagSkillResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillResult_ToLua_SkillResultVal4
static int tolua_set_tagSkillResult_ToLua_SkillResultVal4(lua_State* tolua_S)
{
  tagSkillResult_ToLua* self = (tagSkillResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillResultVal4'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillResultVal4 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillID of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SkillID
static int tolua_get_tagSkillDef_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillID of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SkillID
static int tolua_set_tagSkillDef_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_Level
static int tolua_get_tagSkillDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_Level
static int tolua_set_tagSkillDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_Name
static int tolua_get_tagSkillDef_ToLua_Name(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_Name
static int tolua_set_tagSkillDef_ToLua_Name(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Name,tolua_tostring(tolua_S,2,0),RES_NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IconID1 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_IconID1
static int tolua_get_tagSkillDef_ToLua_IconID1(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IconID1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IconID1 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_IconID1
static int tolua_set_tagSkillDef_ToLua_IconID1(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IconID1 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IconID2 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_IconID2
static int tolua_get_tagSkillDef_ToLua_IconID2(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IconID2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IconID2 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_IconID2
static int tolua_set_tagSkillDef_ToLua_IconID2(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IconID2 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IconID3 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_IconID3
static int tolua_get_tagSkillDef_ToLua_IconID3(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IconID3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IconID3 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_IconID3
static int tolua_set_tagSkillDef_ToLua_IconID3(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IconID3 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ArmType of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagSkillDef_ToLua_ArmType
static int tolua_get_GameEngineTolua_tagSkillDef_ToLua_ArmType(lua_State* tolua_S)
{
 int tolua_index;
  tagSkillDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSkillDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SKILL_ARMTYPE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->ArmType[tolua_index],"ARMTYPE");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ArmType of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagSkillDef_ToLua_ArmType
static int tolua_set_GameEngineTolua_tagSkillDef_ToLua_ArmType(lua_State* tolua_S)
{
 int tolua_index;
  tagSkillDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSkillDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SKILL_ARMTYPE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->ArmType[tolua_index] = *((ARMTYPE*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SelfSpeCoolType of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SelfSpeCoolType
static int tolua_get_tagSkillDef_ToLua_unsigned_SelfSpeCoolType(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SelfSpeCoolType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SelfSpeCoolType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SelfSpeCoolType of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SelfSpeCoolType
static int tolua_set_tagSkillDef_ToLua_unsigned_SelfSpeCoolType(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SelfSpeCoolType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SelfSpeCoolType = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpeCoolType1 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolType1
static int tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolType1(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolType1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SpeCoolType1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpeCoolType1 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolType1
static int tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolType1(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolType1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpeCoolType1 = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpeCoolType2 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolType2
static int tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolType2(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolType2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SpeCoolType2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpeCoolType2 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolType2
static int tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolType2(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolType2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpeCoolType2 = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpeCoolType3 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolType3
static int tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolType3(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolType3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SpeCoolType3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpeCoolType3 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolType3
static int tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolType3(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolType3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpeCoolType3 = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpeCoolType4 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolType4
static int tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolType4(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolType4'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SpeCoolType4);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpeCoolType4 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolType4
static int tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolType4(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolType4'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpeCoolType4 = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpeCoolVal1 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolVal1
static int tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolVal1(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolVal1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SpeCoolVal1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpeCoolVal1 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolVal1
static int tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolVal1(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolVal1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpeCoolVal1 = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpeCoolVal2 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolVal2
static int tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolVal2(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolVal2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SpeCoolVal2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpeCoolVal2 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolVal2
static int tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolVal2(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolVal2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpeCoolVal2 = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpeCoolVal3 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolVal3
static int tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolVal3(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolVal3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SpeCoolVal3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpeCoolVal3 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolVal3
static int tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolVal3(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolVal3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpeCoolVal3 = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpeCoolVal4 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolVal4
static int tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolVal4(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolVal4'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SpeCoolVal4);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpeCoolVal4 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolVal4
static int tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolVal4(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolVal4'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpeCoolVal4 = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CommCool of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_CommCool
static int tolua_get_tagSkillDef_ToLua_unsigned_CommCool(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CommCool'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CommCool);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CommCool of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_CommCool
static int tolua_set_tagSkillDef_ToLua_unsigned_CommCool(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CommCool'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CommCool = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SelfCool of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SelfCool
static int tolua_get_tagSkillDef_ToLua_unsigned_SelfCool(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SelfCool'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SelfCool);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SelfCool of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SelfCool
static int tolua_set_tagSkillDef_ToLua_unsigned_SelfCool(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SelfCool'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SelfCool = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TargetType of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_TargetType
static int tolua_get_tagSkillDef_ToLua_unsigned_TargetType(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TargetType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TargetType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TargetType of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_TargetType
static int tolua_set_tagSkillDef_ToLua_unsigned_TargetType(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TargetType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TargetType = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HelpSkillID of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_HelpSkillID
static int tolua_get_tagSkillDef_ToLua_unsigned_HelpSkillID(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HelpSkillID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HelpSkillID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HelpSkillID of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_HelpSkillID
static int tolua_set_tagSkillDef_ToLua_unsigned_HelpSkillID(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HelpSkillID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HelpSkillID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HelpSkillLevel of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_HelpSkillLevel
static int tolua_get_tagSkillDef_ToLua_unsigned_HelpSkillLevel(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HelpSkillLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HelpSkillLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HelpSkillLevel of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_HelpSkillLevel
static int tolua_set_tagSkillDef_ToLua_unsigned_HelpSkillLevel(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HelpSkillLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HelpSkillLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MovePrepare of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_MovePrepare
static int tolua_get_tagSkillDef_ToLua_unsigned_MovePrepare(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MovePrepare'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MovePrepare);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MovePrepare of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_MovePrepare
static int tolua_set_tagSkillDef_ToLua_unsigned_MovePrepare(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MovePrepare'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MovePrepare = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoveAttack of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_MoveAttack
static int tolua_get_tagSkillDef_ToLua_unsigned_MoveAttack(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveAttack'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoveAttack);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoveAttack of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_MoveAttack
static int tolua_set_tagSkillDef_ToLua_unsigned_MoveAttack(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveAttack'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoveAttack = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MainAttr of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_MainAttr
static int tolua_get_tagSkillDef_ToLua_unsigned_MainAttr(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MainAttr'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MainAttr);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MainAttr of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_MainAttr
static int tolua_set_tagSkillDef_ToLua_unsigned_MainAttr(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MainAttr'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MainAttr = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_IceHurtMax
static int tolua_get_tagSkillDef_ToLua_unsigned_IceHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceHurtMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceHurtMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_IceHurtMax
static int tolua_set_tagSkillDef_ToLua_unsigned_IceHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceHurtMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceHurtMax = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_IceHurtMin
static int tolua_get_tagSkillDef_ToLua_unsigned_IceHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceHurtMin'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceHurtMin);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_IceHurtMin
static int tolua_set_tagSkillDef_ToLua_unsigned_IceHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceHurtMin'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceHurtMin = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_IceHurtMul
static int tolua_get_tagSkillDef_ToLua_IceHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_IceHurtMul
static int tolua_set_tagSkillDef_ToLua_IceHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_IceHurtMulMax
static int tolua_get_tagSkillDef_ToLua_IceHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceHurtMulMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceHurtMulMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_IceHurtMulMax
static int tolua_set_tagSkillDef_ToLua_IceHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceHurtMulMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceHurtMulMax = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_FireHurtMax
static int tolua_get_tagSkillDef_ToLua_unsigned_FireHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireHurtMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireHurtMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_FireHurtMax
static int tolua_set_tagSkillDef_ToLua_unsigned_FireHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireHurtMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireHurtMax = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_FireHurtMin
static int tolua_get_tagSkillDef_ToLua_unsigned_FireHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireHurtMin'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireHurtMin);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_FireHurtMin
static int tolua_set_tagSkillDef_ToLua_unsigned_FireHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireHurtMin'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireHurtMin = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_FireHurtMul
static int tolua_get_tagSkillDef_ToLua_FireHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_FireHurtMul
static int tolua_set_tagSkillDef_ToLua_FireHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_FireHurtMulMax
static int tolua_get_tagSkillDef_ToLua_FireHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireHurtMulMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireHurtMulMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_FireHurtMulMax
static int tolua_set_tagSkillDef_ToLua_FireHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireHurtMulMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireHurtMulMax = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_ThunderHurtMax
static int tolua_get_tagSkillDef_ToLua_unsigned_ThunderHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderHurtMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderHurtMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_ThunderHurtMax
static int tolua_set_tagSkillDef_ToLua_unsigned_ThunderHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderHurtMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderHurtMax = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_ThunderHurtMin
static int tolua_get_tagSkillDef_ToLua_unsigned_ThunderHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderHurtMin'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderHurtMin);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_ThunderHurtMin
static int tolua_set_tagSkillDef_ToLua_unsigned_ThunderHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderHurtMin'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderHurtMin = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_ThunderHurtMul
static int tolua_get_tagSkillDef_ToLua_ThunderHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_ThunderHurtMul
static int tolua_set_tagSkillDef_ToLua_ThunderHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_ThunderHurtMulMax
static int tolua_get_tagSkillDef_ToLua_ThunderHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderHurtMulMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderHurtMulMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_ThunderHurtMulMax
static int tolua_set_tagSkillDef_ToLua_ThunderHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderHurtMulMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderHurtMulMax = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LightHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_LightHurtMax
static int tolua_get_tagSkillDef_ToLua_unsigned_LightHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightHurtMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LightHurtMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LightHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_LightHurtMax
static int tolua_set_tagSkillDef_ToLua_unsigned_LightHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightHurtMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LightHurtMax = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LightHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_LightHurtMin
static int tolua_get_tagSkillDef_ToLua_unsigned_LightHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightHurtMin'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LightHurtMin);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LightHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_LightHurtMin
static int tolua_set_tagSkillDef_ToLua_unsigned_LightHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightHurtMin'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LightHurtMin = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LightHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_LightHurtMul
static int tolua_get_tagSkillDef_ToLua_LightHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LightHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LightHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_LightHurtMul
static int tolua_set_tagSkillDef_ToLua_LightHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LightHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LightHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_LightHurtMulMax
static int tolua_get_tagSkillDef_ToLua_LightHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightHurtMulMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LightHurtMulMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LightHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_LightHurtMulMax
static int tolua_set_tagSkillDef_ToLua_LightHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightHurtMulMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LightHurtMulMax = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NightHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_NightHurtMax
static int tolua_get_tagSkillDef_ToLua_unsigned_NightHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightHurtMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NightHurtMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NightHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_NightHurtMax
static int tolua_set_tagSkillDef_ToLua_unsigned_NightHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightHurtMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NightHurtMax = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NightHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_NightHurtMin
static int tolua_get_tagSkillDef_ToLua_unsigned_NightHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightHurtMin'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NightHurtMin);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NightHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_NightHurtMin
static int tolua_set_tagSkillDef_ToLua_unsigned_NightHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightHurtMin'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NightHurtMin = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NightHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_NightHurtMul
static int tolua_get_tagSkillDef_ToLua_NightHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NightHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NightHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_NightHurtMul
static int tolua_set_tagSkillDef_ToLua_NightHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NightHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NightHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_NightHurtMulMax
static int tolua_get_tagSkillDef_ToLua_NightHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightHurtMulMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NightHurtMulMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NightHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_NightHurtMulMax
static int tolua_set_tagSkillDef_ToLua_NightHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightHurtMulMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NightHurtMulMax = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_PhsicHurtMax
static int tolua_get_tagSkillDef_ToLua_unsigned_PhsicHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicHurtMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicHurtMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_PhsicHurtMax
static int tolua_set_tagSkillDef_ToLua_unsigned_PhsicHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicHurtMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicHurtMax = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_PhsicHurtMin
static int tolua_get_tagSkillDef_ToLua_unsigned_PhsicHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicHurtMin'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicHurtMin);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_PhsicHurtMin
static int tolua_set_tagSkillDef_ToLua_unsigned_PhsicHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicHurtMin'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicHurtMin = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_PhsicHurtMul
static int tolua_get_tagSkillDef_ToLua_PhsicHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_PhsicHurtMul
static int tolua_set_tagSkillDef_ToLua_PhsicHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_PhsicHurtMulMax
static int tolua_get_tagSkillDef_ToLua_PhsicHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicHurtMulMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicHurtMulMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_PhsicHurtMulMax
static int tolua_set_tagSkillDef_ToLua_PhsicHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicHurtMulMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicHurtMulMax = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WaterHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_WaterHurtMax
static int tolua_get_tagSkillDef_ToLua_unsigned_WaterHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterHurtMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WaterHurtMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WaterHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_WaterHurtMax
static int tolua_set_tagSkillDef_ToLua_unsigned_WaterHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterHurtMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WaterHurtMax = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WaterHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_WaterHurtMin
static int tolua_get_tagSkillDef_ToLua_unsigned_WaterHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterHurtMin'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WaterHurtMin);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WaterHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_WaterHurtMin
static int tolua_set_tagSkillDef_ToLua_unsigned_WaterHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterHurtMin'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WaterHurtMin = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WaterHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_WaterHurtMul
static int tolua_get_tagSkillDef_ToLua_WaterHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WaterHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WaterHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_WaterHurtMul
static int tolua_set_tagSkillDef_ToLua_WaterHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WaterHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WaterHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_WaterHurtMulMax
static int tolua_get_tagSkillDef_ToLua_WaterHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterHurtMulMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WaterHurtMulMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WaterHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_WaterHurtMulMax
static int tolua_set_tagSkillDef_ToLua_WaterHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterHurtMulMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WaterHurtMulMax = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SiegeHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SiegeHurtMax
static int tolua_get_tagSkillDef_ToLua_unsigned_SiegeHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SiegeHurtMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SiegeHurtMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SiegeHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SiegeHurtMax
static int tolua_set_tagSkillDef_ToLua_unsigned_SiegeHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SiegeHurtMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SiegeHurtMax = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SiegeHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SiegeHurtMin
static int tolua_get_tagSkillDef_ToLua_unsigned_SiegeHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SiegeHurtMin'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SiegeHurtMin);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SiegeHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SiegeHurtMin
static int tolua_set_tagSkillDef_ToLua_unsigned_SiegeHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SiegeHurtMin'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SiegeHurtMin = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SiegeHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_SiegeHurtMul
static int tolua_get_tagSkillDef_ToLua_SiegeHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SiegeHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SiegeHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SiegeHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_SiegeHurtMul
static int tolua_set_tagSkillDef_ToLua_SiegeHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SiegeHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SiegeHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SiegeHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_SiegeHurtMulMax
static int tolua_get_tagSkillDef_ToLua_SiegeHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SiegeHurtMulMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SiegeHurtMulMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SiegeHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_SiegeHurtMulMax
static int tolua_set_tagSkillDef_ToLua_SiegeHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SiegeHurtMulMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SiegeHurtMulMax = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HolyHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_HolyHurtMax
static int tolua_get_tagSkillDef_ToLua_unsigned_HolyHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HolyHurtMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HolyHurtMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HolyHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_HolyHurtMax
static int tolua_set_tagSkillDef_ToLua_unsigned_HolyHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HolyHurtMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HolyHurtMax = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HolyHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_HolyHurtMin
static int tolua_get_tagSkillDef_ToLua_unsigned_HolyHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HolyHurtMin'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HolyHurtMin);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HolyHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_HolyHurtMin
static int tolua_set_tagSkillDef_ToLua_unsigned_HolyHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HolyHurtMin'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HolyHurtMin = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HolyHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_HolyHurtMul
static int tolua_get_tagSkillDef_ToLua_HolyHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HolyHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HolyHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HolyHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_HolyHurtMul
static int tolua_set_tagSkillDef_ToLua_HolyHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HolyHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HolyHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HolyHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_HolyHurtMulMax
static int tolua_get_tagSkillDef_ToLua_HolyHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HolyHurtMulMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HolyHurtMulMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HolyHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_HolyHurtMulMax
static int tolua_set_tagSkillDef_ToLua_HolyHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HolyHurtMulMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HolyHurtMulMax = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MachineHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_MachineHurtMax
static int tolua_get_tagSkillDef_ToLua_unsigned_MachineHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineHurtMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MachineHurtMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MachineHurtMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_MachineHurtMax
static int tolua_set_tagSkillDef_ToLua_unsigned_MachineHurtMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineHurtMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MachineHurtMax = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MachineHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_MachineHurtMin
static int tolua_get_tagSkillDef_ToLua_unsigned_MachineHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineHurtMin'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MachineHurtMin);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MachineHurtMin of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_MachineHurtMin
static int tolua_set_tagSkillDef_ToLua_unsigned_MachineHurtMin(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineHurtMin'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MachineHurtMin = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MachineHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_MachineHurtMul
static int tolua_get_tagSkillDef_ToLua_MachineHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MachineHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MachineHurtMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_MachineHurtMul
static int tolua_set_tagSkillDef_ToLua_MachineHurtMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MachineHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MachineHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_MachineHurtMulMax
static int tolua_get_tagSkillDef_ToLua_MachineHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineHurtMulMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MachineHurtMulMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MachineHurtMulMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_MachineHurtMulMax
static int tolua_set_tagSkillDef_ToLua_MachineHurtMulMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineHurtMulMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MachineHurtMulMax = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AttackActTime of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_AttackActTime
static int tolua_get_tagSkillDef_ToLua_unsigned_AttackActTime(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AttackActTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AttackActTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AttackActTime of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_AttackActTime
static int tolua_set_tagSkillDef_ToLua_unsigned_AttackActTime(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AttackActTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AttackActTime = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BindSkill of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_BindSkill
static int tolua_get_tagSkillDef_ToLua_unsigned_BindSkill(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BindSkill'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BindSkill);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BindSkill of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_BindSkill
static int tolua_set_tagSkillDef_ToLua_unsigned_BindSkill(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BindSkill'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BindSkill = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FightStat of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_FightStat
static int tolua_get_tagSkillDef_ToLua_unsigned_FightStat(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FightStat'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FightStat);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FightStat of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_FightStat
static int tolua_set_tagSkillDef_ToLua_unsigned_FightStat(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FightStat'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FightStat = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MainRange of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_MainRange
static int tolua_get_tagSkillDef_ToLua_MainRange(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MainRange'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->MainRange,"tagResRange_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MainRange of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_MainRange
static int tolua_set_tagSkillDef_ToLua_MainRange(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MainRange'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagResRange_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MainRange = *((tagResRange_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SecondRange of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_SecondRange
static int tolua_get_tagSkillDef_ToLua_SecondRange(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SecondRange'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->SecondRange,"tagResRange_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SecondRange of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_SecondRange
static int tolua_set_tagSkillDef_ToLua_SecondRange(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SecondRange'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagResRange_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SecondRange = *((tagResRange_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Distance of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_Distance
static int tolua_get_tagSkillDef_ToLua_Distance(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Distance'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Distance);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Distance of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_Distance
static int tolua_set_tagSkillDef_ToLua_Distance(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Distance'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Distance = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectNumMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_CollectNumMax
static int tolua_get_tagSkillDef_ToLua_CollectNumMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectNumMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectNumMax of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_CollectNumMax
static int tolua_set_tagSkillDef_ToLua_CollectNumMax(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectNumMax = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectNumUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_CollectNumUse
static int tolua_get_tagSkillDef_ToLua_CollectNumUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumUse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectNumUse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectNumUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_CollectNumUse
static int tolua_set_tagSkillDef_ToLua_CollectNumUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumUse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectNumUse = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectSkillUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_CollectSkillUse
static int tolua_get_tagSkillDef_ToLua_CollectSkillUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectSkillUse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectSkillUse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectSkillUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_CollectSkillUse
static int tolua_set_tagSkillDef_ToLua_CollectSkillUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectSkillUse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectSkillUse = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpdUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SpdUse
static int tolua_get_tagSkillDef_ToLua_unsigned_SpdUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpdUse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SpdUse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpdUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SpdUse
static int tolua_set_tagSkillDef_ToLua_unsigned_SpdUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpdUse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpdUse = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MPUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_MPUse
static int tolua_get_tagSkillDef_ToLua_unsigned_MPUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MPUse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MPUse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MPUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_MPUse
static int tolua_set_tagSkillDef_ToLua_unsigned_MPUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MPUse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MPUse = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectNumAtkAdd of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_CollectNumAtkAdd
static int tolua_get_tagSkillDef_ToLua_unsigned_CollectNumAtkAdd(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumAtkAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectNumAtkAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectNumAtkAdd of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_CollectNumAtkAdd
static int tolua_set_tagSkillDef_ToLua_unsigned_CollectNumAtkAdd(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumAtkAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectNumAtkAdd = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectNumDeadAdd of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_CollectNumDeadAdd
static int tolua_get_tagSkillDef_ToLua_unsigned_CollectNumDeadAdd(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumDeadAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectNumDeadAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectNumDeadAdd of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_CollectNumDeadAdd
static int tolua_set_tagSkillDef_ToLua_unsigned_CollectNumDeadAdd(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumDeadAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectNumDeadAdd = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MPAtkAdd of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_MPAtkAdd
static int tolua_get_tagSkillDef_ToLua_unsigned_MPAtkAdd(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MPAtkAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MPAtkAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MPAtkAdd of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_MPAtkAdd
static int tolua_set_tagSkillDef_ToLua_unsigned_MPAtkAdd(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MPAtkAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MPAtkAdd = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MPDeadAdd of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_MPDeadAdd
static int tolua_get_tagSkillDef_ToLua_unsigned_MPDeadAdd(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MPDeadAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MPDeadAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MPDeadAdd of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_MPDeadAdd
static int tolua_set_tagSkillDef_ToLua_unsigned_MPDeadAdd(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MPDeadAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MPDeadAdd = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectNumAtkAddFlag of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_CollectNumAtkAddFlag
static int tolua_get_tagSkillDef_ToLua_unsigned_CollectNumAtkAddFlag(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumAtkAddFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectNumAtkAddFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectNumAtkAddFlag of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_CollectNumAtkAddFlag
static int tolua_set_tagSkillDef_ToLua_unsigned_CollectNumAtkAddFlag(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumAtkAddFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectNumAtkAddFlag = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectNumDeadAddFlag of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_CollectNumDeadAddFlag
static int tolua_get_tagSkillDef_ToLua_unsigned_CollectNumDeadAddFlag(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumDeadAddFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectNumDeadAddFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectNumDeadAddFlag of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_CollectNumDeadAddFlag
static int tolua_set_tagSkillDef_ToLua_unsigned_CollectNumDeadAddFlag(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumDeadAddFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectNumDeadAddFlag = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: JiqiMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_JiqiMul
static int tolua_get_tagSkillDef_ToLua_unsigned_JiqiMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'JiqiMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->JiqiMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: JiqiMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_JiqiMul
static int tolua_set_tagSkillDef_ToLua_unsigned_JiqiMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'JiqiMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->JiqiMul = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: JiqiTime of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_JiqiTime
static int tolua_get_tagSkillDef_ToLua_unsigned_JiqiTime(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'JiqiTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->JiqiTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: JiqiTime of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_JiqiTime
static int tolua_set_tagSkillDef_ToLua_unsigned_JiqiTime(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'JiqiTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->JiqiTime = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: JiqiChgFlag of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_JiqiChgFlag
static int tolua_get_tagSkillDef_ToLua_unsigned_JiqiChgFlag(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'JiqiChgFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->JiqiChgFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: JiqiChgFlag of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_JiqiChgFlag
static int tolua_set_tagSkillDef_ToLua_unsigned_JiqiChgFlag(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'JiqiChgFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->JiqiChgFlag = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ContinueNum of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_ContinueNum
static int tolua_get_tagSkillDef_ToLua_unsigned_ContinueNum(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ContinueNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ContinueNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ContinueNum of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_ContinueNum
static int tolua_set_tagSkillDef_ToLua_unsigned_ContinueNum(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ContinueNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ContinueNum = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HeavyHitRate of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_HeavyHitRate
static int tolua_get_tagSkillDef_ToLua_unsigned_HeavyHitRate(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HeavyHitRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HeavyHitRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HeavyHitRate of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_HeavyHitRate
static int tolua_set_tagSkillDef_ToLua_unsigned_HeavyHitRate(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HeavyHitRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HeavyHitRate = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TargetNum of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_TargetNum
static int tolua_get_tagSkillDef_ToLua_unsigned_TargetNum(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TargetNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TargetNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TargetNum of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_TargetNum
static int tolua_set_tagSkillDef_ToLua_unsigned_TargetNum(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TargetNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TargetNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PrepareTime of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_PrepareTime
static int tolua_get_tagSkillDef_ToLua_unsigned_PrepareTime(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PrepareTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PrepareTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PrepareTime of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_PrepareTime
static int tolua_set_tagSkillDef_ToLua_unsigned_PrepareTime(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PrepareTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PrepareTime = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PrepareType of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_PrepareType
static int tolua_get_tagSkillDef_ToLua_unsigned_PrepareType(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PrepareType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PrepareType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PrepareType of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_PrepareType
static int tolua_set_tagSkillDef_ToLua_unsigned_PrepareType(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PrepareType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PrepareType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DeadTarget of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_DeadTarget
static int tolua_get_tagSkillDef_ToLua_unsigned_DeadTarget(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DeadTarget'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DeadTarget);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DeadTarget of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_DeadTarget
static int tolua_set_tagSkillDef_ToLua_unsigned_DeadTarget(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DeadTarget'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DeadTarget = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillResult of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagSkillDef_ToLua_SkillResult
static int tolua_get_GameEngineTolua_tagSkillDef_ToLua_SkillResult(lua_State* tolua_S)
{
 int tolua_index;
  tagSkillDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSkillDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SKILL_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->SkillResult[tolua_index],"tagSkillResult_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillResult of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagSkillDef_ToLua_SkillResult
static int tolua_set_GameEngineTolua_tagSkillDef_ToLua_SkillResult(lua_State* tolua_S)
{
 int tolua_index;
  tagSkillDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSkillDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SKILL_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->SkillResult[tolua_index] = *((tagSkillResult_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HurtLimit of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_HurtLimit
static int tolua_get_tagSkillDef_ToLua_unsigned_HurtLimit(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HurtLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HurtLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HurtLimit of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_HurtLimit
static int tolua_set_tagSkillDef_ToLua_unsigned_HurtLimit(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HurtLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HurtLimit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PilotTime of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_PilotTime
static int tolua_get_tagSkillDef_ToLua_unsigned_PilotTime(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PilotTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PilotTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PilotTime of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_PilotTime
static int tolua_set_tagSkillDef_ToLua_unsigned_PilotTime(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PilotTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PilotTime = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PilotNum of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_PilotNum
static int tolua_get_tagSkillDef_ToLua_unsigned_PilotNum(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PilotNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PilotNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PilotNum of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_PilotNum
static int tolua_set_tagSkillDef_ToLua_unsigned_PilotNum(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PilotNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PilotNum = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NoHurtSkill of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_NoHurtSkill
static int tolua_get_tagSkillDef_ToLua_unsigned_NoHurtSkill(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoHurtSkill'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NoHurtSkill);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NoHurtSkill of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_NoHurtSkill
static int tolua_set_tagSkillDef_ToLua_unsigned_NoHurtSkill(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoHurtSkill'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NoHurtSkill = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NoSkillStop of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_NoSkillStop
static int tolua_get_tagSkillDef_ToLua_unsigned_NoSkillStop(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoSkillStop'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NoSkillStop);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NoSkillStop of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_NoSkillStop
static int tolua_set_tagSkillDef_ToLua_unsigned_NoSkillStop(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoSkillStop'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NoSkillStop = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TotemLimit of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_TotemLimit
static int tolua_get_tagSkillDef_ToLua_unsigned_TotemLimit(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TotemLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TotemLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TotemLimit of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_TotemLimit
static int tolua_set_tagSkillDef_ToLua_unsigned_TotemLimit(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TotemLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TotemLimit = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NoFightStatUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_NoFightStatUse
static int tolua_get_tagSkillDef_ToLua_unsigned_NoFightStatUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoFightStatUse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NoFightStatUse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NoFightStatUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_NoFightStatUse
static int tolua_set_tagSkillDef_ToLua_unsigned_NoFightStatUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoFightStatUse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NoFightStatUse = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PressRate of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_PressRate
static int tolua_get_tagSkillDef_ToLua_PressRate(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PressRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PressRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PressRate of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_PressRate
static int tolua_set_tagSkillDef_ToLua_PressRate(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PressRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PressRate = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NextSkill of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_NextSkill
static int tolua_get_tagSkillDef_ToLua_unsigned_NextSkill(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextSkill'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NextSkill);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NextSkill of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_NextSkill
static int tolua_set_tagSkillDef_ToLua_unsigned_NextSkill(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextSkill'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NextSkill = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NextSkill2 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_NextSkill2
static int tolua_get_tagSkillDef_ToLua_unsigned_NextSkill2(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextSkill2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NextSkill2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NextSkill2 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_NextSkill2
static int tolua_set_tagSkillDef_ToLua_unsigned_NextSkill2(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextSkill2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NextSkill2 = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NextSkill3 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_NextSkill3
static int tolua_get_tagSkillDef_ToLua_unsigned_NextSkill3(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextSkill3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NextSkill3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NextSkill3 of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_NextSkill3
static int tolua_set_tagSkillDef_ToLua_unsigned_NextSkill3(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextSkill3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NextSkill3 = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillDesc of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_SkillDesc
static int tolua_get_tagSkillDef_ToLua_SkillDesc(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->SkillDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillDesc of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_SkillDesc
static int tolua_set_tagSkillDef_ToLua_SkillDesc(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->SkillDesc,tolua_tostring(tolua_S,2,0),DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillArmChg of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagSkillDef_ToLua_SkillArmChg
static int tolua_get_GameEngineTolua_tagSkillDef_ToLua_SkillArmChg(lua_State* tolua_S)
{
 int tolua_index;
  tagSkillDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSkillDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SKILL_ARM_CHG)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->SkillArmChg[tolua_index],"SKILLARMCHG");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillArmChg of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagSkillDef_ToLua_SkillArmChg
static int tolua_set_GameEngineTolua_tagSkillDef_ToLua_SkillArmChg(lua_State* tolua_S)
{
 int tolua_index;
  tagSkillDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSkillDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SKILL_ARM_CHG)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->SkillArmChg[tolua_index] = *((SKILLARMCHG*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AmmUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_AmmUse
static int tolua_get_tagSkillDef_ToLua_AmmUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AmmUse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AmmUse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AmmUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_AmmUse
static int tolua_set_tagSkillDef_ToLua_AmmUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AmmUse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AmmUse = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NotBootyFirstAtk of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_NotBootyFirstAtk
static int tolua_get_tagSkillDef_ToLua_unsigned_NotBootyFirstAtk(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NotBootyFirstAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NotBootyFirstAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NotBootyFirstAtk of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_NotBootyFirstAtk
static int tolua_set_tagSkillDef_ToLua_unsigned_NotBootyFirstAtk(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NotBootyFirstAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NotBootyFirstAtk = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TargetRange of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_TargetRange
static int tolua_get_tagSkillDef_ToLua_unsigned_TargetRange(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TargetRange'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TargetRange);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TargetRange of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_TargetRange
static int tolua_set_tagSkillDef_ToLua_unsigned_TargetRange(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TargetRange'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TargetRange = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StatusChg of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_StatusChg
static int tolua_get_tagSkillDef_ToLua_StatusChg(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StatusChg'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->StatusChg,"SKILLSTATUSCHG");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StatusChg of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_StatusChg
static int tolua_set_tagSkillDef_ToLua_StatusChg(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StatusChg'",NULL);
  if (!tolua_isusertype(tolua_S,2,"SKILLSTATUSCHG",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StatusChg = *((SKILLSTATUSCHG*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Learn of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_Learn
static int tolua_get_tagSkillDef_ToLua_Learn(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Learn'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Learn,"tagSkillLearn_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Learn of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_Learn
static int tolua_set_tagSkillDef_ToLua_Learn(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Learn'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagSkillLearn_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Learn = *((tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FittingsDefault of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagSkillDef_ToLua_FittingsDefault
static int tolua_get_GameEngineTolua_tagSkillDef_ToLua_FittingsDefault(lua_State* tolua_S)
{
 int tolua_index;
  tagSkillDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSkillDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SKILL_DEFAULT_FITTINGS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->FittingsDefault[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FittingsDefault of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagSkillDef_ToLua_FittingsDefault
static int tolua_set_GameEngineTolua_tagSkillDef_ToLua_FittingsDefault(lua_State* tolua_S)
{
 int tolua_index;
  tagSkillDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSkillDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SKILL_DEFAULT_FITTINGS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->FittingsDefault[tolua_index] = ((unsigned short)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TmpEnergeUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_TmpEnergeUse
static int tolua_get_tagSkillDef_ToLua_unsigned_TmpEnergeUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TmpEnergeUse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TmpEnergeUse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TmpEnergeUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_TmpEnergeUse
static int tolua_set_tagSkillDef_ToLua_unsigned_TmpEnergeUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TmpEnergeUse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TmpEnergeUse = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PetAddAge of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_PetAddAge
static int tolua_get_tagSkillDef_ToLua_unsigned_PetAddAge(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetAddAge'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PetAddAge);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PetAddAge of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_PetAddAge
static int tolua_set_tagSkillDef_ToLua_unsigned_PetAddAge(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetAddAge'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PetAddAge = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillSwitch of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SkillSwitch
static int tolua_get_tagSkillDef_ToLua_unsigned_SkillSwitch(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillSwitch'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillSwitch);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillSwitch of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SkillSwitch
static int tolua_set_tagSkillDef_ToLua_unsigned_SkillSwitch(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillSwitch'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillSwitch = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectNumAddNum of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_CollectNumAddNum
static int tolua_get_tagSkillDef_ToLua_unsigned_CollectNumAddNum(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumAddNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectNumAddNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectNumAddNum of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_CollectNumAddNum
static int tolua_set_tagSkillDef_ToLua_unsigned_CollectNumAddNum(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumAddNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectNumAddNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FightCollectNumAddNum of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_FightCollectNumAddNum
static int tolua_get_tagSkillDef_ToLua_unsigned_FightCollectNumAddNum(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FightCollectNumAddNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FightCollectNumAddNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FightCollectNumAddNum of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_FightCollectNumAddNum
static int tolua_set_tagSkillDef_ToLua_unsigned_FightCollectNumAddNum(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FightCollectNumAddNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FightCollectNumAddNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillType of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_SkillType
static int tolua_get_tagSkillDef_ToLua_unsigned_SkillType(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillType of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_SkillType
static int tolua_set_tagSkillDef_ToLua_unsigned_SkillType(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonMiniMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_MonMiniMul
static int tolua_get_tagSkillDef_ToLua_MonMiniMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonMiniMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonMiniMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonMiniMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_MonMiniMul
static int tolua_set_tagSkillDef_ToLua_MonMiniMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonMiniMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonMiniMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonWeakMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_MonWeakMul
static int tolua_get_tagSkillDef_ToLua_MonWeakMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonWeakMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonWeakMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonWeakMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_MonWeakMul
static int tolua_set_tagSkillDef_ToLua_MonWeakMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonWeakMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonWeakMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonSoftMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_MonSoftMul
static int tolua_get_tagSkillDef_ToLua_MonSoftMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonSoftMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonSoftMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonSoftMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_MonSoftMul
static int tolua_set_tagSkillDef_ToLua_MonSoftMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonSoftMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonSoftMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonNormalMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_MonNormalMul
static int tolua_get_tagSkillDef_ToLua_MonNormalMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonNormalMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonNormalMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonNormalMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_MonNormalMul
static int tolua_set_tagSkillDef_ToLua_MonNormalMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonNormalMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonNormalMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonHardMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_MonHardMul
static int tolua_get_tagSkillDef_ToLua_MonHardMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonHardMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonHardMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonHardMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_MonHardMul
static int tolua_set_tagSkillDef_ToLua_MonHardMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonHardMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonHardMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonXiMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_MonXiMul
static int tolua_get_tagSkillDef_ToLua_MonXiMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonXiMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonXiMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonXiMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_MonXiMul
static int tolua_set_tagSkillDef_ToLua_MonXiMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonXiMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonXiMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonJinMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_MonJinMul
static int tolua_get_tagSkillDef_ToLua_MonJinMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonJinMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonJinMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonJinMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_MonJinMul
static int tolua_set_tagSkillDef_ToLua_MonJinMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonJinMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonJinMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonBossMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_MonBossMul
static int tolua_get_tagSkillDef_ToLua_MonBossMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonBossMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonBossMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonBossMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_MonBossMul
static int tolua_set_tagSkillDef_ToLua_MonBossMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonBossMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonBossMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonJiMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_MonJiMul
static int tolua_get_tagSkillDef_ToLua_MonJiMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonJiMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonJiMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonJiMul of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_MonJiMul
static int tolua_set_tagSkillDef_ToLua_MonJiMul(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonJiMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonJiMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LearnLevelLimit of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_LearnLevelLimit
static int tolua_get_tagSkillDef_ToLua_unsigned_LearnLevelLimit(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LearnLevelLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LearnLevelLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LearnLevelLimit of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_LearnLevelLimit
static int tolua_set_tagSkillDef_ToLua_unsigned_LearnLevelLimit(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LearnLevelLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LearnLevelLimit = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BeatBack of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_BeatBack
static int tolua_get_tagSkillDef_ToLua_unsigned_BeatBack(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BeatBack'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BeatBack);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BeatBack of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_BeatBack
static int tolua_set_tagSkillDef_ToLua_unsigned_BeatBack(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BeatBack'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BeatBack = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WushuangFlag of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_WushuangFlag
static int tolua_get_tagSkillDef_ToLua_unsigned_WushuangFlag(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WushuangFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WushuangFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WushuangFlag of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_WushuangFlag
static int tolua_set_tagSkillDef_ToLua_unsigned_WushuangFlag(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WushuangFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WushuangFlag = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseXp of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_UseXp
static int tolua_get_tagSkillDef_ToLua_UseXp(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseXp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseXp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseXp of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_UseXp
static int tolua_set_tagSkillDef_ToLua_UseXp(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseXp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseXp = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IgnoreNoSkill of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_IgnoreNoSkill
static int tolua_get_tagSkillDef_ToLua_unsigned_IgnoreNoSkill(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IgnoreNoSkill'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IgnoreNoSkill);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IgnoreNoSkill of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_IgnoreNoSkill
static int tolua_set_tagSkillDef_ToLua_unsigned_IgnoreNoSkill(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IgnoreNoSkill'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IgnoreNoSkill = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LightningLinkNum of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_LightningLinkNum
static int tolua_get_tagSkillDef_ToLua_unsigned_LightningLinkNum(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightningLinkNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LightningLinkNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LightningLinkNum of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_LightningLinkNum
static int tolua_set_tagSkillDef_ToLua_unsigned_LightningLinkNum(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightningLinkNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LightningLinkNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TargetStatus of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagSkillDef_ToLua_TargetStatus
static int tolua_get_GameEngineTolua_tagSkillDef_ToLua_TargetStatus(lua_State* tolua_S)
{
 int tolua_index;
  tagSkillDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSkillDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_TARGET_STATUS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->TargetStatus[tolua_index],"TARGETSTATUSONE");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TargetStatus of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagSkillDef_ToLua_TargetStatus
static int tolua_set_GameEngineTolua_tagSkillDef_ToLua_TargetStatus(lua_State* tolua_S)
{
 int tolua_index;
  tagSkillDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSkillDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_TARGET_STATUS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->TargetStatus[tolua_index] = *((TARGETSTATUSONE*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NoHurtPress of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_NoHurtPress
static int tolua_get_tagSkillDef_ToLua_NoHurtPress(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoHurtPress'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NoHurtPress);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NoHurtPress of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_NoHurtPress
static int tolua_set_tagSkillDef_ToLua_NoHurtPress(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoHurtPress'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NoHurtPress = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FairySkill of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_unsigned_FairySkill
static int tolua_get_tagSkillDef_ToLua_unsigned_FairySkill(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FairySkill'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FairySkill);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FairySkill of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_unsigned_FairySkill
static int tolua_set_tagSkillDef_ToLua_unsigned_FairySkill(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FairySkill'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FairySkill = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AmmID of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_AmmID
static int tolua_get_tagSkillDef_ToLua_AmmID(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AmmID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AmmID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AmmID of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_AmmID
static int tolua_set_tagSkillDef_ToLua_AmmID(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AmmID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AmmID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RedRuneTransferedID of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_RedRuneTransferedID
static int tolua_get_tagSkillDef_ToLua_RedRuneTransferedID(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RedRuneTransferedID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RedRuneTransferedID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RedRuneTransferedID of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_RedRuneTransferedID
static int tolua_set_tagSkillDef_ToLua_RedRuneTransferedID(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RedRuneTransferedID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RedRuneTransferedID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BlueRuneTransferedID of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_BlueRuneTransferedID
static int tolua_get_tagSkillDef_ToLua_BlueRuneTransferedID(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BlueRuneTransferedID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BlueRuneTransferedID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BlueRuneTransferedID of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_BlueRuneTransferedID
static int tolua_set_tagSkillDef_ToLua_BlueRuneTransferedID(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BlueRuneTransferedID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BlueRuneTransferedID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: YellowRuneTransferedID of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_YellowRuneTransferedID
static int tolua_get_tagSkillDef_ToLua_YellowRuneTransferedID(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'YellowRuneTransferedID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->YellowRuneTransferedID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: YellowRuneTransferedID of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_YellowRuneTransferedID
static int tolua_set_tagSkillDef_ToLua_YellowRuneTransferedID(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'YellowRuneTransferedID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->YellowRuneTransferedID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RuneDesc of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_RuneDesc
static int tolua_get_tagSkillDef_ToLua_RuneDesc(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RuneDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->RuneDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RuneDesc of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_RuneDesc
static int tolua_set_tagSkillDef_ToLua_RuneDesc(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RuneDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->RuneDesc,tolua_tostring(tolua_S,2,0),SHORT_DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NextLevelDesc of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_NextLevelDesc
static int tolua_get_tagSkillDef_ToLua_NextLevelDesc(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextLevelDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->NextLevelDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NextLevelDesc of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_NextLevelDesc
static int tolua_set_tagSkillDef_ToLua_NextLevelDesc(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextLevelDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->NextLevelDesc,tolua_tostring(tolua_S,2,0),SHORT_DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: EnergyUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_EnergyUse
static int tolua_get_tagSkillDef_ToLua_EnergyUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EnergyUse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->EnergyUse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: EnergyUse of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_EnergyUse
static int tolua_set_tagSkillDef_ToLua_EnergyUse(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EnergyUse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->EnergyUse = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AtkType of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_AtkType
static int tolua_get_tagSkillDef_ToLua_AtkType(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AtkType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AtkType of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_AtkType
static int tolua_set_tagSkillDef_ToLua_AtkType(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AtkType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AtkType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseItemID of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_UseItemID
static int tolua_get_tagSkillDef_ToLua_UseItemID(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseItemID of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_UseItemID
static int tolua_set_tagSkillDef_ToLua_UseItemID(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseItemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Auto of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_Auto
static int tolua_get_tagSkillDef_ToLua_Auto(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Auto'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Auto);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Auto of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_Auto
static int tolua_set_tagSkillDef_ToLua_Auto(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Auto'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Auto = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CtrlFlag of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDef_ToLua_CtrlFlag
static int tolua_get_tagSkillDef_ToLua_CtrlFlag(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CtrlFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CtrlFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CtrlFlag of class  tagSkillDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDef_ToLua_CtrlFlag
static int tolua_set_tagSkillDef_ToLua_CtrlFlag(lua_State* tolua_S)
{
  tagSkillDef_ToLua* self = (tagSkillDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CtrlFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CtrlFlag = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Up of class  tagSkillUpRate_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillUpRate_ToLua_unsigned_Up
static int tolua_get_tagSkillUpRate_ToLua_unsigned_Up(lua_State* tolua_S)
{
  tagSkillUpRate_ToLua* self = (tagSkillUpRate_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Up'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Up);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Up of class  tagSkillUpRate_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillUpRate_ToLua_unsigned_Up
static int tolua_set_tagSkillUpRate_ToLua_unsigned_Up(lua_State* tolua_S)
{
  tagSkillUpRate_ToLua* self = (tagSkillUpRate_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Up'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Up = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Down of class  tagSkillUpRate_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillUpRate_ToLua_unsigned_Down
static int tolua_get_tagSkillUpRate_ToLua_unsigned_Down(lua_State* tolua_S)
{
  tagSkillUpRate_ToLua* self = (tagSkillUpRate_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Down'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Down);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Down of class  tagSkillUpRate_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillUpRate_ToLua_unsigned_Down
static int tolua_set_tagSkillUpRate_ToLua_unsigned_Down(lua_State* tolua_S)
{
  tagSkillUpRate_ToLua* self = (tagSkillUpRate_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Down'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Down = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NoChg of class  tagSkillUpRate_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillUpRate_ToLua_unsigned_NoChg
static int tolua_get_tagSkillUpRate_ToLua_unsigned_NoChg(lua_State* tolua_S)
{
  tagSkillUpRate_ToLua* self = (tagSkillUpRate_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoChg'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NoChg);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NoChg of class  tagSkillUpRate_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillUpRate_ToLua_unsigned_NoChg
static int tolua_set_tagSkillUpRate_ToLua_unsigned_NoChg(lua_State* tolua_S)
{
  tagSkillUpRate_ToLua* self = (tagSkillUpRate_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoChg'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NoChg = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DiathesisID of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_unsigned_DiathesisID
static int tolua_get_tagDiathesisDef_ToLua_unsigned_DiathesisID(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiathesisID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DiathesisID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DiathesisID of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_unsigned_DiathesisID
static int tolua_set_tagDiathesisDef_ToLua_unsigned_DiathesisID(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiathesisID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DiathesisID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_unsigned_Level
static int tolua_get_tagDiathesisDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_unsigned_Level
static int tolua_set_tagDiathesisDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_Name
static int tolua_get_tagDiathesisDef_ToLua_Name(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_Name
static int tolua_set_tagDiathesisDef_ToLua_Name(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Name,tolua_tostring(tolua_S,2,0),RES_NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IconID of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_IconID
static int tolua_get_tagDiathesisDef_ToLua_IconID(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IconID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IconID of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_IconID
static int tolua_set_tagDiathesisDef_ToLua_IconID(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IconID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DiathesisResult of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagDiathesisDef_ToLua_DiathesisResult
static int tolua_get_GameEngineTolua_tagDiathesisDef_ToLua_DiathesisResult(lua_State* tolua_S)
{
 int tolua_index;
  tagDiathesisDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagDiathesisDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_DIATHESIS_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->DiathesisResult[tolua_index],"SKILLRESULT");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DiathesisResult of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagDiathesisDef_ToLua_DiathesisResult
static int tolua_set_GameEngineTolua_tagDiathesisDef_ToLua_DiathesisResult(lua_State* tolua_S)
{
 int tolua_index;
  tagDiathesisDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagDiathesisDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_DIATHESIS_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->DiathesisResult[tolua_index] = *((SKILLRESULT*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ArmType of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_unsigned_ArmType
static int tolua_get_tagDiathesisDef_ToLua_unsigned_ArmType(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ArmType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ArmType of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_unsigned_ArmType
static int tolua_set_tagDiathesisDef_ToLua_unsigned_ArmType(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ArmType = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DiathesisDesc of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_DiathesisDesc
static int tolua_get_tagDiathesisDef_ToLua_DiathesisDesc(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiathesisDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->DiathesisDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DiathesisDesc of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_DiathesisDesc
static int tolua_set_tagDiathesisDef_ToLua_DiathesisDesc(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiathesisDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->DiathesisDesc,tolua_tostring(tolua_S,2,0),DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Learn of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_Learn
static int tolua_get_tagDiathesisDef_ToLua_Learn(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Learn'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Learn,"tagSkillLearn_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Learn of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_Learn
static int tolua_set_tagDiathesisDef_ToLua_Learn(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Learn'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagSkillLearn_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Learn = *((tagSkillLearn_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LearnLevelLimit of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_unsigned_LearnLevelLimit
static int tolua_get_tagDiathesisDef_ToLua_unsigned_LearnLevelLimit(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LearnLevelLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LearnLevelLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LearnLevelLimit of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_unsigned_LearnLevelLimit
static int tolua_set_tagDiathesisDef_ToLua_unsigned_LearnLevelLimit(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LearnLevelLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LearnLevelLimit = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PreUsedGeniusPoint of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_unsigned_PreUsedGeniusPoint
static int tolua_get_tagDiathesisDef_ToLua_unsigned_PreUsedGeniusPoint(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PreUsedGeniusPoint'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PreUsedGeniusPoint);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PreUsedGeniusPoint of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_unsigned_PreUsedGeniusPoint
static int tolua_set_tagDiathesisDef_ToLua_unsigned_PreUsedGeniusPoint(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PreUsedGeniusPoint'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PreUsedGeniusPoint = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseGeniusPoint of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_unsigned_UseGeniusPoint
static int tolua_get_tagDiathesisDef_ToLua_unsigned_UseGeniusPoint(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseGeniusPoint'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseGeniusPoint);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseGeniusPoint of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_unsigned_UseGeniusPoint
static int tolua_set_tagDiathesisDef_ToLua_unsigned_UseGeniusPoint(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseGeniusPoint'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseGeniusPoint = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GeniusType of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_unsigned_GeniusType
static int tolua_get_tagDiathesisDef_ToLua_unsigned_GeniusType(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GeniusType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GeniusType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GeniusType of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_unsigned_GeniusType
static int tolua_set_tagDiathesisDef_ToLua_unsigned_GeniusType(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GeniusType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GeniusType = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PetDiathesisType of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_unsigned_PetDiathesisType
static int tolua_get_tagDiathesisDef_ToLua_unsigned_PetDiathesisType(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetDiathesisType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PetDiathesisType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PetDiathesisType of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_unsigned_PetDiathesisType
static int tolua_set_tagDiathesisDef_ToLua_unsigned_PetDiathesisType(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetDiathesisType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PetDiathesisType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SelfCool of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_unsigned_SelfCool
static int tolua_get_tagDiathesisDef_ToLua_unsigned_SelfCool(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SelfCool'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SelfCool);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SelfCool of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_unsigned_SelfCool
static int tolua_set_tagDiathesisDef_ToLua_unsigned_SelfCool(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SelfCool'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SelfCool = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PetDiathesisGradeType of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_unsigned_PetDiathesisGradeType
static int tolua_get_tagDiathesisDef_ToLua_unsigned_PetDiathesisGradeType(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetDiathesisGradeType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PetDiathesisGradeType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PetDiathesisGradeType of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_unsigned_PetDiathesisGradeType
static int tolua_set_tagDiathesisDef_ToLua_unsigned_PetDiathesisGradeType(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetDiathesisGradeType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PetDiathesisGradeType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IconPosition of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_IconPosition
static int tolua_get_tagDiathesisDef_ToLua_IconPosition(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconPosition'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IconPosition);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IconPosition of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_IconPosition
static int tolua_set_tagDiathesisDef_ToLua_IconPosition(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconPosition'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IconPosition = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MutexDiathesisID of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_unsigned_MutexDiathesisID
static int tolua_get_tagDiathesisDef_ToLua_unsigned_MutexDiathesisID(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MutexDiathesisID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MutexDiathesisID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MutexDiathesisID of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_unsigned_MutexDiathesisID
static int tolua_set_tagDiathesisDef_ToLua_unsigned_MutexDiathesisID(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MutexDiathesisID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MutexDiathesisID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PetSkillType of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_unsigned_PetSkillType
static int tolua_get_tagDiathesisDef_ToLua_unsigned_PetSkillType(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetSkillType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PetSkillType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PetSkillType of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_unsigned_PetSkillType
static int tolua_set_tagDiathesisDef_ToLua_unsigned_PetSkillType(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetSkillType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PetSkillType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GroupSkill of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_unsigned_GroupSkill
static int tolua_get_tagDiathesisDef_ToLua_unsigned_GroupSkill(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GroupSkill'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GroupSkill);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GroupSkill of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_unsigned_GroupSkill
static int tolua_set_tagDiathesisDef_ToLua_unsigned_GroupSkill(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GroupSkill'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GroupSkill = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillUpRate of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_SkillUpRate
static int tolua_get_tagDiathesisDef_ToLua_SkillUpRate(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillUpRate'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->SkillUpRate,"tagSkillUpRate_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillUpRate of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_SkillUpRate
static int tolua_set_tagDiathesisDef_ToLua_SkillUpRate(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillUpRate'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagSkillUpRate_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillUpRate = *((tagSkillUpRate_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResetRate of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisDef_ToLua_ResetRate
static int tolua_get_tagDiathesisDef_ToLua_ResetRate(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResetRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResetRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResetRate of class  tagDiathesisDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisDef_ToLua_ResetRate
static int tolua_set_tagDiathesisDef_ToLua_ResetRate(lua_State* tolua_S)
{
  tagDiathesisDef_ToLua* self = (tagDiathesisDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResetRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResetRate = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DiathesisID of class  tagDiathesisData_toLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisData_toLua_unsigned_DiathesisID
static int tolua_get_tagDiathesisData_toLua_unsigned_DiathesisID(lua_State* tolua_S)
{
  tagDiathesisData_toLua* self = (tagDiathesisData_toLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiathesisID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DiathesisID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DiathesisID of class  tagDiathesisData_toLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisData_toLua_unsigned_DiathesisID
static int tolua_set_tagDiathesisData_toLua_unsigned_DiathesisID(lua_State* tolua_S)
{
  tagDiathesisData_toLua* self = (tagDiathesisData_toLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiathesisID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DiathesisID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DiathesisLevel of class  tagDiathesisData_toLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisData_toLua_unsigned_DiathesisLevel
static int tolua_get_tagDiathesisData_toLua_unsigned_DiathesisLevel(lua_State* tolua_S)
{
  tagDiathesisData_toLua* self = (tagDiathesisData_toLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiathesisLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DiathesisLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DiathesisLevel of class  tagDiathesisData_toLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisData_toLua_unsigned_DiathesisLevel
static int tolua_set_tagDiathesisData_toLua_unsigned_DiathesisLevel(lua_State* tolua_S)
{
  tagDiathesisData_toLua* self = (tagDiathesisData_toLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiathesisLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DiathesisLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GeniusFlag of class  tagDiathesisData_toLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisData_toLua_unsigned_GeniusFlag
static int tolua_get_tagDiathesisData_toLua_unsigned_GeniusFlag(lua_State* tolua_S)
{
  tagDiathesisData_toLua* self = (tagDiathesisData_toLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GeniusFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GeniusFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GeniusFlag of class  tagDiathesisData_toLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisData_toLua_unsigned_GeniusFlag
static int tolua_set_tagDiathesisData_toLua_unsigned_GeniusFlag(lua_State* tolua_S)
{
  tagDiathesisData_toLua* self = (tagDiathesisData_toLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GeniusFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GeniusFlag = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Res of class  tagDiathesisData_toLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisData_toLua_unsigned_Res
static int tolua_get_tagDiathesisData_toLua_unsigned_Res(lua_State* tolua_S)
{
  tagDiathesisData_toLua* self = (tagDiathesisData_toLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Res'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Res);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Res of class  tagDiathesisData_toLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisData_toLua_unsigned_Res
static int tolua_set_tagDiathesisData_toLua_unsigned_Res(lua_State* tolua_S)
{
  tagDiathesisData_toLua* self = (tagDiathesisData_toLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Res'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Res = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DiathesisNum of class  tagDiathesisInfo_toLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisInfo_toLua_unsigned_DiathesisNum
static int tolua_get_tagDiathesisInfo_toLua_unsigned_DiathesisNum(lua_State* tolua_S)
{
  tagDiathesisInfo_toLua* self = (tagDiathesisInfo_toLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiathesisNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DiathesisNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DiathesisNum of class  tagDiathesisInfo_toLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisInfo_toLua_unsigned_DiathesisNum
static int tolua_set_tagDiathesisInfo_toLua_unsigned_DiathesisNum(lua_State* tolua_S)
{
  tagDiathesisInfo_toLua* self = (tagDiathesisInfo_toLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiathesisNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DiathesisNum = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DiathesisList of class  tagDiathesisInfo_toLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagDiathesisInfo_toLua_DiathesisList
static int tolua_get_GameEngineTolua_tagDiathesisInfo_toLua_DiathesisList(lua_State* tolua_S)
{
 int tolua_index;
  tagDiathesisInfo_toLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagDiathesisInfo_toLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_DIATHESIS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->DiathesisList[tolua_index],"tagDiathesisData_toLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DiathesisList of class  tagDiathesisInfo_toLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagDiathesisInfo_toLua_DiathesisList
static int tolua_set_GameEngineTolua_tagDiathesisInfo_toLua_DiathesisList(lua_State* tolua_S)
{
 int tolua_index;
  tagDiathesisInfo_toLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagDiathesisInfo_toLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_DIATHESIS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->DiathesisList[tolua_index] = *((tagDiathesisData_toLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UsedGeniusPoint of class  tagDiathesisInfo_toLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisInfo_toLua_unsigned_UsedGeniusPoint
static int tolua_get_tagDiathesisInfo_toLua_unsigned_UsedGeniusPoint(lua_State* tolua_S)
{
  tagDiathesisInfo_toLua* self = (tagDiathesisInfo_toLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UsedGeniusPoint'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UsedGeniusPoint);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UsedGeniusPoint of class  tagDiathesisInfo_toLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisInfo_toLua_unsigned_UsedGeniusPoint
static int tolua_set_tagDiathesisInfo_toLua_unsigned_UsedGeniusPoint(lua_State* tolua_S)
{
  tagDiathesisInfo_toLua* self = (tagDiathesisInfo_toLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UsedGeniusPoint'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UsedGeniusPoint = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LearnGeniusPoint of class  tagDiathesisInfo_toLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDiathesisInfo_toLua_unsigned_LearnGeniusPoint
static int tolua_get_tagDiathesisInfo_toLua_unsigned_LearnGeniusPoint(lua_State* tolua_S)
{
  tagDiathesisInfo_toLua* self = (tagDiathesisInfo_toLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LearnGeniusPoint'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LearnGeniusPoint);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LearnGeniusPoint of class  tagDiathesisInfo_toLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDiathesisInfo_toLua_unsigned_LearnGeniusPoint
static int tolua_set_tagDiathesisInfo_toLua_unsigned_LearnGeniusPoint(lua_State* tolua_S)
{
  tagDiathesisInfo_toLua* self = (tagDiathesisInfo_toLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LearnGeniusPoint'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LearnGeniusPoint = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: getItemDisplayInfoHairStyle */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getItemDisplayInfoHairStyle00
static int tolua_GameEngineTolua_getItemDisplayInfoHairStyle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int armDefId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getItemDisplayInfoHairStyle(armDefId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemDisplayInfoHairStyle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItem of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_getItem00
static int tolua_GameEngineTolua_Equip_getItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int GridIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItem'",NULL);
#endif
  {
   Item& tolua_ret = (Item&)  self->getItem(GridIndex);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Item");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemLink of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_getItemLink00
static int tolua_GameEngineTolua_Equip_getItemLink00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int GridIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemLink'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getItemLink(GridIndex);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemLink'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmType of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_getArmType00
static int tolua_GameEngineTolua_Equip_getArmType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmType'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getArmType(pos);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTmpArm of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_setTmpArm00
static int tolua_GameEngineTolua_Equip_setTmpArm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int ArmId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTmpArm'",NULL);
#endif
  {
   self->setTmpArm(ArmId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTmpArm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bindTmpArm of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_bindTmpArm00
static int tolua_GameEngineTolua_Equip_bindTmpArm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pActor = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
  int nArmId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bindTmpArm'",NULL);
#endif
  {
   self->bindTmpArm(pActor,nArmId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bindTmpArm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unBindTmpArm of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_unBindTmpArm00
static int tolua_GameEngineTolua_Equip_unBindTmpArm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pActor = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
  int nArmId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unBindTmpArm'",NULL);
#endif
  {
   self->unBindTmpArm(pActor,nArmId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unBindTmpArm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isUsedTmp of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_isUsedTmp00
static int tolua_GameEngineTolua_Equip_isUsedTmp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isUsedTmp'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isUsedTmp();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isUsedTmp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTmpArm of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_getTmpArm00
static int tolua_GameEngineTolua_Equip_getTmpArm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTmpArm'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getTmpArm();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTmpArm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTmpMachin of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_getTmpMachin00
static int tolua_GameEngineTolua_Equip_getTmpMachin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTmpMachin'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getTmpMachin();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTmpMachin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: usedTmpArm of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_usedTmpArm00
static int tolua_GameEngineTolua_Equip_usedTmpArm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int armId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'usedTmpArm'",NULL);
#endif
  {
   self->usedTmpArm(armId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'usedTmpArm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unUsedTmpArm of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_unUsedTmpArm00
static int tolua_GameEngineTolua_Equip_unUsedTmpArm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unUsedTmpArm'",NULL);
#endif
  {
   self->unUsedTmpArm();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unUsedTmpArm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: looseTmpArm of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_looseTmpArm00
static int tolua_GameEngineTolua_Equip_looseTmpArm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'looseTmpArm'",NULL);
#endif
  {
   self->looseTmpArm();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'looseTmpArm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hideWeapon of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_hideWeapon00
static int tolua_GameEngineTolua_Equip_hideWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hideWeapon'",NULL);
#endif
  {
   self->hideWeapon();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hideWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: showWeapon of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_showWeapon00
static int tolua_GameEngineTolua_Equip_showWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'showWeapon'",NULL);
#endif
  {
   self->showWeapon();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'showWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_Equip of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_send_Equip00
static int tolua_GameEngineTolua_Equip_send_Equip00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"const Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  const Item* item = ((const Item*)  tolua_tousertype(tolua_S,3,0));
  int wearPos = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_Equip'",NULL);
#endif
  {
   self->send_Equip(nListType,*item,wearPos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_Equip'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_unEquip of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_send_unEquip00
static int tolua_GameEngineTolua_Equip_send_unEquip00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int Id = ((int)  tolua_tonumber(tolua_S,2,0));
  int desListType = ((int)  tolua_tonumber(tolua_S,3,0));
  int gridIndex = ((int)  tolua_tonumber(tolua_S,4,0));
  int wearPos = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_unEquip'",NULL);
#endif
  {
   self->send_unEquip(Id,desListType,gridIndex,wearPos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_unEquip'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_EquipAmm of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_send_EquipAmm00
static int tolua_GameEngineTolua_Equip_send_EquipAmm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int ammId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_EquipAmm'",NULL);
#endif
  {
   self->send_EquipAmm(ammId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_EquipAmm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAvatarAttrib of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_setAvatarAttrib00
static int tolua_GameEngineTolua_Equip_setAvatarAttrib00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int nRace = ((int)  tolua_tonumber(tolua_S,2,0));
  int nGender = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAvatarAttrib'",NULL);
#endif
  {
   self->setAvatarAttrib(nRace,nGender);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAvatarAttrib'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvatarId of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_getAvatarId00
static int tolua_GameEngineTolua_Equip_getAvatarId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvatarId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getAvatarId(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvatarId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerSuitEquipNum of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_getPlayerSuitEquipNum00
static int tolua_GameEngineTolua_Equip_getPlayerSuitEquipNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerSuitEquipNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPlayerSuitEquipNum(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerSuitEquipNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEquipItemID of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_getEquipItemID00
static int tolua_GameEngineTolua_Equip_getEquipItemID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int nGridx = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEquipItemID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getEquipItemID(nGridx);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEquipItemID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isTmpPatronid of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_isTmpPatronid00
static int tolua_GameEngineTolua_Equip_isTmpPatronid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isTmpPatronid'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isTmpPatronid();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTmpPatronid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvatarStarLv of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_getAvatarStarLv00
static int tolua_GameEngineTolua_Equip_getAvatarStarLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvatarStarLv'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getAvatarStarLv(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvatarStarLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ShowShoulder of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_ShowShoulder00
static int tolua_GameEngineTolua_Equip_ShowShoulder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  bool bShow = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ShowShoulder'",NULL);
#endif
  {
   self->ShowShoulder(bShow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ShowShoulder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_SelectFashionSuit of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_send_SelectFashionSuit00
static int tolua_GameEngineTolua_Equip_send_SelectFashionSuit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int nSelectIdx = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_SelectFashionSuit'",NULL);
#endif
  {
   self->send_SelectFashionSuit(nSelectIdx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_SelectFashionSuit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSelectFashionBag of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_setSelectFashionBag00
static int tolua_GameEngineTolua_Equip_setSelectFashionBag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
  int nSelect = ((int)  tolua_tonumber(tolua_S,2,0));
  int nNum = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSelectFashionBag'",NULL);
#endif
  {
   self->setSelectFashionBag(nSelect,nNum);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSelectFashionBag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSelectFashionIndex of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_getSelectFashionIndex00
static int tolua_GameEngineTolua_Equip_getSelectFashionIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSelectFashionIndex'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSelectFashionIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSelectFashionIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSelectFashionNum of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_getSelectFashionNum00
static int tolua_GameEngineTolua_Equip_getSelectFashionNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSelectFashionNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSelectFashionNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSelectFashionNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isOnChairTmp of class  Equip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Equip_isOnChairTmp00
static int tolua_GameEngineTolua_Equip_isOnChairTmp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Equip",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Equip* self = (Equip*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isOnChairTmp'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isOnChairTmp();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isOnChairTmp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemID of class  tagGemInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagGemInfo_ToLua_unsigned_ItemID
static int tolua_get_tagGemInfo_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagGemInfo_ToLua* self = (tagGemInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemID of class  tagGemInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagGemInfo_ToLua_unsigned_ItemID
static int tolua_set_tagGemInfo_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagGemInfo_ToLua* self = (tagGemInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Num of class  tagGemInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagGemInfo_ToLua_Num
static int tolua_get_tagGemInfo_ToLua_Num(lua_State* tolua_S)
{
  tagGemInfo_ToLua* self = (tagGemInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Num'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Num);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Num of class  tagGemInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagGemInfo_ToLua_Num
static int tolua_set_tagGemInfo_ToLua_Num(lua_State* tolua_S)
{
  tagGemInfo_ToLua* self = (tagGemInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Num'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Num = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Bind of class  tagGemInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagGemInfo_ToLua_Bind
static int tolua_get_tagGemInfo_ToLua_Bind(lua_State* tolua_S)
{
  tagGemInfo_ToLua* self = (tagGemInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Bind'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Bind);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Bind of class  tagGemInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagGemInfo_ToLua_Bind
static int tolua_set_tagGemInfo_ToLua_Bind(lua_State* tolua_S)
{
  tagGemInfo_ToLua* self = (tagGemInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Bind'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Bind = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Desc of class  tagGemInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagGemInfo_ToLua_Desc
static int tolua_get_tagGemInfo_ToLua_Desc(lua_State* tolua_S)
{
  tagGemInfo_ToLua* self = (tagGemInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Desc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Desc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Desc of class  tagGemInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagGemInfo_ToLua_Desc
static int tolua_set_tagGemInfo_ToLua_Desc(lua_State* tolua_S)
{
  tagGemInfo_ToLua* self = (tagGemInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Desc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Desc,tolua_tostring(tolua_S,2,0),RES_NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Id of class  tagGemPagDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagGemPagDef_ToLua_Id
static int tolua_get_tagGemPagDef_ToLua_Id(lua_State* tolua_S)
{
  tagGemPagDef_ToLua* self = (tagGemPagDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Id'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Id);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Id of class  tagGemPagDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagGemPagDef_ToLua_Id
static int tolua_set_tagGemPagDef_ToLua_Id(lua_State* tolua_S)
{
  tagGemPagDef_ToLua* self = (tagGemPagDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Id'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Id = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GemInfo of class  tagGemPagDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagGemPagDef_ToLua_GemInfo
static int tolua_get_GameEngineTolua_tagGemPagDef_ToLua_GemInfo(lua_State* tolua_S)
{
 int tolua_index;
  tagGemPagDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagGemPagDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_GEM_PAG_GEM_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->GemInfo[tolua_index],"tagGemInfo_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GemInfo of class  tagGemPagDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagGemPagDef_ToLua_GemInfo
static int tolua_set_GameEngineTolua_tagGemPagDef_ToLua_GemInfo(lua_State* tolua_S)
{
 int tolua_index;
  tagGemPagDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagGemPagDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_GEM_PAG_GEM_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->GemInfo[tolua_index] = *((tagGemInfo_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TeshuID of class  tagArmTeshuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmTeshuDef_ToLua_unsigned_TeshuID
static int tolua_get_tagArmTeshuDef_ToLua_unsigned_TeshuID(lua_State* tolua_S)
{
  tagArmTeshuDef_ToLua* self = (tagArmTeshuDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TeshuID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TeshuID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TeshuID of class  tagArmTeshuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmTeshuDef_ToLua_unsigned_TeshuID
static int tolua_set_tagArmTeshuDef_ToLua_unsigned_TeshuID(lua_State* tolua_S)
{
  tagArmTeshuDef_ToLua* self = (tagArmTeshuDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TeshuID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TeshuID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Rate of class  tagArmTeshuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmTeshuDef_ToLua_Rate
static int tolua_get_tagArmTeshuDef_ToLua_Rate(lua_State* tolua_S)
{
  tagArmTeshuDef_ToLua* self = (tagArmTeshuDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Rate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Rate of class  tagArmTeshuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmTeshuDef_ToLua_Rate
static int tolua_set_tagArmTeshuDef_ToLua_Rate(lua_State* tolua_S)
{
  tagArmTeshuDef_ToLua* self = (tagArmTeshuDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Rate = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Result of class  tagArmTeshuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagArmTeshuDef_ToLua_Result
static int tolua_get_GameEngineTolua_tagArmTeshuDef_ToLua_Result(lua_State* tolua_S)
{
 int tolua_index;
  tagArmTeshuDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagArmTeshuDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_TESHU_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Result[tolua_index],"tagResult_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Result of class  tagArmTeshuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagArmTeshuDef_ToLua_Result
static int tolua_set_GameEngineTolua_tagArmTeshuDef_ToLua_Result(lua_State* tolua_S)
{
 int tolua_index;
  tagArmTeshuDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagArmTeshuDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_TESHU_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Result[tolua_index] = *((tagResult_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DefDesc of class  tagArmTeshuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmTeshuDef_ToLua_DefDesc
static int tolua_get_tagArmTeshuDef_ToLua_DefDesc(lua_State* tolua_S)
{
  tagArmTeshuDef_ToLua* self = (tagArmTeshuDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->DefDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DefDesc of class  tagArmTeshuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmTeshuDef_ToLua_DefDesc
static int tolua_set_tagArmTeshuDef_ToLua_DefDesc(lua_State* tolua_S)
{
  tagArmTeshuDef_ToLua* self = (tagArmTeshuDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->DefDesc,tolua_tostring(tolua_S,2,0),MAX_TESHU_DESC-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: getGemPagDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getGemPagDef00
static int tolua_GameEngineTolua_getGemPagDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagGemPagDef_ToLua* tolua_ret = (const tagGemPagDef_ToLua*)  getGemPagDef(nId);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagGemPagDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGemPagDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getArmTeshuDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getArmTeshuDef00
static int tolua_GameEngineTolua_getArmTeshuDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagArmTeshuDef_ToLua* tolua_ret = (const tagArmTeshuDef_ToLua*)  getArmTeshuDef(nId);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagArmTeshuDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmTeshuDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUnusedGridNum of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getUnusedGridNum00
static int tolua_GameEngineTolua_Container_getUnusedGridNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUnusedGridNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getUnusedGridNum(nListType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUnusedGridNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContainerMaxNum of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getContainerMaxNum00
static int tolua_GameEngineTolua_Container_getContainerMaxNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContainerMaxNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getContainerMaxNum(nListType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContainerMaxNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItem of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getItem00
static int tolua_GameEngineTolua_Container_getItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItem'",NULL);
#endif
  {
   Item& tolua_ret = (Item&)  self->getItem(id);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Item");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemCount of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getItemCount00
static int tolua_GameEngineTolua_Container_getItemCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int Id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemCount'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemCount(Id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemTotalNum of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getItemTotalNum00
static int tolua_GameEngineTolua_Container_getItemTotalNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemTotalNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemTotalNum(nId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemTotalNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItem of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getItem01
static int tolua_GameEngineTolua_Container_getItem01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  int GridIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItem'",NULL);
#endif
  {
   Item& tolua_ret = (Item&)  self->getItem(nListType,GridIndex);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Item");
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_Container_getItem00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItem of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getItem02
static int tolua_GameEngineTolua_Container_getItem02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  tdr_ulonglong WID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItem'",NULL);
#endif
  {
   Item* tolua_ret = (Item*)  self->getItem(WID);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"Item");
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_Container_getItem01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemLink of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getItemLink00
static int tolua_GameEngineTolua_Container_getItemLink00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  int GridIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemLink'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getItemLink(nListType,GridIndex);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemLink'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemResultID of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getItemResultID00
static int tolua_GameEngineTolua_Container_getItemResultID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const tagItemDef_ToLua",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  const tagItemDef_ToLua* pItemDef = ((const tagItemDef_ToLua*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemResultID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemResultID(pItemDef);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemResultID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canUseItemPre of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_canUseItemPre00
static int tolua_GameEngineTolua_Container_canUseItemPre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  Item* useItem = ((Item*)  tolua_tousertype(tolua_S,2,0));
  int nTargetID = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canUseItemPre'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canUseItemPre(*useItem,nTargetID);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canUseItemPre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isExpendableItemLimitdByScene of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_isExpendableItemLimitdByScene00
static int tolua_GameEngineTolua_Container_isExpendableItemLimitdByScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  Item* used_Item = ((Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isExpendableItemLimitdByScene'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isExpendableItemLimitdByScene(*used_Item);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isExpendableItemLimitdByScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canUseExpendableItem of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_canUseExpendableItem00
static int tolua_GameEngineTolua_Container_canUseExpendableItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canUseExpendableItem'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canUseExpendableItem();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canUseExpendableItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: usedItem of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_usedItem00
static int tolua_GameEngineTolua_Container_usedItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  int GridIndex = ((int)  tolua_tonumber(tolua_S,3,0));
  int wearPos = ((int)  tolua_tonumber(tolua_S,4,0));
  int nTargetIndex = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'usedItem'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->usedItem(nListType,GridIndex,wearPos,nTargetIndex);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'usedItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: usedItem of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_usedItem01
static int tolua_GameEngineTolua_Container_usedItem01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'usedItem'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->usedItem(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_Container_usedItem00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmmCount of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getAmmCount00
static int tolua_GameEngineTolua_Container_getAmmCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nAmmType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmmCount'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getAmmCount(nAmmType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmmCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNoneGridIndex of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getNoneGridIndex00
static int tolua_GameEngineTolua_Container_getNoneGridIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,4,0));
  bool bBind = ((bool)  tolua_toboolean(tolua_S,5,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNoneGridIndex'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getNoneGridIndex(nListType,nItemId,nIndex,bBind);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNoneGridIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurBootyId of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getCurBootyId00
static int tolua_GameEngineTolua_Container_getCurBootyId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurBootyId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCurBootyId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurBootyId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBootyCount of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getBootyCount00
static int tolua_GameEngineTolua_Container_getBootyCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBootyCount'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getBootyCount(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBootyCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBootyItem of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getBootyItem00
static int tolua_GameEngineTolua_Container_getBootyItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int GridIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBootyItem'",NULL);
#endif
  {
   Item& tolua_ret = (Item&)  self->getBootyItem(id,GridIndex);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Item");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBootyItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: closeBooty of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_closeBooty00
static int tolua_GameEngineTolua_Container_closeBooty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'closeBooty'",NULL);
#endif
  {
   self->closeBooty(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'closeBooty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_GetInfo of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_send_GetInfo00
static int tolua_GameEngineTolua_Container_send_GetInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_GetInfo'",NULL);
#endif
  {
   self->send_GetInfo();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_GetInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_MoveItem of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_send_MoveItem00
static int tolua_GameEngineTolua_Container_send_MoveItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int srcList = ((int)  tolua_tonumber(tolua_S,2,0));
  int destList = ((int)  tolua_tonumber(tolua_S,3,0));
  int srcGridIndex = ((int)  tolua_tonumber(tolua_S,4,0));
  int srcNum = ((int)  tolua_tonumber(tolua_S,5,0));
  int destGridIndex = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_MoveItem'",NULL);
#endif
  {
   self->send_MoveItem(srcList,destList,srcGridIndex,srcNum,destGridIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_MoveItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_Arranger of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_send_Arranger00
static int tolua_GameEngineTolua_Container_send_Arranger00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_Arranger'",NULL);
#endif
  {
   self->send_Arranger();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_Arranger'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_MoveMoney of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_send_MoveMoney00
static int tolua_GameEngineTolua_Container_send_MoveMoney00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int srcAtterId = ((int)  tolua_tonumber(tolua_S,2,0));
  int destAtterId = ((int)  tolua_tonumber(tolua_S,3,0));
  int money = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_MoveMoney'",NULL);
#endif
  {
   self->send_MoveMoney(srcAtterId,destAtterId,money);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_MoveMoney'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_CloseStash of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_send_CloseStash00
static int tolua_GameEngineTolua_Container_send_CloseStash00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_CloseStash'",NULL);
#endif
  {
   self->send_CloseStash();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_CloseStash'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_PackageArrange of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_send_PackageArrange00
static int tolua_GameEngineTolua_Container_send_PackageArrange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int ListType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_PackageArrange'",NULL);
#endif
  {
   self->send_PackageArrange(ListType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_PackageArrange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_PickItem of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_send_PickItem00
static int tolua_GameEngineTolua_Container_send_PickItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_PickItem'",NULL);
#endif
  {
   self->send_PickItem(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_PickItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_PickAllItem of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_send_PickAllItem00
static int tolua_GameEngineTolua_Container_send_PickAllItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_PickAllItem'",NULL);
#endif
  {
   self->send_PickAllItem(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_PickAllItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_SelectItem of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_send_SelectItem00
static int tolua_GameEngineTolua_Container_send_SelectItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int selectIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_SelectItem'",NULL);
#endif
  {
   self->send_SelectItem(id,selectIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_SelectItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_UsedExpendableItem of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_send_UsedExpendableItem00
static int tolua_GameEngineTolua_Container_send_UsedExpendableItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  int GridIndex = ((int)  tolua_tonumber(tolua_S,3,0));
  int nTargetIndex = ((int)  tolua_tonumber(tolua_S,4,0));
  int nSubIndex = ((int)  tolua_tonumber(tolua_S,5,1));
  int UseType = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_UsedExpendableItem'",NULL);
#endif
  {
   self->send_UsedExpendableItem(nListType,GridIndex,nTargetIndex,nSubIndex,UseType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_UsedExpendableItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_PetUsedItem of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_send_PetUsedItem00
static int tolua_GameEngineTolua_Container_send_PetUsedItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  int GridIndex = ((int)  tolua_tonumber(tolua_S,3,0));
  int nHeightId = ((int)  tolua_tonumber(tolua_S,4,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_PetUsedItem'",NULL);
#endif
  {
   self->send_PetUsedItem(nListType,GridIndex,nHeightId,nLowId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_PetUsedItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: passItemCD of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_passItemCD00
static int tolua_GameEngineTolua_Container_passItemCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'passItemCD'",NULL);
#endif
  {
   self->passItemCD(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'passItemCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemCD of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getItemCD00
static int tolua_GameEngineTolua_Container_getItemCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemCD'",NULL);
#endif
  {
   float tolua_ret = (float)  self->getItemCD(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isItemInCD of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_isItemInCD00
static int tolua_GameEngineTolua_Container_isItemInCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isItemInCD'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isItemInCD(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isItemInCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemCDPassTime of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getItemCDPassTime00
static int tolua_GameEngineTolua_Container_getItemCDPassTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemCDPassTime'",NULL);
#endif
  {
   float tolua_ret = (float)  self->getItemCDPassTime(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemCDPassTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setItemTypeCD of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_setItemTypeCD00
static int tolua_GameEngineTolua_Container_setItemTypeCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int type = ((int)  tolua_tonumber(tolua_S,2,0));
  int cd = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setItemTypeCD'",NULL);
#endif
  {
   self->setItemTypeCD(type,cd);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setItemTypeCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canDragIn of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_canDragIn00
static int tolua_GameEngineTolua_Container_canDragIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canDragIn'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canDragIn(nListType,nId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canDragIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_ChangeCoin of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_send_ChangeCoin00
static int tolua_GameEngineTolua_Container_send_ChangeCoin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nWay = ((int)  tolua_tonumber(tolua_S,2,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,3,0));
  int npcId = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_ChangeCoin'",NULL);
#endif
  {
   self->send_ChangeCoin(nWay,nCount,npcId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_ChangeCoin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestSetContainerLock of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_requestSetContainerLock00
static int tolua_GameEngineTolua_Container_requestSetContainerLock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  const char* szPwd = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestSetContainerLock'",NULL);
#endif
  {
   self->requestSetContainerLock(szPwd);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestSetContainerLock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestChangeContainerPsd of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_requestChangeContainerPsd00
static int tolua_GameEngineTolua_Container_requestChangeContainerPsd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  const char* szOldPwd = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* szNewPwd = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestChangeContainerPsd'",NULL);
#endif
  {
   self->requestChangeContainerPsd(szOldPwd,szNewPwd);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestChangeContainerPsd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestCheckContainerPsd of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_requestCheckContainerPsd00
static int tolua_GameEngineTolua_Container_requestCheckContainerPsd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  const char* szPwd = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestCheckContainerPsd'",NULL);
#endif
  {
   self->requestCheckContainerPsd(szPwd);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestCheckContainerPsd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestCancelContainerLock of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_requestCancelContainerLock00
static int tolua_GameEngineTolua_Container_requestCancelContainerLock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  const char* szPwd = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestCancelContainerLock'",NULL);
#endif
  {
   self->requestCancelContainerLock(szPwd);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestCancelContainerLock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestLockContainer of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_requestLockContainer00
static int tolua_GameEngineTolua_Container_requestLockContainer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestLockContainer'",NULL);
#endif
  {
   self->requestLockContainer();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestLockContainer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContainerLockState of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getContainerLockState00
static int tolua_GameEngineTolua_Container_getContainerLockState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContainerLockState'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getContainerLockState();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContainerLockState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStuffNum of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getStuffNum00
static int tolua_GameEngineTolua_Container_getStuffNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int ListType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStuffNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getStuffNum(ListType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStuffNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemPos of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getItemPos00
static int tolua_GameEngineTolua_Container_getItemPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemID = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemPos'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemPos(nListType,nItemID);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isUseItemPre of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_isUseItemPre00
static int tolua_GameEngineTolua_Container_isUseItemPre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isUseItemPre'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isUseItemPre();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isUseItemPre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUnLockItemPos of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getUnLockItemPos00
static int tolua_GameEngineTolua_Container_getUnLockItemPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemID = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUnLockItemPos'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getUnLockItemPos(nListType,nItemID);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUnLockItemPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestAddStashGrid of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_requestAddStashGrid00
static int tolua_GameEngineTolua_Container_requestAddStashGrid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestAddStashGrid'",NULL);
#endif
  {
   self->requestAddStashGrid();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestAddStashGrid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBindItemNum of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getBindItemNum00
static int tolua_GameEngineTolua_Container_getBindItemNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemID = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBindItemNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getBindItemNum(nListType,nItemID);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBindItemNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUnBindItemNum of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getUnBindItemNum00
static int tolua_GameEngineTolua_Container_getUnBindItemNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemID = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUnBindItemNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getUnBindItemNum(nListType,nItemID);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUnBindItemNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUnBindItemNumNotCheckLock of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getUnBindItemNumNotCheckLock00
static int tolua_GameEngineTolua_Container_getUnBindItemNumNotCheckLock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemID = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUnBindItemNumNotCheckLock'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getUnBindItemNumNotCheckLock(nListType,nItemID);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUnBindItemNumNotCheckLock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBindItemNumNotCheckLock of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_getBindItemNumNotCheckLock00
static int tolua_GameEngineTolua_Container_getBindItemNumNotCheckLock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemID = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBindItemNumNotCheckLock'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getBindItemNumNotCheckLock(nListType,nItemID);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBindItemNumNotCheckLock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canUseTaskItem of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_canUseTaskItem00
static int tolua_GameEngineTolua_Container_canUseTaskItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canUseTaskItem'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canUseTaskItem(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canUseTaskItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onItemLockChange of class  Container */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Container_onItemLockChange00
static int tolua_GameEngineTolua_Container_onItemLockChange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Container",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Container* self = (Container*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onItemLockChange'",NULL);
#endif
  {
   self->onItemLockChange();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onItemLockChange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: bitAnd */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_bitAnd00
static int tolua_GameEngineTolua_bitAnd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nLhs = ((int)  tolua_tonumber(tolua_S,1,0));
  int nRhs = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  bitAnd(nLhs,nRhs);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bitAnd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: bitAndOperation */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_bitAndOperation00
static int tolua_GameEngineTolua_bitAndOperation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nLhs = ((int)  tolua_tonumber(tolua_S,1,0));
  int nRhs = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  bitAndOperation(nLhs,nRhs);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bitAndOperation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: bitOr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_bitOr00
static int tolua_GameEngineTolua_bitOr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nLhs = ((int)  tolua_tonumber(tolua_S,1,0));
  int nRhs = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  bitOr(nLhs,nRhs);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bitOr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: bitNotAnd */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_bitNotAnd00
static int tolua_GameEngineTolua_bitNotAnd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nLhs = ((int)  tolua_tonumber(tolua_S,1,0));
  int nRhs = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  bitNotAnd(nLhs,nRhs);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bitNotAnd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getItemType */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getItemType00
static int tolua_GameEngineTolua_getItemType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getItemType(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getItemDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getItemDef00
static int tolua_GameEngineTolua_getItemDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   tagItemDef_ToLua* tolua_ret = (tagItemDef_ToLua*)  getItemDef(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagItemDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getArmAttrName */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getArmAttrName00
static int tolua_GameEngineTolua_getArmAttrName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const char* tolua_ret = (const char*)  getArmAttrName(id);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmAttrName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getArmAttrValue */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getArmAttrValue00
static int tolua_GameEngineTolua_getArmAttrValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  int nAttrIdx = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  getArmAttrValue(id,nAttrIdx);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmAttrValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getAddAttrDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getAddAttrDef00
static int tolua_GameEngineTolua_getAddAttrDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   tagAddAttrDef_ToLua* tolua_ret = (tagAddAttrDef_ToLua*)  getAddAttrDef(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagAddAttrDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAddAttrDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getSuitSet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getSuitSet00
static int tolua_GameEngineTolua_getSuitSet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   tagSuitSet_ToLua* tolua_ret = (tagSuitSet_ToLua*)  getSuitSet(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagSuitSet_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSuitSet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getArmGradeDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getArmGradeDef00
static int tolua_GameEngineTolua_getArmGradeDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nArmType = ((int)  tolua_tonumber(tolua_S,1,0));
  int nArmLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   tagArmGradeDef_ToLua* tolua_ret = (tagArmGradeDef_ToLua*)  getArmGradeDef(nArmType,nArmLevel);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagArmGradeDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmGradeDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getArmHideAttrDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getArmHideAttrDef00
static int tolua_GameEngineTolua_getArmHideAttrDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nCareer = ((int)  tolua_tonumber(tolua_S,1,0));
  int nArmStarLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   tagArmHideAttrDef_ToLua* tolua_ret = (tagArmHideAttrDef_ToLua*)  getArmHideAttrDef(nCareer,nArmStarLevel);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagArmHideAttrDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmHideAttrDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getArmStarDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getArmStarDef00
static int tolua_GameEngineTolua_getArmStarDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nStar = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   tagArmStarDef_ToLua* tolua_ret = (tagArmStarDef_ToLua*)  getArmStarDef(nStar);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagArmStarDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmStarDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getArmAddAttrDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getArmAddAttrDef00
static int tolua_GameEngineTolua_getArmAddAttrDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   tagArmAddAttrDef_ToLua* tolua_ret = (tagArmAddAttrDef_ToLua*)  getArmAddAttrDef(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagArmAddAttrDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmAddAttrDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getAddAttrBaseDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getAddAttrBaseDef00
static int tolua_GameEngineTolua_getAddAttrBaseDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nLv = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   tagAddAttrBaseDef_ToLua* tolua_ret = (tagAddAttrBaseDef_ToLua*)  getAddAttrBaseDef(nLv);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagAddAttrBaseDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAddAttrBaseDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getFixedAddAttr */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getFixedAddAttr00
static int tolua_GameEngineTolua_getFixedAddAttr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   tagFixedAddAttr_ToLua* tolua_ret = (tagFixedAddAttr_ToLua*)  getFixedAddAttr(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagFixedAddAttr_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFixedAddAttr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getNewAddAttrDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getNewAddAttrDef00
static int tolua_GameEngineTolua_getNewAddAttrDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagNewAddAttrDef_ToLua* tolua_ret = (const tagNewAddAttrDef_ToLua*)  getNewAddAttrDef(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagNewAddAttrDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNewAddAttrDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getAddAttrRandDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getAddAttrRandDef00
static int tolua_GameEngineTolua_getAddAttrRandDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int level = ((int)  tolua_tonumber(tolua_S,1,0));
  int important = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   const tagAddAttrRandDef_ToLua* tolua_ret = (const tagAddAttrRandDef_ToLua*)  getAddAttrRandDef(level,important);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagAddAttrRandDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAddAttrRandDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getItemResultDesc */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getItemResultDesc00
static int tolua_GameEngineTolua_getItemResultDesc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagItemResultDesc_ToLua* tolua_ret = (const tagItemResultDesc_ToLua*)  getItemResultDesc(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagItemResultDesc_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemResultDesc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getBaoXiangDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getBaoXiangDef00
static int tolua_GameEngineTolua_getBaoXiangDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagBaoXiangDef_ToLua* tolua_ret = (const tagBaoXiangDef_ToLua*)  getBaoXiangDef(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagBaoXiangDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBaoXiangDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getItemColor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getItemColor00
static int tolua_GameEngineTolua_getItemColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int important = ((int)  tolua_tonumber(tolua_S,1,0));
  int suitsetId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   const std::string tolua_ret = (const std::string)  getItemColor(important,suitsetId);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getArmExtraDur */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getArmExtraDur00
static int tolua_GameEngineTolua_getArmExtraDur00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"tagItemDef_ToLua",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  tagItemDef_ToLua* pItemDef = ((tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0));
  {
   int tolua_ret = (int)  getArmExtraDur(pItemDef);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmExtraDur'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getDisplayName */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getDisplayName00
static int tolua_GameEngineTolua_getDisplayName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"tagItemDef_ToLua",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  tagItemDef_ToLua* pItemDef = ((tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0));
  {
   const char* tolua_ret = (const char*)  getDisplayName(pItemDef);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDisplayName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: itemid_num */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_itemid_num00
static int tolua_GameEngineTolua_itemid_num00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"tagItemDef_ToLua",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  tagItemDef_ToLua* pstItemDef = ((tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0));
  {
   int tolua_ret = (int)  itemid_num(pstItemDef);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'itemid_num'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: isSameWid */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_isSameWid00
static int tolua_GameEngineTolua_isSameWid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  tdr_ulonglong lhs = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,1,0));
  tdr_ulonglong rhs = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  isSameWid(lhs,rhs);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isSameWid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: isItemCanUsed */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_isItemCanUsed00
static int tolua_GameEngineTolua_isItemCanUsed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nItemSubType = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  isItemCanUsed(nItemSubType);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isItemCanUsed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDisplayIndex of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getDisplayIndex00
static int tolua_GameEngineTolua_Item_getDisplayIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Item::getDisplayIndex(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDisplayIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setItemDate of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_setItemDate00
static int tolua_GameEngineTolua_Item_setItemDate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int type = ((int)  tolua_tonumber(tolua_S,2,0));
  void* pValue = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setItemDate'",NULL);
#endif
  {
   self->setItemDate(type,pValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setItemDate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemDef of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemDef00
static int tolua_GameEngineTolua_Item_getItemDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemDef'",NULL);
#endif
  {
   tagItemDef_ToLua* tolua_ret = (tagItemDef_ToLua*)  self->getItemDef();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagItemDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemId of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemId00
static int tolua_GameEngineTolua_Item_getItemId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemWId of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemWId00
static int tolua_GameEngineTolua_Item_getItemWId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemWId'",NULL);
#endif
  {
   tdr_ulonglong tolua_ret = (tdr_ulonglong)  self->getItemWId();
   {
#ifdef __cplusplus
    void* tolua_obj = new tdr_ulonglong(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(tdr_ulonglong));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemWId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canUsed of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_canUsed00
static int tolua_GameEngineTolua_Item_canUsed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canUsed'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canUsed();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canUsed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canExchange of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_canExchange00
static int tolua_GameEngineTolua_Item_canExchange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canExchange'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canExchange();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canExchange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGridIdx of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getGridIdx00
static int tolua_GameEngineTolua_Item_getGridIdx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGridIdx'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getGridIdx();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGridIdx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getListType of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getListType00
static int tolua_GameEngineTolua_Item_getListType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getListType'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getListType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getListType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemType of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemType00
static int tolua_GameEngineTolua_Item_getItemType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemType'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemSubType of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemSubType00
static int tolua_GameEngineTolua_Item_getItemSubType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemSubType'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemSubType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemSubType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNum of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getNum00
static int tolua_GameEngineTolua_Item_getNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNum of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_setNum00
static int tolua_GameEngineTolua_Item_setNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int nNUm = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNum'",NULL);
#endif
  {
   self->setNum(nNUm);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemDur of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemDur00
static int tolua_GameEngineTolua_Item_getItemDur00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemDur'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemDur();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemDur'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemMaxDur of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemMaxDur00
static int tolua_GameEngineTolua_Item_getItemMaxDur00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemMaxDur'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemMaxDur();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemMaxDur'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRepairPrice of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getRepairPrice00
static int tolua_GameEngineTolua_Item_getRepairPrice00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRepairPrice'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getRepairPrice();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRepairPrice'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSellPrice of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getSellPrice00
static int tolua_GameEngineTolua_Item_getSellPrice00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSellPrice'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSellPrice();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSellPrice'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStart of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getStart00
static int tolua_GameEngineTolua_Item_getStart00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStart'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getStart();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStart'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmPefectStarNum of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getArmPefectStarNum00
static int tolua_GameEngineTolua_Item_getArmPefectStarNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmPefectStarNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getArmPefectStarNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmPefectStarNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGemStart of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getGemStart00
static int tolua_GameEngineTolua_Item_getGemStart00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGemStart'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getGemStart();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGemStart'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGemPower of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getGemPower00
static int tolua_GameEngineTolua_Item_getGemPower00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGemPower'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getGemPower();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGemPower'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStallSellPrice of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getStallSellPrice00
static int tolua_GameEngineTolua_Item_getStallSellPrice00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStallSellPrice'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getStallSellPrice();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStallSellPrice'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStallGridWID of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getStallGridWID00
static int tolua_GameEngineTolua_Item_getStallGridWID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStallGridWID'",NULL);
#endif
  {
   tdr_ulonglong tolua_ret = (tdr_ulonglong)  self->getStallGridWID();
   {
#ifdef __cplusplus
    void* tolua_obj = new tdr_ulonglong(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(tdr_ulonglong));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStallGridWID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFight of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getFight00
static int tolua_GameEngineTolua_Item_getFight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFight'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getFight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHoleNum of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getHoleNum00
static int tolua_GameEngineTolua_Item_getHoleNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHoleNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getHoleNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHoleNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHoleGemResultIndex of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getHoleGemResultIndex00
static int tolua_GameEngineTolua_Item_getHoleGemResultIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHoleGemResultIndex'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getHoleGemResultIndex(nIndex);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHoleGemResultIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHoleGemAttrIdx of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getHoleGemAttrIdx00
static int tolua_GameEngineTolua_Item_getHoleGemAttrIdx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHoleGemAttrIdx'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getHoleGemAttrIdx(nIndex);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHoleGemAttrIdx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHoleGemId of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getHoleGemId00
static int tolua_GameEngineTolua_Item_getHoleGemId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHoleGemId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getHoleGemId(nIndex);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHoleGemId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHoleGemColor of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getHoleGemColor00
static int tolua_GameEngineTolua_Item_getHoleGemColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHoleGemColor'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getHoleGemColor(nIndex);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHoleGemColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHoleGemStar of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getHoleGemStar00
static int tolua_GameEngineTolua_Item_getHoleGemStar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHoleGemStar'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getHoleGemStar(nIndex);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHoleGemStar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHoleGemPower of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getHoleGemPower00
static int tolua_GameEngineTolua_Item_getHoleGemPower00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHoleGemPower'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getHoleGemPower(nIndex);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHoleGemPower'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHoleGemMul of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getHoleGemMul00
static int tolua_GameEngineTolua_Item_getHoleGemMul00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHoleGemMul'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getHoleGemMul(nIndex);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHoleGemMul'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemSurplus of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemSurplus00
static int tolua_GameEngineTolua_Item_getItemSurplus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemSurplus'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemSurplus();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemSurplus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStrengthenCount of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getStrengthenCount00
static int tolua_GameEngineTolua_Item_getStrengthenCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStrengthenCount'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getStrengthenCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStrengthenCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: needAmm of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_needAmm00
static int tolua_GameEngineTolua_Item_needAmm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'needAmm'",NULL);
#endif
  {
   int tolua_ret = (int)  self->needAmm();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'needAmm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isAmm of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isAmm00
static int tolua_GameEngineTolua_Item_isAmm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isAmm'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isAmm();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isAmm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isExpendable of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isExpendable00
static int tolua_GameEngineTolua_Item_isExpendable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isExpendable'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isExpendable();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isExpendable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPetUsed of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isPetUsed00
static int tolua_GameEngineTolua_Item_isPetUsed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPetUsed'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPetUsed();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPetUsed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isRing of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isRing00
static int tolua_GameEngineTolua_Item_isRing00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isRing'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isRing();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isRing'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isAmuleft of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isAmuleft00
static int tolua_GameEngineTolua_Item_isAmuleft00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isAmuleft'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isAmuleft();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isAmuleft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFashionSuit of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isFashionSuit00
static int tolua_GameEngineTolua_Item_isFashionSuit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFashionSuit'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFashionSuit();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFashionSuit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isItemBind of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isItemBind00
static int tolua_GameEngineTolua_Item_isItemBind00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isItemBind'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isItemBind();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isItemBind'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isArmFengYin of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isArmFengYin00
static int tolua_GameEngineTolua_Item_isArmFengYin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isArmFengYin'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isArmFengYin();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isArmFengYin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isArmIdentity of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isArmIdentity00
static int tolua_GameEngineTolua_Item_isArmIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isArmIdentity'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isArmIdentity();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isArmIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUnFengYinArmMoney of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getUnFengYinArmMoney00
static int tolua_GameEngineTolua_Item_getUnFengYinArmMoney00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUnFengYinArmMoney'",NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getUnFengYinArmMoney();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUnFengYinArmMoney'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reSetDur of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_reSetDur00
static int tolua_GameEngineTolua_Item_reSetDur00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reSetDur'",NULL);
#endif
  {
   self->reSetDur();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reSetDur'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateItemData of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_updateItemData00
static int tolua_GameEngineTolua_Item_updateItemData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateItemData'",NULL);
#endif
  {
   self->updateItemData();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateItemData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmStarAddValue of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getArmStarAddValue00
static int tolua_GameEngineTolua_Item_getArmStarAddValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmStarAddValue'",NULL);
#endif
  {
   float tolua_ret = (float)  self->getArmStarAddValue(nType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmStarAddValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmAddAttrNum of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getArmAddAttrNum00
static int tolua_GameEngineTolua_Item_getArmAddAttrNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmAddAttrNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getArmAddAttrNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmAddAttrNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmAddAttr of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getArmAddAttr00
static int tolua_GameEngineTolua_Item_getArmAddAttr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmAddAttr'",NULL);
#endif
  {
   tagAddAttrInst_ToLua* tolua_ret = (tagAddAttrInst_ToLua*)  self->getArmAddAttr(nIndex);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagAddAttrInst_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmAddAttr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: releaseItem of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_releaseItem00
static int tolua_GameEngineTolua_Item_releaseItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'releaseItem'",NULL);
#endif
  {
   self->releaseItem();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'releaseItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDisplayName of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getDisplayName00
static int tolua_GameEngineTolua_Item_getDisplayName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDisplayName'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getDisplayName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDisplayName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemUsedMapId of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemUsedMapId00
static int tolua_GameEngineTolua_Item_getItemUsedMapId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemUsedMapId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemUsedMapId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemUsedMapId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemValidEndTime of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemValidEndTime00
static int tolua_GameEngineTolua_Item_getItemValidEndTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemValidEndTime'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemValidEndTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemValidEndTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isExtend of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isExtend00
static int tolua_GameEngineTolua_Item_isExtend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isExtend'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isExtend();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isExtend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFairyKeyIn of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isFairyKeyIn00
static int tolua_GameEngineTolua_Item_isFairyKeyIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFairyKeyIn'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFairyKeyIn();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFairyKeyIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getExtendedFromDefID of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getExtendedFromDefID00
static int tolua_GameEngineTolua_Item_getExtendedFromDefID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getExtendedFromDefID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getExtendedFromDefID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getExtendedFromDefID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getExtendedResult of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getExtendedResult00
static int tolua_GameEngineTolua_Item_getExtendedResult00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getExtendedResult'",NULL);
#endif
  {
   tagExtendedResult_ToLua* tolua_ret = (tagExtendedResult_ToLua*)  self->getExtendedResult();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagExtendedResult_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getExtendedResult'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isIdentity of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isIdentity00
static int tolua_GameEngineTolua_Item_isIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isIdentity'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isIdentity();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIdentityLevel of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getIdentityLevel00
static int tolua_GameEngineTolua_Item_getIdentityLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIdentityLevel'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getIdentityLevel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIdentityLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isBackLevelUp of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isBackLevelUp00
static int tolua_GameEngineTolua_Item_isBackLevelUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isBackLevelUp'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isBackLevelUp();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isBackLevelUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isBackChange of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isBackChange00
static int tolua_GameEngineTolua_Item_isBackChange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isBackChange'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isBackChange();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isBackChange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canRepair of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_canRepair00
static int tolua_GameEngineTolua_Item_canRepair00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canRepair'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canRepair();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canRepair'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isArmItem of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isArmItem00
static int tolua_GameEngineTolua_Item_isArmItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isArmItem'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isArmItem();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isArmItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAddAttrInst of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getAddAttrInst00
static int tolua_GameEngineTolua_Item_getAddAttrInst00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAddAttrInst'",NULL);
#endif
  {
   const tagAddAttrInst_ToLua* tolua_ret = (const tagAddAttrInst_ToLua*)  self->getAddAttrInst();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagAddAttrInst_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAddAttrInst'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getKeyEndTime of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getKeyEndTime00
static int tolua_GameEngineTolua_Item_getKeyEndTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getKeyEndTime'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getKeyEndTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getKeyEndTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isValidEnd of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_isValidEnd00
static int tolua_GameEngineTolua_Item_isValidEnd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isValidEnd'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isValidEnd();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isValidEnd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getValidLeftTime of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getValidLeftTime00
static int tolua_GameEngineTolua_Item_getValidLeftTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getValidLeftTime'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getValidLeftTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getValidLeftTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setValidLeftTime of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_setValidLeftTime00
static int tolua_GameEngineTolua_Item_setValidLeftTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int time = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setValidLeftTime'",NULL);
#endif
  {
   self->setValidLeftTime(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setValidLeftTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmAddStarValIdx of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getArmAddStarValIdx00
static int tolua_GameEngineTolua_Item_getArmAddStarValIdx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int nStarIdx = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmAddStarValIdx'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getArmAddStarValIdx(nStarIdx);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmAddStarValIdx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemInstVal1 of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemInstVal100
static int tolua_GameEngineTolua_Item_getItemInstVal100(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemInstVal1'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemInstVal1();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemInstVal1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemInstVal2 of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemInstVal200
static int tolua_GameEngineTolua_Item_getItemInstVal200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemInstVal2'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemInstVal2();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemInstVal2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemInstVal3 of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemInstVal300
static int tolua_GameEngineTolua_Item_getItemInstVal300(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemInstVal3'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemInstVal3();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemInstVal3'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemFlag of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemFlag00
static int tolua_GameEngineTolua_Item_getItemFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemFlag'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemFlag();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemMapNum of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemMapNum00
static int tolua_GameEngineTolua_Item_getItemMapNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemMapNum'",NULL);
#endif
  {
   char tolua_ret = (char)  self->getItemMapNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemMapNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemMapInfo of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemMapInfo00
static int tolua_GameEngineTolua_Item_getItemMapInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemMapInfo'",NULL);
#endif
  {
   tagItemMapInfo_ToLua* tolua_ret = (tagItemMapInfo_ToLua*)  self->getItemMapInfo(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagItemMapInfo_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemMapInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemMulVal of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getItemMulVal00
static int tolua_GameEngineTolua_Item_getItemMulVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int resultId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemMulVal'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemMulVal(resultId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemMulVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmWashAddAttrNum of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getArmWashAddAttrNum00
static int tolua_GameEngineTolua_Item_getArmWashAddAttrNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmWashAddAttrNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getArmWashAddAttrNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmWashAddAttrNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmWashAddAttrInst of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getArmWashAddAttrInst00
static int tolua_GameEngineTolua_Item_getArmWashAddAttrInst00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int idx = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmWashAddAttrInst'",NULL);
#endif
  {
   tagAddAttrInst_ToLua* tolua_ret = (tagAddAttrInst_ToLua*)  self->getArmWashAddAttrInst(idx);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagAddAttrInst_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmWashAddAttrInst'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAttrFengYin of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_IsAttrFengYin00
static int tolua_GameEngineTolua_Item_IsAttrFengYin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int nIdx = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAttrFengYin'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAttrFengYin(nIdx);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAttrFengYin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLostTotemState of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getLostTotemState00
static int tolua_GameEngineTolua_Item_getLostTotemState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLostTotemState'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getLostTotemState();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLostTotemState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStepLv of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getStepLv00
static int tolua_GameEngineTolua_Item_getStepLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStepLv'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getStepLv();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStepLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStepUse of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getStepUse00
static int tolua_GameEngineTolua_Item_getStepUse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStepUse'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getStepUse();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStepUse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmSkillMax of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getArmSkillMax00
static int tolua_GameEngineTolua_Item_getArmSkillMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmSkillMax'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getArmSkillMax();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmSkillMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmSkillNum of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getArmSkillNum00
static int tolua_GameEngineTolua_Item_getArmSkillNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmSkillNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getArmSkillNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmSkillNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmSkillOne of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getArmSkillOne00
static int tolua_GameEngineTolua_Item_getArmSkillOne00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int idx = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmSkillOne'",NULL);
#endif
  {
   tagArmSkillOne_ToLua* tolua_ret = (tagArmSkillOne_ToLua*)  self->getArmSkillOne(idx);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagArmSkillOne_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmSkillOne'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUnRealBackID of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getUnRealBackID00
static int tolua_GameEngineTolua_Item_getUnRealBackID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUnRealBackID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getUnRealBackID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUnRealBackID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUnRealBackTmEnd of class  Item */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Item_getUnRealBackTmEnd00
static int tolua_GameEngineTolua_Item_getUnRealBackTmEnd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUnRealBackTmEnd'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getUnRealBackTmEnd();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUnRealBackTmEnd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_Item of class  tagItemData */
#ifndef TOLUA_DISABLE_tolua_get_tagItemData_m_Item
static int tolua_get_tagItemData_m_Item(lua_State* tolua_S)
{
  tagItemData* self = (tagItemData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_Item'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->m_Item,"ROLEITEM");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_Item of class  tagItemData */
#ifndef TOLUA_DISABLE_tolua_set_tagItemData_m_Item
static int tolua_set_tagItemData_m_Item(lua_State* tolua_S)
{
  tagItemData* self = (tagItemData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_Item'",NULL);
  if (!tolua_isusertype(tolua_S,2,"ROLEITEM",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_Item = *((ROLEITEM*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_Arm of class  tagItemData */
#ifndef TOLUA_DISABLE_tolua_get_tagItemData_m_Arm
static int tolua_get_tagItemData_m_Arm(lua_State* tolua_S)
{
  tagItemData* self = (tagItemData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_Arm'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->m_Arm,"ROLEARM");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_Arm of class  tagItemData */
#ifndef TOLUA_DISABLE_tolua_set_tagItemData_m_Arm
static int tolua_set_tagItemData_m_Arm(lua_State* tolua_S)
{
  tagItemData* self = (tagItemData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_Arm'",NULL);
  if (!tolua_isusertype(tolua_S,2,"ROLEARM",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_Arm = *((ROLEARM*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddAttrID of class  tagAddAttrInst_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrInst_ToLua_unsigned_AddAttrID
static int tolua_get_tagAddAttrInst_ToLua_unsigned_AddAttrID(lua_State* tolua_S)
{
  tagAddAttrInst_ToLua* self = (tagAddAttrInst_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AddAttrID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddAttrID of class  tagAddAttrInst_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrInst_ToLua_unsigned_AddAttrID
static int tolua_set_tagAddAttrInst_ToLua_unsigned_AddAttrID(lua_State* tolua_S)
{
  tagAddAttrInst_ToLua* self = (tagAddAttrInst_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AddAttrID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Val of class  tagAddAttrInst_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrInst_ToLua_unsigned_Val
static int tolua_get_tagAddAttrInst_ToLua_unsigned_Val(lua_State* tolua_S)
{
  tagAddAttrInst_ToLua* self = (tagAddAttrInst_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Val);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Val of class  tagAddAttrInst_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrInst_ToLua_unsigned_Val
static int tolua_set_tagAddAttrInst_ToLua_unsigned_Val(lua_State* tolua_S)
{
  tagAddAttrInst_ToLua* self = (tagAddAttrInst_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Val = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultID of class  tagExtendedResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagExtendedResult_ToLua_unsigned_ResultID
static int tolua_get_tagExtendedResult_ToLua_unsigned_ResultID(lua_State* tolua_S)
{
  tagExtendedResult_ToLua* self = (tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultID of class  tagExtendedResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagExtendedResult_ToLua_unsigned_ResultID
static int tolua_set_tagExtendedResult_ToLua_unsigned_ResultID(lua_State* tolua_S)
{
  tagExtendedResult_ToLua* self = (tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Res1 of class  tagExtendedResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagExtendedResult_ToLua_Res1
static int tolua_get_tagExtendedResult_ToLua_Res1(lua_State* tolua_S)
{
  tagExtendedResult_ToLua* self = (tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Res1'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Res1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Res1 of class  tagExtendedResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagExtendedResult_ToLua_Res1
static int tolua_set_tagExtendedResult_ToLua_Res1(lua_State* tolua_S)
{
  tagExtendedResult_ToLua* self = (tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Res1'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Res1,tolua_tostring(tolua_S,2,0),2-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal1 of class  tagExtendedResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagExtendedResult_ToLua_ResultVal1
static int tolua_get_tagExtendedResult_ToLua_ResultVal1(lua_State* tolua_S)
{
  tagExtendedResult_ToLua* self = (tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal1 of class  tagExtendedResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagExtendedResult_ToLua_ResultVal1
static int tolua_set_tagExtendedResult_ToLua_ResultVal1(lua_State* tolua_S)
{
  tagExtendedResult_ToLua* self = (tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal1 = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Res2 of class  tagExtendedResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagExtendedResult_ToLua_Res2
static int tolua_get_tagExtendedResult_ToLua_Res2(lua_State* tolua_S)
{
  tagExtendedResult_ToLua* self = (tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Res2'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Res2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Res2 of class  tagExtendedResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagExtendedResult_ToLua_Res2
static int tolua_set_tagExtendedResult_ToLua_Res2(lua_State* tolua_S)
{
  tagExtendedResult_ToLua* self = (tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Res2'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Res2,tolua_tostring(tolua_S,2,0),2-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal2 of class  tagExtendedResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagExtendedResult_ToLua_ResultVal2
static int tolua_get_tagExtendedResult_ToLua_ResultVal2(lua_State* tolua_S)
{
  tagExtendedResult_ToLua* self = (tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal2 of class  tagExtendedResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagExtendedResult_ToLua_ResultVal2
static int tolua_set_tagExtendedResult_ToLua_ResultVal2(lua_State* tolua_S)
{
  tagExtendedResult_ToLua* self = (tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal2 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal3 of class  tagExtendedResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagExtendedResult_ToLua_ResultVal3
static int tolua_get_tagExtendedResult_ToLua_ResultVal3(lua_State* tolua_S)
{
  tagExtendedResult_ToLua* self = (tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal3 of class  tagExtendedResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagExtendedResult_ToLua_ResultVal3
static int tolua_set_tagExtendedResult_ToLua_ResultVal3(lua_State* tolua_S)
{
  tagExtendedResult_ToLua* self = (tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal3 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal4 of class  tagExtendedResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagExtendedResult_ToLua_ResultVal4
static int tolua_get_tagExtendedResult_ToLua_ResultVal4(lua_State* tolua_S)
{
  tagExtendedResult_ToLua* self = (tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal4'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal4);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal4 of class  tagExtendedResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagExtendedResult_ToLua_ResultVal4
static int tolua_set_tagExtendedResult_ToLua_ResultVal4(lua_State* tolua_S)
{
  tagExtendedResult_ToLua* self = (tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal4'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal4 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MapID of class  tagItemMapInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemMapInfo_ToLua_MapID
static int tolua_get_tagItemMapInfo_ToLua_MapID(lua_State* tolua_S)
{
  tagItemMapInfo_ToLua* self = (tagItemMapInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MapID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MapID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MapID of class  tagItemMapInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemMapInfo_ToLua_MapID
static int tolua_set_tagItemMapInfo_ToLua_MapID(lua_State* tolua_S)
{
  tagItemMapInfo_ToLua* self = (tagItemMapInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MapID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MapID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: X of class  tagItemMapInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemMapInfo_ToLua_X
static int tolua_get_tagItemMapInfo_ToLua_X(lua_State* tolua_S)
{
  tagItemMapInfo_ToLua* self = (tagItemMapInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->X);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: X of class  tagItemMapInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemMapInfo_ToLua_X
static int tolua_set_tagItemMapInfo_ToLua_X(lua_State* tolua_S)
{
  tagItemMapInfo_ToLua* self = (tagItemMapInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->X = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Y of class  tagItemMapInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemMapInfo_ToLua_Y
static int tolua_get_tagItemMapInfo_ToLua_Y(lua_State* tolua_S)
{
  tagItemMapInfo_ToLua* self = (tagItemMapInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Y of class  tagItemMapInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemMapInfo_ToLua_Y
static int tolua_set_tagItemMapInfo_ToLua_Y(lua_State* tolua_S)
{
  tagItemMapInfo_ToLua* self = (tagItemMapInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Y = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DefID of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleItem_ToLua_DefID
static int tolua_get_tagRoleItem_ToLua_DefID(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DefID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DefID of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleItem_ToLua_DefID
static int tolua_set_tagRoleItem_ToLua_DefID(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DefID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DefPos of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleItem_ToLua_DefPos
static int tolua_get_tagRoleItem_ToLua_DefPos(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefPos'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DefPos);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DefPos of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleItem_ToLua_DefPos
static int tolua_set_tagRoleItem_ToLua_DefPos(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefPos'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DefPos = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Num of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleItem_ToLua_unsigned_Num
static int tolua_get_tagRoleItem_ToLua_unsigned_Num(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Num'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Num);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Num of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleItem_ToLua_unsigned_Num
static int tolua_set_tagRoleItem_ToLua_unsigned_Num(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Num'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Num = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GridIdx of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleItem_ToLua_GridIdx
static int tolua_get_tagRoleItem_ToLua_GridIdx(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GridIdx'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GridIdx);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GridIdx of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleItem_ToLua_GridIdx
static int tolua_set_tagRoleItem_ToLua_GridIdx(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GridIdx'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GridIdx = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: InstFlag of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleItem_ToLua_InstFlag
static int tolua_get_tagRoleItem_ToLua_InstFlag(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'InstFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->InstFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: InstFlag of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleItem_ToLua_InstFlag
static int tolua_set_tagRoleItem_ToLua_InstFlag(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'InstFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->InstFlag = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ValidEnd of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleItem_ToLua_ValidEnd
static int tolua_get_tagRoleItem_ToLua_ValidEnd(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ValidEnd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ValidEnd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ValidEnd of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleItem_ToLua_ValidEnd
static int tolua_set_tagRoleItem_ToLua_ValidEnd(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ValidEnd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ValidEnd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WID of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleItem_ToLua_WID
static int tolua_get_tagRoleItem_ToLua_WID(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WID'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->WID,"tdr_ulonglong");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WID of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleItem_ToLua_WID
static int tolua_set_tagRoleItem_ToLua_WID(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WID'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Flag of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleItem_ToLua_Flag
static int tolua_get_tagRoleItem_ToLua_Flag(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Flag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Flag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Flag of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleItem_ToLua_Flag
static int tolua_set_tagRoleItem_ToLua_Flag(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Flag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Flag = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: InstVal1 of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleItem_ToLua_InstVal1
static int tolua_get_tagRoleItem_ToLua_InstVal1(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'InstVal1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->InstVal1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: InstVal1 of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleItem_ToLua_InstVal1
static int tolua_set_tagRoleItem_ToLua_InstVal1(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'InstVal1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->InstVal1 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: InstVal2 of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleItem_ToLua_InstVal2
static int tolua_get_tagRoleItem_ToLua_InstVal2(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'InstVal2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->InstVal2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: InstVal2 of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleItem_ToLua_InstVal2
static int tolua_set_tagRoleItem_ToLua_InstVal2(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'InstVal2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->InstVal2 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: InstVal3 of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleItem_ToLua_InstVal3
static int tolua_get_tagRoleItem_ToLua_InstVal3(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'InstVal3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->InstVal3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: InstVal3 of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleItem_ToLua_InstVal3
static int tolua_set_tagRoleItem_ToLua_InstVal3(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'InstVal3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->InstVal3 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemMapNum of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleItem_ToLua_ItemMapNum
static int tolua_get_tagRoleItem_ToLua_ItemMapNum(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemMapNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemMapNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemMapNum of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleItem_ToLua_ItemMapNum
static int tolua_set_tagRoleItem_ToLua_ItemMapNum(lua_State* tolua_S)
{
  tagRoleItem_ToLua* self = (tagRoleItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemMapNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemMapNum = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemMapInfo of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagRoleItem_ToLua_ItemMapInfo
static int tolua_get_GameEngineTolua_tagRoleItem_ToLua_ItemMapInfo(lua_State* tolua_S)
{
 int tolua_index;
  tagRoleItem_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRoleItem_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SAVE_MAP_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->ItemMapInfo[tolua_index],"tagItemMapInfo_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemMapInfo of class  tagRoleItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagRoleItem_ToLua_ItemMapInfo
static int tolua_set_GameEngineTolua_tagRoleItem_ToLua_ItemMapInfo(lua_State* tolua_S)
{
 int tolua_index;
  tagRoleItem_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRoleItem_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SAVE_MAP_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->ItemMapInfo[tolua_index] = *((tagItemMapInfo_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultID of class  tagBaseAttrInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBaseAttrInfo_ToLua_unsigned_ResultID
static int tolua_get_tagBaseAttrInfo_ToLua_unsigned_ResultID(lua_State* tolua_S)
{
  tagBaseAttrInfo_ToLua* self = (tagBaseAttrInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultID of class  tagBaseAttrInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBaseAttrInfo_ToLua_unsigned_ResultID
static int tolua_set_tagBaseAttrInfo_ToLua_unsigned_ResultID(lua_State* tolua_S)
{
  tagBaseAttrInfo_ToLua* self = (tagBaseAttrInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Mul of class  tagBaseAttrInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBaseAttrInfo_ToLua_Mul
static int tolua_get_tagBaseAttrInfo_ToLua_Mul(lua_State* tolua_S)
{
  tagBaseAttrInfo_ToLua* self = (tagBaseAttrInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Mul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Mul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Mul of class  tagBaseAttrInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBaseAttrInfo_ToLua_Mul
static int tolua_set_tagBaseAttrInfo_ToLua_Mul(lua_State* tolua_S)
{
  tagBaseAttrInfo_ToLua* self = (tagBaseAttrInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Mul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Mul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ValIdx of class  tagArmStarInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmStarInfo_ToLua_unsigned_ValIdx
static int tolua_get_tagArmStarInfo_ToLua_unsigned_ValIdx(lua_State* tolua_S)
{
  tagArmStarInfo_ToLua* self = (tagArmStarInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ValIdx'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ValIdx);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ValIdx of class  tagArmStarInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmStarInfo_ToLua_unsigned_ValIdx
static int tolua_set_tagArmStarInfo_ToLua_unsigned_ValIdx(lua_State* tolua_S)
{
  tagArmStarInfo_ToLua* self = (tagArmStarInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ValIdx'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ValIdx = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Idx of class  tagArmSkillOne_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmSkillOne_ToLua_Idx
static int tolua_get_tagArmSkillOne_ToLua_Idx(lua_State* tolua_S)
{
  tagArmSkillOne_ToLua* self = (tagArmSkillOne_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Idx'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Idx);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Idx of class  tagArmSkillOne_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmSkillOne_ToLua_Idx
static int tolua_set_tagArmSkillOne_ToLua_Idx(lua_State* tolua_S)
{
  tagArmSkillOne_ToLua* self = (tagArmSkillOne_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Idx'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Idx = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Lock of class  tagArmSkillOne_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmSkillOne_ToLua_unsigned_Lock
static int tolua_get_tagArmSkillOne_ToLua_unsigned_Lock(lua_State* tolua_S)
{
  tagArmSkillOne_ToLua* self = (tagArmSkillOne_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Lock'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Lock);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Lock of class  tagArmSkillOne_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmSkillOne_ToLua_unsigned_Lock
static int tolua_set_tagArmSkillOne_ToLua_unsigned_Lock(lua_State* tolua_S)
{
  tagArmSkillOne_ToLua* self = (tagArmSkillOne_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Lock'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Lock = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ID of class  tagArmSkillOne_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmSkillOne_ToLua_ID
static int tolua_get_tagArmSkillOne_ToLua_ID(lua_State* tolua_S)
{
  tagArmSkillOne_ToLua* self = (tagArmSkillOne_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ID of class  tagArmSkillOne_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmSkillOne_ToLua_ID
static int tolua_set_tagArmSkillOne_ToLua_ID(lua_State* tolua_S)
{
  tagArmSkillOne_ToLua* self = (tagArmSkillOne_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ID = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Max of class  tagArmSkillData_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmSkillData_ToLua_unsigned_Max
static int tolua_get_tagArmSkillData_ToLua_unsigned_Max(lua_State* tolua_S)
{
  tagArmSkillData_ToLua* self = (tagArmSkillData_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Max'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Max);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Max of class  tagArmSkillData_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmSkillData_ToLua_unsigned_Max
static int tolua_set_tagArmSkillData_ToLua_unsigned_Max(lua_State* tolua_S)
{
  tagArmSkillData_ToLua* self = (tagArmSkillData_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Max'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Max = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Num of class  tagArmSkillData_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmSkillData_ToLua_unsigned_Num
static int tolua_get_tagArmSkillData_ToLua_unsigned_Num(lua_State* tolua_S)
{
  tagArmSkillData_ToLua* self = (tagArmSkillData_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Num'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Num);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Num of class  tagArmSkillData_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmSkillData_ToLua_unsigned_Num
static int tolua_set_tagArmSkillData_ToLua_unsigned_Num(lua_State* tolua_S)
{
  tagArmSkillData_ToLua* self = (tagArmSkillData_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Num'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Num = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: One of class  tagArmSkillData_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagArmSkillData_ToLua_One
static int tolua_get_GameEngineTolua_tagArmSkillData_ToLua_One(lua_State* tolua_S)
{
 int tolua_index;
  tagArmSkillData_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagArmSkillData_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_SKILL_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->One[tolua_index],"tagArmSkillOne_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: One of class  tagArmSkillData_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagArmSkillData_ToLua_One
static int tolua_set_GameEngineTolua_tagArmSkillData_ToLua_One(lua_State* tolua_S)
{
 int tolua_index;
  tagArmSkillData_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagArmSkillData_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_SKILL_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->One[tolua_index] = *((tagArmSkillOne_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DefID of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_DefID
static int tolua_get_tagRoleArm_ToLua_DefID(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DefID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DefID of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_DefID
static int tolua_set_tagRoleArm_ToLua_DefID(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DefID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DefPos of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_DefPos
static int tolua_get_tagRoleArm_ToLua_DefPos(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefPos'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DefPos);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DefPos of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_DefPos
static int tolua_set_tagRoleArm_ToLua_DefPos(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefPos'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DefPos = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Num of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_unsigned_Num
static int tolua_get_tagRoleArm_ToLua_unsigned_Num(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Num'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Num);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Num of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_unsigned_Num
static int tolua_set_tagRoleArm_ToLua_unsigned_Num(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Num'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Num = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GridIdx of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_GridIdx
static int tolua_get_tagRoleArm_ToLua_GridIdx(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GridIdx'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GridIdx);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GridIdx of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_GridIdx
static int tolua_set_tagRoleArm_ToLua_GridIdx(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GridIdx'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GridIdx = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: InstFlag of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_InstFlag
static int tolua_get_tagRoleArm_ToLua_InstFlag(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'InstFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->InstFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: InstFlag of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_InstFlag
static int tolua_set_tagRoleArm_ToLua_InstFlag(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'InstFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->InstFlag = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ValidEnd of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_ValidEnd
static int tolua_get_tagRoleArm_ToLua_ValidEnd(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ValidEnd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ValidEnd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ValidEnd of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_ValidEnd
static int tolua_set_tagRoleArm_ToLua_ValidEnd(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ValidEnd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ValidEnd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WID of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_WID
static int tolua_get_tagRoleArm_ToLua_WID(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WID'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->WID,"tdr_ulonglong");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WID of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_WID
static int tolua_set_tagRoleArm_ToLua_WID(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WID'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Dur of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_unsigned_Dur
static int tolua_get_tagRoleArm_ToLua_unsigned_Dur(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Dur'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Dur);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Dur of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_unsigned_Dur
static int tolua_set_tagRoleArm_ToLua_unsigned_Dur(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Dur'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Dur = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StarLv of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_unsigned_StarLv
static int tolua_get_tagRoleArm_ToLua_unsigned_StarLv(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StarLv'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StarLv);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StarLv of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_unsigned_StarLv
static int tolua_set_tagRoleArm_ToLua_unsigned_StarLv(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StarLv'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StarLv = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FightLv of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_unsigned_FightLv
static int tolua_get_tagRoleArm_ToLua_unsigned_FightLv(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FightLv'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FightLv);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FightLv of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_unsigned_FightLv
static int tolua_set_tagRoleArm_ToLua_unsigned_FightLv(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FightLv'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FightLv = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HoleNum of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_unsigned_HoleNum
static int tolua_get_tagRoleArm_ToLua_unsigned_HoleNum(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HoleNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HoleNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HoleNum of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_unsigned_HoleNum
static int tolua_set_tagRoleArm_ToLua_unsigned_HoleNum(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HoleNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HoleNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HoleGem of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagRoleArm_ToLua_HoleGem
static int tolua_get_GameEngineTolua_tagRoleArm_ToLua_HoleGem(lua_State* tolua_S)
{
 int tolua_index;
  tagRoleArm_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRoleArm_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_HOLE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->HoleGem[tolua_index],"HOLEGEM");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HoleGem of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagRoleArm_ToLua_HoleGem
static int tolua_set_GameEngineTolua_tagRoleArm_ToLua_HoleGem(lua_State* tolua_S)
{
 int tolua_index;
  tagRoleArm_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRoleArm_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_HOLE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->HoleGem[tolua_index] = *((HOLEGEM*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddAttrNum of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_unsigned_AddAttrNum
static int tolua_get_tagRoleArm_ToLua_unsigned_AddAttrNum(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AddAttrNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddAttrNum of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_unsigned_AddAttrNum
static int tolua_set_tagRoleArm_ToLua_unsigned_AddAttrNum(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AddAttrNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddAttr of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagRoleArm_ToLua_AddAttr
static int tolua_get_GameEngineTolua_tagRoleArm_ToLua_AddAttr(lua_State* tolua_S)
{
 int tolua_index;
  tagRoleArm_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRoleArm_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_ADD_ATTR)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->AddAttr[tolua_index],"tagAddAttrInst_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddAttr of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagRoleArm_ToLua_AddAttr
static int tolua_set_GameEngineTolua_tagRoleArm_ToLua_AddAttr(lua_State* tolua_S)
{
 int tolua_index;
  tagRoleArm_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRoleArm_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_ADD_ATTR)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->AddAttr[tolua_index] = *((tagAddAttrInst_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ExtendedResult of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_ExtendedResult
static int tolua_get_tagRoleArm_ToLua_ExtendedResult(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExtendedResult'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->ExtendedResult,"tagExtendedResult_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ExtendedResult of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_ExtendedResult
static int tolua_set_tagRoleArm_ToLua_ExtendedResult(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExtendedResult'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagExtendedResult_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ExtendedResult = *((tagExtendedResult_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ExtendedFromDefID of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_ExtendedFromDefID
static int tolua_get_tagRoleArm_ToLua_ExtendedFromDefID(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExtendedFromDefID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ExtendedFromDefID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ExtendedFromDefID of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_ExtendedFromDefID
static int tolua_set_tagRoleArm_ToLua_ExtendedFromDefID(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExtendedFromDefID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ExtendedFromDefID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: KeYinAddAttr of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_KeYinAddAttr
static int tolua_get_tagRoleArm_ToLua_KeYinAddAttr(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KeYinAddAttr'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->KeYinAddAttr,"tagAddAttrInst_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: KeYinAddAttr of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_KeYinAddAttr
static int tolua_set_tagRoleArm_ToLua_KeYinAddAttr(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KeYinAddAttr'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagAddAttrInst_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->KeYinAddAttr = *((tagAddAttrInst_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: KeYinEnd of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_KeYinEnd
static int tolua_get_tagRoleArm_ToLua_KeYinEnd(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KeYinEnd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->KeYinEnd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: KeYinEnd of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_KeYinEnd
static int tolua_set_tagRoleArm_ToLua_KeYinEnd(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KeYinEnd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->KeYinEnd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FengYinID of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_FengYinID
static int tolua_get_tagRoleArm_ToLua_FengYinID(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FengYinID'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->FengYinID,"tdr_ulonglong");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FengYinID of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_FengYinID
static int tolua_set_tagRoleArm_ToLua_FengYinID(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FengYinID'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FengYinID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BaseAttrNum of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_unsigned_BaseAttrNum
static int tolua_get_tagRoleArm_ToLua_unsigned_BaseAttrNum(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BaseAttrNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BaseAttrNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BaseAttrNum of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_unsigned_BaseAttrNum
static int tolua_set_tagRoleArm_ToLua_unsigned_BaseAttrNum(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BaseAttrNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BaseAttrNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BaseAttr of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagRoleArm_ToLua_BaseAttr
static int tolua_get_GameEngineTolua_tagRoleArm_ToLua_BaseAttr(lua_State* tolua_S)
{
 int tolua_index;
  tagRoleArm_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRoleArm_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_BASE_ATTR)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->BaseAttr[tolua_index],"tagBaseAttrInfo_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BaseAttr of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagRoleArm_ToLua_BaseAttr
static int tolua_set_GameEngineTolua_tagRoleArm_ToLua_BaseAttr(lua_State* tolua_S)
{
 int tolua_index;
  tagRoleArm_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRoleArm_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_BASE_ATTR)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->BaseAttr[tolua_index] = *((tagBaseAttrInfo_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StarInfo of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagRoleArm_ToLua_StarInfo
static int tolua_get_GameEngineTolua_tagRoleArm_ToLua_StarInfo(lua_State* tolua_S)
{
 int tolua_index;
  tagRoleArm_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRoleArm_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_STAR_LEVEL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->StarInfo[tolua_index],"tagArmStarInfo_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StarInfo of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagRoleArm_ToLua_StarInfo
static int tolua_set_GameEngineTolua_tagRoleArm_ToLua_StarInfo(lua_State* tolua_S)
{
 int tolua_index;
  tagRoleArm_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRoleArm_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_STAR_LEVEL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->StarInfo[tolua_index] = *((tagArmStarInfo_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WashAttrNum of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_unsigned_WashAttrNum
static int tolua_get_tagRoleArm_ToLua_unsigned_WashAttrNum(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WashAttrNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WashAttrNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WashAttrNum of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_unsigned_WashAttrNum
static int tolua_set_tagRoleArm_ToLua_unsigned_WashAttrNum(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WashAttrNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WashAttrNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WashAddAttr of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagRoleArm_ToLua_WashAddAttr
static int tolua_get_GameEngineTolua_tagRoleArm_ToLua_WashAddAttr(lua_State* tolua_S)
{
 int tolua_index;
  tagRoleArm_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRoleArm_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_WASH_ADD_ATTR)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->WashAddAttr[tolua_index],"tagAddAttrInst_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WashAddAttr of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagRoleArm_ToLua_WashAddAttr
static int tolua_set_GameEngineTolua_tagRoleArm_ToLua_WashAddAttr(lua_State* tolua_S)
{
 int tolua_index;
  tagRoleArm_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRoleArm_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_WASH_ADD_ATTR)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->WashAddAttr[tolua_index] = *((tagAddAttrInst_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StrengthenCount of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_StrengthenCount
static int tolua_get_tagRoleArm_ToLua_StrengthenCount(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StrengthenCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StrengthenCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StrengthenCount of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_StrengthenCount
static int tolua_set_tagRoleArm_ToLua_StrengthenCount(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StrengthenCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StrengthenCount = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FengyinFlag of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_unsigned_FengyinFlag
static int tolua_get_tagRoleArm_ToLua_unsigned_FengyinFlag(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FengyinFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FengyinFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FengyinFlag of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_unsigned_FengyinFlag
static int tolua_set_tagRoleArm_ToLua_unsigned_FengyinFlag(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FengyinFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FengyinFlag = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WashNum of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_unsigned_WashNum
static int tolua_get_tagRoleArm_ToLua_unsigned_WashNum(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WashNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WashNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WashNum of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_unsigned_WashNum
static int tolua_set_tagRoleArm_ToLua_unsigned_WashNum(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WashNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WashNum = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Step of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_unsigned_Step
static int tolua_get_tagRoleArm_ToLua_unsigned_Step(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Step'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Step);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Step of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_unsigned_Step
static int tolua_set_tagRoleArm_ToLua_unsigned_Step(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Step'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Step = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ArmSkill of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_ArmSkill
static int tolua_get_tagRoleArm_ToLua_ArmSkill(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmSkill'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->ArmSkill,"tagArmSkillData_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ArmSkill of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_ArmSkill
static int tolua_set_tagRoleArm_ToLua_ArmSkill(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmSkill'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagArmSkillData_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ArmSkill = *((tagArmSkillData_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StepUse of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_unsigned_StepUse
static int tolua_get_tagRoleArm_ToLua_unsigned_StepUse(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StepUse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StepUse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StepUse of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_unsigned_StepUse
static int tolua_set_tagRoleArm_ToLua_unsigned_StepUse(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StepUse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StepUse = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UnrealBackID of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_UnrealBackID
static int tolua_get_tagRoleArm_ToLua_UnrealBackID(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UnrealBackID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UnrealBackID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UnrealBackID of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_UnrealBackID
static int tolua_set_tagRoleArm_ToLua_UnrealBackID(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UnrealBackID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UnrealBackID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UnrealBackTmEnd of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleArm_ToLua_UnrealBackTmEnd
static int tolua_get_tagRoleArm_ToLua_UnrealBackTmEnd(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UnrealBackTmEnd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UnrealBackTmEnd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UnrealBackTmEnd of class  tagRoleArm_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleArm_ToLua_UnrealBackTmEnd
static int tolua_set_tagRoleArm_ToLua_UnrealBackTmEnd(lua_State* tolua_S)
{
  tagRoleArm_ToLua* self = (tagRoleArm_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UnrealBackTmEnd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UnrealBackTmEnd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RoleLevelMin of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagWearPre_ToLua_unsigned_RoleLevelMin
static int tolua_get_tagWearPre_ToLua_unsigned_RoleLevelMin(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RoleLevelMin'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RoleLevelMin);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RoleLevelMin of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagWearPre_ToLua_unsigned_RoleLevelMin
static int tolua_set_tagWearPre_ToLua_unsigned_RoleLevelMin(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RoleLevelMin'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RoleLevelMin = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RoleLevelMax of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagWearPre_ToLua_unsigned_RoleLevelMax
static int tolua_get_tagWearPre_ToLua_unsigned_RoleLevelMax(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RoleLevelMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RoleLevelMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RoleLevelMax of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagWearPre_ToLua_unsigned_RoleLevelMax
static int tolua_set_tagWearPre_ToLua_unsigned_RoleLevelMax(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RoleLevelMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RoleLevelMax = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Career of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagWearPre_ToLua_unsigned_Career
static int tolua_get_tagWearPre_ToLua_unsigned_Career(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Career'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Career);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Career of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagWearPre_ToLua_unsigned_Career
static int tolua_set_tagWearPre_ToLua_unsigned_Career(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Career'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Career = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DiathesisID of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagWearPre_ToLua_unsigned_DiathesisID
static int tolua_get_tagWearPre_ToLua_unsigned_DiathesisID(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiathesisID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DiathesisID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DiathesisID of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagWearPre_ToLua_unsigned_DiathesisID
static int tolua_set_tagWearPre_ToLua_unsigned_DiathesisID(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiathesisID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DiathesisID = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Gender of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagWearPre_ToLua_unsigned_Gender
static int tolua_get_tagWearPre_ToLua_unsigned_Gender(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Gender'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Gender);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Gender of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagWearPre_ToLua_unsigned_Gender
static int tolua_set_tagWearPre_ToLua_unsigned_Gender(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Gender'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Gender = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GemOpenHoleMoney of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagWearPre_ToLua_GemOpenHoleMoney
static int tolua_get_tagWearPre_ToLua_GemOpenHoleMoney(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GemOpenHoleMoney'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GemOpenHoleMoney);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GemOpenHoleMoney of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagWearPre_ToLua_GemOpenHoleMoney
static int tolua_set_tagWearPre_ToLua_GemOpenHoleMoney(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GemOpenHoleMoney'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GemOpenHoleMoney = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GemInlayMoney of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagWearPre_ToLua_GemInlayMoney
static int tolua_get_tagWearPre_ToLua_GemInlayMoney(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GemInlayMoney'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GemInlayMoney);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GemInlayMoney of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagWearPre_ToLua_GemInlayMoney
static int tolua_set_tagWearPre_ToLua_GemInlayMoney(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GemInlayMoney'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GemInlayMoney = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PKVal of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagWearPre_ToLua_PKVal
static int tolua_get_tagWearPre_ToLua_PKVal(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PKVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PKVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PKVal of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagWearPre_ToLua_PKVal
static int tolua_set_tagWearPre_ToLua_PKVal(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PKVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PKVal = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ClanLimit of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagWearPre_ToLua_ClanLimit
static int tolua_get_tagWearPre_ToLua_ClanLimit(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ClanLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ClanLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ClanLimit of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagWearPre_ToLua_ClanLimit
static int tolua_set_tagWearPre_ToLua_ClanLimit(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ClanLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ClanLimit = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GeniusLimit of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagWearPre_ToLua_unsigned_GeniusLimit
static int tolua_get_tagWearPre_ToLua_unsigned_GeniusLimit(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GeniusLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GeniusLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GeniusLimit of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagWearPre_ToLua_unsigned_GeniusLimit
static int tolua_set_tagWearPre_ToLua_unsigned_GeniusLimit(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GeniusLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GeniusLimit = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SchoolValLimit of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagWearPre_ToLua_SchoolValLimit
static int tolua_get_tagWearPre_ToLua_SchoolValLimit(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SchoolValLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SchoolValLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SchoolValLimit of class  tagWearPre_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagWearPre_ToLua_SchoolValLimit
static int tolua_set_tagWearPre_ToLua_SchoolValLimit(lua_State* tolua_S)
{
  tagWearPre_ToLua* self = (tagWearPre_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SchoolValLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SchoolValLimit = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultID of class  tagResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagResult_ToLua_unsigned_ResultID
static int tolua_get_tagResult_ToLua_unsigned_ResultID(lua_State* tolua_S)
{
  tagResult_ToLua* self = (tagResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultID of class  tagResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagResult_ToLua_unsigned_ResultID
static int tolua_set_tagResult_ToLua_unsigned_ResultID(lua_State* tolua_S)
{
  tagResult_ToLua* self = (tagResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal1 of class  tagResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagResult_ToLua_ResultVal1
static int tolua_get_tagResult_ToLua_ResultVal1(lua_State* tolua_S)
{
  tagResult_ToLua* self = (tagResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal1 of class  tagResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagResult_ToLua_ResultVal1
static int tolua_set_tagResult_ToLua_ResultVal1(lua_State* tolua_S)
{
  tagResult_ToLua* self = (tagResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal1 = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal2 of class  tagResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagResult_ToLua_ResultVal2
static int tolua_get_tagResult_ToLua_ResultVal2(lua_State* tolua_S)
{
  tagResult_ToLua* self = (tagResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal2 of class  tagResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagResult_ToLua_ResultVal2
static int tolua_set_tagResult_ToLua_ResultVal2(lua_State* tolua_S)
{
  tagResult_ToLua* self = (tagResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal2 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal3 of class  tagResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagResult_ToLua_ResultVal3
static int tolua_get_tagResult_ToLua_ResultVal3(lua_State* tolua_S)
{
  tagResult_ToLua* self = (tagResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal3 of class  tagResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagResult_ToLua_ResultVal3
static int tolua_set_tagResult_ToLua_ResultVal3(lua_State* tolua_S)
{
  tagResult_ToLua* self = (tagResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal3 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal4 of class  tagResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagResult_ToLua_ResultVal4
static int tolua_get_tagResult_ToLua_ResultVal4(lua_State* tolua_S)
{
  tagResult_ToLua* self = (tagResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal4'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal4);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal4 of class  tagResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagResult_ToLua_ResultVal4
static int tolua_set_tagResult_ToLua_ResultVal4(lua_State* tolua_S)
{
  tagResult_ToLua* self = (tagResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal4'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal4 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxDur of class  tagArmDur_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmDur_ToLua_unsigned_MaxDur
static int tolua_get_tagArmDur_ToLua_unsigned_MaxDur(lua_State* tolua_S)
{
  tagArmDur_ToLua* self = (tagArmDur_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxDur'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxDur);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxDur of class  tagArmDur_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmDur_ToLua_unsigned_MaxDur
static int tolua_set_tagArmDur_ToLua_unsigned_MaxDur(lua_State* tolua_S)
{
  tagArmDur_ToLua* self = (tagArmDur_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxDur'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxDur = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FightStatusDur of class  tagArmDur_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmDur_ToLua_unsigned_FightStatusDur
static int tolua_get_tagArmDur_ToLua_unsigned_FightStatusDur(lua_State* tolua_S)
{
  tagArmDur_ToLua* self = (tagArmDur_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FightStatusDur'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FightStatusDur);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FightStatusDur of class  tagArmDur_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmDur_ToLua_unsigned_FightStatusDur
static int tolua_set_tagArmDur_ToLua_unsigned_FightStatusDur(lua_State* tolua_S)
{
  tagArmDur_ToLua* self = (tagArmDur_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FightStatusDur'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FightStatusDur = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemID of class  tagIdentifiableItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagIdentifiableItem_ToLua_unsigned_ItemID
static int tolua_get_tagIdentifiableItem_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagIdentifiableItem_ToLua* self = (tagIdentifiableItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemID of class  tagIdentifiableItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagIdentifiableItem_ToLua_unsigned_ItemID
static int tolua_set_tagIdentifiableItem_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagIdentifiableItem_ToLua* self = (tagIdentifiableItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemRate of class  tagIdentifiableItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagIdentifiableItem_ToLua_unsigned_ItemRate
static int tolua_get_tagIdentifiableItem_ToLua_unsigned_ItemRate(lua_State* tolua_S)
{
  tagIdentifiableItem_ToLua* self = (tagIdentifiableItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemRate of class  tagIdentifiableItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagIdentifiableItem_ToLua_unsigned_ItemRate
static int tolua_set_tagIdentifiableItem_ToLua_unsigned_ItemRate(lua_State* tolua_S)
{
  tagIdentifiableItem_ToLua* self = (tagIdentifiableItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemRate = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ID of class  tagAddAttrList_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrList_ToLua_unsigned_ID
static int tolua_get_tagAddAttrList_ToLua_unsigned_ID(lua_State* tolua_S)
{
  tagAddAttrList_ToLua* self = (tagAddAttrList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ID of class  tagAddAttrList_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrList_ToLua_unsigned_ID
static int tolua_set_tagAddAttrList_ToLua_unsigned_ID(lua_State* tolua_S)
{
  tagAddAttrList_ToLua* self = (tagAddAttrList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Idx of class  tagAddAttrList_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrList_ToLua_unsigned_Idx
static int tolua_get_tagAddAttrList_ToLua_unsigned_Idx(lua_State* tolua_S)
{
  tagAddAttrList_ToLua* self = (tagAddAttrList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Idx'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Idx);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Idx of class  tagAddAttrList_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrList_ToLua_unsigned_Idx
static int tolua_set_tagAddAttrList_ToLua_unsigned_Idx(lua_State* tolua_S)
{
  tagAddAttrList_ToLua* self = (tagAddAttrList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Idx'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Idx = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ID of class  tagRespactEntry_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRespactEntry_ToLua_unsigned_ID
static int tolua_get_tagRespactEntry_ToLua_unsigned_ID(lua_State* tolua_S)
{
  tagRespactEntry_ToLua* self = (tagRespactEntry_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ID of class  tagRespactEntry_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRespactEntry_ToLua_unsigned_ID
static int tolua_set_tagRespactEntry_ToLua_unsigned_ID(lua_State* tolua_S)
{
  tagRespactEntry_ToLua* self = (tagRespactEntry_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Value of class  tagRespactEntry_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRespactEntry_ToLua_unsigned_Value
static int tolua_get_tagRespactEntry_ToLua_unsigned_Value(lua_State* tolua_S)
{
  tagRespactEntry_ToLua* self = (tagRespactEntry_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Value'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Value);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Value of class  tagRespactEntry_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRespactEntry_ToLua_unsigned_Value
static int tolua_set_tagRespactEntry_ToLua_unsigned_Value(lua_State* tolua_S)
{
  tagRespactEntry_ToLua* self = (tagRespactEntry_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Value'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Value = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RndRed of class  tagRndHole_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRndHole_ToLua_unsigned_RndRed
static int tolua_get_tagRndHole_ToLua_unsigned_RndRed(lua_State* tolua_S)
{
  tagRndHole_ToLua* self = (tagRndHole_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RndRed'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RndRed);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RndRed of class  tagRndHole_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRndHole_ToLua_unsigned_RndRed
static int tolua_set_tagRndHole_ToLua_unsigned_RndRed(lua_State* tolua_S)
{
  tagRndHole_ToLua* self = (tagRndHole_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RndRed'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RndRed = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RndBlue of class  tagRndHole_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRndHole_ToLua_unsigned_RndBlue
static int tolua_get_tagRndHole_ToLua_unsigned_RndBlue(lua_State* tolua_S)
{
  tagRndHole_ToLua* self = (tagRndHole_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RndBlue'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RndBlue);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RndBlue of class  tagRndHole_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRndHole_ToLua_unsigned_RndBlue
static int tolua_set_tagRndHole_ToLua_unsigned_RndBlue(lua_State* tolua_S)
{
  tagRndHole_ToLua* self = (tagRndHole_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RndBlue'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RndBlue = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RndGreen of class  tagRndHole_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRndHole_ToLua_unsigned_RndGreen
static int tolua_get_tagRndHole_ToLua_unsigned_RndGreen(lua_State* tolua_S)
{
  tagRndHole_ToLua* self = (tagRndHole_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RndGreen'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RndGreen);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RndGreen of class  tagRndHole_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRndHole_ToLua_unsigned_RndGreen
static int tolua_set_tagRndHole_ToLua_unsigned_RndGreen(lua_State* tolua_S)
{
  tagRndHole_ToLua* self = (tagRndHole_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RndGreen'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RndGreen = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RndColor of class  tagRndHole_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRndHole_ToLua_unsigned_RndColor
static int tolua_get_tagRndHole_ToLua_unsigned_RndColor(lua_State* tolua_S)
{
  tagRndHole_ToLua* self = (tagRndHole_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RndColor'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RndColor);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RndColor of class  tagRndHole_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRndHole_ToLua_unsigned_RndColor
static int tolua_set_tagRndHole_ToLua_unsigned_RndColor(lua_State* tolua_S)
{
  tagRndHole_ToLua* self = (tagRndHole_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RndColor'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RndColor = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Type of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_unsigned_Type
static int tolua_get_tagItemTmp_ToLua_unsigned_Type(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Type of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_unsigned_Type
static int tolua_set_tagItemTmp_ToLua_unsigned_Type(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Type = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillLevel_1 of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_unsigned_SkillLevel_1
static int tolua_get_tagItemTmp_ToLua_unsigned_SkillLevel_1(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel_1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillLevel_1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillLevel_1 of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_unsigned_SkillLevel_1
static int tolua_set_tagItemTmp_ToLua_unsigned_SkillLevel_1(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel_1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillLevel_1 = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillID_1 of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_unsigned_SkillID_1
static int tolua_get_tagItemTmp_ToLua_unsigned_SkillID_1(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID_1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillID_1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillID_1 of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_unsigned_SkillID_1
static int tolua_set_tagItemTmp_ToLua_unsigned_SkillID_1(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID_1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillID_1 = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillLevel_2 of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_unsigned_SkillLevel_2
static int tolua_get_tagItemTmp_ToLua_unsigned_SkillLevel_2(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel_2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillLevel_2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillLevel_2 of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_unsigned_SkillLevel_2
static int tolua_set_tagItemTmp_ToLua_unsigned_SkillLevel_2(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel_2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillLevel_2 = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillID_2 of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_unsigned_SkillID_2
static int tolua_get_tagItemTmp_ToLua_unsigned_SkillID_2(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID_2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillID_2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillID_2 of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_unsigned_SkillID_2
static int tolua_set_tagItemTmp_ToLua_unsigned_SkillID_2(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID_2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillID_2 = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillDefaultCollectNum of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_unsigned_SkillDefaultCollectNum
static int tolua_get_tagItemTmp_ToLua_unsigned_SkillDefaultCollectNum(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillDefaultCollectNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillDefaultCollectNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillDefaultCollectNum of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_unsigned_SkillDefaultCollectNum
static int tolua_set_tagItemTmp_ToLua_unsigned_SkillDefaultCollectNum(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillDefaultCollectNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillDefaultCollectNum = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpeedMul of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_SpeedMul
static int tolua_get_tagItemTmp_ToLua_SpeedMul(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeedMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SpeedMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpeedMul of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_SpeedMul
static int tolua_set_tagItemTmp_ToLua_SpeedMul(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeedMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpeedMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpeedAdd of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_SpeedAdd
static int tolua_get_tagItemTmp_ToLua_SpeedAdd(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeedAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SpeedAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpeedAdd of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_SpeedAdd
static int tolua_set_tagItemTmp_ToLua_SpeedAdd(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeedAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpeedAdd = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RefreshTime of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_unsigned_RefreshTime
static int tolua_get_tagItemTmp_ToLua_unsigned_RefreshTime(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RefreshTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RefreshTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RefreshTime of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_unsigned_RefreshTime
static int tolua_set_tagItemTmp_ToLua_unsigned_RefreshTime(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RefreshTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RefreshTime = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StayTime of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_unsigned_StayTime
static int tolua_get_tagItemTmp_ToLua_unsigned_StayTime(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StayTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StayTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StayTime of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_unsigned_StayTime
static int tolua_set_tagItemTmp_ToLua_unsigned_StayTime(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StayTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StayTime = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MachineEnerge of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_unsigned_MachineEnerge
static int tolua_get_tagItemTmp_ToLua_unsigned_MachineEnerge(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineEnerge'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MachineEnerge);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MachineEnerge of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_unsigned_MachineEnerge
static int tolua_set_tagItemTmp_ToLua_unsigned_MachineEnerge(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MachineEnerge'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MachineEnerge = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: EnergeDec of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_unsigned_EnergeDec
static int tolua_get_tagItemTmp_ToLua_unsigned_EnergeDec(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EnergeDec'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->EnergeDec);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: EnergeDec of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_unsigned_EnergeDec
static int tolua_set_tagItemTmp_ToLua_unsigned_EnergeDec(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EnergeDec'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->EnergeDec = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HurtDefMul of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_HurtDefMul
static int tolua_get_tagItemTmp_ToLua_HurtDefMul(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HurtDefMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HurtDefMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HurtDefMul of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_HurtDefMul
static int tolua_set_tagItemTmp_ToLua_HurtDefMul(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HurtDefMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HurtDefMul = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HurtDefAdd of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_HurtDefAdd
static int tolua_get_tagItemTmp_ToLua_HurtDefAdd(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HurtDefAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HurtDefAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HurtDefAdd of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_HurtDefAdd
static int tolua_set_tagItemTmp_ToLua_HurtDefAdd(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HurtDefAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HurtDefAdd = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FleeAdd of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemTmp_ToLua_FleeAdd
static int tolua_get_tagItemTmp_ToLua_FleeAdd(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FleeAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FleeAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FleeAdd of class  tagItemTmp_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemTmp_ToLua_FleeAdd
static int tolua_set_tagItemTmp_ToLua_FleeAdd(lua_State* tolua_S)
{
  tagItemTmp_ToLua* self = (tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FleeAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FleeAdd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ID of class  tagMoneyUse_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMoneyUse_ToLua_ID
static int tolua_get_tagMoneyUse_ToLua_ID(lua_State* tolua_S)
{
  tagMoneyUse_ToLua* self = (tagMoneyUse_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ID of class  tagMoneyUse_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMoneyUse_ToLua_ID
static int tolua_set_tagMoneyUse_ToLua_ID(lua_State* tolua_S)
{
  tagMoneyUse_ToLua* self = (tagMoneyUse_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Val of class  tagMoneyUse_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMoneyUse_ToLua_Val
static int tolua_get_tagMoneyUse_ToLua_Val(lua_State* tolua_S)
{
  tagMoneyUse_ToLua* self = (tagMoneyUse_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Val);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Val of class  tagMoneyUse_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMoneyUse_ToLua_Val
static int tolua_set_tagMoneyUse_ToLua_Val(lua_State* tolua_S)
{
  tagMoneyUse_ToLua* self = (tagMoneyUse_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Val = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_ItemID
static int tolua_get_tagItemDef_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_ItemID
static int tolua_set_tagItemDef_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_Name
static int tolua_get_tagItemDef_ToLua_Name(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_Name
static int tolua_set_tagItemDef_ToLua_Name(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Name,tolua_tostring(tolua_S,2,0),RES_NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IconID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_IconID
static int tolua_get_tagItemDef_ToLua_IconID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IconID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IconID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_IconID
static int tolua_set_tagItemDef_ToLua_IconID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IconID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ModeID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_ModeID
static int tolua_get_tagItemDef_ToLua_ModeID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ModeID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ModeID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ModeID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_ModeID
static int tolua_set_tagItemDef_ToLua_ModeID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ModeID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ModeID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ExchgItemID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_ExchgItemID
static int tolua_get_tagItemDef_ToLua_ExchgItemID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExchgItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ExchgItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ExchgItemID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_ExchgItemID
static int tolua_set_tagItemDef_ToLua_ExchgItemID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExchgItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ExchgItemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SellPrice of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_SellPrice
static int tolua_get_tagItemDef_ToLua_unsigned_SellPrice(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SellPrice'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SellPrice);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SellPrice of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_SellPrice
static int tolua_set_tagItemDef_ToLua_unsigned_SellPrice(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SellPrice'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SellPrice = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BuyPrice of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_BuyPrice
static int tolua_get_tagItemDef_ToLua_unsigned_BuyPrice(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BuyPrice'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BuyPrice);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BuyPrice of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_BuyPrice
static int tolua_set_tagItemDef_ToLua_unsigned_BuyPrice(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BuyPrice'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BuyPrice = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoneyType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_MoneyType
static int tolua_get_tagItemDef_ToLua_unsigned_MoneyType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoneyType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoneyType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_MoneyType
static int tolua_set_tagItemDef_ToLua_unsigned_MoneyType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoneyType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_ItemType
static int tolua_get_tagItemDef_ToLua_unsigned_ItemType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_ItemType
static int tolua_set_tagItemDef_ToLua_unsigned_ItemType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxPile of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_MaxPile
static int tolua_get_tagItemDef_ToLua_unsigned_MaxPile(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxPile'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxPile);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxPile of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_MaxPile
static int tolua_set_tagItemDef_ToLua_unsigned_MaxPile(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxPile'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxPile = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Result of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagItemDef_ToLua_Result
static int tolua_get_GameEngineTolua_tagItemDef_ToLua_Result(lua_State* tolua_S)
{
 int tolua_index;
  tagItemDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagItemDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ITEM_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Result[tolua_index],"tagResult_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Result of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagItemDef_ToLua_Result
static int tolua_set_GameEngineTolua_tagItemDef_ToLua_Result(lua_State* tolua_S)
{
 int tolua_index;
  tagItemDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagItemDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ITEM_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Result[tolua_index] = *((tagResult_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ArmDur of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_ArmDur
static int tolua_get_tagItemDef_ToLua_ArmDur(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmDur'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->ArmDur,"tagArmDur_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ArmDur of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_ArmDur
static int tolua_set_tagItemDef_ToLua_ArmDur(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmDur'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagArmDur_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ArmDur = *((tagArmDur_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ArmFight of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_ArmFight
static int tolua_get_tagItemDef_ToLua_unsigned_ArmFight(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmFight'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ArmFight);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ArmFight of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_ArmFight
static int tolua_set_tagItemDef_ToLua_unsigned_ArmFight(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmFight'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ArmFight = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SuitSetID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_SuitSetID
static int tolua_get_tagItemDef_ToLua_unsigned_SuitSetID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SuitSetID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SuitSetID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SuitSetID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_SuitSetID
static int tolua_set_tagItemDef_ToLua_unsigned_SuitSetID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SuitSetID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SuitSetID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ValidTime of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_ValidTime
static int tolua_get_tagItemDef_ToLua_unsigned_ValidTime(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ValidTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ValidTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ValidTime of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_ValidTime
static int tolua_set_tagItemDef_ToLua_unsigned_ValidTime(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ValidTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ValidTime = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NumType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_NumType
static int tolua_get_tagItemDef_ToLua_unsigned_NumType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NumType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NumType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NumType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_NumType
static int tolua_set_tagItemDef_ToLua_unsigned_NumType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NumType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NumType = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NoDrop of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_NoDrop
static int tolua_get_tagItemDef_ToLua_unsigned_NoDrop(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoDrop'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NoDrop);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NoDrop of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_NoDrop
static int tolua_set_tagItemDef_ToLua_unsigned_NoDrop(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoDrop'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NoDrop = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ArmBind of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_ArmBind
static int tolua_get_tagItemDef_ToLua_unsigned_ArmBind(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmBind'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ArmBind);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ArmBind of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_ArmBind
static int tolua_set_tagItemDef_ToLua_unsigned_ArmBind(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmBind'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ArmBind = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ExchgLevel of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_ExchgLevel
static int tolua_get_tagItemDef_ToLua_unsigned_ExchgLevel(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExchgLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ExchgLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ExchgLevel of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_ExchgLevel
static int tolua_set_tagItemDef_ToLua_unsigned_ExchgLevel(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExchgLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ExchgLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Important of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_Important
static int tolua_get_tagItemDef_ToLua_unsigned_Important(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Important'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Important);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Important of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_Important
static int tolua_set_tagItemDef_ToLua_unsigned_Important(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Important'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Important = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AmmAtk of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_AmmAtk
static int tolua_get_tagItemDef_ToLua_AmmAtk(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AmmAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AmmAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AmmAtk of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_AmmAtk
static int tolua_set_tagItemDef_ToLua_AmmAtk(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AmmAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AmmAtk = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WeaponAmmNeed of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_WeaponAmmNeed
static int tolua_get_tagItemDef_ToLua_unsigned_WeaponAmmNeed(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WeaponAmmNeed'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WeaponAmmNeed);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WeaponAmmNeed of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_WeaponAmmNeed
static int tolua_set_tagItemDef_ToLua_unsigned_WeaponAmmNeed(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WeaponAmmNeed'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WeaponAmmNeed = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WeaponAmmType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_WeaponAmmType
static int tolua_get_tagItemDef_ToLua_unsigned_WeaponAmmType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WeaponAmmType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WeaponAmmType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WeaponAmmType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_WeaponAmmType
static int tolua_set_tagItemDef_ToLua_unsigned_WeaponAmmType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WeaponAmmType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WeaponAmmType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AmmType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_AmmType
static int tolua_get_tagItemDef_ToLua_unsigned_AmmType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AmmType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AmmType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AmmType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_AmmType
static int tolua_set_tagItemDef_ToLua_unsigned_AmmType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AmmType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AmmType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WearPre of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_WearPre
static int tolua_get_tagItemDef_ToLua_WearPre(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WearPre'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->WearPre,"tagWearPre_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WearPre of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_WearPre
static int tolua_set_tagItemDef_ToLua_WearPre(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WearPre'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagWearPre_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WearPre = *((tagWearPre_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WearPosNum of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_WearPosNum
static int tolua_get_tagItemDef_ToLua_unsigned_WearPosNum(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WearPosNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WearPosNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WearPosNum of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_WearPosNum
static int tolua_set_tagItemDef_ToLua_unsigned_WearPosNum(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WearPosNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WearPosNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WearPos1 of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_WearPos1
static int tolua_get_tagItemDef_ToLua_unsigned_WearPos1(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WearPos1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WearPos1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WearPos1 of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_WearPos1
static int tolua_set_tagItemDef_ToLua_unsigned_WearPos1(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WearPos1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WearPos1 = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WearPos2 of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_WearPos2
static int tolua_get_tagItemDef_ToLua_unsigned_WearPos2(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WearPos2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WearPos2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WearPos2 of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_WearPos2
static int tolua_set_tagItemDef_ToLua_unsigned_WearPos2(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WearPos2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WearPos2 = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WearPos3 of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_WearPos3
static int tolua_get_tagItemDef_ToLua_unsigned_WearPos3(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WearPos3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WearPos3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WearPos3 of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_WearPos3
static int tolua_set_tagItemDef_ToLua_unsigned_WearPos3(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WearPos3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WearPos3 = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemDesc of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_ItemDesc
static int tolua_get_tagItemDef_ToLua_ItemDesc(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->ItemDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemDesc of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_ItemDesc
static int tolua_set_tagItemDef_ToLua_ItemDesc(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->ItemDesc,tolua_tostring(tolua_S,2,0),DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemTmp of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_ItemTmp
static int tolua_get_tagItemDef_ToLua_ItemTmp(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemTmp'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->ItemTmp,"tagItemTmp_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemTmp of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_ItemTmp
static int tolua_set_tagItemDef_ToLua_ItemTmp(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemTmp'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagItemTmp_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemTmp = *((tagItemTmp_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RepairBull of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_RepairBull
static int tolua_get_tagItemDef_ToLua_unsigned_RepairBull(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RepairBull'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RepairBull);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RepairBull of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_RepairBull
static int tolua_set_tagItemDef_ToLua_unsigned_RepairBull(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RepairBull'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RepairBull = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DamageMul of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_DamageMul
static int tolua_get_tagItemDef_ToLua_DamageMul(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DamageMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DamageMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DamageMul of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_DamageMul
static int tolua_set_tagItemDef_ToLua_DamageMul(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DamageMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DamageMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DamageAdd of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_DamageAdd
static int tolua_get_tagItemDef_ToLua_unsigned_DamageAdd(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DamageAdd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DamageAdd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DamageAdd of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_DamageAdd
static int tolua_set_tagItemDef_ToLua_unsigned_DamageAdd(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DamageAdd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DamageAdd = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SelfCool of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_SelfCool
static int tolua_get_tagItemDef_ToLua_SelfCool(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SelfCool'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SelfCool);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SelfCool of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_SelfCool
static int tolua_set_tagItemDef_ToLua_SelfCool(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SelfCool'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SelfCool = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpeCool of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_SpeCool
static int tolua_get_tagItemDef_ToLua_SpeCool(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCool'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SpeCool);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpeCool of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_SpeCool
static int tolua_set_tagItemDef_ToLua_SpeCool(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCool'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpeCool = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SelfSpeCoolType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_SelfSpeCoolType
static int tolua_get_tagItemDef_ToLua_unsigned_SelfSpeCoolType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SelfSpeCoolType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SelfSpeCoolType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SelfSpeCoolType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_SelfSpeCoolType
static int tolua_set_tagItemDef_ToLua_unsigned_SelfSpeCoolType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SelfSpeCoolType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SelfSpeCoolType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpeCoolType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_SpeCoolType
static int tolua_get_tagItemDef_ToLua_unsigned_SpeCoolType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SpeCoolType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpeCoolType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_SpeCoolType
static int tolua_set_tagItemDef_ToLua_unsigned_SpeCoolType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpeCoolType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpeCoolType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NoNpcSell of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_NoNpcSell
static int tolua_get_tagItemDef_ToLua_unsigned_NoNpcSell(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoNpcSell'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NoNpcSell);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NoNpcSell of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_NoNpcSell
static int tolua_set_tagItemDef_ToLua_unsigned_NoNpcSell(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoNpcSell'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NoNpcSell = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NoDeal of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_NoDeal
static int tolua_get_tagItemDef_ToLua_unsigned_NoDeal(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoDeal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NoDeal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NoDeal of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_NoDeal
static int tolua_set_tagItemDef_ToLua_unsigned_NoDeal(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoDeal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NoDeal = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemScript of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_ItemScript
static int tolua_get_tagItemDef_ToLua_unsigned_ItemScript(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemScript'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemScript);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemScript of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_ItemScript
static int tolua_set_tagItemDef_ToLua_unsigned_ItemScript(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemScript'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemScript = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MapItem of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_MapItem
static int tolua_get_tagItemDef_ToLua_unsigned_MapItem(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MapItem'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MapItem);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MapItem of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_MapItem
static int tolua_set_tagItemDef_ToLua_unsigned_MapItem(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MapItem'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MapItem = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ArmType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_ArmType
static int tolua_get_tagItemDef_ToLua_unsigned_ArmType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ArmType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ArmType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_ArmType
static int tolua_set_tagItemDef_ToLua_unsigned_ArmType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ArmType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseTarget of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_UseTarget
static int tolua_get_tagItemDef_ToLua_unsigned_UseTarget(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseTarget'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseTarget);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseTarget of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_UseTarget
static int tolua_set_tagItemDef_ToLua_unsigned_UseTarget(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseTarget'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseTarget = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TrustContributeVim of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_TrustContributeVim
static int tolua_get_tagItemDef_ToLua_TrustContributeVim(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TrustContributeVim'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TrustContributeVim);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TrustContributeVim of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_TrustContributeVim
static int tolua_set_tagItemDef_ToLua_TrustContributeVim(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TrustContributeVim'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TrustContributeVim = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GainExp of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_GainExp
static int tolua_get_tagItemDef_ToLua_unsigned_GainExp(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GainExp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GainExp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GainExp of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_GainExp
static int tolua_set_tagItemDef_ToLua_unsigned_GainExp(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GainExp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GainExp = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TrustOrderVim of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_TrustOrderVim
static int tolua_get_tagItemDef_ToLua_TrustOrderVim(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TrustOrderVim'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TrustOrderVim);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TrustOrderVim of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_TrustOrderVim
static int tolua_set_tagItemDef_ToLua_TrustOrderVim(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TrustOrderVim'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TrustOrderVim = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ContributeBuddyVal of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_ContributeBuddyVal
static int tolua_get_tagItemDef_ToLua_unsigned_ContributeBuddyVal(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ContributeBuddyVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ContributeBuddyVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ContributeBuddyVal of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_ContributeBuddyVal
static int tolua_set_tagItemDef_ToLua_unsigned_ContributeBuddyVal(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ContributeBuddyVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ContributeBuddyVal = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NextItemID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_NextItemID
static int tolua_get_tagItemDef_ToLua_unsigned_NextItemID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NextItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NextItemID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_NextItemID
static int tolua_set_tagItemDef_ToLua_unsigned_NextItemID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NextItemID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NextItemMoney of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_NextItemMoney
static int tolua_get_tagItemDef_ToLua_unsigned_NextItemMoney(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextItemMoney'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NextItemMoney);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NextItemMoney of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_NextItemMoney
static int tolua_set_tagItemDef_ToLua_unsigned_NextItemMoney(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextItemMoney'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NextItemMoney = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NextItemLevel of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_NextItemLevel
static int tolua_get_tagItemDef_ToLua_unsigned_NextItemLevel(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextItemLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NextItemLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NextItemLevel of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_NextItemLevel
static int tolua_set_tagItemDef_ToLua_unsigned_NextItemLevel(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextItemLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NextItemLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IdentifiabilityType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_IdentifiabilityType
static int tolua_get_tagItemDef_ToLua_unsigned_IdentifiabilityType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IdentifiabilityType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IdentifiabilityType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IdentifiabilityType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_IdentifiabilityType
static int tolua_set_tagItemDef_ToLua_unsigned_IdentifiabilityType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IdentifiabilityType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IdentifiabilityType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IdentifiabilityMoney of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_IdentifiabilityMoney
static int tolua_get_tagItemDef_ToLua_unsigned_IdentifiabilityMoney(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IdentifiabilityMoney'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IdentifiabilityMoney);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IdentifiabilityMoney of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_IdentifiabilityMoney
static int tolua_set_tagItemDef_ToLua_unsigned_IdentifiabilityMoney(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IdentifiabilityMoney'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IdentifiabilityMoney = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IdentifiabilityItems of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagItemDef_ToLua_IdentifiabilityItems
static int tolua_get_GameEngineTolua_tagItemDef_ToLua_IdentifiabilityItems(lua_State* tolua_S)
{
 int tolua_index;
  tagItemDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagItemDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_IDENTIFIABILITY_ITEM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->IdentifiabilityItems[tolua_index],"tagIdentifiableItem_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IdentifiabilityItems of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagItemDef_ToLua_IdentifiabilityItems
static int tolua_set_GameEngineTolua_tagItemDef_ToLua_IdentifiabilityItems(lua_State* tolua_S)
{
 int tolua_index;
  tagItemDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagItemDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_IDENTIFIABILITY_ITEM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->IdentifiabilityItems[tolua_index] = *((tagIdentifiableItem_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StarLimit of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_StarLimit
static int tolua_get_tagItemDef_ToLua_unsigned_StarLimit(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StarLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StarLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StarLimit of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_StarLimit
static int tolua_set_tagItemDef_ToLua_unsigned_StarLimit(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StarLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StarLimit = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddAttr of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagItemDef_ToLua_AddAttr
static int tolua_get_GameEngineTolua_tagItemDef_ToLua_AddAttr(lua_State* tolua_S)
{
 int tolua_index;
  tagItemDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagItemDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ITEM_ADD_ATTR)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->AddAttr[tolua_index],"tagAddAttrList_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddAttr of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagItemDef_ToLua_AddAttr
static int tolua_set_GameEngineTolua_tagItemDef_ToLua_AddAttr(lua_State* tolua_S)
{
 int tolua_index;
  tagItemDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagItemDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ITEM_ADD_ATTR)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->AddAttr[tolua_index] = *((tagAddAttrList_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemLevel of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_ItemLevel
static int tolua_get_tagItemDef_ToLua_ItemLevel(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemLevel of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_ItemLevel
static int tolua_set_tagItemDef_ToLua_ItemLevel(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemLevel = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemStar of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_ItemStar
static int tolua_get_tagItemDef_ToLua_unsigned_ItemStar(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemStar'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemStar);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemStar of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_ItemStar
static int tolua_set_tagItemDef_ToLua_unsigned_ItemStar(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemStar'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemStar = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemUsePre of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_ItemUsePre
static int tolua_get_tagItemDef_ToLua_unsigned_ItemUsePre(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemUsePre'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemUsePre);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemUsePre of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_ItemUsePre
static int tolua_set_tagItemDef_ToLua_unsigned_ItemUsePre(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemUsePre'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemUsePre = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NeedRespact of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_NeedRespact
static int tolua_get_tagItemDef_ToLua_NeedRespact(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NeedRespact'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->NeedRespact,"tagRespactEntry_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NeedRespact of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_NeedRespact
static int tolua_set_tagItemDef_ToLua_NeedRespact(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NeedRespact'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagRespactEntry_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NeedRespact = *((tagRespactEntry_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Hole of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagItemDef_ToLua_Hole
static int tolua_get_GameEngineTolua_tagItemDef_ToLua_Hole(lua_State* tolua_S)
{
 int tolua_index;
  tagItemDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagItemDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_HOLE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Hole[tolua_index],"tagRndHole_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Hole of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagItemDef_ToLua_Hole
static int tolua_set_GameEngineTolua_tagItemDef_ToLua_Hole(lua_State* tolua_S)
{
 int tolua_index;
  tagItemDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagItemDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_HOLE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Hole[tolua_index] = *((tagRndHole_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RandAddAttr of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_RandAddAttr
static int tolua_get_tagItemDef_ToLua_unsigned_RandAddAttr(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RandAddAttr'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RandAddAttr);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RandAddAttr of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_RandAddAttr
static int tolua_set_tagItemDef_ToLua_unsigned_RandAddAttr(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RandAddAttr'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RandAddAttr = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseMaxDur of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_UseMaxDur
static int tolua_get_tagItemDef_ToLua_unsigned_UseMaxDur(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseMaxDur'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseMaxDur);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseMaxDur of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_UseMaxDur
static int tolua_set_tagItemDef_ToLua_unsigned_UseMaxDur(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseMaxDur'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseMaxDur = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxUseOneDay of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_MaxUseOneDay
static int tolua_get_tagItemDef_ToLua_unsigned_MaxUseOneDay(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxUseOneDay'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxUseOneDay);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxUseOneDay of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_MaxUseOneDay
static int tolua_set_tagItemDef_ToLua_unsigned_MaxUseOneDay(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxUseOneDay'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxUseOneDay = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseTargetID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_UseTargetID
static int tolua_get_tagItemDef_ToLua_unsigned_UseTargetID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseTargetID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseTargetID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseTargetID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_UseTargetID
static int tolua_set_tagItemDef_ToLua_unsigned_UseTargetID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseTargetID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseTargetID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseModel of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_UseModel
static int tolua_get_tagItemDef_ToLua_UseModel(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseModel'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->UseModel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseModel of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_UseModel
static int tolua_set_tagItemDef_ToLua_UseModel(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseModel'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->UseModel,tolua_tostring(tolua_S,2,0),RES_PATH_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseActID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_UseActID
static int tolua_get_tagItemDef_ToLua_UseActID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseActID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseActID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseActID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_UseActID
static int tolua_set_tagItemDef_ToLua_UseActID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseActID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseActID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BattleNoUse of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_BattleNoUse
static int tolua_get_tagItemDef_ToLua_BattleNoUse(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BattleNoUse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BattleNoUse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BattleNoUse of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_BattleNoUse
static int tolua_set_tagItemDef_ToLua_BattleNoUse(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BattleNoUse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BattleNoUse = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IsReStoreItem of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_IsReStoreItem
static int tolua_get_tagItemDef_ToLua_IsReStoreItem(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsReStoreItem'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IsReStoreItem);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IsReStoreItem of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_IsReStoreItem
static int tolua_set_tagItemDef_ToLua_IsReStoreItem(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsReStoreItem'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IsReStoreItem = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ExtendedType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_ExtendedType
static int tolua_get_tagItemDef_ToLua_ExtendedType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExtendedType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ExtendedType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ExtendedType of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_ExtendedType
static int tolua_set_tagItemDef_ToLua_ExtendedType(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExtendedType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ExtendedType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DropSelfView of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_DropSelfView
static int tolua_get_tagItemDef_ToLua_DropSelfView(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DropSelfView'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DropSelfView);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DropSelfView of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_DropSelfView
static int tolua_set_tagItemDef_ToLua_DropSelfView(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DropSelfView'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DropSelfView = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ModelIndex of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_ModelIndex
static int tolua_get_tagItemDef_ToLua_ModelIndex(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ModelIndex'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ModelIndex);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ModelIndex of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_ModelIndex
static int tolua_set_tagItemDef_ToLua_ModelIndex(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ModelIndex'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ModelIndex = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NoResolve of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_NoResolve
static int tolua_get_tagItemDef_ToLua_NoResolve(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoResolve'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NoResolve);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NoResolve of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_NoResolve
static int tolua_set_tagItemDef_ToLua_NoResolve(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NoResolve'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NoResolve = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DieDropFlag of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_DieDropFlag
static int tolua_get_tagItemDef_ToLua_DieDropFlag(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DieDropFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DieDropFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DieDropFlag of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_DieDropFlag
static int tolua_set_tagItemDef_ToLua_DieDropFlag(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DieDropFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DieDropFlag = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddAttrGroupID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_AddAttrGroupID
static int tolua_get_tagItemDef_ToLua_AddAttrGroupID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrGroupID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AddAttrGroupID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddAttrGroupID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_AddAttrGroupID
static int tolua_set_tagItemDef_ToLua_AddAttrGroupID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrGroupID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AddAttrGroupID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CtrlFlag of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_CtrlFlag
static int tolua_get_tagItemDef_ToLua_CtrlFlag(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CtrlFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CtrlFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CtrlFlag of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_CtrlFlag
static int tolua_set_tagItemDef_ToLua_CtrlFlag(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CtrlFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CtrlFlag = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ClanContri of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_ClanContri
static int tolua_get_tagItemDef_ToLua_ClanContri(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ClanContri'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ClanContri);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ClanContri of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_ClanContri
static int tolua_set_tagItemDef_ToLua_ClanContri(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ClanContri'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ClanContri = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxUseDist of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_MaxUseDist
static int tolua_get_tagItemDef_ToLua_MaxUseDist(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxUseDist'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxUseDist);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxUseDist of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_MaxUseDist
static int tolua_set_tagItemDef_ToLua_MaxUseDist(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxUseDist'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxUseDist = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PoseID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_PoseID
static int tolua_get_tagItemDef_ToLua_unsigned_PoseID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PoseID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PoseID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PoseID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_PoseID
static int tolua_set_tagItemDef_ToLua_unsigned_PoseID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PoseID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PoseID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BuyLimitFlag of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_BuyLimitFlag
static int tolua_get_tagItemDef_ToLua_unsigned_BuyLimitFlag(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BuyLimitFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BuyLimitFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BuyLimitFlag of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_BuyLimitFlag
static int tolua_set_tagItemDef_ToLua_unsigned_BuyLimitFlag(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BuyLimitFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BuyLimitFlag = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoneyUses of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagItemDef_ToLua_MoneyUses
static int tolua_get_GameEngineTolua_tagItemDef_ToLua_MoneyUses(lua_State* tolua_S)
{
 int tolua_index;
  tagItemDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagItemDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_OTHER_MONEY_USE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->MoneyUses[tolua_index],"tagMoneyUse_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoneyUses of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagItemDef_ToLua_MoneyUses
static int tolua_set_GameEngineTolua_tagItemDef_ToLua_MoneyUses(lua_State* tolua_S)
{
 int tolua_index;
  tagItemDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagItemDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_OTHER_MONEY_USE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->MoneyUses[tolua_index] = *((tagMoneyUse_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NeedSpartaFight of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_NeedSpartaFight
static int tolua_get_tagItemDef_ToLua_NeedSpartaFight(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NeedSpartaFight'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NeedSpartaFight);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NeedSpartaFight of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_NeedSpartaFight
static int tolua_set_tagItemDef_ToLua_NeedSpartaFight(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NeedSpartaFight'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NeedSpartaFight = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillNum of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_SkillNum
static int tolua_get_tagItemDef_ToLua_SkillNum(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillNum of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_SkillNum
static int tolua_set_tagItemDef_ToLua_SkillNum(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TeshuID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemDef_ToLua_unsigned_TeshuID
static int tolua_get_tagItemDef_ToLua_unsigned_TeshuID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TeshuID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TeshuID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TeshuID of class  tagItemDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemDef_ToLua_unsigned_TeshuID
static int tolua_set_tagItemDef_ToLua_unsigned_TeshuID(lua_State* tolua_S)
{
  tagItemDef_ToLua* self = (tagItemDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TeshuID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TeshuID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SuitAttrID of class  tagSuitAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSuitAttr_ToLua_unsigned_SuitAttrID
static int tolua_get_tagSuitAttr_ToLua_unsigned_SuitAttrID(lua_State* tolua_S)
{
  tagSuitAttr_ToLua* self = (tagSuitAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SuitAttrID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SuitAttrID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SuitAttrID of class  tagSuitAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSuitAttr_ToLua_unsigned_SuitAttrID
static int tolua_set_tagSuitAttr_ToLua_unsigned_SuitAttrID(lua_State* tolua_S)
{
  tagSuitAttr_ToLua* self = (tagSuitAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SuitAttrID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SuitAttrID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MinSuitNum of class  tagSuitAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSuitAttr_ToLua_unsigned_MinSuitNum
static int tolua_get_tagSuitAttr_ToLua_unsigned_MinSuitNum(lua_State* tolua_S)
{
  tagSuitAttr_ToLua* self = (tagSuitAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinSuitNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MinSuitNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MinSuitNum of class  tagSuitAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSuitAttr_ToLua_unsigned_MinSuitNum
static int tolua_set_tagSuitAttr_ToLua_unsigned_MinSuitNum(lua_State* tolua_S)
{
  tagSuitAttr_ToLua* self = (tagSuitAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinSuitNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MinSuitNum = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SuitSetID of class  tagSuitSet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSuitSet_ToLua_unsigned_SuitSetID
static int tolua_get_tagSuitSet_ToLua_unsigned_SuitSetID(lua_State* tolua_S)
{
  tagSuitSet_ToLua* self = (tagSuitSet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SuitSetID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SuitSetID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SuitSetID of class  tagSuitSet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSuitSet_ToLua_unsigned_SuitSetID
static int tolua_set_tagSuitSet_ToLua_unsigned_SuitSetID(lua_State* tolua_S)
{
  tagSuitSet_ToLua* self = (tagSuitSet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SuitSetID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SuitSetID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SuitSetType of class  tagSuitSet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSuitSet_ToLua_SuitSetType
static int tolua_get_tagSuitSet_ToLua_SuitSetType(lua_State* tolua_S)
{
  tagSuitSet_ToLua* self = (tagSuitSet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SuitSetType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SuitSetType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SuitSetType of class  tagSuitSet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSuitSet_ToLua_SuitSetType
static int tolua_set_tagSuitSet_ToLua_SuitSetType(lua_State* tolua_S)
{
  tagSuitSet_ToLua* self = (tagSuitSet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SuitSetType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SuitSetType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  tagSuitSet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagSuitSet_ToLua_Name
static int tolua_get_tagSuitSet_ToLua_Name(lua_State* tolua_S)
{
  tagSuitSet_ToLua* self = (tagSuitSet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  tagSuitSet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagSuitSet_ToLua_Name
static int tolua_set_tagSuitSet_ToLua_Name(lua_State* tolua_S)
{
  tagSuitSet_ToLua* self = (tagSuitSet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Name,tolua_tostring(tolua_S,2,0),RES_NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SuitAttr of class  tagSuitSet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagSuitSet_ToLua_SuitAttr
static int tolua_get_GameEngineTolua_tagSuitSet_ToLua_SuitAttr(lua_State* tolua_S)
{
 int tolua_index;
  tagSuitSet_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSuitSet_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SUIT_ATTR)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->SuitAttr[tolua_index],"tagSuitAttr_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SuitAttr of class  tagSuitSet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagSuitSet_ToLua_SuitAttr
static int tolua_set_GameEngineTolua_tagSuitSet_ToLua_SuitAttr(lua_State* tolua_S)
{
 int tolua_index;
  tagSuitSet_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSuitSet_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SUIT_ATTR)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->SuitAttr[tolua_index] = *((tagSuitAttr_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SuitAttrID of class  tagStarAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStarAttr_ToLua_unsigned_SuitAttrID
static int tolua_get_tagStarAttr_ToLua_unsigned_SuitAttrID(lua_State* tolua_S)
{
  tagStarAttr_ToLua* self = (tagStarAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SuitAttrID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SuitAttrID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SuitAttrID of class  tagStarAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStarAttr_ToLua_unsigned_SuitAttrID
static int tolua_set_tagStarAttr_ToLua_unsigned_SuitAttrID(lua_State* tolua_S)
{
  tagStarAttr_ToLua* self = (tagStarAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SuitAttrID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SuitAttrID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_Level
static int tolua_get_tagAddAttrBaseDef_ToLua_Level(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_Level
static int tolua_set_tagAddAttrBaseDef_ToLua_Level(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicAtkBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_PhsicAtkBase
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_PhsicAtkBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicAtkBase'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicAtkBase);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicAtkBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_PhsicAtkBase
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_PhsicAtkBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicAtkBase'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicAtkBase = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceAtkBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_IceAtkBase
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_IceAtkBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceAtkBase'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceAtkBase);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceAtkBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_IceAtkBase
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_IceAtkBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceAtkBase'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceAtkBase = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicDefBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_PhsicDefBase
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_PhsicDefBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicDefBase'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicDefBase);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicDefBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_PhsicDefBase
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_PhsicDefBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicDefBase'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicDefBase = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceDefBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_IceDefBase
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_IceDefBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceDefBase'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceDefBase);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceDefBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_IceDefBase
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_IceDefBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceDefBase'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceDefBase = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxHPBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_MaxHPBase
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_MaxHPBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxHPBase'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxHPBase);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxHPBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_MaxHPBase
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_MaxHPBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxHPBase'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxHPBase = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxMPBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_MaxMPBase
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_MaxMPBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxMPBase'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxMPBase);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxMPBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_MaxMPBase
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_MaxMPBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxMPBase'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxMPBase = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HitRateBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_HitRateBase
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_HitRateBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HitRateBase'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HitRateBase);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HitRateBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_HitRateBase
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_HitRateBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HitRateBase'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HitRateBase = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FleeBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_FleeBase
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_FleeBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FleeBase'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FleeBase);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FleeBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_FleeBase
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_FleeBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FleeBase'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FleeBase = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DefPhsicHurtBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_DefPhsicHurtBase
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_DefPhsicHurtBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefPhsicHurtBase'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DefPhsicHurtBase);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DefPhsicHurtBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_DefPhsicHurtBase
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_DefPhsicHurtBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefPhsicHurtBase'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DefPhsicHurtBase = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DefIceHurtBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_DefIceHurtBase
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_DefIceHurtBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefIceHurtBase'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DefIceHurtBase);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DefIceHurtBase of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_DefIceHurtBase
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_DefIceHurtBase(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefIceHurtBase'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DefIceHurtBase = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LiLiang of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_LiLiang
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_LiLiang(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LiLiang'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LiLiang);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LiLiang of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_LiLiang
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_LiLiang(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LiLiang'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LiLiang = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Zhili of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_Zhili
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_Zhili(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Zhili'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Zhili);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Zhili of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_Zhili
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_Zhili(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Zhili'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Zhili = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TiZhi of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_TiZhi
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_TiZhi(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TiZhi'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TiZhi);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TiZhi of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_TiZhi
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_TiZhi(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TiZhi'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TiZhi = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FangHu of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_FangHu
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_FangHu(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FangHu'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FangHu);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FangHu of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_FangHu
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_FangHu(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FangHu'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FangHu = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: JingShen of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_JingShen
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_JingShen(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'JingShen'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->JingShen);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: JingShen of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_JingShen
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_JingShen(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'JingShen'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->JingShen = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MinJie of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_MinJie
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_MinJie(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinJie'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MinJie);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MinJie of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_MinJie
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_MinJie(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinJie'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MinJie = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HeavyHit of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_HeavyHit
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_HeavyHit(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HeavyHit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HeavyHit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HeavyHit of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_HeavyHit
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_HeavyHit(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HeavyHit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HeavyHit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DefHeavyHit of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_unsigned_DefHeavyHit
static int tolua_get_tagAddAttrBaseDef_ToLua_unsigned_DefHeavyHit(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefHeavyHit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DefHeavyHit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DefHeavyHit of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_unsigned_DefHeavyHit
static int tolua_set_tagAddAttrBaseDef_ToLua_unsigned_DefHeavyHit(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefHeavyHit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DefHeavyHit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WaterAtk of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_WaterAtk
static int tolua_get_tagAddAttrBaseDef_ToLua_WaterAtk(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WaterAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WaterAtk of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_WaterAtk
static int tolua_set_tagAddAttrBaseDef_ToLua_WaterAtk(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WaterAtk = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WaterDef of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_WaterDef
static int tolua_get_tagAddAttrBaseDef_ToLua_WaterDef(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WaterDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WaterDef of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_WaterDef
static int tolua_set_tagAddAttrBaseDef_ToLua_WaterDef(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WaterDef = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireAtk of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_FireAtk
static int tolua_get_tagAddAttrBaseDef_ToLua_FireAtk(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireAtk of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_FireAtk
static int tolua_set_tagAddAttrBaseDef_ToLua_FireAtk(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireAtk = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireDef of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_FireDef
static int tolua_get_tagAddAttrBaseDef_ToLua_FireDef(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireDef of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_FireDef
static int tolua_set_tagAddAttrBaseDef_ToLua_FireDef(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireDef = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderAtk of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_ThunderAtk
static int tolua_get_tagAddAttrBaseDef_ToLua_ThunderAtk(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderAtk of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_ThunderAtk
static int tolua_set_tagAddAttrBaseDef_ToLua_ThunderAtk(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderAtk = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderDef of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_ThunderDef
static int tolua_get_tagAddAttrBaseDef_ToLua_ThunderDef(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderDef of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_ThunderDef
static int tolua_set_tagAddAttrBaseDef_ToLua_ThunderDef(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderDef = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LightAtk of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_LightAtk
static int tolua_get_tagAddAttrBaseDef_ToLua_LightAtk(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LightAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LightAtk of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_LightAtk
static int tolua_set_tagAddAttrBaseDef_ToLua_LightAtk(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LightAtk = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LightDef of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_LightDef
static int tolua_get_tagAddAttrBaseDef_ToLua_LightDef(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LightDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LightDef of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_LightDef
static int tolua_set_tagAddAttrBaseDef_ToLua_LightDef(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LightDef = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NightAtk of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_NightAtk
static int tolua_get_tagAddAttrBaseDef_ToLua_NightAtk(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NightAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NightAtk of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_NightAtk
static int tolua_set_tagAddAttrBaseDef_ToLua_NightAtk(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NightAtk = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NightDef of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_NightDef
static int tolua_get_tagAddAttrBaseDef_ToLua_NightDef(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NightDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NightDef of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_NightDef
static int tolua_set_tagAddAttrBaseDef_ToLua_NightDef(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NightDef = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IgnoreDef of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_IgnoreDef
static int tolua_get_tagAddAttrBaseDef_ToLua_IgnoreDef(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IgnoreDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IgnoreDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IgnoreDef of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_IgnoreDef
static int tolua_set_tagAddAttrBaseDef_ToLua_IgnoreDef(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IgnoreDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IgnoreDef = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ReflectHP of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_ReflectHP
static int tolua_get_tagAddAttrBaseDef_ToLua_ReflectHP(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ReflectHP'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ReflectHP);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ReflectHP of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_ReflectHP
static int tolua_set_tagAddAttrBaseDef_ToLua_ReflectHP(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ReflectHP'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ReflectHP = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DefHP of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrBaseDef_ToLua_DefHP
static int tolua_get_tagAddAttrBaseDef_ToLua_DefHP(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefHP'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DefHP);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DefHP of class  tagAddAttrBaseDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrBaseDef_ToLua_DefHP
static int tolua_set_tagAddAttrBaseDef_ToLua_DefHP(lua_State* tolua_S)
{
  tagAddAttrBaseDef_ToLua* self = (tagAddAttrBaseDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefHP'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DefHP = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ID of class  tagFixedAddAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFixedAddAttr_ToLua_unsigned_ID
static int tolua_get_tagFixedAddAttr_ToLua_unsigned_ID(lua_State* tolua_S)
{
  tagFixedAddAttr_ToLua* self = (tagFixedAddAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ID of class  tagFixedAddAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFixedAddAttr_ToLua_unsigned_ID
static int tolua_set_tagFixedAddAttr_ToLua_unsigned_ID(lua_State* tolua_S)
{
  tagFixedAddAttr_ToLua* self = (tagFixedAddAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddAttrs of class  tagFixedAddAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagFixedAddAttr_ToLua_AddAttrs
static int tolua_get_GameEngineTolua_tagFixedAddAttr_ToLua_AddAttrs(lua_State* tolua_S)
{
 int tolua_index;
  tagFixedAddAttr_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagFixedAddAttr_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ITEM_ADD_ATTR)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->AddAttrs[tolua_index],"tagAddAttrList_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddAttrs of class  tagFixedAddAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagFixedAddAttr_ToLua_AddAttrs
static int tolua_set_GameEngineTolua_tagFixedAddAttr_ToLua_AddAttrs(lua_State* tolua_S)
{
 int tolua_index;
  tagFixedAddAttr_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagFixedAddAttr_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ITEM_ADD_ATTR)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->AddAttrs[tolua_index] = *((tagAddAttrList_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Career of class  tagArmHideAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmHideAttrDef_ToLua_unsigned_Career
static int tolua_get_tagArmHideAttrDef_ToLua_unsigned_Career(lua_State* tolua_S)
{
  tagArmHideAttrDef_ToLua* self = (tagArmHideAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Career'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Career);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Career of class  tagArmHideAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmHideAttrDef_ToLua_unsigned_Career
static int tolua_set_tagArmHideAttrDef_ToLua_unsigned_Career(lua_State* tolua_S)
{
  tagArmHideAttrDef_ToLua* self = (tagArmHideAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Career'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Career = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ArmStarLevel of class  tagArmHideAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmHideAttrDef_ToLua_unsigned_ArmStarLevel
static int tolua_get_tagArmHideAttrDef_ToLua_unsigned_ArmStarLevel(lua_State* tolua_S)
{
  tagArmHideAttrDef_ToLua* self = (tagArmHideAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmStarLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ArmStarLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ArmStarLevel of class  tagArmHideAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmHideAttrDef_ToLua_unsigned_ArmStarLevel
static int tolua_set_tagArmHideAttrDef_ToLua_unsigned_ArmStarLevel(lua_State* tolua_S)
{
  tagArmHideAttrDef_ToLua* self = (tagArmHideAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmStarLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ArmStarLevel = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Result of class  tagArmHideAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagArmHideAttrDef_ToLua_Result
static int tolua_get_GameEngineTolua_tagArmHideAttrDef_ToLua_Result(lua_State* tolua_S)
{
 int tolua_index;
  tagArmHideAttrDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagArmHideAttrDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_HIDE_ATTR_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Result[tolua_index],"tagResult_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Result of class  tagArmHideAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagArmHideAttrDef_ToLua_Result
static int tolua_set_GameEngineTolua_tagArmHideAttrDef_ToLua_Result(lua_State* tolua_S)
{
 int tolua_index;
  tagArmHideAttrDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagArmHideAttrDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_HIDE_ATTR_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Result[tolua_index] = *((tagResult_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Mul of class  tagStarMulInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStarMulInfo_ToLua_Mul
static int tolua_get_tagStarMulInfo_ToLua_Mul(lua_State* tolua_S)
{
  tagStarMulInfo_ToLua* self = (tagStarMulInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Mul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Mul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Mul of class  tagStarMulInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStarMulInfo_ToLua_Mul
static int tolua_set_tagStarMulInfo_ToLua_Mul(lua_State* tolua_S)
{
  tagStarMulInfo_ToLua* self = (tagStarMulInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Mul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Mul = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Rate of class  tagStarMulInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagStarMulInfo_ToLua_Rate
static int tolua_get_tagStarMulInfo_ToLua_Rate(lua_State* tolua_S)
{
  tagStarMulInfo_ToLua* self = (tagStarMulInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Rate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Rate of class  tagStarMulInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagStarMulInfo_ToLua_Rate
static int tolua_set_tagStarMulInfo_ToLua_Rate(lua_State* tolua_S)
{
  tagStarMulInfo_ToLua* self = (tagStarMulInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Rate = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Star of class  tagArmStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmStarDef_ToLua_Star
static int tolua_get_tagArmStarDef_ToLua_Star(lua_State* tolua_S)
{
  tagArmStarDef_ToLua* self = (tagArmStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Star'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Star);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Star of class  tagArmStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmStarDef_ToLua_Star
static int tolua_set_tagArmStarDef_ToLua_Star(lua_State* tolua_S)
{
  tagArmStarDef_ToLua* self = (tagArmStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Star'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Star = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StarInfo of class  tagArmStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagArmStarDef_ToLua_StarInfo
static int tolua_get_GameEngineTolua_tagArmStarDef_ToLua_StarInfo(lua_State* tolua_S)
{
 int tolua_index;
  tagArmStarDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagArmStarDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_STAR_MUL_LIST)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->StarInfo[tolua_index],"tagStarMulInfo_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StarInfo of class  tagArmStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagArmStarDef_ToLua_StarInfo
static int tolua_set_GameEngineTolua_tagArmStarDef_ToLua_StarInfo(lua_State* tolua_S)
{
 int tolua_index;
  tagArmStarDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagArmStarDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_STAR_MUL_LIST)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->StarInfo[tolua_index] = *((tagStarMulInfo_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PerfectRate of class  tagArmStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmStarDef_ToLua_PerfectRate
static int tolua_get_tagArmStarDef_ToLua_PerfectRate(lua_State* tolua_S)
{
  tagArmStarDef_ToLua* self = (tagArmStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PerfectRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PerfectRate of class  tagArmStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmStarDef_ToLua_PerfectRate
static int tolua_set_tagArmStarDef_ToLua_PerfectRate(lua_State* tolua_S)
{
  tagArmStarDef_ToLua* self = (tagArmStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PerfectRate = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PerfectNum of class  tagArmStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmStarDef_ToLua_PerfectNum
static int tolua_get_tagArmStarDef_ToLua_PerfectNum(lua_State* tolua_S)
{
  tagArmStarDef_ToLua* self = (tagArmStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PerfectNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PerfectNum of class  tagArmStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmStarDef_ToLua_PerfectNum
static int tolua_set_tagArmStarDef_ToLua_PerfectNum(lua_State* tolua_S)
{
  tagArmStarDef_ToLua* self = (tagArmStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PerfectNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoveMoneyVal of class  tagArmStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmStarDef_ToLua_MoveMoneyVal
static int tolua_get_tagArmStarDef_ToLua_MoveMoneyVal(lua_State* tolua_S)
{
  tagArmStarDef_ToLua* self = (tagArmStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveMoneyVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoveMoneyVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoveMoneyVal of class  tagArmStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmStarDef_ToLua_MoveMoneyVal
static int tolua_set_tagArmStarDef_ToLua_MoveMoneyVal(lua_State* tolua_S)
{
  tagArmStarDef_ToLua* self = (tagArmStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveMoneyVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoveMoneyVal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MustItemID of class  tagArmStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmStarDef_ToLua_MustItemID
static int tolua_get_tagArmStarDef_ToLua_MustItemID(lua_State* tolua_S)
{
  tagArmStarDef_ToLua* self = (tagArmStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MustItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MustItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MustItemID of class  tagArmStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmStarDef_ToLua_MustItemID
static int tolua_set_tagArmStarDef_ToLua_MustItemID(lua_State* tolua_S)
{
  tagArmStarDef_ToLua* self = (tagArmStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MustItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MustItemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ArmType of class  tagArmGradeDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmGradeDef_ToLua_ArmType
static int tolua_get_tagArmGradeDef_ToLua_ArmType(lua_State* tolua_S)
{
  tagArmGradeDef_ToLua* self = (tagArmGradeDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ArmType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ArmType of class  tagArmGradeDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmGradeDef_ToLua_ArmType
static int tolua_set_tagArmGradeDef_ToLua_ArmType(lua_State* tolua_S)
{
  tagArmGradeDef_ToLua* self = (tagArmGradeDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ArmType = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ArmLevel of class  tagArmGradeDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmGradeDef_ToLua_ArmLevel
static int tolua_get_tagArmGradeDef_ToLua_ArmLevel(lua_State* tolua_S)
{
  tagArmGradeDef_ToLua* self = (tagArmGradeDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ArmLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ArmLevel of class  tagArmGradeDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmGradeDef_ToLua_ArmLevel
static int tolua_set_tagArmGradeDef_ToLua_ArmLevel(lua_State* tolua_S)
{
  tagArmGradeDef_ToLua* self = (tagArmGradeDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ArmLevel = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ArmStar of class  tagArmGradeDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagArmGradeDef_ToLua_ArmStar
static int tolua_get_GameEngineTolua_tagArmGradeDef_ToLua_ArmStar(lua_State* tolua_S)
{
 int tolua_index;
  tagArmGradeDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagArmGradeDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_STAR_LEVEL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->ArmStar[tolua_index],"tagStarAttr_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ArmStar of class  tagArmGradeDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagArmGradeDef_ToLua_ArmStar
static int tolua_set_GameEngineTolua_tagArmGradeDef_ToLua_ArmStar(lua_State* tolua_S)
{
 int tolua_index;
  tagArmGradeDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagArmGradeDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_STAR_LEVEL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->ArmStar[tolua_index] = *((tagStarAttr_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultID of class  tagAttrResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAttrResult_ToLua_unsigned_ResultID
static int tolua_get_tagAttrResult_ToLua_unsigned_ResultID(lua_State* tolua_S)
{
  tagAttrResult_ToLua* self = (tagAttrResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultID of class  tagAttrResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAttrResult_ToLua_unsigned_ResultID
static int tolua_set_tagAttrResult_ToLua_unsigned_ResultID(lua_State* tolua_S)
{
  tagAttrResult_ToLua* self = (tagAttrResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal1 of class  tagAttrResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAttrResult_ToLua_ResultVal1
static int tolua_get_tagAttrResult_ToLua_ResultVal1(lua_State* tolua_S)
{
  tagAttrResult_ToLua* self = (tagAttrResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal1 of class  tagAttrResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAttrResult_ToLua_ResultVal1
static int tolua_set_tagAttrResult_ToLua_ResultVal1(lua_State* tolua_S)
{
  tagAttrResult_ToLua* self = (tagAttrResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal1 = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal2 of class  tagAttrResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAttrResult_ToLua_ResultVal2
static int tolua_get_tagAttrResult_ToLua_ResultVal2(lua_State* tolua_S)
{
  tagAttrResult_ToLua* self = (tagAttrResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal2 of class  tagAttrResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAttrResult_ToLua_ResultVal2
static int tolua_set_tagAttrResult_ToLua_ResultVal2(lua_State* tolua_S)
{
  tagAttrResult_ToLua* self = (tagAttrResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal2 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal3 of class  tagAttrResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAttrResult_ToLua_ResultVal3
static int tolua_get_tagAttrResult_ToLua_ResultVal3(lua_State* tolua_S)
{
  tagAttrResult_ToLua* self = (tagAttrResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal3 of class  tagAttrResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAttrResult_ToLua_ResultVal3
static int tolua_set_tagAttrResult_ToLua_ResultVal3(lua_State* tolua_S)
{
  tagAttrResult_ToLua* self = (tagAttrResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal3 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal4 of class  tagAttrResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAttrResult_ToLua_ResultVal4
static int tolua_get_tagAttrResult_ToLua_ResultVal4(lua_State* tolua_S)
{
  tagAttrResult_ToLua* self = (tagAttrResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal4'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal4);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal4 of class  tagAttrResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAttrResult_ToLua_ResultVal4
static int tolua_set_tagAttrResult_ToLua_ResultVal4(lua_State* tolua_S)
{
  tagAttrResult_ToLua* self = (tagAttrResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal4'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal4 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddAttrID of class  tagAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrDef_ToLua_unsigned_AddAttrID
static int tolua_get_tagAddAttrDef_ToLua_unsigned_AddAttrID(lua_State* tolua_S)
{
  tagAddAttrDef_ToLua* self = (tagAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AddAttrID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddAttrID of class  tagAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrDef_ToLua_unsigned_AddAttrID
static int tolua_set_tagAddAttrDef_ToLua_unsigned_AddAttrID(lua_State* tolua_S)
{
  tagAddAttrDef_ToLua* self = (tagAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AddAttrID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddAttrDesc of class  tagAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrDef_ToLua_AddAttrDesc
static int tolua_get_tagAddAttrDef_ToLua_AddAttrDesc(lua_State* tolua_S)
{
  tagAddAttrDef_ToLua* self = (tagAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->AddAttrDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddAttrDesc of class  tagAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrDef_ToLua_AddAttrDesc
static int tolua_set_tagAddAttrDef_ToLua_AddAttrDesc(lua_State* tolua_S)
{
  tagAddAttrDef_ToLua* self = (tagAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->AddAttrDesc,tolua_tostring(tolua_S,2,0),SHORT_DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: EffectSkillID of class  tagAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagAddAttrDef_ToLua_EffectSkillID
static int tolua_get_GameEngineTolua_tagAddAttrDef_ToLua_EffectSkillID(lua_State* tolua_S)
{
 int tolua_index;
  tagAddAttrDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagAddAttrDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ADDATTR_SKILL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->EffectSkillID[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: EffectSkillID of class  tagAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagAddAttrDef_ToLua_EffectSkillID
static int tolua_set_GameEngineTolua_tagAddAttrDef_ToLua_EffectSkillID(lua_State* tolua_S)
{
 int tolua_index;
  tagAddAttrDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagAddAttrDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ADDATTR_SKILL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->EffectSkillID[tolua_index] = ((unsigned short)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Result of class  tagAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagAddAttrDef_ToLua_Result
static int tolua_get_GameEngineTolua_tagAddAttrDef_ToLua_Result(lua_State* tolua_S)
{
 int tolua_index;
  tagAddAttrDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagAddAttrDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ADDATTR_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Result[tolua_index],"tagAttrResult_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Result of class  tagAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagAddAttrDef_ToLua_Result
static int tolua_set_GameEngineTolua_tagAddAttrDef_ToLua_Result(lua_State* tolua_S)
{
 int tolua_index;
  tagAddAttrDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagAddAttrDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ADDATTR_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Result[tolua_index] = *((tagAttrResult_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal1 of class  tagArmResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmResult_ToLua_ResultVal1
static int tolua_get_tagArmResult_ToLua_ResultVal1(lua_State* tolua_S)
{
  tagArmResult_ToLua* self = (tagArmResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal1 of class  tagArmResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmResult_ToLua_ResultVal1
static int tolua_set_tagArmResult_ToLua_ResultVal1(lua_State* tolua_S)
{
  tagArmResult_ToLua* self = (tagArmResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal1 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal2 of class  tagArmResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmResult_ToLua_ResultVal2
static int tolua_get_tagArmResult_ToLua_ResultVal2(lua_State* tolua_S)
{
  tagArmResult_ToLua* self = (tagArmResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal2 of class  tagArmResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmResult_ToLua_ResultVal2
static int tolua_set_tagArmResult_ToLua_ResultVal2(lua_State* tolua_S)
{
  tagArmResult_ToLua* self = (tagArmResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal2 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal3 of class  tagArmResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmResult_ToLua_ResultVal3
static int tolua_get_tagArmResult_ToLua_ResultVal3(lua_State* tolua_S)
{
  tagArmResult_ToLua* self = (tagArmResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal3 of class  tagArmResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmResult_ToLua_ResultVal3
static int tolua_set_tagArmResult_ToLua_ResultVal3(lua_State* tolua_S)
{
  tagArmResult_ToLua* self = (tagArmResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal3 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultVal4 of class  tagArmResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmResult_ToLua_ResultVal4
static int tolua_get_tagArmResult_ToLua_ResultVal4(lua_State* tolua_S)
{
  tagArmResult_ToLua* self = (tagArmResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal4'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultVal4);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultVal4 of class  tagArmResult_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmResult_ToLua_ResultVal4
static int tolua_set_tagArmResult_ToLua_ResultVal4(lua_State* tolua_S)
{
  tagArmResult_ToLua* self = (tagArmResult_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultVal4'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultVal4 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddAttrID of class  tagArmAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmAddAttrDef_ToLua_unsigned_AddAttrID
static int tolua_get_tagArmAddAttrDef_ToLua_unsigned_AddAttrID(lua_State* tolua_S)
{
  tagArmAddAttrDef_ToLua* self = (tagArmAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AddAttrID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddAttrID of class  tagArmAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmAddAttrDef_ToLua_unsigned_AddAttrID
static int tolua_set_tagArmAddAttrDef_ToLua_unsigned_AddAttrID(lua_State* tolua_S)
{
  tagArmAddAttrDef_ToLua* self = (tagArmAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AddAttrID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddAttrName of class  tagArmAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagArmAddAttrDef_ToLua_AddAttrName
static int tolua_get_tagArmAddAttrDef_ToLua_AddAttrName(lua_State* tolua_S)
{
  tagArmAddAttrDef_ToLua* self = (tagArmAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrName'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->AddAttrName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddAttrName of class  tagArmAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagArmAddAttrDef_ToLua_AddAttrName
static int tolua_set_tagArmAddAttrDef_ToLua_AddAttrName(lua_State* tolua_S)
{
  tagArmAddAttrDef_ToLua* self = (tagArmAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrName'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->AddAttrName,tolua_tostring(tolua_S,2,0),NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Result of class  tagArmAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagArmAddAttrDef_ToLua_Result
static int tolua_get_GameEngineTolua_tagArmAddAttrDef_ToLua_Result(lua_State* tolua_S)
{
 int tolua_index;
  tagArmAddAttrDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagArmAddAttrDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_ADD_ATTR_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Result[tolua_index],"tagArmResult_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Result of class  tagArmAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagArmAddAttrDef_ToLua_Result
static int tolua_set_GameEngineTolua_tagArmAddAttrDef_ToLua_Result(lua_State* tolua_S)
{
 int tolua_index;
  tagArmAddAttrDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagArmAddAttrDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ARM_ADD_ATTR_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Result[tolua_index] = *((tagArmResult_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MinMul of class  tagAddAttrRangeInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrRangeInfo_ToLua_MinMul
static int tolua_get_tagAddAttrRangeInfo_ToLua_MinMul(lua_State* tolua_S)
{
  tagAddAttrRangeInfo_ToLua* self = (tagAddAttrRangeInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MinMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MinMul of class  tagAddAttrRangeInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrRangeInfo_ToLua_MinMul
static int tolua_set_tagAddAttrRangeInfo_ToLua_MinMul(lua_State* tolua_S)
{
  tagAddAttrRangeInfo_ToLua* self = (tagAddAttrRangeInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MinMul = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxnMul of class  tagAddAttrRangeInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrRangeInfo_ToLua_MaxnMul
static int tolua_get_tagAddAttrRangeInfo_ToLua_MaxnMul(lua_State* tolua_S)
{
  tagAddAttrRangeInfo_ToLua* self = (tagAddAttrRangeInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxnMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxnMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxnMul of class  tagAddAttrRangeInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrRangeInfo_ToLua_MaxnMul
static int tolua_set_tagAddAttrRangeInfo_ToLua_MaxnMul(lua_State* tolua_S)
{
  tagAddAttrRangeInfo_ToLua* self = (tagAddAttrRangeInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxnMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxnMul = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MidMul of class  tagAddAttrRangeInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrRangeInfo_ToLua_MidMul
static int tolua_get_tagAddAttrRangeInfo_ToLua_MidMul(lua_State* tolua_S)
{
  tagAddAttrRangeInfo_ToLua* self = (tagAddAttrRangeInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MidMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MidMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MidMul of class  tagAddAttrRangeInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrRangeInfo_ToLua_MidMul
static int tolua_set_tagAddAttrRangeInfo_ToLua_MidMul(lua_State* tolua_S)
{
  tagAddAttrRangeInfo_ToLua* self = (tagAddAttrRangeInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MidMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MidMul = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RightHand of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrWearPosLimit_ToLua_RightHand
static int tolua_get_tagAddAttrWearPosLimit_ToLua_RightHand(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RightHand'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RightHand);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RightHand of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrWearPosLimit_ToLua_RightHand
static int tolua_set_tagAddAttrWearPosLimit_ToLua_RightHand(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RightHand'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RightHand = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Head of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrWearPosLimit_ToLua_Head
static int tolua_get_tagAddAttrWearPosLimit_ToLua_Head(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Head'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Head);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Head of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrWearPosLimit_ToLua_Head
static int tolua_set_tagAddAttrWearPosLimit_ToLua_Head(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Head'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Head = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Body of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrWearPosLimit_ToLua_Body
static int tolua_get_tagAddAttrWearPosLimit_ToLua_Body(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Body'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Body);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Body of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrWearPosLimit_ToLua_Body
static int tolua_set_tagAddAttrWearPosLimit_ToLua_Body(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Body'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Body = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LeftHand of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrWearPosLimit_ToLua_LeftHand
static int tolua_get_tagAddAttrWearPosLimit_ToLua_LeftHand(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LeftHand'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LeftHand);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LeftHand of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrWearPosLimit_ToLua_LeftHand
static int tolua_set_tagAddAttrWearPosLimit_ToLua_LeftHand(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LeftHand'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LeftHand = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Face of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrWearPosLimit_ToLua_Face
static int tolua_get_tagAddAttrWearPosLimit_ToLua_Face(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Face'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Face);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Face of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrWearPosLimit_ToLua_Face
static int tolua_set_tagAddAttrWearPosLimit_ToLua_Face(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Face'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Face = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Shoulder of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrWearPosLimit_ToLua_Shoulder
static int tolua_get_tagAddAttrWearPosLimit_ToLua_Shoulder(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Shoulder'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Shoulder);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Shoulder of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrWearPosLimit_ToLua_Shoulder
static int tolua_set_tagAddAttrWearPosLimit_ToLua_Shoulder(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Shoulder'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Shoulder = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Shoe of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrWearPosLimit_ToLua_Shoe
static int tolua_get_tagAddAttrWearPosLimit_ToLua_Shoe(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Shoe'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Shoe);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Shoe of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrWearPosLimit_ToLua_Shoe
static int tolua_set_tagAddAttrWearPosLimit_ToLua_Shoe(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Shoe'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Shoe = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Amulet of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrWearPosLimit_ToLua_Amulet
static int tolua_get_tagAddAttrWearPosLimit_ToLua_Amulet(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Amulet'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Amulet);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Amulet of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrWearPosLimit_ToLua_Amulet
static int tolua_set_tagAddAttrWearPosLimit_ToLua_Amulet(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Amulet'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Amulet = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Ring of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrWearPosLimit_ToLua_Ring
static int tolua_get_tagAddAttrWearPosLimit_ToLua_Ring(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Ring'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Ring);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Ring of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrWearPosLimit_ToLua_Ring
static int tolua_set_tagAddAttrWearPosLimit_ToLua_Ring(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Ring'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Ring = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NeckLace of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrWearPosLimit_ToLua_NeckLace
static int tolua_get_tagAddAttrWearPosLimit_ToLua_NeckLace(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NeckLace'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NeckLace);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NeckLace of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrWearPosLimit_ToLua_NeckLace
static int tolua_set_tagAddAttrWearPosLimit_ToLua_NeckLace(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NeckLace'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NeckLace = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Back of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrWearPosLimit_ToLua_Back
static int tolua_get_tagAddAttrWearPosLimit_ToLua_Back(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Back'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Back);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Back of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrWearPosLimit_ToLua_Back
static int tolua_set_tagAddAttrWearPosLimit_ToLua_Back(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Back'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Back = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Badge of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrWearPosLimit_ToLua_Badge
static int tolua_get_tagAddAttrWearPosLimit_ToLua_Badge(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Badge'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Badge);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Badge of class  tagAddAttrWearPosLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrWearPosLimit_ToLua_Badge
static int tolua_set_tagAddAttrWearPosLimit_ToLua_Badge(lua_State* tolua_S)
{
  tagAddAttrWearPosLimit_ToLua* self = (tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Badge'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Badge = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: None of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrCareerLimit_ToLua_None
static int tolua_get_tagAddAttrCareerLimit_ToLua_None(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'None'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->None);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: None of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrCareerLimit_ToLua_None
static int tolua_set_tagAddAttrCareerLimit_ToLua_None(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'None'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->None = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Warrior of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrCareerLimit_ToLua_Warrior
static int tolua_get_tagAddAttrCareerLimit_ToLua_Warrior(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Warrior'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Warrior);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Warrior of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrCareerLimit_ToLua_Warrior
static int tolua_set_tagAddAttrCareerLimit_ToLua_Warrior(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Warrior'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Warrior = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Magicor of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrCareerLimit_ToLua_Magicor
static int tolua_get_tagAddAttrCareerLimit_ToLua_Magicor(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Magicor'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Magicor);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Magicor of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrCareerLimit_ToLua_Magicor
static int tolua_set_tagAddAttrCareerLimit_ToLua_Magicor(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Magicor'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Magicor = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Guner of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrCareerLimit_ToLua_Guner
static int tolua_get_tagAddAttrCareerLimit_ToLua_Guner(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Guner'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Guner);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Guner of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrCareerLimit_ToLua_Guner
static int tolua_set_tagAddAttrCareerLimit_ToLua_Guner(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Guner'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Guner = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Church of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrCareerLimit_ToLua_Church
static int tolua_get_tagAddAttrCareerLimit_ToLua_Church(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Church'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Church);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Church of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrCareerLimit_ToLua_Church
static int tolua_set_tagAddAttrCareerLimit_ToLua_Church(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Church'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Church = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SingleHandWarrior of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrCareerLimit_ToLua_SingleHandWarrior
static int tolua_get_tagAddAttrCareerLimit_ToLua_SingleHandWarrior(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SingleHandWarrior'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SingleHandWarrior);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SingleHandWarrior of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrCareerLimit_ToLua_SingleHandWarrior
static int tolua_set_tagAddAttrCareerLimit_ToLua_SingleHandWarrior(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SingleHandWarrior'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SingleHandWarrior = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DoubleHandWarrior of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrCareerLimit_ToLua_DoubleHandWarrior
static int tolua_get_tagAddAttrCareerLimit_ToLua_DoubleHandWarrior(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleHandWarrior'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DoubleHandWarrior);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DoubleHandWarrior of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrCareerLimit_ToLua_DoubleHandWarrior
static int tolua_set_tagAddAttrCareerLimit_ToLua_DoubleHandWarrior(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleHandWarrior'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DoubleHandWarrior = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SingleHandMagicor of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrCareerLimit_ToLua_SingleHandMagicor
static int tolua_get_tagAddAttrCareerLimit_ToLua_SingleHandMagicor(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SingleHandMagicor'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SingleHandMagicor);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SingleHandMagicor of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrCareerLimit_ToLua_SingleHandMagicor
static int tolua_set_tagAddAttrCareerLimit_ToLua_SingleHandMagicor(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SingleHandMagicor'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SingleHandMagicor = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DoubleHandMagicor of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrCareerLimit_ToLua_DoubleHandMagicor
static int tolua_get_tagAddAttrCareerLimit_ToLua_DoubleHandMagicor(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleHandMagicor'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DoubleHandMagicor);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DoubleHandMagicor of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrCareerLimit_ToLua_DoubleHandMagicor
static int tolua_set_tagAddAttrCareerLimit_ToLua_DoubleHandMagicor(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleHandMagicor'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DoubleHandMagicor = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SingleHandGuner of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrCareerLimit_ToLua_SingleHandGuner
static int tolua_get_tagAddAttrCareerLimit_ToLua_SingleHandGuner(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SingleHandGuner'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SingleHandGuner);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SingleHandGuner of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrCareerLimit_ToLua_SingleHandGuner
static int tolua_set_tagAddAttrCareerLimit_ToLua_SingleHandGuner(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SingleHandGuner'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SingleHandGuner = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DoubleHandGuner of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrCareerLimit_ToLua_DoubleHandGuner
static int tolua_get_tagAddAttrCareerLimit_ToLua_DoubleHandGuner(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleHandGuner'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DoubleHandGuner);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DoubleHandGuner of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrCareerLimit_ToLua_DoubleHandGuner
static int tolua_set_tagAddAttrCareerLimit_ToLua_DoubleHandGuner(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleHandGuner'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DoubleHandGuner = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SingleHandChurch of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrCareerLimit_ToLua_SingleHandChurch
static int tolua_get_tagAddAttrCareerLimit_ToLua_SingleHandChurch(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SingleHandChurch'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SingleHandChurch);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SingleHandChurch of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrCareerLimit_ToLua_SingleHandChurch
static int tolua_set_tagAddAttrCareerLimit_ToLua_SingleHandChurch(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SingleHandChurch'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SingleHandChurch = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DoubleHandChurch of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrCareerLimit_ToLua_DoubleHandChurch
static int tolua_get_tagAddAttrCareerLimit_ToLua_DoubleHandChurch(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleHandChurch'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DoubleHandChurch);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DoubleHandChurch of class  tagAddAttrCareerLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrCareerLimit_ToLua_DoubleHandChurch
static int tolua_set_tagAddAttrCareerLimit_ToLua_DoubleHandChurch(lua_State* tolua_S)
{
  tagAddAttrCareerLimit_ToLua* self = (tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DoubleHandChurch'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DoubleHandChurch = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ID of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNewAddAttrDef_ToLua_ID
static int tolua_get_tagNewAddAttrDef_ToLua_ID(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ID of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNewAddAttrDef_ToLua_ID
static int tolua_set_tagNewAddAttrDef_ToLua_ID(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddAttrResultID of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNewAddAttrDef_ToLua_AddAttrResultID
static int tolua_get_tagNewAddAttrDef_ToLua_AddAttrResultID(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrResultID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AddAttrResultID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddAttrResultID of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNewAddAttrDef_ToLua_AddAttrResultID
static int tolua_set_tagNewAddAttrDef_ToLua_AddAttrResultID(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrResultID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AddAttrResultID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddAttrDesc of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNewAddAttrDef_ToLua_AddAttrDesc
static int tolua_get_tagNewAddAttrDef_ToLua_AddAttrDesc(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->AddAttrDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddAttrDesc of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNewAddAttrDef_ToLua_AddAttrDesc
static int tolua_set_tagNewAddAttrDef_ToLua_AddAttrDesc(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->AddAttrDesc,tolua_tostring(tolua_S,2,0),DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Val1 of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagNewAddAttrDef_ToLua_Val1
static int tolua_get_GameEngineTolua_tagNewAddAttrDef_ToLua_Val1(lua_State* tolua_S)
{
 int tolua_index;
  tagNewAddAttrDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagNewAddAttrDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ADD_ATTR_VAL_LEVEL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->Val1[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Val1 of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagNewAddAttrDef_ToLua_Val1
static int tolua_set_GameEngineTolua_tagNewAddAttrDef_ToLua_Val1(lua_State* tolua_S)
{
 int tolua_index;
  tagNewAddAttrDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagNewAddAttrDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ADD_ATTR_VAL_LEVEL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Val1[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Val2 of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNewAddAttrDef_ToLua_Val2
static int tolua_get_tagNewAddAttrDef_ToLua_Val2(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Val2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Val2 of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNewAddAttrDef_ToLua_Val2
static int tolua_set_tagNewAddAttrDef_ToLua_Val2(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Val2 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Val3 of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNewAddAttrDef_ToLua_Val3
static int tolua_get_tagNewAddAttrDef_ToLua_Val3(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Val3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Val3 of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNewAddAttrDef_ToLua_Val3
static int tolua_set_tagNewAddAttrDef_ToLua_Val3(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Val3 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Val4 of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNewAddAttrDef_ToLua_Val4
static int tolua_get_tagNewAddAttrDef_ToLua_Val4(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val4'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Val4);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Val4 of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNewAddAttrDef_ToLua_Val4
static int tolua_set_tagNewAddAttrDef_ToLua_Val4(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Val4'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Val4 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RangeList of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagNewAddAttrDef_ToLua_RangeList
static int tolua_get_GameEngineTolua_tagNewAddAttrDef_ToLua_RangeList(lua_State* tolua_S)
{
 int tolua_index;
  tagNewAddAttrDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagNewAddAttrDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ADD_ATTR_RAND_LEVEL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->RangeList[tolua_index],"tagAddAttrRangeInfo_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RangeList of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagNewAddAttrDef_ToLua_RangeList
static int tolua_set_GameEngineTolua_tagNewAddAttrDef_ToLua_RangeList(lua_State* tolua_S)
{
 int tolua_index;
  tagNewAddAttrDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagNewAddAttrDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ADD_ATTR_RAND_LEVEL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->RangeList[tolua_index] = *((tagAddAttrRangeInfo_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WearPosLimit of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNewAddAttrDef_ToLua_WearPosLimit
static int tolua_get_tagNewAddAttrDef_ToLua_WearPosLimit(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WearPosLimit'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->WearPosLimit,"tagAddAttrWearPosLimit_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WearPosLimit of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNewAddAttrDef_ToLua_WearPosLimit
static int tolua_set_tagNewAddAttrDef_ToLua_WearPosLimit(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WearPosLimit'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagAddAttrWearPosLimit_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WearPosLimit = *((tagAddAttrWearPosLimit_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CareerLimit of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNewAddAttrDef_ToLua_CareerLimit
static int tolua_get_tagNewAddAttrDef_ToLua_CareerLimit(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CareerLimit'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->CareerLimit,"tagAddAttrCareerLimit_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CareerLimit of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNewAddAttrDef_ToLua_CareerLimit
static int tolua_set_tagNewAddAttrDef_ToLua_CareerLimit(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CareerLimit'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagAddAttrCareerLimit_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CareerLimit = *((tagAddAttrCareerLimit_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MinLevel of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNewAddAttrDef_ToLua_MinLevel
static int tolua_get_tagNewAddAttrDef_ToLua_MinLevel(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MinLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MinLevel of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNewAddAttrDef_ToLua_MinLevel
static int tolua_set_tagNewAddAttrDef_ToLua_MinLevel(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MinLevel = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxLevel of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNewAddAttrDef_ToLua_MaxLevel
static int tolua_get_tagNewAddAttrDef_ToLua_MaxLevel(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxLevel of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNewAddAttrDef_ToLua_MaxLevel
static int tolua_set_tagNewAddAttrDef_ToLua_MaxLevel(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxLevel = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Important of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNewAddAttrDef_ToLua_Important
static int tolua_get_tagNewAddAttrDef_ToLua_Important(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Important'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Important);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Important of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNewAddAttrDef_ToLua_Important
static int tolua_set_tagNewAddAttrDef_ToLua_Important(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Important'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Important = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Score of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNewAddAttrDef_ToLua_Score
static int tolua_get_tagNewAddAttrDef_ToLua_Score(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Score'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Score);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Score of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNewAddAttrDef_ToLua_Score
static int tolua_set_tagNewAddAttrDef_ToLua_Score(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Score'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Score = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NotSpar of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNewAddAttrDef_ToLua_NotSpar
static int tolua_get_tagNewAddAttrDef_ToLua_NotSpar(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NotSpar'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NotSpar);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NotSpar of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNewAddAttrDef_ToLua_NotSpar
static int tolua_set_tagNewAddAttrDef_ToLua_NotSpar(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NotSpar'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NotSpar = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Main of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagNewAddAttrDef_ToLua_Main
static int tolua_get_tagNewAddAttrDef_ToLua_Main(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Main'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Main);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Main of class  tagNewAddAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagNewAddAttrDef_ToLua_Main
static int tolua_set_tagNewAddAttrDef_ToLua_Main(lua_State* tolua_S)
{
  tagNewAddAttrDef_ToLua* self = (tagNewAddAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Main'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Main = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddAttrNum of class  tagAddAttrRandList_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrRandList_ToLua_AddAttrNum
static int tolua_get_tagAddAttrRandList_ToLua_AddAttrNum(lua_State* tolua_S)
{
  tagAddAttrRandList_ToLua* self = (tagAddAttrRandList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AddAttrNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddAttrNum of class  tagAddAttrRandList_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrRandList_ToLua_AddAttrNum
static int tolua_set_tagAddAttrRandList_ToLua_AddAttrNum(lua_State* tolua_S)
{
  tagAddAttrRandList_ToLua* self = (tagAddAttrRandList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddAttrNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AddAttrNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Rate of class  tagAddAttrRandList_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrRandList_ToLua_Rate
static int tolua_get_tagAddAttrRandList_ToLua_Rate(lua_State* tolua_S)
{
  tagAddAttrRandList_ToLua* self = (tagAddAttrRandList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Rate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Rate of class  tagAddAttrRandList_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrRandList_ToLua_Rate
static int tolua_set_tagAddAttrRandList_ToLua_Rate(lua_State* tolua_S)
{
  tagAddAttrRandList_ToLua* self = (tagAddAttrRandList_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Rate = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ArmLevel of class  tagAddAttrRandDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrRandDef_ToLua_ArmLevel
static int tolua_get_tagAddAttrRandDef_ToLua_ArmLevel(lua_State* tolua_S)
{
  tagAddAttrRandDef_ToLua* self = (tagAddAttrRandDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ArmLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ArmLevel of class  tagAddAttrRandDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrRandDef_ToLua_ArmLevel
static int tolua_set_tagAddAttrRandDef_ToLua_ArmLevel(lua_State* tolua_S)
{
  tagAddAttrRandDef_ToLua* self = (tagAddAttrRandDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ArmLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ArmLevel = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Important of class  tagAddAttrRandDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrRandDef_ToLua_Important
static int tolua_get_tagAddAttrRandDef_ToLua_Important(lua_State* tolua_S)
{
  tagAddAttrRandDef_ToLua* self = (tagAddAttrRandDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Important'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Important);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Important of class  tagAddAttrRandDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrRandDef_ToLua_Important
static int tolua_set_tagAddAttrRandDef_ToLua_Important(lua_State* tolua_S)
{
  tagAddAttrRandDef_ToLua* self = (tagAddAttrRandDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Important'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Important = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RandList of class  tagAddAttrRandDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagAddAttrRandDef_ToLua_RandList
static int tolua_get_GameEngineTolua_tagAddAttrRandDef_ToLua_RandList(lua_State* tolua_S)
{
 int tolua_index;
  tagAddAttrRandDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagAddAttrRandDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ADD_ATTR_RAND_LIST)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->RandList[tolua_index],"tagAddAttrRandList_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RandList of class  tagAddAttrRandDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagAddAttrRandDef_ToLua_RandList
static int tolua_set_GameEngineTolua_tagAddAttrRandDef_ToLua_RandList(lua_State* tolua_S)
{
 int tolua_index;
  tagAddAttrRandDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagAddAttrRandDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_ADD_ATTR_RAND_LIST)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->RandList[tolua_index] = *((tagAddAttrRandList_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ValLevel of class  tagAddAttrRandDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrRandDef_ToLua_ValLevel
static int tolua_get_tagAddAttrRandDef_ToLua_ValLevel(lua_State* tolua_S)
{
  tagAddAttrRandDef_ToLua* self = (tagAddAttrRandDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ValLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ValLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ValLevel of class  tagAddAttrRandDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrRandDef_ToLua_ValLevel
static int tolua_set_tagAddAttrRandDef_ToLua_ValLevel(lua_State* tolua_S)
{
  tagAddAttrRandDef_ToLua* self = (tagAddAttrRandDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ValLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ValLevel = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddMulLevel of class  tagAddAttrRandDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagAddAttrRandDef_ToLua_AddMulLevel
static int tolua_get_tagAddAttrRandDef_ToLua_AddMulLevel(lua_State* tolua_S)
{
  tagAddAttrRandDef_ToLua* self = (tagAddAttrRandDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddMulLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AddMulLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddMulLevel of class  tagAddAttrRandDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagAddAttrRandDef_ToLua_AddMulLevel
static int tolua_set_tagAddAttrRandDef_ToLua_AddMulLevel(lua_State* tolua_S)
{
  tagAddAttrRandDef_ToLua* self = (tagAddAttrRandDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddMulLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AddMulLevel = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultID of class  tagItemResultDesc_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemResultDesc_ToLua_ResultID
static int tolua_get_tagItemResultDesc_ToLua_ResultID(lua_State* tolua_S)
{
  tagItemResultDesc_ToLua* self = (tagItemResultDesc_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ResultID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultID of class  tagItemResultDesc_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemResultDesc_ToLua_ResultID
static int tolua_set_tagItemResultDesc_ToLua_ResultID(lua_State* tolua_S)
{
  tagItemResultDesc_ToLua* self = (tagItemResultDesc_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ResultID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ResultDesc of class  tagItemResultDesc_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagItemResultDesc_ToLua_ResultDesc
static int tolua_get_tagItemResultDesc_ToLua_ResultDesc(lua_State* tolua_S)
{
  tagItemResultDesc_ToLua* self = (tagItemResultDesc_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->ResultDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ResultDesc of class  tagItemResultDesc_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagItemResultDesc_ToLua_ResultDesc
static int tolua_set_tagItemResultDesc_ToLua_ResultDesc(lua_State* tolua_S)
{
  tagItemResultDesc_ToLua* self = (tagItemResultDesc_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ResultDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->ResultDesc,tolua_tostring(tolua_S,2,0),DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemID of class  tagBaoXiangItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBaoXiangItem_ToLua_ItemID
static int tolua_get_tagBaoXiangItem_ToLua_ItemID(lua_State* tolua_S)
{
  tagBaoXiangItem_ToLua* self = (tagBaoXiangItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemID of class  tagBaoXiangItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBaoXiangItem_ToLua_ItemID
static int tolua_set_tagBaoXiangItem_ToLua_ItemID(lua_State* tolua_S)
{
  tagBaoXiangItem_ToLua* self = (tagBaoXiangItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Num of class  tagBaoXiangItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBaoXiangItem_ToLua_Num
static int tolua_get_tagBaoXiangItem_ToLua_Num(lua_State* tolua_S)
{
  tagBaoXiangItem_ToLua* self = (tagBaoXiangItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Num'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Num);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Num of class  tagBaoXiangItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBaoXiangItem_ToLua_Num
static int tolua_set_tagBaoXiangItem_ToLua_Num(lua_State* tolua_S)
{
  tagBaoXiangItem_ToLua* self = (tagBaoXiangItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Num'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Num = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Rate of class  tagBaoXiangItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBaoXiangItem_ToLua_Rate
static int tolua_get_tagBaoXiangItem_ToLua_Rate(lua_State* tolua_S)
{
  tagBaoXiangItem_ToLua* self = (tagBaoXiangItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Rate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Rate of class  tagBaoXiangItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBaoXiangItem_ToLua_Rate
static int tolua_set_tagBaoXiangItem_ToLua_Rate(lua_State* tolua_S)
{
  tagBaoXiangItem_ToLua* self = (tagBaoXiangItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Rate = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Bind of class  tagBaoXiangItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBaoXiangItem_ToLua_Bind
static int tolua_get_tagBaoXiangItem_ToLua_Bind(lua_State* tolua_S)
{
  tagBaoXiangItem_ToLua* self = (tagBaoXiangItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Bind'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Bind);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Bind of class  tagBaoXiangItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBaoXiangItem_ToLua_Bind
static int tolua_set_tagBaoXiangItem_ToLua_Bind(lua_State* tolua_S)
{
  tagBaoXiangItem_ToLua* self = (tagBaoXiangItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Bind'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Bind = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Broadcast of class  tagBaoXiangItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBaoXiangItem_ToLua_Broadcast
static int tolua_get_tagBaoXiangItem_ToLua_Broadcast(lua_State* tolua_S)
{
  tagBaoXiangItem_ToLua* self = (tagBaoXiangItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Broadcast'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Broadcast);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Broadcast of class  tagBaoXiangItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBaoXiangItem_ToLua_Broadcast
static int tolua_set_tagBaoXiangItem_ToLua_Broadcast(lua_State* tolua_S)
{
  tagBaoXiangItem_ToLua* self = (tagBaoXiangItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Broadcast'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Broadcast = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemID of class  tagDisplayItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDisplayItem_ToLua_ItemID
static int tolua_get_tagDisplayItem_ToLua_ItemID(lua_State* tolua_S)
{
  tagDisplayItem_ToLua* self = (tagDisplayItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemID of class  tagDisplayItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDisplayItem_ToLua_ItemID
static int tolua_set_tagDisplayItem_ToLua_ItemID(lua_State* tolua_S)
{
  tagDisplayItem_ToLua* self = (tagDisplayItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Num of class  tagDisplayItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagDisplayItem_ToLua_Num
static int tolua_get_tagDisplayItem_ToLua_Num(lua_State* tolua_S)
{
  tagDisplayItem_ToLua* self = (tagDisplayItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Num'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Num);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Num of class  tagDisplayItem_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagDisplayItem_ToLua_Num
static int tolua_set_tagDisplayItem_ToLua_Num(lua_State* tolua_S)
{
  tagDisplayItem_ToLua* self = (tagDisplayItem_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Num'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Num = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ID of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBaoXiangDef_ToLua_ID
static int tolua_get_tagBaoXiangDef_ToLua_ID(lua_State* tolua_S)
{
  tagBaoXiangDef_ToLua* self = (tagBaoXiangDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ID of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBaoXiangDef_ToLua_ID
static int tolua_set_tagBaoXiangDef_ToLua_ID(lua_State* tolua_S)
{
  tagBaoXiangDef_ToLua* self = (tagBaoXiangDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Items of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagBaoXiangDef_ToLua_Items
static int tolua_get_GameEngineTolua_tagBaoXiangDef_ToLua_Items(lua_State* tolua_S)
{
 int tolua_index;
  tagBaoXiangDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagBaoXiangDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_BAOXIANG_ITEM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Items[tolua_index],"tagBaoXiangItem_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Items of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagBaoXiangDef_ToLua_Items
static int tolua_set_GameEngineTolua_tagBaoXiangDef_ToLua_Items(lua_State* tolua_S)
{
 int tolua_index;
  tagBaoXiangDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagBaoXiangDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_BAOXIANG_ITEM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Items[tolua_index] = *((tagBaoXiangItem_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HideItemID of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBaoXiangDef_ToLua_HideItemID
static int tolua_get_tagBaoXiangDef_ToLua_HideItemID(lua_State* tolua_S)
{
  tagBaoXiangDef_ToLua* self = (tagBaoXiangDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HideItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HideItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HideItemID of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBaoXiangDef_ToLua_HideItemID
static int tolua_set_tagBaoXiangDef_ToLua_HideItemID(lua_State* tolua_S)
{
  tagBaoXiangDef_ToLua* self = (tagBaoXiangDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HideItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HideItemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HideItemNum of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBaoXiangDef_ToLua_HideItemNum
static int tolua_get_tagBaoXiangDef_ToLua_HideItemNum(lua_State* tolua_S)
{
  tagBaoXiangDef_ToLua* self = (tagBaoXiangDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HideItemNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HideItemNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HideItemNum of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBaoXiangDef_ToLua_HideItemNum
static int tolua_set_tagBaoXiangDef_ToLua_HideItemNum(lua_State* tolua_S)
{
  tagBaoXiangDef_ToLua* self = (tagBaoXiangDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HideItemNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HideItemNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HideCount of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBaoXiangDef_ToLua_HideCount
static int tolua_get_tagBaoXiangDef_ToLua_HideCount(lua_State* tolua_S)
{
  tagBaoXiangDef_ToLua* self = (tagBaoXiangDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HideCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HideCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HideCount of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBaoXiangDef_ToLua_HideCount
static int tolua_set_tagBaoXiangDef_ToLua_HideCount(lua_State* tolua_S)
{
  tagBaoXiangDef_ToLua* self = (tagBaoXiangDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HideCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HideCount = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NeedItemID of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBaoXiangDef_ToLua_NeedItemID
static int tolua_get_tagBaoXiangDef_ToLua_NeedItemID(lua_State* tolua_S)
{
  tagBaoXiangDef_ToLua* self = (tagBaoXiangDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NeedItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NeedItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NeedItemID of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBaoXiangDef_ToLua_NeedItemID
static int tolua_set_tagBaoXiangDef_ToLua_NeedItemID(lua_State* tolua_S)
{
  tagBaoXiangDef_ToLua* self = (tagBaoXiangDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NeedItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NeedItemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ErrorTip of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagBaoXiangDef_ToLua_ErrorTip
static int tolua_get_tagBaoXiangDef_ToLua_ErrorTip(lua_State* tolua_S)
{
  tagBaoXiangDef_ToLua* self = (tagBaoXiangDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ErrorTip'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->ErrorTip);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ErrorTip of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagBaoXiangDef_ToLua_ErrorTip
static int tolua_set_tagBaoXiangDef_ToLua_ErrorTip(lua_State* tolua_S)
{
  tagBaoXiangDef_ToLua* self = (tagBaoXiangDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ErrorTip'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->ErrorTip,tolua_tostring(tolua_S,2,0),SHORT_DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ShowItems of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagBaoXiangDef_ToLua_ShowItems
static int tolua_get_GameEngineTolua_tagBaoXiangDef_ToLua_ShowItems(lua_State* tolua_S)
{
 int tolua_index;
  tagBaoXiangDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagBaoXiangDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_BAOXIANG_DISPLAY_ITEM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->ShowItems[tolua_index],"tagDisplayItem_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ShowItems of class  tagBaoXiangDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagBaoXiangDef_ToLua_ShowItems
static int tolua_set_GameEngineTolua_tagBaoXiangDef_ToLua_ShowItems(lua_State* tolua_S)
{
 int tolua_index;
  tagBaoXiangDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagBaoXiangDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_BAOXIANG_DISPLAY_ITEM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->ShowItems[tolua_index] = *((tagDisplayItem_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g_ArmEquipId_List */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_g_ArmEquipId_List
static int tolua_get_GameEngineTolua_g_ArmEquipId_List(lua_State* tolua_S)
{
 int tolua_index;
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=EQUIP_POS_END)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)g_ArmEquipId_List[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g_ArmEquipId_List */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_g_ArmEquipId_List
static int tolua_set_GameEngineTolua_g_ArmEquipId_List(lua_State* tolua_S)
{
 int tolua_index;
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=EQUIP_POS_END)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  g_ArmEquipId_List[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g_ArmStarLv_List */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_g_ArmStarLv_List
static int tolua_get_GameEngineTolua_g_ArmStarLv_List(lua_State* tolua_S)
{
 int tolua_index;
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=EQUIP_POS_END)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)g_ArmStarLv_List[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g_ArmStarLv_List */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_g_ArmStarLv_List
static int tolua_set_GameEngineTolua_g_ArmStarLv_List(lua_State* tolua_S)
{
 int tolua_index;
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=EQUIP_POS_END)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  g_ArmStarLv_List[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g_AvatarAttrib */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_g_AvatarAttrib
static int tolua_get_GameEngineTolua_g_AvatarAttrib(lua_State* tolua_S)
{
 int tolua_index;
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=CLIENT_MAX_AVATAR_ATTRIB)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)g_AvatarAttrib[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g_AvatarAttrib */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_g_AvatarAttrib
static int tolua_set_GameEngineTolua_g_AvatarAttrib(lua_State* tolua_S)
{
 int tolua_index;
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=CLIENT_MAX_AVATAR_ATTRIB)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  g_AvatarAttrib[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g_AvatarStar */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_g_AvatarStar
static int tolua_get_GameEngineTolua_g_AvatarStar(lua_State* tolua_S)
{
 int tolua_index;
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=CLIENT_MAX_AVATAR_ATTRIB)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)g_AvatarStar[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g_AvatarStar */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_g_AvatarStar
static int tolua_set_GameEngineTolua_g_AvatarStar(lua_State* tolua_S)
{
 int tolua_index;
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=CLIENT_MAX_AVATAR_ATTRIB)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  g_AvatarStar[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g_AvatarSelect */
#ifndef TOLUA_DISABLE_tolua_get_g_AvatarSelect
static int tolua_get_g_AvatarSelect(lua_State* tolua_S)
{
  tolua_pushnumber(tolua_S,(lua_Number)g_AvatarSelect);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g_AvatarSelect */
#ifndef TOLUA_DISABLE_tolua_set_g_AvatarSelect
static int tolua_set_g_AvatarSelect(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  g_AvatarSelect = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: g_checkSuit */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_g_checkSuit00
static int tolua_GameEngineTolua_g_checkSuit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int EquipList = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  g_checkSuit(&EquipList);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)EquipList);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'g_checkSuit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: g_AvatarChange */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_g_AvatarChange00
static int tolua_GameEngineTolua_g_AvatarChange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   g_AvatarChange();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'g_AvatarChange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getArmEquip */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getArmEquip00
static int tolua_GameEngineTolua_getArmEquip00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int index = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getArmEquip(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmEquip'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: setArmEquipIdList */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_setArmEquipIdList00
static int tolua_GameEngineTolua_setArmEquipIdList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int index = ((int)  tolua_tonumber(tolua_S,1,0));
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int starLv = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   setArmEquipIdList(index,id,starLv);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setArmEquipIdList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: clearEquipIdList */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_clearEquipIdList00
static int tolua_GameEngineTolua_clearEquipIdList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   clearEquipIdList();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearEquipIdList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getAvatarAttrib */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getAvatarAttrib00
static int tolua_GameEngineTolua_getAvatarAttrib00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int index = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getAvatarAttrib(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvatarAttrib'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: setAvatarAttrib */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_setAvatarAttrib00
static int tolua_GameEngineTolua_setAvatarAttrib00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int index = ((int)  tolua_tonumber(tolua_S,1,0));
  int nvalue = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   setAvatarAttrib(index,nvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAvatarAttrib'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getAvatarStarLv */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getAvatarStarLv00
static int tolua_GameEngineTolua_getAvatarStarLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int index = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getAvatarStarLv(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvatarStarLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: setAvatarStarLv */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_setAvatarStarLv00
static int tolua_GameEngineTolua_setAvatarStarLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int index = ((int)  tolua_tonumber(tolua_S,1,0));
  int nvalue = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   setAvatarStarLv(index,nvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAvatarStarLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getSuitSetId */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getSuitSetId00
static int tolua_GameEngineTolua_getSuitSetId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  getSuitSetId(id,index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSuitSetId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getSuitEquipNum */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getSuitEquipNum00
static int tolua_GameEngineTolua_getSuitEquipNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getSuitEquipNum(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSuitEquipNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: setAvatarSelectSuit */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_setAvatarSelectSuit00
static int tolua_GameEngineTolua_setAvatarSelectSuit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nIndex = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   setAvatarSelectSuit(nIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAvatarSelectSuit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: g_ConfigFashionFair */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_g_ConfigFashionFair00
static int tolua_GameEngineTolua_g_ConfigFashionFair00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   g_ConfigFashionFair();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'g_ConfigFashionFair'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: convertEquipPos2PosId */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_convertEquipPos2PosId00
static int tolua_GameEngineTolua_convertEquipPos2PosId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int equipPos = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  convertEquipPos2PosId(equipPos);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertEquipPos2PosId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMaxNum of class  tagAmmContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagAmmContainer_m_nMaxNum
static int tolua_get_tagAmmContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagAmmContainer* self = (tagAmmContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMaxNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMaxNum of class  tagAmmContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagAmmContainer_m_nMaxNum
static int tolua_set_tagAmmContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagAmmContainer* self = (tagAmmContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMaxNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nNum of class  tagAmmContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagAmmContainer_m_nNum
static int tolua_get_tagAmmContainer_m_nNum(lua_State* tolua_S)
{
  tagAmmContainer* self = (tagAmmContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nNum of class  tagAmmContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagAmmContainer_m_nNum
static int tolua_set_tagAmmContainer_m_nNum(lua_State* tolua_S)
{
  tagAmmContainer* self = (tagAmmContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ItemData of class  tagAmmContainer */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagAmmContainer_m_ItemData
static int tolua_get_GameEngineTolua_tagAmmContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagAmmContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagAmmContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_AMM_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->m_ItemData[tolua_index],"Item");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ItemData of class  tagAmmContainer */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagAmmContainer_m_ItemData
static int tolua_set_GameEngineTolua_tagAmmContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagAmmContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagAmmContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_AMM_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_ItemData[tolua_index] = *((Item*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  tagAmmContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagAmmContainer_new00
static int tolua_GameEngineTolua_tagAmmContainer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagAmmContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagAmmContainer* tolua_ret = (tagAmmContainer*)  new tagAmmContainer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagAmmContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  tagAmmContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagAmmContainer_new00_local
static int tolua_GameEngineTolua_tagAmmContainer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagAmmContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagAmmContainer* tolua_ret = (tagAmmContainer*)  new tagAmmContainer();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"tagAmmContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMaxNum of class  tagStuffContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagStuffContainer_m_nMaxNum
static int tolua_get_tagStuffContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagStuffContainer* self = (tagStuffContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMaxNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMaxNum of class  tagStuffContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagStuffContainer_m_nMaxNum
static int tolua_set_tagStuffContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagStuffContainer* self = (tagStuffContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMaxNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nNum of class  tagStuffContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagStuffContainer_m_nNum
static int tolua_get_tagStuffContainer_m_nNum(lua_State* tolua_S)
{
  tagStuffContainer* self = (tagStuffContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nNum of class  tagStuffContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagStuffContainer_m_nNum
static int tolua_set_tagStuffContainer_m_nNum(lua_State* tolua_S)
{
  tagStuffContainer* self = (tagStuffContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ItemData of class  tagStuffContainer */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagStuffContainer_m_ItemData
static int tolua_get_GameEngineTolua_tagStuffContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagStuffContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagStuffContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_STUFF_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->m_ItemData[tolua_index],"Item");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ItemData of class  tagStuffContainer */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagStuffContainer_m_ItemData
static int tolua_set_GameEngineTolua_tagStuffContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagStuffContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagStuffContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_STUFF_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_ItemData[tolua_index] = *((Item*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  tagStuffContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagStuffContainer_new00
static int tolua_GameEngineTolua_tagStuffContainer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagStuffContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagStuffContainer* tolua_ret = (tagStuffContainer*)  new tagStuffContainer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagStuffContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  tagStuffContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagStuffContainer_new00_local
static int tolua_GameEngineTolua_tagStuffContainer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagStuffContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagStuffContainer* tolua_ret = (tagStuffContainer*)  new tagStuffContainer();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"tagStuffContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMaxNum of class  tagTaskContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagTaskContainer_m_nMaxNum
static int tolua_get_tagTaskContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagTaskContainer* self = (tagTaskContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMaxNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMaxNum of class  tagTaskContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagTaskContainer_m_nMaxNum
static int tolua_set_tagTaskContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagTaskContainer* self = (tagTaskContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMaxNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nNum of class  tagTaskContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagTaskContainer_m_nNum
static int tolua_get_tagTaskContainer_m_nNum(lua_State* tolua_S)
{
  tagTaskContainer* self = (tagTaskContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nNum of class  tagTaskContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagTaskContainer_m_nNum
static int tolua_set_tagTaskContainer_m_nNum(lua_State* tolua_S)
{
  tagTaskContainer* self = (tagTaskContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ItemData of class  tagTaskContainer */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagTaskContainer_m_ItemData
static int tolua_get_GameEngineTolua_tagTaskContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagTaskContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagTaskContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_TASK_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->m_ItemData[tolua_index],"Item");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ItemData of class  tagTaskContainer */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagTaskContainer_m_ItemData
static int tolua_set_GameEngineTolua_tagTaskContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagTaskContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagTaskContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_TASK_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_ItemData[tolua_index] = *((Item*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  tagTaskContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagTaskContainer_new00
static int tolua_GameEngineTolua_tagTaskContainer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagTaskContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagTaskContainer* tolua_ret = (tagTaskContainer*)  new tagTaskContainer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagTaskContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  tagTaskContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagTaskContainer_new00_local
static int tolua_GameEngineTolua_tagTaskContainer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagTaskContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagTaskContainer* tolua_ret = (tagTaskContainer*)  new tagTaskContainer();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"tagTaskContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMaxNum of class  tagSundriesContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagSundriesContainer_m_nMaxNum
static int tolua_get_tagSundriesContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagSundriesContainer* self = (tagSundriesContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMaxNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMaxNum of class  tagSundriesContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagSundriesContainer_m_nMaxNum
static int tolua_set_tagSundriesContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagSundriesContainer* self = (tagSundriesContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMaxNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nNum of class  tagSundriesContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagSundriesContainer_m_nNum
static int tolua_get_tagSundriesContainer_m_nNum(lua_State* tolua_S)
{
  tagSundriesContainer* self = (tagSundriesContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nNum of class  tagSundriesContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagSundriesContainer_m_nNum
static int tolua_set_tagSundriesContainer_m_nNum(lua_State* tolua_S)
{
  tagSundriesContainer* self = (tagSundriesContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ItemData of class  tagSundriesContainer */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagSundriesContainer_m_ItemData
static int tolua_get_GameEngineTolua_tagSundriesContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagSundriesContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSundriesContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SUNDRIES_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->m_ItemData[tolua_index],"Item");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ItemData of class  tagSundriesContainer */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagSundriesContainer_m_ItemData
static int tolua_set_GameEngineTolua_tagSundriesContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagSundriesContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSundriesContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SUNDRIES_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_ItemData[tolua_index] = *((Item*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  tagSundriesContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagSundriesContainer_new00
static int tolua_GameEngineTolua_tagSundriesContainer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagSundriesContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagSundriesContainer* tolua_ret = (tagSundriesContainer*)  new tagSundriesContainer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagSundriesContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  tagSundriesContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagSundriesContainer_new00_local
static int tolua_GameEngineTolua_tagSundriesContainer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagSundriesContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagSundriesContainer* tolua_ret = (tagSundriesContainer*)  new tagSundriesContainer();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"tagSundriesContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMaxNum of class  tagTemContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagTemContainer_m_nMaxNum
static int tolua_get_tagTemContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagTemContainer* self = (tagTemContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMaxNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMaxNum of class  tagTemContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagTemContainer_m_nMaxNum
static int tolua_set_tagTemContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagTemContainer* self = (tagTemContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMaxNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nNum of class  tagTemContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagTemContainer_m_nNum
static int tolua_get_tagTemContainer_m_nNum(lua_State* tolua_S)
{
  tagTemContainer* self = (tagTemContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nNum of class  tagTemContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagTemContainer_m_nNum
static int tolua_set_tagTemContainer_m_nNum(lua_State* tolua_S)
{
  tagTemContainer* self = (tagTemContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nTimeEnd of class  tagTemContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagTemContainer_m_nTimeEnd
static int tolua_get_tagTemContainer_m_nTimeEnd(lua_State* tolua_S)
{
  tagTemContainer* self = (tagTemContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nTimeEnd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nTimeEnd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nTimeEnd of class  tagTemContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagTemContainer_m_nTimeEnd
static int tolua_set_tagTemContainer_m_nTimeEnd(lua_State* tolua_S)
{
  tagTemContainer* self = (tagTemContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nTimeEnd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nTimeEnd = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ItemData of class  tagTemContainer */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagTemContainer_m_ItemData
static int tolua_get_GameEngineTolua_tagTemContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagTemContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagTemContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_TMP_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->m_ItemData[tolua_index],"Item");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ItemData of class  tagTemContainer */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagTemContainer_m_ItemData
static int tolua_set_GameEngineTolua_tagTemContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagTemContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagTemContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_TMP_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_ItemData[tolua_index] = *((Item*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  tagTemContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagTemContainer_new00
static int tolua_GameEngineTolua_tagTemContainer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagTemContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagTemContainer* tolua_ret = (tagTemContainer*)  new tagTemContainer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagTemContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  tagTemContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagTemContainer_new00_local
static int tolua_GameEngineTolua_tagTemContainer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagTemContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagTemContainer* tolua_ret = (tagTemContainer*)  new tagTemContainer();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"tagTemContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMaxNum of class  tagStashContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagStashContainer_m_nMaxNum
static int tolua_get_tagStashContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagStashContainer* self = (tagStashContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMaxNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMaxNum of class  tagStashContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagStashContainer_m_nMaxNum
static int tolua_set_tagStashContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagStashContainer* self = (tagStashContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMaxNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nNum of class  tagStashContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagStashContainer_m_nNum
static int tolua_get_tagStashContainer_m_nNum(lua_State* tolua_S)
{
  tagStashContainer* self = (tagStashContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nNum of class  tagStashContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagStashContainer_m_nNum
static int tolua_set_tagStashContainer_m_nNum(lua_State* tolua_S)
{
  tagStashContainer* self = (tagStashContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMoney of class  tagStashContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagStashContainer_m_nMoney
static int tolua_get_tagStashContainer_m_nMoney(lua_State* tolua_S)
{
  tagStashContainer* self = (tagStashContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMoney'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMoney);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMoney of class  tagStashContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagStashContainer_m_nMoney
static int tolua_set_tagStashContainer_m_nMoney(lua_State* tolua_S)
{
  tagStashContainer* self = (tagStashContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMoney'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMoney = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ItemData of class  tagStashContainer */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagStashContainer_m_ItemData
static int tolua_get_GameEngineTolua_tagStashContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagStashContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagStashContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_STASH_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->m_ItemData[tolua_index],"Item");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ItemData of class  tagStashContainer */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagStashContainer_m_ItemData
static int tolua_set_GameEngineTolua_tagStashContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagStashContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagStashContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_STASH_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_ItemData[tolua_index] = *((Item*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  tagStashContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagStashContainer_new00
static int tolua_GameEngineTolua_tagStashContainer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagStashContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagStashContainer* tolua_ret = (tagStashContainer*)  new tagStashContainer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagStashContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  tagStashContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagStashContainer_new00_local
static int tolua_GameEngineTolua_tagStashContainer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagStashContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagStashContainer* tolua_ret = (tagStashContainer*)  new tagStashContainer();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"tagStashContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMaxNum of class  tagMarketContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagMarketContainer_m_nMaxNum
static int tolua_get_tagMarketContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagMarketContainer* self = (tagMarketContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMaxNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMaxNum of class  tagMarketContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagMarketContainer_m_nMaxNum
static int tolua_set_tagMarketContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagMarketContainer* self = (tagMarketContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMaxNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nNum of class  tagMarketContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagMarketContainer_m_nNum
static int tolua_get_tagMarketContainer_m_nNum(lua_State* tolua_S)
{
  tagMarketContainer* self = (tagMarketContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nNum of class  tagMarketContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagMarketContainer_m_nNum
static int tolua_set_tagMarketContainer_m_nNum(lua_State* tolua_S)
{
  tagMarketContainer* self = (tagMarketContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ItemData of class  tagMarketContainer */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMarketContainer_m_ItemData
static int tolua_get_GameEngineTolua_tagMarketContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagMarketContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMarketContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_STASH_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->m_ItemData[tolua_index],"Item");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ItemData of class  tagMarketContainer */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMarketContainer_m_ItemData
static int tolua_set_GameEngineTolua_tagMarketContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagMarketContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMarketContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_STASH_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_ItemData[tolua_index] = *((Item*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  tagMarketContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagMarketContainer_new00
static int tolua_GameEngineTolua_tagMarketContainer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagMarketContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagMarketContainer* tolua_ret = (tagMarketContainer*)  new tagMarketContainer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagMarketContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  tagMarketContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagMarketContainer_new00_local
static int tolua_GameEngineTolua_tagMarketContainer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagMarketContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagMarketContainer* tolua_ret = (tagMarketContainer*)  new tagMarketContainer();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"tagMarketContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMaxNum of class  tagExtendContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagExtendContainer_m_nMaxNum
static int tolua_get_tagExtendContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagExtendContainer* self = (tagExtendContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMaxNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMaxNum of class  tagExtendContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagExtendContainer_m_nMaxNum
static int tolua_set_tagExtendContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagExtendContainer* self = (tagExtendContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMaxNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nNum of class  tagExtendContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagExtendContainer_m_nNum
static int tolua_get_tagExtendContainer_m_nNum(lua_State* tolua_S)
{
  tagExtendContainer* self = (tagExtendContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nNum of class  tagExtendContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagExtendContainer_m_nNum
static int tolua_set_tagExtendContainer_m_nNum(lua_State* tolua_S)
{
  tagExtendContainer* self = (tagExtendContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ItemData of class  tagExtendContainer */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagExtendContainer_m_ItemData
static int tolua_get_GameEngineTolua_tagExtendContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagExtendContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagExtendContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_EXTEND_SUND_PKG)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->m_ItemData[tolua_index],"Item");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ItemData of class  tagExtendContainer */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagExtendContainer_m_ItemData
static int tolua_set_GameEngineTolua_tagExtendContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagExtendContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagExtendContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_EXTEND_SUND_PKG)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_ItemData[tolua_index] = *((Item*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nStuffNum of class  tagExtendContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagExtendContainer_m_nStuffNum
static int tolua_get_tagExtendContainer_m_nStuffNum(lua_State* tolua_S)
{
  tagExtendContainer* self = (tagExtendContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nStuffNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nStuffNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nStuffNum of class  tagExtendContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagExtendContainer_m_nStuffNum
static int tolua_set_tagExtendContainer_m_nStuffNum(lua_State* tolua_S)
{
  tagExtendContainer* self = (tagExtendContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nStuffNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nStuffNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  tagExtendContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagExtendContainer_new00
static int tolua_GameEngineTolua_tagExtendContainer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagExtendContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagExtendContainer* tolua_ret = (tagExtendContainer*)  new tagExtendContainer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagExtendContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  tagExtendContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagExtendContainer_new00_local
static int tolua_GameEngineTolua_tagExtendContainer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagExtendContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagExtendContainer* tolua_ret = (tagExtendContainer*)  new tagExtendContainer();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"tagExtendContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: id of class  tagBootyInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagBootyInfo_id
static int tolua_get_tagBootyInfo_id(lua_State* tolua_S)
{
  tagBootyInfo* self = (tagBootyInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'id'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->id);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: id of class  tagBootyInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagBootyInfo_id
static int tolua_set_tagBootyInfo_id(lua_State* tolua_S)
{
  tagBootyInfo* self = (tagBootyInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'id'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->id = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nNum of class  tagBootyInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagBootyInfo_m_nNum
static int tolua_get_tagBootyInfo_m_nNum(lua_State* tolua_S)
{
  tagBootyInfo* self = (tagBootyInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nNum of class  tagBootyInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagBootyInfo_m_nNum
static int tolua_set_tagBootyInfo_m_nNum(lua_State* tolua_S)
{
  tagBootyInfo* self = (tagBootyInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ItemData of class  tagBootyInfo */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagBootyInfo_m_ItemData
static int tolua_get_GameEngineTolua_tagBootyInfo_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagBootyInfo* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagBootyInfo*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MONBOOTY_ITEM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->m_ItemData[tolua_index],"Item");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ItemData of class  tagBootyInfo */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagBootyInfo_m_ItemData
static int tolua_set_GameEngineTolua_tagBootyInfo_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagBootyInfo* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagBootyInfo*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MONBOOTY_ITEM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_ItemData[tolua_index] = *((Item*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: id of class  tagMarketInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMarketInfo_id
static int tolua_get_tagMarketInfo_id(lua_State* tolua_S)
{
  tagMarketInfo* self = (tagMarketInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'id'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->id);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: id of class  tagMarketInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMarketInfo_id
static int tolua_set_tagMarketInfo_id(lua_State* tolua_S)
{
  tagMarketInfo* self = (tagMarketInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'id'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->id = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nNum of class  tagMarketInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMarketInfo_m_nNum
static int tolua_get_tagMarketInfo_m_nNum(lua_State* tolua_S)
{
  tagMarketInfo* self = (tagMarketInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nNum of class  tagMarketInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMarketInfo_m_nNum
static int tolua_set_tagMarketInfo_m_nNum(lua_State* tolua_S)
{
  tagMarketInfo* self = (tagMarketInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ItemData of class  tagMarketInfo */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMarketInfo_m_ItemData
static int tolua_get_GameEngineTolua_tagMarketInfo_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagMarketInfo* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMarketInfo*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SHOPPING_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->m_ItemData[tolua_index],"Item");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ItemData of class  tagMarketInfo */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMarketInfo_m_ItemData
static int tolua_set_GameEngineTolua_tagMarketInfo_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagMarketInfo* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMarketInfo*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SHOPPING_PACKAGE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_ItemData[tolua_index] = *((Item*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: id of class  tagSparContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagSparContainer_id
static int tolua_get_tagSparContainer_id(lua_State* tolua_S)
{
  tagSparContainer* self = (tagSparContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'id'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->id);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: id of class  tagSparContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagSparContainer_id
static int tolua_set_tagSparContainer_id(lua_State* tolua_S)
{
  tagSparContainer* self = (tagSparContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'id'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->id = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nNum of class  tagSparContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagSparContainer_m_nNum
static int tolua_get_tagSparContainer_m_nNum(lua_State* tolua_S)
{
  tagSparContainer* self = (tagSparContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nNum of class  tagSparContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagSparContainer_m_nNum
static int tolua_set_tagSparContainer_m_nNum(lua_State* tolua_S)
{
  tagSparContainer* self = (tagSparContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMaxNum of class  tagSparContainer */
#ifndef TOLUA_DISABLE_tolua_get_tagSparContainer_m_nMaxNum
static int tolua_get_tagSparContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagSparContainer* self = (tagSparContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMaxNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMaxNum of class  tagSparContainer */
#ifndef TOLUA_DISABLE_tolua_set_tagSparContainer_m_nMaxNum
static int tolua_set_tagSparContainer_m_nMaxNum(lua_State* tolua_S)
{
  tagSparContainer* self = (tagSparContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMaxNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ItemData of class  tagSparContainer */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagSparContainer_m_ItemData
static int tolua_get_GameEngineTolua_tagSparContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagSparContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSparContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SPAR_PKG)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->m_ItemData[tolua_index],"Item");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ItemData of class  tagSparContainer */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagSparContainer_m_ItemData
static int tolua_set_GameEngineTolua_tagSparContainer_m_ItemData(lua_State* tolua_S)
{
 int tolua_index;
  tagSparContainer* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSparContainer*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_SPAR_PKG)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_ItemData[tolua_index] = *((Item*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  tagSparContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagSparContainer_new00
static int tolua_GameEngineTolua_tagSparContainer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagSparContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagSparContainer* tolua_ret = (tagSparContainer*)  new tagSparContainer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagSparContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  tagSparContainer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagSparContainer_new00_local
static int tolua_GameEngineTolua_tagSparContainer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagSparContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagSparContainer* tolua_ret = (tagSparContainer*)  new tagSparContainer();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"tagSparContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillLevel of class  tagSkillDyAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDyAttrib_SkillLevel
static int tolua_get_tagSkillDyAttrib_SkillLevel(lua_State* tolua_S)
{
  tagSkillDyAttrib* self = (tagSkillDyAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillLevel of class  tagSkillDyAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDyAttrib_SkillLevel
static int tolua_set_tagSkillDyAttrib_SkillLevel(lua_State* tolua_S)
{
  tagSkillDyAttrib* self = (tagSkillDyAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillLevel = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectNum of class  tagSkillDyAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDyAttrib_CollectNum
static int tolua_get_tagSkillDyAttrib_CollectNum(lua_State* tolua_S)
{
  tagSkillDyAttrib* self = (tagSkillDyAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectNum of class  tagSkillDyAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDyAttrib_CollectNum
static int tolua_set_tagSkillDyAttrib_CollectNum(lua_State* tolua_S)
{
  tagSkillDyAttrib* self = (tagSkillDyAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectNumMax of class  tagSkillDyAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDyAttrib_CollectNumMax
static int tolua_get_tagSkillDyAttrib_CollectNumMax(lua_State* tolua_S)
{
  tagSkillDyAttrib* self = (tagSkillDyAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectNumMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectNumMax of class  tagSkillDyAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDyAttrib_CollectNumMax
static int tolua_set_tagSkillDyAttrib_CollectNumMax(lua_State* tolua_S)
{
  tagSkillDyAttrib* self = (tagSkillDyAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectNumMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectNumMax = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RuneSlotEnabled of class  tagSkillDyAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDyAttrib_RuneSlotEnabled
static int tolua_get_tagSkillDyAttrib_RuneSlotEnabled(lua_State* tolua_S)
{
  tagSkillDyAttrib* self = (tagSkillDyAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RuneSlotEnabled'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RuneSlotEnabled);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RuneSlotEnabled of class  tagSkillDyAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDyAttrib_RuneSlotEnabled
static int tolua_set_tagSkillDyAttrib_RuneSlotEnabled(lua_State* tolua_S)
{
  tagSkillDyAttrib* self = (tagSkillDyAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RuneSlotEnabled'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RuneSlotEnabled = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RuneSlot of class  tagSkillDyAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDyAttrib_RuneSlot
static int tolua_get_tagSkillDyAttrib_RuneSlot(lua_State* tolua_S)
{
  tagSkillDyAttrib* self = (tagSkillDyAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RuneSlot'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RuneSlot);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RuneSlot of class  tagSkillDyAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDyAttrib_RuneSlot
static int tolua_set_tagSkillDyAttrib_RuneSlot(lua_State* tolua_S)
{
  tagSkillDyAttrib* self = (tagSkillDyAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RuneSlot'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RuneSlot = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RuneItemID of class  tagSkillDyAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDyAttrib_RuneItemID
static int tolua_get_tagSkillDyAttrib_RuneItemID(lua_State* tolua_S)
{
  tagSkillDyAttrib* self = (tagSkillDyAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RuneItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RuneItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RuneItemID of class  tagSkillDyAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDyAttrib_RuneItemID
static int tolua_set_tagSkillDyAttrib_RuneItemID(lua_State* tolua_S)
{
  tagSkillDyAttrib* self = (tagSkillDyAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RuneItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RuneItemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RuneItemIDs of class  tagSkillDyAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillDyAttrib_RuneItemIDs
static int tolua_get_tagSkillDyAttrib_RuneItemIDs(lua_State* tolua_S)
{
  tagSkillDyAttrib* self = (tagSkillDyAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RuneItemIDs'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->RuneItemIDs,"std::vector<int>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RuneItemIDs of class  tagSkillDyAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillDyAttrib_RuneItemIDs
static int tolua_set_tagSkillDyAttrib_RuneItemIDs(lua_State* tolua_S)
{
  tagSkillDyAttrib* self = (tagSkillDyAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RuneItemIDs'",NULL);
  if (!tolua_isusertype(tolua_S,2,"std::vector<int>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RuneItemIDs = *((std::vector<int>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nSkillId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nSkillId
static int tolua_get_tagSkillAttrib_m_nSkillId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nSkillId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nSkillId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nSkillId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nSkillId
static int tolua_set_tagSkillAttrib_m_nSkillId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nSkillId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nSkillId = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nBuffId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nBuffId
static int tolua_get_tagSkillAttrib_m_nBuffId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nBuffId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nBuffId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nBuffId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nBuffId
static int tolua_set_tagSkillAttrib_m_nBuffId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nBuffId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nBuffId = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nFittingId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nFittingId
static int tolua_get_tagSkillAttrib_m_nFittingId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nFittingId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nFittingId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nFittingId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nFittingId
static int tolua_set_tagSkillAttrib_m_nFittingId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nFittingId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nFittingId = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nBehitDelay of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nBehitDelay
static int tolua_get_tagSkillAttrib_m_nBehitDelay(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nBehitDelay'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nBehitDelay);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nBehitDelay of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nBehitDelay
static int tolua_set_tagSkillAttrib_m_nBehitDelay(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nBehitDelay'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nBehitDelay = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_BehitId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_BehitId
static int tolua_get_tagSkillAttrib_m_BehitId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_BehitId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_BehitId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_BehitId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_BehitId
static int tolua_set_tagSkillAttrib_m_BehitId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_BehitId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_BehitId = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_CollectActId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_CollectActId
static int tolua_get_tagSkillAttrib_m_CollectActId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_CollectActId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_CollectActId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_CollectActId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_CollectActId
static int tolua_set_tagSkillAttrib_m_CollectActId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_CollectActId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_CollectActId = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ActId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagSkillAttrib_m_ActId
static int tolua_get_GameEngineTolua_tagSkillAttrib_m_ActId(lua_State* tolua_S)
{
 int tolua_index;
  tagSkillAttrib* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSkillAttrib*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=3)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->m_ActId[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ActId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagSkillAttrib_m_ActId
static int tolua_set_GameEngineTolua_tagSkillAttrib_m_ActId(lua_State* tolua_S)
{
 int tolua_index;
  tagSkillAttrib* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSkillAttrib*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=3)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_ActId[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_PreActId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_PreActId
static int tolua_get_tagSkillAttrib_m_PreActId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_PreActId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_PreActId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_PreActId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_PreActId
static int tolua_set_tagSkillAttrib_m_PreActId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_PreActId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_PreActId = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nHitBackType of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nHitBackType
static int tolua_get_tagSkillAttrib_m_nHitBackType(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nHitBackType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nHitBackType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nHitBackType of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nHitBackType
static int tolua_set_tagSkillAttrib_m_nHitBackType(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nHitBackType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nHitBackType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nHitBackSpeed of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nHitBackSpeed
static int tolua_get_tagSkillAttrib_m_nHitBackSpeed(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nHitBackSpeed'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nHitBackSpeed);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nHitBackSpeed of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nHitBackSpeed
static int tolua_set_tagSkillAttrib_m_nHitBackSpeed(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nHitBackSpeed'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nHitBackSpeed = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nHitBackHight of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nHitBackHight
static int tolua_get_tagSkillAttrib_m_nHitBackHight(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nHitBackHight'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nHitBackHight);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nHitBackHight of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nHitBackHight
static int tolua_set_tagSkillAttrib_m_nHitBackHight(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nHitBackHight'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nHitBackHight = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nHitBackTime of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nHitBackTime
static int tolua_get_tagSkillAttrib_m_nHitBackTime(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nHitBackTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nHitBackTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nHitBackTime of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nHitBackTime
static int tolua_set_tagSkillAttrib_m_nHitBackTime(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nHitBackTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nHitBackTime = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_strHitBackExtraInfo of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_strHitBackExtraInfo
static int tolua_get_tagSkillAttrib_m_strHitBackExtraInfo(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strHitBackExtraInfo'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_strHitBackExtraInfo);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_strHitBackExtraInfo of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_strHitBackExtraInfo
static int tolua_set_tagSkillAttrib_m_strHitBackExtraInfo(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strHitBackExtraInfo'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_strHitBackExtraInfo = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMoveTime of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nMoveTime
static int tolua_get_tagSkillAttrib_m_nMoveTime(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMoveTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMoveTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMoveTime of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nMoveTime
static int tolua_set_tagSkillAttrib_m_nMoveTime(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMoveTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMoveTime = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nHideWeapon of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nHideWeapon
static int tolua_get_tagSkillAttrib_m_nHideWeapon(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nHideWeapon'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nHideWeapon);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nHideWeapon of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nHideWeapon
static int tolua_set_tagSkillAttrib_m_nHideWeapon(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nHideWeapon'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nHideWeapon = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_isPreHideWeapon of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_isPreHideWeapon
static int tolua_get_tagSkillAttrib_m_isPreHideWeapon(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_isPreHideWeapon'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_isPreHideWeapon);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_isPreHideWeapon of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_isPreHideWeapon
static int tolua_set_tagSkillAttrib_m_isPreHideWeapon(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_isPreHideWeapon'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_isPreHideWeapon = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_isNoBreak of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_isNoBreak
static int tolua_get_tagSkillAttrib_m_isNoBreak(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_isNoBreak'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_isNoBreak);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_isNoBreak of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_isNoBreak
static int tolua_set_tagSkillAttrib_m_isNoBreak(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_isNoBreak'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_isNoBreak = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_strPreEffName of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_strPreEffName
static int tolua_get_tagSkillAttrib_m_strPreEffName(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strPreEffName'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_strPreEffName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_strPreEffName of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_strPreEffName
static int tolua_set_tagSkillAttrib_m_strPreEffName(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strPreEffName'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_strPreEffName = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ActEffName of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_ActEffName
static int tolua_get_tagSkillAttrib_m_ActEffName(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_ActEffName'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_ActEffName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ActEffName of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_ActEffName
static int tolua_set_tagSkillAttrib_m_ActEffName(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_ActEffName'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_ActEffName = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_HitEffName of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_HitEffName
static int tolua_get_tagSkillAttrib_m_HitEffName(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_HitEffName'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_HitEffName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_HitEffName of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_HitEffName
static int tolua_set_tagSkillAttrib_m_HitEffName(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_HitEffName'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_HitEffName = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_CollectEffectName of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_CollectEffectName
static int tolua_get_tagSkillAttrib_m_CollectEffectName(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_CollectEffectName'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_CollectEffectName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_CollectEffectName of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_CollectEffectName
static int tolua_set_tagSkillAttrib_m_CollectEffectName(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_CollectEffectName'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_CollectEffectName = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_CollectBlastEffectName of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_CollectBlastEffectName
static int tolua_get_tagSkillAttrib_m_CollectBlastEffectName(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_CollectBlastEffectName'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_CollectBlastEffectName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_CollectBlastEffectName of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_CollectBlastEffectName
static int tolua_set_tagSkillAttrib_m_CollectBlastEffectName(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_CollectBlastEffectName'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_CollectBlastEffectName = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_CollectPower of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagSkillAttrib_m_CollectPower
static int tolua_get_GameEngineTolua_tagSkillAttrib_m_CollectPower(lua_State* tolua_S)
{
 int tolua_index;
  tagSkillAttrib* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSkillAttrib*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=3)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushcppstring(tolua_S,(const char*)self->m_CollectPower[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_CollectPower of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagSkillAttrib_m_CollectPower
static int tolua_set_GameEngineTolua_tagSkillAttrib_m_CollectPower(lua_State* tolua_S)
{
 int tolua_index;
  tagSkillAttrib* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagSkillAttrib*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=3)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_CollectPower[tolua_index] = ((std::string)  tolua_tocppstring(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_strTraceEff of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_strTraceEff
static int tolua_get_tagSkillAttrib_m_strTraceEff(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strTraceEff'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_strTraceEff);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_strTraceEff of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_strTraceEff
static int tolua_set_tagSkillAttrib_m_strTraceEff(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strTraceEff'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_strTraceEff = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nTraceFadeTime of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nTraceFadeTime
static int tolua_get_tagSkillAttrib_m_nTraceFadeTime(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nTraceFadeTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nTraceFadeTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nTraceFadeTime of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nTraceFadeTime
static int tolua_set_tagSkillAttrib_m_nTraceFadeTime(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nTraceFadeTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nTraceFadeTime = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nTraceTotalTime of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nTraceTotalTime
static int tolua_get_tagSkillAttrib_m_nTraceTotalTime(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nTraceTotalTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nTraceTotalTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nTraceTotalTime of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nTraceTotalTime
static int tolua_set_tagSkillAttrib_m_nTraceTotalTime(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nTraceTotalTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nTraceTotalTime = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nTraceSpeed of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nTraceSpeed
static int tolua_get_tagSkillAttrib_m_nTraceSpeed(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nTraceSpeed'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nTraceSpeed);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nTraceSpeed of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nTraceSpeed
static int tolua_set_tagSkillAttrib_m_nTraceSpeed(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nTraceSpeed'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nTraceSpeed = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_Name of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_Name
static int tolua_get_tagSkillAttrib_m_Name(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_Name'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_Name of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_Name
static int tolua_set_tagSkillAttrib_m_Name(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_Name'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_Name = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_Title of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_Title
static int tolua_get_tagSkillAttrib_m_Title(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_Title'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_Title);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_Title of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_Title
static int tolua_set_tagSkillAttrib_m_Title(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_Title'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_Title = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_strType of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_strType
static int tolua_get_tagSkillAttrib_m_strType(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strType'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_strType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_strType of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_strType
static int tolua_set_tagSkillAttrib_m_strType(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strType'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_strType = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_strScript of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_strScript
static int tolua_get_tagSkillAttrib_m_strScript(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strScript'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_strScript);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_strScript of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_strScript
static int tolua_set_tagSkillAttrib_m_strScript(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strScript'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_strScript = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_strThrowtype of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_strThrowtype
static int tolua_get_tagSkillAttrib_m_strThrowtype(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strThrowtype'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_strThrowtype);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_strThrowtype of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_strThrowtype
static int tolua_set_tagSkillAttrib_m_strThrowtype(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strThrowtype'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_strThrowtype = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_strFlyActorName of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_strFlyActorName
static int tolua_get_tagSkillAttrib_m_strFlyActorName(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strFlyActorName'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_strFlyActorName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_strFlyActorName of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_strFlyActorName
static int tolua_set_tagSkillAttrib_m_strFlyActorName(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strFlyActorName'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_strFlyActorName = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_flySpeed of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_flySpeed
static int tolua_get_tagSkillAttrib_m_flySpeed(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_flySpeed'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_flySpeed);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_flySpeed of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_flySpeed
static int tolua_set_tagSkillAttrib_m_flySpeed(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_flySpeed'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_flySpeed = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nFlyDesAnchorId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nFlyDesAnchorId
static int tolua_get_tagSkillAttrib_m_nFlyDesAnchorId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nFlyDesAnchorId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nFlyDesAnchorId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nFlyDesAnchorId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nFlyDesAnchorId
static int tolua_set_tagSkillAttrib_m_nFlyDesAnchorId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nFlyDesAnchorId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nFlyDesAnchorId = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nFlySrcAnchorId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nFlySrcAnchorId
static int tolua_get_tagSkillAttrib_m_nFlySrcAnchorId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nFlySrcAnchorId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nFlySrcAnchorId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nFlySrcAnchorId of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nFlySrcAnchorId
static int tolua_set_tagSkillAttrib_m_nFlySrcAnchorId(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nFlySrcAnchorId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nFlySrcAnchorId = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nFlyHeightRadio of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nFlyHeightRadio
static int tolua_get_tagSkillAttrib_m_nFlyHeightRadio(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nFlyHeightRadio'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nFlyHeightRadio);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nFlyHeightRadio of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nFlyHeightRadio
static int tolua_set_tagSkillAttrib_m_nFlyHeightRadio(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nFlyHeightRadio'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nFlyHeightRadio = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nFlyActorNum of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nFlyActorNum
static int tolua_get_tagSkillAttrib_m_nFlyActorNum(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nFlyActorNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nFlyActorNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nFlyActorNum of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nFlyActorNum
static int tolua_set_tagSkillAttrib_m_nFlyActorNum(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nFlyActorNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nFlyActorNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nFlyActorDelay of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_nFlyActorDelay
static int tolua_get_tagSkillAttrib_m_nFlyActorDelay(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nFlyActorDelay'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nFlyActorDelay);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nFlyActorDelay of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_nFlyActorDelay
static int tolua_set_tagSkillAttrib_m_nFlyActorDelay(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nFlyActorDelay'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nFlyActorDelay = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bFlyMulti of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_get_tagSkillAttrib_m_bFlyMulti
static int tolua_get_tagSkillAttrib_m_bFlyMulti(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bFlyMulti'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_bFlyMulti);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bFlyMulti of class  tagSkillAttrib */
#ifndef TOLUA_DISABLE_tolua_set_tagSkillAttrib_m_bFlyMulti
static int tolua_set_tagSkillAttrib_m_bFlyMulti(lua_State* tolua_S)
{
  tagSkillAttrib* self = (tagSkillAttrib*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bFlyMulti'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bFlyMulti = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttackDist of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getAttackDist00
static int tolua_GameEngineTolua_GameSpell_getAttackDist00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttackDist'",NULL);
#endif
  {
   float tolua_ret = (float)  self->getAttackDist();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttackDist'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playAction of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_playAction00
static int tolua_GameEngineTolua_GameSpell_playAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int who = ((int)  tolua_tonumber(tolua_S,2,0));
  int actionId = ((int)  tolua_tonumber(tolua_S,3,0));
  int motion_class = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playAction'",NULL);
#endif
  {
   self->playAction(who,actionId,motion_class);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_update00
static int tolua_GameEngineTolua_GameSpell_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  unsigned int dtick = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'",NULL);
#endif
  {
   self->update(dtick);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onUpdate of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_onUpdate00
static int tolua_GameEngineTolua_GameSpell_onUpdate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  unsigned int dtick = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onUpdate'",NULL);
#endif
  {
   self->onUpdate(dtick);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onUpdate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSingleTarget of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_setSingleTarget00
static int tolua_GameEngineTolua_GameSpell_setSingleTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int targetid = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSingleTarget'",NULL);
#endif
  {
   self->setSingleTarget(targetid);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSingleTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTargets of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_setTargets00
static int tolua_GameEngineTolua_GameSpell_setTargets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_istable(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int num = ((int)  tolua_tonumber(tolua_S,2,0));
#ifdef __cplusplus
  int* targets = new int[MAX_SKILL_TARGET];
#else
  int* targets = (int*) malloc((MAX_SKILL_TARGET)*sizeof(int));
#endif
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTargets'",NULL);
#endif
  {
#ifndef TOLUA_RELEASE
   if (!tolua_isnumberarray(tolua_S,3,MAX_SKILL_TARGET,0,&tolua_err))
    goto tolua_lerror;
   else
#endif
   {
    int i;
    for(i=0; i<MAX_SKILL_TARGET;i++)
    targets[i] = ((int)  tolua_tofieldnumber(tolua_S,3,i+1,0));
   }
  }
  {
   self->setTargets(num,targets);
  }
#ifdef __cplusplus
  delete [] targets;
#else
  free(targets);
#endif
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTargets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSkillMsgPackage of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_setSkillMsgPackage00
static int tolua_GameEngineTolua_GameSpell_setSkillMsgPackage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameSkill_Package",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  GameSkill_Package* Package = ((GameSkill_Package*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSkillMsgPackage'",NULL);
#endif
  {
   self->setSkillMsgPackage(Package);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSkillMsgPackage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: start of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_start00
static int tolua_GameEngineTolua_GameSpell_start00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'start'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->start();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'start'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Break of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_Break00
static int tolua_GameEngineTolua_GameSpell_Break00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Break'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Break();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Break'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: prepare of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_prepare00
static int tolua_GameEngineTolua_GameSpell_prepare00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'prepare'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->prepare();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'prepare'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: collect of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_collect00
static int tolua_GameEngineTolua_GameSpell_collect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'collect'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->collect();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'collect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endCollect of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_endCollect00
static int tolua_GameEngineTolua_GameSpell_endCollect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endCollect'",NULL);
#endif
  {
   self->endCollect();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endCollect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Attack of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_Attack00
static int tolua_GameEngineTolua_GameSpell_Attack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Attack'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Attack();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Attack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Hit of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_Hit00
static int tolua_GameEngineTolua_GameSpell_Hit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Hit'",NULL);
#endif
  {
   self->Hit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Hit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: attackTime of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_attackTime00
static int tolua_GameEngineTolua_GameSpell_attackTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'attackTime'",NULL);
#endif
  {
   self->attackTime();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'attackTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onPrepare of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_onPrepare00
static int tolua_GameEngineTolua_GameSpell_onPrepare00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onPrepare'",NULL);
#endif
  {
   self->onPrepare();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onPrepare'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onCollect of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_onCollect00
static int tolua_GameEngineTolua_GameSpell_onCollect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onCollect'",NULL);
#endif
  {
   self->onCollect();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onCollect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onCollectTime of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_onCollectTime00
static int tolua_GameEngineTolua_GameSpell_onCollectTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int time = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onCollectTime'",NULL);
#endif
  {
   self->onCollectTime(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onCollectTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onCollectFull of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_onCollectFull00
static int tolua_GameEngineTolua_GameSpell_onCollectFull00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onCollectFull'",NULL);
#endif
  {
   self->onCollectFull();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onCollectFull'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onAttack of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_onAttack00
static int tolua_GameEngineTolua_GameSpell_onAttack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  bool passive = ((bool)  tolua_toboolean(tolua_S,2,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onAttack'",NULL);
#endif
  {
   self->onAttack(passive);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onAttack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onChannel of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_onChannel00
static int tolua_GameEngineTolua_GameSpell_onChannel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onChannel'",NULL);
#endif
  {
   self->onChannel();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onChannel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onHit of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_onHit00
static int tolua_GameEngineTolua_GameSpell_onHit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onHit'",NULL);
#endif
  {
   self->onHit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onHit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onHit of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_onHit01
static int tolua_GameEngineTolua_GameSpell_onHit01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"GameSkill_Package",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  GameSkill_Package* package = ((GameSkill_Package*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onHit'",NULL);
#endif
  {
   self->onHit(id,package);
  }
 }
 return 0;
tolua_lerror:
 return tolua_GameEngineTolua_GameSpell_onHit00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: onBreak of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_onBreak00
static int tolua_GameEngineTolua_GameSpell_onBreak00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onBreak'",NULL);
#endif
  {
   self->onBreak();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onBreak'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onStop of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_onStop00
static int tolua_GameEngineTolua_GameSpell_onStop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onStop'",NULL);
#endif
  {
   self->onStop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onStop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onAttack of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_onAttack01
static int tolua_GameEngineTolua_GameSpell_onAttack01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const std::vector<int>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  const std::vector<int>* targets = ((const std::vector<int>*)  tolua_tousertype(tolua_S,2,0));
  bool passive = ((bool)  tolua_toboolean(tolua_S,3,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onAttack'",NULL);
#endif
  {
   self->onAttack(*targets,passive);
  }
 }
 return 0;
tolua_lerror:
 return tolua_GameEngineTolua_GameSpell_onAttack00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttackEffectName of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getAttackEffectName00
static int tolua_GameEngineTolua_GameSpell_getAttackEffectName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  const char* szEffectName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttackEffectName'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getAttackEffectName(szEffectName);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttackEffectName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHitEffectName of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getHitEffectName00
static int tolua_GameEngineTolua_GameSpell_getHitEffectName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* szEffectName = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHitEffectName'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getHitEffectName(id,szEffectName);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHitEffectName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: check of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_check00
static int tolua_GameEngineTolua_GameSpell_check00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'check'",NULL);
#endif
  {
   int tolua_ret = (int)  self->check();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'check'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: inspect of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_inspect00
static int tolua_GameEngineTolua_GameSpell_inspect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inspect'",NULL);
#endif
  {
   int tolua_ret = (int)  self->inspect(id,x,y);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'inspect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: inspect of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_inspect01
static int tolua_GameEngineTolua_GameSpell_inspect01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inspect'",NULL);
#endif
  {
   int tolua_ret = (int)  self->inspect();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GameSpell_inspect00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: inspect of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_inspect02
static int tolua_GameEngineTolua_GameSpell_inspect02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inspect'",NULL);
#endif
  {
   int tolua_ret = (int)  self->inspect(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GameSpell_inspect01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: inspect of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_inspect03
static int tolua_GameEngineTolua_GameSpell_inspect03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inspect'",NULL);
#endif
  {
   int tolua_ret = (int)  self->inspect(x,y);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GameSpell_inspect02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSpellId of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_setSpellId00
static int tolua_GameEngineTolua_GameSpell_setSpellId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSpellId'",NULL);
#endif
  {
   self->setSpellId(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSpellId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellId of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getSpellId00
static int tolua_GameEngineTolua_GameSpell_getSpellId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpellId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSpellLv of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_setSpellLv00
static int tolua_GameEngineTolua_GameSpell_setSpellLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int lv = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSpellLv'",NULL);
#endif
  {
   self->setSpellLv(lv);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSpellLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellLv of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getSpellLv00
static int tolua_GameEngineTolua_GameSpell_getSpellLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellLv'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpellLv();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSpellReq of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_setSpellReq00
static int tolua_GameEngineTolua_GameSpell_setSpellReq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int req = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSpellReq'",NULL);
#endif
  {
   self->setSpellReq(req);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSpellReq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpellReq of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getSpellReq00
static int tolua_GameEngineTolua_GameSpell_getSpellReq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpellReq'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpellReq();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpellReq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFittingIndex of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getFittingIndex00
static int tolua_GameEngineTolua_GameSpell_getFittingIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFittingIndex'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getFittingIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFittingIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSpellController of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_setSpellController00
static int tolua_GameEngineTolua_GameSpell_setSpellController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ISpellControler",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  ISpellControler* p = ((ISpellControler*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSpellController'",NULL);
#endif
  {
   self->setSpellController(p);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSpellController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getState of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getState00
static int tolua_GameEngineTolua_GameSpell_getState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getState'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getState();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingleTarget of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getSingleTarget00
static int tolua_GameEngineTolua_GameSpell_getSingleTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSingleTarget'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSingleTarget();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingleTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOwner of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getOwner00
static int tolua_GameEngineTolua_GameSpell_getOwner00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOwner'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getOwner();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOwner'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSelfPoint of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_setSelfPoint00
static int tolua_GameEngineTolua_GameSpell_setSelfPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSelfPoint'",NULL);
#endif
  {
   self->setSelfPoint(x,y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSelfPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSelfPoint of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_setSelfPoint01
static int tolua_GameEngineTolua_GameSpell_setSelfPoint01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const GameXYZ",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  const GameXYZ* pos = ((const GameXYZ*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSelfPoint'",NULL);
#endif
  {
   self->setSelfPoint(*pos);
  }
 }
 return 0;
tolua_lerror:
 return tolua_GameEngineTolua_GameSpell_setSelfPoint00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSelfPoint of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getSelfPoint00
static int tolua_GameEngineTolua_GameSpell_getSelfPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSelfPoint'",NULL);
#endif
  {
   const GameXYZ& tolua_ret = (const GameXYZ&)  self->getSelfPoint();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const GameXYZ");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSelfPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTargetPoint of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_setTargetPoint00
static int tolua_GameEngineTolua_GameSpell_setTargetPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTargetPoint'",NULL);
#endif
  {
   self->setTargetPoint(x,y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTargetPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTargetPoint of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getTargetPoint00
static int tolua_GameEngineTolua_GameSpell_getTargetPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTargetPoint'",NULL);
#endif
  {
   const GameXYZ* tolua_ret = (const GameXYZ*)  self->getTargetPoint();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const GameXYZ");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTargetPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHitDelay of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_setHitDelay00
static int tolua_GameEngineTolua_GameSpell_setHitDelay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int nHitDelay = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHitDelay'",NULL);
#endif
  {
   self->setHitDelay(nHitDelay);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHitDelay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHitDelay of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getHitDelay00
static int tolua_GameEngineTolua_GameSpell_getHitDelay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHitDelay'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getHitDelay();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHitDelay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOwner of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_setOwner00
static int tolua_GameEngineTolua_GameSpell_setOwner00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOwner'",NULL);
#endif
  {
   self->setOwner(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOwner'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canAttackSelf of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_canAttackSelf00
static int tolua_GameEngineTolua_GameSpell_canAttackSelf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canAttackSelf'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canAttackSelf();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canAttackSelf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSelfPosChange of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_setSelfPosChange00
static int tolua_GameEngineTolua_GameSpell_setSelfPosChange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSelfPosChange'",NULL);
#endif
  {
   self->setSelfPosChange(x,y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSelfPosChange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: circualMovePoint of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_circualMovePoint00
static int tolua_GameEngineTolua_GameSpell_circualMovePoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const SKILLRESULT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  const SKILLRESULT* pstSkillResult = ((const SKILLRESULT*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'circualMovePoint'",NULL);
#endif
  {
   RESPOS tolua_ret = (RESPOS)  self->circualMovePoint(pstSkillResult);
   {
#ifdef __cplusplus
    void* tolua_obj = new RESPOS(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"RESPOS");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(RESPOS));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"RESPOS");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'circualMovePoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTarget of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getTarget00
static int tolua_GameEngineTolua_GameSpell_getTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"size_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
  size_t index = *((size_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTarget'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getTarget(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTargetNum of class  GameSpell */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameSpell_getTargetNum00
static int tolua_GameEngineTolua_GameSpell_getTargetNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameSpell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameSpell* self = (GameSpell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTargetNum'",NULL);
#endif
  {
   size_t tolua_ret = (size_t)  self->getTargetNum();
   {
#ifdef __cplusplus
    void* tolua_obj = new size_t(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"size_t");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(size_t));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"size_t");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTargetNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addFlyPath of class  SpecialMove */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SpecialMove_addFlyPath00
static int tolua_GameEngineTolua_SpecialMove_addFlyPath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SpecialMove",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SpecialMove* self = (SpecialMove*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int z = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addFlyPath'",NULL);
#endif
  {
   self->addFlyPath(x,y,z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addFlyPath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playAnimFly of class  SpecialMove */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SpecialMove_playAnimFly00
static int tolua_GameEngineTolua_SpecialMove_playAnimFly00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SpecialMove",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,9,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,10,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SpecialMove* self = (SpecialMove*)  tolua_tousertype(tolua_S,1,0);
  int nOwnerId = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* szAnimOmod = ((const char*)  tolua_tostring(tolua_S,3,0));
  int modelId = ((int)  tolua_tonumber(tolua_S,4,0));
  int x = ((int)  tolua_tonumber(tolua_S,5,0));
  int y = ((int)  tolua_tonumber(tolua_S,6,0));
  int npcId = ((int)  tolua_tonumber(tolua_S,7,0));
  int delayTick = ((int)  tolua_tonumber(tolua_S,8,0));
  bool bCanShowUI = ((bool)  tolua_toboolean(tolua_S,9,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playAnimFly'",NULL);
#endif
  {
   self->playAnimFly(nOwnerId,szAnimOmod,modelId,x,y,npcId,delayTick,bCanShowUI);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playAnimFly'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: continueAnimFly of class  SpecialMove */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SpecialMove_continueAnimFly00
static int tolua_GameEngineTolua_SpecialMove_continueAnimFly00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SpecialMove",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SpecialMove* self = (SpecialMove*)  tolua_tousertype(tolua_S,1,0);
  int nOwnerId = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* szAnimOmod = ((const char*)  tolua_tostring(tolua_S,3,0));
  int modelId = ((int)  tolua_tonumber(tolua_S,4,0));
  int x = ((int)  tolua_tonumber(tolua_S,5,0));
  int y = ((int)  tolua_tonumber(tolua_S,6,0));
  int npcId = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'continueAnimFly'",NULL);
#endif
  {
   self->continueAnimFly(nOwnerId,szAnimOmod,modelId,x,y,npcId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'continueAnimFly'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: InsertAnimPath of class  SpecialMove */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SpecialMove_InsertAnimPath00
static int tolua_GameEngineTolua_SpecialMove_InsertAnimPath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SpecialMove",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SpecialMove* self = (SpecialMove*)  tolua_tousertype(tolua_S,1,0);
  int animId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'InsertAnimPath'",NULL);
#endif
  {
   self->InsertAnimPath(animId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'InsertAnimPath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checkCancelFirstAnimFly of class  SpecialMove */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SpecialMove_checkCancelFirstAnimFly00
static int tolua_GameEngineTolua_SpecialMove_checkCancelFirstAnimFly00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SpecialMove",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SpecialMove* self = (SpecialMove*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checkCancelFirstAnimFly'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->checkCancelFirstAnimFly();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkCancelFirstAnimFly'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canShowUI of class  SpecialMove */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_SpecialMove_canShowUI00
static int tolua_GameEngineTolua_SpecialMove_canShowUI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SpecialMove",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SpecialMove* self = (SpecialMove*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canShowUI'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canShowUI();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canShowUI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: clearNpcQuestList */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_clearNpcQuestList00
static int tolua_GameEngineTolua_clearNpcQuestList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   clearNpcQuestList();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearNpcQuestList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getNpcQuestShow */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getNpcQuestShow00
static int tolua_GameEngineTolua_getNpcQuestShow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int npcId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getNpcQuestShow(npcId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNpcQuestShow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getMonsterRadius */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getMonsterRadius00
static int tolua_GameEngineTolua_getMonsterRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nResId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getMonsterRadius(nResId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getMonsterSubtype */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getMonsterSubtype00
static int tolua_GameEngineTolua_getMonsterSubtype00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nResId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getMonsterSubtype(nResId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterSubtype'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getMonsterLevel */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getMonsterLevel00
static int tolua_GameEngineTolua_getMonsterLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nResId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getMonsterLevel(nResId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getMonsterNameColor */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getMonsterNameColor00
static int tolua_GameEngineTolua_getMonsterNameColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nResId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getMonsterNameColor(nResId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterNameColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getMonsterName */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getMonsterName00
static int tolua_GameEngineTolua_getMonsterName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nResId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const char* tolua_ret = (const char*)  getMonsterName(nResId);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getMonsterIcon */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getMonsterIcon00
static int tolua_GameEngineTolua_getMonsterIcon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nResId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getMonsterIcon(nResId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterIcon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getMonsterMaxHP */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getMonsterMaxHP00
static int tolua_GameEngineTolua_getMonsterMaxHP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nResId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getMonsterMaxHP(nResId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterMaxHP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getNpcDesc */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getNpcDesc00
static int tolua_GameEngineTolua_getNpcDesc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int npcId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const char* tolua_ret = (const char*)  getNpcDesc(npcId);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNpcDesc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: GetNpcName */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GetNpcName00
static int tolua_GameEngineTolua_GetNpcName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nResid = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const char* tolua_ret = (const char*)  GetNpcName(nResid);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNpcName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getMonMachineMaxEnergy */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getMonMachineMaxEnergy00
static int tolua_GameEngineTolua_getMonMachineMaxEnergy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int resid = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getMonMachineMaxEnergy(resid);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonMachineMaxEnergy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMemID of class  tagRideRoleInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagRideRoleInfo_m_nMemID
static int tolua_get_tagRideRoleInfo_m_nMemID(lua_State* tolua_S)
{
  tagRideRoleInfo* self = (tagRideRoleInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMemID of class  tagRideRoleInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagRideRoleInfo_m_nMemID
static int tolua_set_tagRideRoleInfo_m_nMemID(lua_State* tolua_S)
{
  tagRideRoleInfo* self = (tagRideRoleInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_szRoleName of class  tagRideRoleInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagRideRoleInfo_m_szRoleName
static int tolua_get_tagRideRoleInfo_m_szRoleName(lua_State* tolua_S)
{
  tagRideRoleInfo* self = (tagRideRoleInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_szRoleName'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->m_szRoleName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_szRoleName of class  tagRideRoleInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagRideRoleInfo_m_szRoleName
static int tolua_set_tagRideRoleInfo_m_szRoleName(lua_State* tolua_S)
{
  tagRideRoleInfo* self = (tagRideRoleInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_szRoleName'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->m_szRoleName,tolua_tostring(tolua_S,2,0),NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemID of class  tagRideStuff_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideStuff_ToLua_unsigned_ItemID
static int tolua_get_tagRideStuff_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagRideStuff_ToLua* self = (tagRideStuff_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemID of class  tagRideStuff_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideStuff_ToLua_unsigned_ItemID
static int tolua_set_tagRideStuff_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagRideStuff_ToLua* self = (tagRideStuff_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemNum of class  tagRideStuff_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideStuff_ToLua_unsigned_ItemNum
static int tolua_get_tagRideStuff_ToLua_unsigned_ItemNum(lua_State* tolua_S)
{
  tagRideStuff_ToLua* self = (tagRideStuff_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemNum of class  tagRideStuff_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideStuff_ToLua_unsigned_ItemNum
static int tolua_set_tagRideStuff_ToLua_unsigned_ItemNum(lua_State* tolua_S)
{
  tagRideStuff_ToLua* self = (tagRideStuff_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SelectType of class  tagRideNpcSelect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideNpcSelect_ToLua_unsigned_SelectType
static int tolua_get_tagRideNpcSelect_ToLua_unsigned_SelectType(lua_State* tolua_S)
{
  tagRideNpcSelect_ToLua* self = (tagRideNpcSelect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SelectType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SelectType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SelectType of class  tagRideNpcSelect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideNpcSelect_ToLua_unsigned_SelectType
static int tolua_set_tagRideNpcSelect_ToLua_unsigned_SelectType(lua_State* tolua_S)
{
  tagRideNpcSelect_ToLua* self = (tagRideNpcSelect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SelectType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SelectType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SelectVal of class  tagRideNpcSelect_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideNpcSelect_ToLua_unsigned_SelectVal
static int tolua_get_tagRideNpcSelect_ToLua_unsigned_SelectVal(lua_State* tolua_S)
{
  tagRideNpcSelect_ToLua* self = (tagRideNpcSelect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SelectVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SelectVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SelectVal of class  tagRideNpcSelect_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideNpcSelect_ToLua_unsigned_SelectVal
static int tolua_set_tagRideNpcSelect_ToLua_unsigned_SelectVal(lua_State* tolua_S)
{
  tagRideNpcSelect_ToLua* self = (tagRideNpcSelect_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SelectVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SelectVal = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RideID of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_unsigned_RideID
static int tolua_get_tagRideDef_ToLua_unsigned_RideID(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RideID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RideID of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_unsigned_RideID
static int tolua_set_tagRideDef_ToLua_unsigned_RideID(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RideID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_unsigned_Level
static int tolua_get_tagRideDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_unsigned_Level
static int tolua_set_tagRideDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RideType of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_unsigned_RideType
static int tolua_get_tagRideDef_ToLua_unsigned_RideType(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RideType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RideType of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_unsigned_RideType
static int tolua_set_tagRideDef_ToLua_unsigned_RideType(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RideType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RideName of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_RideName
static int tolua_get_tagRideDef_ToLua_RideName(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideName'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->RideName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RideName of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_RideName
static int tolua_set_tagRideDef_ToLua_RideName(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideName'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->RideName,tolua_tostring(tolua_S,2,0),RES_NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RideDesc of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_RideDesc
static int tolua_get_tagRideDef_ToLua_RideDesc(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->RideDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RideDesc of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_RideDesc
static int tolua_set_tagRideDef_ToLua_RideDesc(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->RideDesc,tolua_tostring(tolua_S,2,0),SHORT_DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RideSpd of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_unsigned_RideSpd
static int tolua_get_tagRideDef_ToLua_unsigned_RideSpd(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideSpd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RideSpd);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RideSpd of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_unsigned_RideSpd
static int tolua_set_tagRideDef_ToLua_unsigned_RideSpd(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideSpd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RideSpd = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ModelID of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_ModelID
static int tolua_get_tagRideDef_ToLua_ModelID(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ModelID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ModelID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ModelID of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_ModelID
static int tolua_set_tagRideDef_ToLua_ModelID(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ModelID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ModelID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IconID of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_IconID
static int tolua_get_tagRideDef_ToLua_IconID(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IconID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IconID of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_IconID
static int tolua_set_tagRideDef_ToLua_IconID(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IconID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LevelUpRate of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_unsigned_LevelUpRate
static int tolua_get_tagRideDef_ToLua_unsigned_LevelUpRate(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelUpRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LevelUpRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LevelUpRate of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_unsigned_LevelUpRate
static int tolua_set_tagRideDef_ToLua_unsigned_LevelUpRate(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelUpRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LevelUpRate = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AmerceRate of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_unsigned_AmerceRate
static int tolua_get_tagRideDef_ToLua_unsigned_AmerceRate(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AmerceRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AmerceRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AmerceRate of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_unsigned_AmerceRate
static int tolua_set_tagRideDef_ToLua_unsigned_AmerceRate(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AmerceRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AmerceRate = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LevelUpStuff of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagRideDef_ToLua_LevelUpStuff
static int tolua_get_GameEngineTolua_tagRideDef_ToLua_LevelUpStuff(lua_State* tolua_S)
{
 int tolua_index;
  tagRideDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRideDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_RIDE_STUFF)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->LevelUpStuff[tolua_index],"tagRideStuff_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LevelUpStuff of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagRideDef_ToLua_LevelUpStuff
static int tolua_set_GameEngineTolua_tagRideDef_ToLua_LevelUpStuff(lua_State* tolua_S)
{
 int tolua_index;
  tagRideDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRideDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_RIDE_STUFF)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->LevelUpStuff[tolua_index] = *((tagRideStuff_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RideOnNum of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_unsigned_RideOnNum
static int tolua_get_tagRideDef_ToLua_unsigned_RideOnNum(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideOnNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RideOnNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RideOnNum of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_unsigned_RideOnNum
static int tolua_set_tagRideDef_ToLua_unsigned_RideOnNum(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideOnNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RideOnNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NpcModelID of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_unsigned_NpcModelID
static int tolua_get_tagRideDef_ToLua_unsigned_NpcModelID(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NpcModelID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NpcModelID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NpcModelID of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_unsigned_NpcModelID
static int tolua_set_tagRideDef_ToLua_unsigned_NpcModelID(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NpcModelID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NpcModelID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NpcSelect of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagRideDef_ToLua_NpcSelect
static int tolua_get_GameEngineTolua_tagRideDef_ToLua_NpcSelect(lua_State* tolua_S)
{
 int tolua_index;
  tagRideDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRideDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_RIDE_NPC_SELECT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->NpcSelect[tolua_index],"tagRideNpcSelect_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NpcSelect of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagRideDef_ToLua_NpcSelect
static int tolua_set_GameEngineTolua_tagRideDef_ToLua_NpcSelect(lua_State* tolua_S)
{
 int tolua_index;
  tagRideDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRideDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_RIDE_NPC_SELECT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->NpcSelect[tolua_index] = *((tagRideNpcSelect_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PinZhi of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_unsigned_PinZhi
static int tolua_get_tagRideDef_ToLua_unsigned_PinZhi(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PinZhi'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PinZhi);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PinZhi of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_unsigned_PinZhi
static int tolua_set_tagRideDef_ToLua_unsigned_PinZhi(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PinZhi'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PinZhi = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Result of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagRideDef_ToLua_Result
static int tolua_get_GameEngineTolua_tagRideDef_ToLua_Result(lua_State* tolua_S)
{
 int tolua_index;
  tagRideDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRideDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_RIDE_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Result[tolua_index],"tagResult_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Result of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagRideDef_ToLua_Result
static int tolua_set_GameEngineTolua_tagRideDef_ToLua_Result(lua_State* tolua_S)
{
 int tolua_index;
  tagRideDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRideDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_RIDE_RESULT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Result[tolua_index] = *((tagResult_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ClanLimit of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_ClanLimit
static int tolua_get_tagRideDef_ToLua_ClanLimit(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ClanLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ClanLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ClanLimit of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_ClanLimit
static int tolua_set_tagRideDef_ToLua_ClanLimit(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ClanLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ClanLimit = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoneyType of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_MoneyType
static int tolua_get_tagRideDef_ToLua_MoneyType(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoneyType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoneyType of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_MoneyType
static int tolua_set_tagRideDef_ToLua_MoneyType(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoneyType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoneyVal of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_MoneyVal
static int tolua_get_tagRideDef_ToLua_MoneyVal(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoneyVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoneyVal of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_MoneyVal
static int tolua_set_tagRideDef_ToLua_MoneyVal(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoneyVal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoveLevelMoneyType of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_MoveLevelMoneyType
static int tolua_get_tagRideDef_ToLua_MoveLevelMoneyType(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveLevelMoneyType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoveLevelMoneyType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoveLevelMoneyType of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_MoveLevelMoneyType
static int tolua_set_tagRideDef_ToLua_MoveLevelMoneyType(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveLevelMoneyType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoveLevelMoneyType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoveLevelMoneyVal of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_MoveLevelMoneyVal
static int tolua_get_tagRideDef_ToLua_MoveLevelMoneyVal(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveLevelMoneyVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoveLevelMoneyVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoveLevelMoneyVal of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_MoveLevelMoneyVal
static int tolua_set_tagRideDef_ToLua_MoveLevelMoneyVal(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveLevelMoneyVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoveLevelMoneyVal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HopeNum of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_HopeNum
static int tolua_get_tagRideDef_ToLua_HopeNum(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HopeNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HopeNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HopeNum of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_HopeNum
static int tolua_set_tagRideDef_ToLua_HopeNum(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HopeNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HopeNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RideMapFlag of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRideDef_ToLua_RideMapFlag
static int tolua_get_tagRideDef_ToLua_RideMapFlag(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideMapFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RideMapFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RideMapFlag of class  tagRideDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRideDef_ToLua_RideMapFlag
static int tolua_set_tagRideDef_ToLua_RideMapFlag(lua_State* tolua_S)
{
  tagRideDef_ToLua* self = (tagRideDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideMapFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RideMapFlag = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PinZhi of class  tagRidePinZhiDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRidePinZhiDef_ToLua_PinZhi
static int tolua_get_tagRidePinZhiDef_ToLua_PinZhi(lua_State* tolua_S)
{
  tagRidePinZhiDef_ToLua* self = (tagRidePinZhiDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PinZhi'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PinZhi);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PinZhi of class  tagRidePinZhiDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRidePinZhiDef_ToLua_PinZhi
static int tolua_set_tagRidePinZhiDef_ToLua_PinZhi(lua_State* tolua_S)
{
  tagRidePinZhiDef_ToLua* self = (tagRidePinZhiDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PinZhi'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PinZhi = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PinZhiName of class  tagRidePinZhiDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRidePinZhiDef_ToLua_PinZhiName
static int tolua_get_tagRidePinZhiDef_ToLua_PinZhiName(lua_State* tolua_S)
{
  tagRidePinZhiDef_ToLua* self = (tagRidePinZhiDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PinZhiName'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->PinZhiName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PinZhiName of class  tagRidePinZhiDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRidePinZhiDef_ToLua_PinZhiName
static int tolua_set_tagRidePinZhiDef_ToLua_PinZhiName(lua_State* tolua_S)
{
  tagRidePinZhiDef_ToLua* self = (tagRidePinZhiDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PinZhiName'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->PinZhiName,tolua_tostring(tolua_S,2,0),RES_NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxLevel of class  tagRidePinZhiDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRidePinZhiDef_ToLua_MaxLevel
static int tolua_get_tagRidePinZhiDef_ToLua_MaxLevel(lua_State* tolua_S)
{
  tagRidePinZhiDef_ToLua* self = (tagRidePinZhiDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxLevel of class  tagRidePinZhiDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRidePinZhiDef_ToLua_MaxLevel
static int tolua_set_tagRidePinZhiDef_ToLua_MaxLevel(lua_State* tolua_S)
{
  tagRidePinZhiDef_ToLua* self = (tagRidePinZhiDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxLevel = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: getRideDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getRideDef00
static int tolua_GameEngineTolua_getRideDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nId = ((int)  tolua_tonumber(tolua_S,1,0));
  int nLv = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   const tagRideDef_ToLua* tolua_ret = (const tagRideDef_ToLua*)  getRideDef(nId,nLv);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagRideDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRideDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagRideInfo_new00
static int tolua_GameEngineTolua_tagRideInfo_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagRideInfo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int id = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int time = ((int)  tolua_tonumber(tolua_S,3,0));
  int level = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   tagRideInfo* tolua_ret = (tagRideInfo*)  new tagRideInfo(id,time,level);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagRideInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagRideInfo_new00_local
static int tolua_GameEngineTolua_tagRideInfo_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagRideInfo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int id = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int time = ((int)  tolua_tonumber(tolua_S,3,0));
  int level = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   tagRideInfo* tolua_ret = (tagRideInfo*)  new tagRideInfo(id,time,level);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"tagRideInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isValidEnd of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagRideInfo_isValidEnd00
static int tolua_GameEngineTolua_tagRideInfo_isValidEnd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"tagRideInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isValidEnd'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isValidEnd();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isValidEnd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RideID of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagRideInfo_unsigned_RideID
static int tolua_get_tagRideInfo_unsigned_RideID(lua_State* tolua_S)
{
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RideID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RideID of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagRideInfo_unsigned_RideID
static int tolua_set_tagRideInfo_unsigned_RideID(lua_State* tolua_S)
{
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RideID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RideID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Endtime of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagRideInfo_Endtime
static int tolua_get_tagRideInfo_Endtime(lua_State* tolua_S)
{
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Endtime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Endtime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Endtime of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagRideInfo_Endtime
static int tolua_set_tagRideInfo_Endtime(lua_State* tolua_S)
{
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Endtime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Endtime = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: nLevel of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagRideInfo_nLevel
static int tolua_get_tagRideInfo_nLevel(lua_State* tolua_S)
{
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'nLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->nLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: nLevel of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagRideInfo_nLevel
static int tolua_set_tagRideInfo_nLevel(lua_State* tolua_S)
{
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'nLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->nLevel = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nOwnerID of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagRideInfo_unsigned_m_nOwnerID
static int tolua_get_tagRideInfo_unsigned_m_nOwnerID(lua_State* tolua_S)
{
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nOwnerID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nOwnerID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nOwnerID of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagRideInfo_unsigned_m_nOwnerID
static int tolua_set_tagRideInfo_unsigned_m_nOwnerID(lua_State* tolua_S)
{
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nOwnerID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nOwnerID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nPassengerNum of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagRideInfo_unsigned_m_nPassengerNum
static int tolua_get_tagRideInfo_unsigned_m_nPassengerNum(lua_State* tolua_S)
{
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nPassengerNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nPassengerNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nPassengerNum of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagRideInfo_unsigned_m_nPassengerNum
static int tolua_set_tagRideInfo_unsigned_m_nPassengerNum(lua_State* tolua_S)
{
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nPassengerNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nPassengerNum = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nPassengerID of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagRideInfo_m_nPassengerID
static int tolua_get_GameEngineTolua_tagRideInfo_m_nPassengerID(lua_State* tolua_S)
{
 int tolua_index;
  tagRideInfo* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRideInfo*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_RIDE_PASSENGER)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->m_nPassengerID[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nPassengerID of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagRideInfo_m_nPassengerID
static int tolua_set_GameEngineTolua_tagRideInfo_m_nPassengerID(lua_State* tolua_S)
{
 int tolua_index;
  tagRideInfo* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagRideInfo*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_RIDE_PASSENGER)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_nPassengerID[tolua_index] = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_szFormatEndTime of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagRideInfo_m_szFormatEndTime
static int tolua_get_tagRideInfo_m_szFormatEndTime(lua_State* tolua_S)
{
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_szFormatEndTime'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->m_szFormatEndTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_szFormatEndTime of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagRideInfo_m_szFormatEndTime
static int tolua_set_tagRideInfo_m_szFormatEndTime(lua_State* tolua_S)
{
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_szFormatEndTime'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->m_szFormatEndTime,tolua_tostring(tolua_S,2,0),50-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nEndLeft of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagRideInfo_m_nEndLeft
static int tolua_get_tagRideInfo_m_nEndLeft(lua_State* tolua_S)
{
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nEndLeft'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nEndLeft);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nEndLeft of class  tagRideInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagRideInfo_m_nEndLeft
static int tolua_set_tagRideInfo_m_nEndLeft(lua_State* tolua_S)
{
  tagRideInfo* self = (tagRideInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nEndLeft'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nEndLeft = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: MainPlayerRidePre of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_MainPlayerRidePre00
static int tolua_GameEngineTolua_Rider_MainPlayerRidePre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uRideId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'MainPlayerRidePre'",NULL);
#endif
  {
   self->MainPlayerRidePre(uRideId,nLevel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MainPlayerRidePre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checkWaiter of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_checkWaiter00
static int tolua_GameEngineTolua_Rider_checkWaiter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checkWaiter'",NULL);
#endif
  {
   self->checkWaiter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkWaiter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rideOn of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_rideOn00
static int tolua_GameEngineTolua_Rider_rideOn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uRideId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int nRideLevel = ((int)  tolua_tonumber(tolua_S,3,0));
  bool already = ((bool)  tolua_toboolean(tolua_S,4,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rideOn'",NULL);
#endif
  {
   self->rideOn(uRideId,nRideLevel,already);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rideOn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rideOnSide of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_rideOnSide00
static int tolua_GameEngineTolua_Rider_rideOnSide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const tagCSRideOnInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  const tagCSRideOnInfo* rideInfo = ((const tagCSRideOnInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rideOnSide'",NULL);
#endif
  {
   self->rideOnSide(*rideInfo);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rideOnSide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kickOffAllPassenger of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_kickOffAllPassenger00
static int tolua_GameEngineTolua_Rider_kickOffAllPassenger00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'kickOffAllPassenger'",NULL);
#endif
  {
   self->kickOffAllPassenger();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kickOffAllPassenger'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestRideDown of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_requestRideDown00
static int tolua_GameEngineTolua_Rider_requestRideDown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestRideDown'",NULL);
#endif
  {
   self->requestRideDown();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestRideDown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPre of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_isPre00
static int tolua_GameEngineTolua_Rider_isPre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPre'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPre();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isOnHorse of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_isOnHorse00
static int tolua_GameEngineTolua_Rider_isOnHorse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isOnHorse'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isOnHorse();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isOnHorse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isOnFly of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_isOnFly00
static int tolua_GameEngineTolua_Rider_isOnFly00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isOnFly'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isOnFly();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isOnFly'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isContinueAutoFind of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_isContinueAutoFind00
static int tolua_GameEngineTolua_Rider_isContinueAutoFind00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isContinueAutoFind'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isContinueAutoFind();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isContinueAutoFind'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRideItem of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_getRideItem00
static int tolua_GameEngineTolua_Rider_getRideItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRideItem'",NULL);
#endif
  {
   const tagRideInfo& tolua_ret = (const tagRideInfo&)  self->getRideItem();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagRideInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRideItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxRideNum of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_getMaxRideNum00
static int tolua_GameEngineTolua_Rider_getMaxRideNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxRideNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxRideNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxRideNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRidNum of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_getRidNum00
static int tolua_GameEngineTolua_Rider_getRidNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRidNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getRidNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRidNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRideGridInfo of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_getRideGridInfo00
static int tolua_GameEngineTolua_Rider_getRideGridInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRideGridInfo'",NULL);
#endif
  {
   tagRideInfo& tolua_ret = (tagRideInfo&)  self->getRideGridInfo(nIndex);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"tagRideInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRideGridInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isHaveRide of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_isHaveRide00
static int tolua_GameEngineTolua_Rider_isHaveRide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nRideId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isHaveRide'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isHaveRide(nRideId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isHaveRide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHorseId of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_getHorseId00
static int tolua_GameEngineTolua_Rider_getHorseId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Rider* self = (const Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHorseId'",NULL);
#endif
  {
   const int tolua_ret = (const int)  self->getHorseId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHorseId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dropRide of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_dropRide00
static int tolua_GameEngineTolua_Rider_dropRide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nRideId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'dropRide'",NULL);
#endif
  {
   self->dropRide(nRideId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dropRide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: levelUpRide of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_levelUpRide00
static int tolua_GameEngineTolua_Rider_levelUpRide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nRideId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nListType = ((int)  tolua_tonumber(tolua_S,3,0));
  int nGrid = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'levelUpRide'",NULL);
#endif
  {
   self->levelUpRide(nRideId,nListType,nGrid);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'levelUpRide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: applyRide of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_applyRide00
static int tolua_GameEngineTolua_Rider_applyRide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nOwerId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'applyRide'",NULL);
#endif
  {
   self->applyRide(nOwerId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'applyRide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: acceptApplyRide of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_acceptApplyRide00
static int tolua_GameEngineTolua_Rider_acceptApplyRide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nApplyId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'acceptApplyRide'",NULL);
#endif
  {
   self->acceptApplyRide(nApplyId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'acceptApplyRide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: refuseApplyRide of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_refuseApplyRide00
static int tolua_GameEngineTolua_Rider_refuseApplyRide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nOwerId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'refuseApplyRide'",NULL);
#endif
  {
   self->refuseApplyRide(nOwerId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'refuseApplyRide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: inviteRide of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_inviteRide00
static int tolua_GameEngineTolua_Rider_inviteRide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nInvitedId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inviteRide'",NULL);
#endif
  {
   self->inviteRide(nInvitedId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'inviteRide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: acceptInviteRide of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_acceptInviteRide00
static int tolua_GameEngineTolua_Rider_acceptInviteRide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nRideOwerId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'acceptInviteRide'",NULL);
#endif
  {
   self->acceptInviteRide(nRideOwerId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'acceptInviteRide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kickOffPassenger of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_kickOffPassenger00
static int tolua_GameEngineTolua_Rider_kickOffPassenger00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nMemId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'kickOffPassenger'",NULL);
#endif
  {
   self->kickOffPassenger(nMemId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kickOffPassenger'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rideMoveLevel of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_rideMoveLevel00
static int tolua_GameEngineTolua_Rider_rideMoveLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int srcRideID = ((int)  tolua_tonumber(tolua_S,2,0));
  int desRideID = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rideMoveLevel'",NULL);
#endif
  {
   self->rideMoveLevel(srcRideID,desRideID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rideMoveLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: refuseInviteRide of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_refuseInviteRide00
static int tolua_GameEngineTolua_Rider_refuseInviteRide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nRideOwerId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nRefuseType = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'refuseInviteRide'",NULL);
#endif
  {
   self->refuseInviteRide(nRideOwerId,nRefuseType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'refuseInviteRide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectRideNpcOpton of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_selectRideNpcOpton00
static int tolua_GameEngineTolua_Rider_selectRideNpcOpton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nSelectType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectRideNpcOpton'",NULL);
#endif
  {
   self->selectRideNpcOpton(nSelectType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectRideNpcOpton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInviteRoleInfo of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_getInviteRoleInfo00
static int tolua_GameEngineTolua_Rider_getInviteRoleInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInviteRoleInfo'",NULL);
#endif
  {
   const tagRideRoleInfo& tolua_ret = (const tagRideRoleInfo&)  self->getInviteRoleInfo();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagRideRoleInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInviteRoleInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getApplyRoleInfo of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_getApplyRoleInfo00
static int tolua_GameEngineTolua_Rider_getApplyRoleInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getApplyRoleInfo'",NULL);
#endif
  {
   const tagRideRoleInfo& tolua_ret = (const tagRideRoleInfo&)  self->getApplyRoleInfo();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagRideRoleInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getApplyRoleInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isOwnRide of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_isOwnRide00
static int tolua_GameEngineTolua_Rider_isOwnRide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isOwnRide'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isOwnRide();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isOwnRide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canRidePre of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_canRidePre00
static int tolua_GameEngineTolua_Rider_canRidePre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uRideId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canRidePre'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canRidePre(uRideId,nLevel);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canRidePre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRideInfoById of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_getRideInfoById00
static int tolua_GameEngineTolua_Rider_getRideInfoById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nRideId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRideInfoById'",NULL);
#endif
  {
   const tagRideInfo* tolua_ret = (const tagRideInfo*)  self->getRideInfoById(nRideId);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagRideInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRideInfoById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRideInfoByRideId of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_getRideInfoByRideId00
static int tolua_GameEngineTolua_Rider_getRideInfoByRideId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nRideId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRideInfoByRideId'",NULL);
#endif
  {
   tagRideInfo& tolua_ret = (tagRideInfo&)  self->getRideInfoByRideId(nRideId);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"tagRideInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRideInfoByRideId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRidePinZhiDef of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_getRidePinZhiDef00
static int tolua_GameEngineTolua_Rider_getRidePinZhiDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
  int nPinzhi = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRidePinZhiDef'",NULL);
#endif
  {
   const tagRidePinZhiDef_ToLua* tolua_ret = (const tagRidePinZhiDef_ToLua*)  self->getRidePinZhiDef(nPinzhi);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagRidePinZhiDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRidePinZhiDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPassengerNum of class  Rider */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_Rider_getPassengerNum00
static int tolua_GameEngineTolua_Rider_getPassengerNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rider* self = (Rider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPassengerNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPassengerNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPassengerNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillID of class  tagPetNativeSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetNativeSkill_ToLua_unsigned_SkillID
static int tolua_get_tagPetNativeSkill_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagPetNativeSkill_ToLua* self = (tagPetNativeSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillID of class  tagPetNativeSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetNativeSkill_ToLua_unsigned_SkillID
static int tolua_set_tagPetNativeSkill_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagPetNativeSkill_ToLua* self = (tagPetNativeSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Rate of class  tagPetNativeSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetNativeSkill_ToLua_unsigned_Rate
static int tolua_get_tagPetNativeSkill_ToLua_unsigned_Rate(lua_State* tolua_S)
{
  tagPetNativeSkill_ToLua* self = (tagPetNativeSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Rate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Rate of class  tagPetNativeSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetNativeSkill_ToLua_unsigned_Rate
static int tolua_set_tagPetNativeSkill_ToLua_unsigned_Rate(lua_State* tolua_S)
{
  tagPetNativeSkill_ToLua* self = (tagPetNativeSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Rate = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicAtkGenius of class  tagPetGenius_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetGenius_ToLua_unsigned_PhsicAtkGenius
static int tolua_get_tagPetGenius_ToLua_unsigned_PhsicAtkGenius(lua_State* tolua_S)
{
  tagPetGenius_ToLua* self = (tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicAtkGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicAtkGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicAtkGenius of class  tagPetGenius_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetGenius_ToLua_unsigned_PhsicAtkGenius
static int tolua_set_tagPetGenius_ToLua_unsigned_PhsicAtkGenius(lua_State* tolua_S)
{
  tagPetGenius_ToLua* self = (tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicAtkGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicAtkGenius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceAtkGenius of class  tagPetGenius_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetGenius_ToLua_unsigned_IceAtkGenius
static int tolua_get_tagPetGenius_ToLua_unsigned_IceAtkGenius(lua_State* tolua_S)
{
  tagPetGenius_ToLua* self = (tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceAtkGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceAtkGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceAtkGenius of class  tagPetGenius_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetGenius_ToLua_unsigned_IceAtkGenius
static int tolua_set_tagPetGenius_ToLua_unsigned_IceAtkGenius(lua_State* tolua_S)
{
  tagPetGenius_ToLua* self = (tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceAtkGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceAtkGenius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HPGenius of class  tagPetGenius_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetGenius_ToLua_unsigned_HPGenius
static int tolua_get_tagPetGenius_ToLua_unsigned_HPGenius(lua_State* tolua_S)
{
  tagPetGenius_ToLua* self = (tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HPGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HPGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HPGenius of class  tagPetGenius_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetGenius_ToLua_unsigned_HPGenius
static int tolua_set_tagPetGenius_ToLua_unsigned_HPGenius(lua_State* tolua_S)
{
  tagPetGenius_ToLua* self = (tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HPGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HPGenius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DefGenius of class  tagPetGenius_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetGenius_ToLua_unsigned_DefGenius
static int tolua_get_tagPetGenius_ToLua_unsigned_DefGenius(lua_State* tolua_S)
{
  tagPetGenius_ToLua* self = (tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DefGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DefGenius of class  tagPetGenius_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetGenius_ToLua_unsigned_DefGenius
static int tolua_set_tagPetGenius_ToLua_unsigned_DefGenius(lua_State* tolua_S)
{
  tagPetGenius_ToLua* self = (tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DefGenius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HitRateGenius of class  tagPetGenius_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetGenius_ToLua_unsigned_HitRateGenius
static int tolua_get_tagPetGenius_ToLua_unsigned_HitRateGenius(lua_State* tolua_S)
{
  tagPetGenius_ToLua* self = (tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HitRateGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HitRateGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HitRateGenius of class  tagPetGenius_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetGenius_ToLua_unsigned_HitRateGenius
static int tolua_set_tagPetGenius_ToLua_unsigned_HitRateGenius(lua_State* tolua_S)
{
  tagPetGenius_ToLua* self = (tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HitRateGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HitRateGenius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FleeGenius of class  tagPetGenius_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetGenius_ToLua_unsigned_FleeGenius
static int tolua_get_tagPetGenius_ToLua_unsigned_FleeGenius(lua_State* tolua_S)
{
  tagPetGenius_ToLua* self = (tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FleeGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FleeGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FleeGenius of class  tagPetGenius_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetGenius_ToLua_unsigned_FleeGenius
static int tolua_set_tagPetGenius_ToLua_unsigned_FleeGenius(lua_State* tolua_S)
{
  tagPetGenius_ToLua* self = (tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FleeGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FleeGenius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceDefGenius of class  tagPetGenius_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetGenius_ToLua_unsigned_IceDefGenius
static int tolua_get_tagPetGenius_ToLua_unsigned_IceDefGenius(lua_State* tolua_S)
{
  tagPetGenius_ToLua* self = (tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceDefGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceDefGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceDefGenius of class  tagPetGenius_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetGenius_ToLua_unsigned_IceDefGenius
static int tolua_set_tagPetGenius_ToLua_unsigned_IceDefGenius(lua_State* tolua_S)
{
  tagPetGenius_ToLua* self = (tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceDefGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceDefGenius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseLoyalty of class  tagPetHeti_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetHeti_ToLua_UseLoyalty
static int tolua_get_tagPetHeti_ToLua_UseLoyalty(lua_State* tolua_S)
{
  tagPetHeti_ToLua* self = (tagPetHeti_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseLoyalty'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseLoyalty);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseLoyalty of class  tagPetHeti_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetHeti_ToLua_UseLoyalty
static int tolua_set_tagPetHeti_ToLua_UseLoyalty(lua_State* tolua_S)
{
  tagPetHeti_ToLua* self = (tagPetHeti_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseLoyalty'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseLoyalty = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MinLoyalty of class  tagPetHeti_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetHeti_ToLua_MinLoyalty
static int tolua_get_tagPetHeti_ToLua_MinLoyalty(lua_State* tolua_S)
{
  tagPetHeti_ToLua* self = (tagPetHeti_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinLoyalty'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MinLoyalty);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MinLoyalty of class  tagPetHeti_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetHeti_ToLua_MinLoyalty
static int tolua_set_tagPetHeti_ToLua_MinLoyalty(lua_State* tolua_S)
{
  tagPetHeti_ToLua* self = (tagPetHeti_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinLoyalty'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MinLoyalty = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MinLevel of class  tagPetHeti_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetHeti_ToLua_MinLevel
static int tolua_get_tagPetHeti_ToLua_MinLevel(lua_State* tolua_S)
{
  tagPetHeti_ToLua* self = (tagPetHeti_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MinLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MinLevel of class  tagPetHeti_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetHeti_ToLua_MinLevel
static int tolua_set_tagPetHeti_ToLua_MinLevel(lua_State* tolua_S)
{
  tagPetHeti_ToLua* self = (tagPetHeti_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MinLevel = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PetID of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_unsigned_PetID
static int tolua_get_tagPetDef_ToLua_unsigned_PetID(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PetID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PetID of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_unsigned_PetID
static int tolua_set_tagPetDef_ToLua_unsigned_PetID(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PetID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_Name
static int tolua_get_tagPetDef_ToLua_Name(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_Name
static int tolua_set_tagPetDef_ToLua_Name(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Name,tolua_tostring(tolua_S,2,0),NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IconID of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_unsigned_IconID
static int tolua_get_tagPetDef_ToLua_unsigned_IconID(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IconID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IconID of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_unsigned_IconID
static int tolua_set_tagPetDef_ToLua_unsigned_IconID(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IconID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IconID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MouldID of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_unsigned_MouldID
static int tolua_get_tagPetDef_ToLua_unsigned_MouldID(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MouldID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MouldID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MouldID of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_unsigned_MouldID
static int tolua_set_tagPetDef_ToLua_unsigned_MouldID(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MouldID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MouldID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PetDesc of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_PetDesc
static int tolua_get_tagPetDef_ToLua_PetDesc(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->PetDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PetDesc of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_PetDesc
static int tolua_set_tagPetDef_ToLua_PetDesc(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->PetDesc,tolua_tostring(tolua_S,2,0),SHORT_DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Type of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_unsigned_Type
static int tolua_get_tagPetDef_ToLua_unsigned_Type(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Type of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_unsigned_Type
static int tolua_set_tagPetDef_ToLua_unsigned_Type(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Type = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PetAttrType of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_unsigned_PetAttrType
static int tolua_get_tagPetDef_ToLua_unsigned_PetAttrType(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetAttrType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PetAttrType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PetAttrType of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_unsigned_PetAttrType
static int tolua_set_tagPetDef_ToLua_unsigned_PetAttrType(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetAttrType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PetAttrType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Breed of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_unsigned_Breed
static int tolua_get_tagPetDef_ToLua_unsigned_Breed(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Breed'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Breed);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Breed of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_unsigned_Breed
static int tolua_set_tagPetDef_ToLua_unsigned_Breed(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Breed'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Breed = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BornSkillGrid of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_unsigned_BornSkillGrid
static int tolua_get_tagPetDef_ToLua_unsigned_BornSkillGrid(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BornSkillGrid'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BornSkillGrid);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BornSkillGrid of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_unsigned_BornSkillGrid
static int tolua_set_tagPetDef_ToLua_unsigned_BornSkillGrid(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BornSkillGrid'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BornSkillGrid = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FightLevel of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_unsigned_FightLevel
static int tolua_get_tagPetDef_ToLua_unsigned_FightLevel(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FightLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FightLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FightLevel of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_unsigned_FightLevel
static int tolua_set_tagPetDef_ToLua_unsigned_FightLevel(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FightLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FightLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TiShen of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_unsigned_TiShen
static int tolua_get_tagPetDef_ToLua_unsigned_TiShen(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TiShen'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TiShen);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TiShen of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_unsigned_TiShen
static int tolua_set_tagPetDef_ToLua_unsigned_TiShen(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TiShen'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TiShen = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NormalSkill of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_unsigned_NormalSkill
static int tolua_get_tagPetDef_ToLua_unsigned_NormalSkill(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NormalSkill'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NormalSkill);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NormalSkill of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_unsigned_NormalSkill
static int tolua_set_tagPetDef_ToLua_unsigned_NormalSkill(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NormalSkill'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NormalSkill = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NativeSkill of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_NativeSkill
static int tolua_get_tagPetDef_ToLua_NativeSkill(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NativeSkill'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->NativeSkill,"tagPetNativeSkill_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NativeSkill of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_NativeSkill
static int tolua_set_tagPetDef_ToLua_NativeSkill(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NativeSkill'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagPetNativeSkill_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NativeSkill = *((tagPetNativeSkill_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Genius of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagPetDef_ToLua_Genius
static int tolua_get_GameEngineTolua_tagPetDef_ToLua_Genius(lua_State* tolua_S)
{
 int tolua_index;
  tagPetDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_GENIUS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Genius[tolua_index],"tagPetGenius_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Genius of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagPetDef_ToLua_Genius
static int tolua_set_GameEngineTolua_tagPetDef_ToLua_Genius(lua_State* tolua_S)
{
 int tolua_index;
  tagPetDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_GENIUS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Genius[tolua_index] = *((tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NormalWashGenius of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagPetDef_ToLua_NormalWashGenius
static int tolua_get_GameEngineTolua_tagPetDef_ToLua_NormalWashGenius(lua_State* tolua_S)
{
 int tolua_index;
  tagPetDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_GENIUS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->NormalWashGenius[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NormalWashGenius of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagPetDef_ToLua_NormalWashGenius
static int tolua_set_GameEngineTolua_tagPetDef_ToLua_NormalWashGenius(lua_State* tolua_S)
{
 int tolua_index;
  tagPetDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_GENIUS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->NormalWashGenius[tolua_index] = ((unsigned short)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HighWashGenius of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagPetDef_ToLua_HighWashGenius
static int tolua_get_GameEngineTolua_tagPetDef_ToLua_HighWashGenius(lua_State* tolua_S)
{
 int tolua_index;
  tagPetDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_GENIUS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->HighWashGenius[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HighWashGenius of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagPetDef_ToLua_HighWashGenius
static int tolua_set_GameEngineTolua_tagPetDef_ToLua_HighWashGenius(lua_State* tolua_S)
{
 int tolua_index;
  tagPetDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_GENIUS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->HighWashGenius[tolua_index] = ((unsigned short)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxFleeMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_MaxFleeMul
static int tolua_get_tagPetDef_ToLua_MaxFleeMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxFleeMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxFleeMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxFleeMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_MaxFleeMul
static int tolua_set_tagPetDef_ToLua_MaxFleeMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxFleeMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxFleeMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxPhsicAtkMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_MaxPhsicAtkMul
static int tolua_get_tagPetDef_ToLua_MaxPhsicAtkMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxPhsicAtkMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxPhsicAtkMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxPhsicAtkMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_MaxPhsicAtkMul
static int tolua_set_tagPetDef_ToLua_MaxPhsicAtkMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxPhsicAtkMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxPhsicAtkMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxIceAtkMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_MaxIceAtkMul
static int tolua_get_tagPetDef_ToLua_MaxIceAtkMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxIceAtkMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxIceAtkMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxIceAtkMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_MaxIceAtkMul
static int tolua_set_tagPetDef_ToLua_MaxIceAtkMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxIceAtkMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxIceAtkMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxHPMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_MaxHPMul
static int tolua_get_tagPetDef_ToLua_MaxHPMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxHPMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxHPMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxHPMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_MaxHPMul
static int tolua_set_tagPetDef_ToLua_MaxHPMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxHPMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxHPMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxPhsicDefMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_MaxPhsicDefMul
static int tolua_get_tagPetDef_ToLua_MaxPhsicDefMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxPhsicDefMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxPhsicDefMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxPhsicDefMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_MaxPhsicDefMul
static int tolua_set_tagPetDef_ToLua_MaxPhsicDefMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxPhsicDefMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxPhsicDefMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxIceDefMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_MaxIceDefMul
static int tolua_get_tagPetDef_ToLua_MaxIceDefMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxIceDefMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxIceDefMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxIceDefMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_MaxIceDefMul
static int tolua_set_tagPetDef_ToLua_MaxIceDefMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxIceDefMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxIceDefMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxHitRateMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_MaxHitRateMul
static int tolua_get_tagPetDef_ToLua_MaxHitRateMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxHitRateMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxHitRateMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxHitRateMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_MaxHitRateMul
static int tolua_set_tagPetDef_ToLua_MaxHitRateMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxHitRateMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxHitRateMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HeavyHitRate of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_unsigned_HeavyHitRate
static int tolua_get_tagPetDef_ToLua_unsigned_HeavyHitRate(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HeavyHitRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HeavyHitRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HeavyHitRate of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_unsigned_HeavyHitRate
static int tolua_set_tagPetDef_ToLua_unsigned_HeavyHitRate(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HeavyHitRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HeavyHitRate = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxHeavyHitRateMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_MaxHeavyHitRateMul
static int tolua_get_tagPetDef_ToLua_MaxHeavyHitRateMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxHeavyHitRateMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxHeavyHitRateMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxHeavyHitRateMul of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_MaxHeavyHitRateMul
static int tolua_set_tagPetDef_ToLua_MaxHeavyHitRateMul(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxHeavyHitRateMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxHeavyHitRateMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BornTrait of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_unsigned_BornTrait
static int tolua_get_tagPetDef_ToLua_unsigned_BornTrait(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BornTrait'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BornTrait);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BornTrait of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_unsigned_BornTrait
static int tolua_set_tagPetDef_ToLua_unsigned_BornTrait(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BornTrait'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BornTrait = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BabyPetID of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_unsigned_BabyPetID
static int tolua_get_tagPetDef_ToLua_unsigned_BabyPetID(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BabyPetID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BabyPetID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BabyPetID of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_unsigned_BabyPetID
static int tolua_set_tagPetDef_ToLua_unsigned_BabyPetID(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BabyPetID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BabyPetID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Heti of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_Heti
static int tolua_get_tagPetDef_ToLua_Heti(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Heti'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Heti,"tagPetHeti_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Heti of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_Heti
static int tolua_set_tagPetDef_ToLua_Heti(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Heti'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagPetHeti_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Heti = *((tagPetHeti_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TejiID of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_TejiID
static int tolua_get_tagPetDef_ToLua_TejiID(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TejiID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TejiID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TejiID of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_TejiID
static int tolua_set_tagPetDef_ToLua_TejiID(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TejiID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TejiID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Important of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_Important
static int tolua_get_tagPetDef_ToLua_Important(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Important'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Important);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Important of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_Important
static int tolua_set_tagPetDef_ToLua_Important(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Important'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Important = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FailRate of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetDef_ToLua_FailRate
static int tolua_get_tagPetDef_ToLua_FailRate(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FailRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FailRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FailRate of class  tagPetDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetDef_ToLua_FailRate
static int tolua_set_tagPetDef_ToLua_FailRate(lua_State* tolua_S)
{
  tagPetDef_ToLua* self = (tagPetDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FailRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FailRate = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TraitID of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetTraitDef_ToLua_unsigned_TraitID
static int tolua_get_tagPetTraitDef_ToLua_unsigned_TraitID(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TraitID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TraitID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TraitID of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetTraitDef_ToLua_unsigned_TraitID
static int tolua_set_tagPetTraitDef_ToLua_unsigned_TraitID(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TraitID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TraitID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TraitType of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetTraitDef_ToLua_unsigned_TraitType
static int tolua_get_tagPetTraitDef_ToLua_unsigned_TraitType(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TraitType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TraitType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TraitType of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetTraitDef_ToLua_unsigned_TraitType
static int tolua_set_tagPetTraitDef_ToLua_unsigned_TraitType(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TraitType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TraitType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetTraitDef_ToLua_Name
static int tolua_get_tagPetTraitDef_ToLua_Name(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetTraitDef_ToLua_Name
static int tolua_set_tagPetTraitDef_ToLua_Name(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Name,tolua_tostring(tolua_S,2,0),NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicAtkMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetTraitDef_ToLua_PhsicAtkMul
static int tolua_get_tagPetTraitDef_ToLua_PhsicAtkMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicAtkMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicAtkMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicAtkMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetTraitDef_ToLua_PhsicAtkMul
static int tolua_set_tagPetTraitDef_ToLua_PhsicAtkMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicAtkMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicAtkMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceAtkMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetTraitDef_ToLua_IceAtkMul
static int tolua_get_tagPetTraitDef_ToLua_IceAtkMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceAtkMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceAtkMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceAtkMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetTraitDef_ToLua_IceAtkMul
static int tolua_set_tagPetTraitDef_ToLua_IceAtkMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceAtkMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceAtkMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HPMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetTraitDef_ToLua_HPMul
static int tolua_get_tagPetTraitDef_ToLua_HPMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HPMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HPMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HPMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetTraitDef_ToLua_HPMul
static int tolua_set_tagPetTraitDef_ToLua_HPMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HPMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HPMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicDefMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetTraitDef_ToLua_PhsicDefMul
static int tolua_get_tagPetTraitDef_ToLua_PhsicDefMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicDefMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicDefMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicDefMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetTraitDef_ToLua_PhsicDefMul
static int tolua_set_tagPetTraitDef_ToLua_PhsicDefMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicDefMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicDefMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceDefMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetTraitDef_ToLua_IceDefMul
static int tolua_get_tagPetTraitDef_ToLua_IceDefMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceDefMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceDefMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceDefMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetTraitDef_ToLua_IceDefMul
static int tolua_set_tagPetTraitDef_ToLua_IceDefMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceDefMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceDefMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HitRateMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetTraitDef_ToLua_HitRateMul
static int tolua_get_tagPetTraitDef_ToLua_HitRateMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HitRateMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HitRateMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HitRateMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetTraitDef_ToLua_HitRateMul
static int tolua_set_tagPetTraitDef_ToLua_HitRateMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HitRateMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HitRateMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FleeMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetTraitDef_ToLua_FleeMul
static int tolua_get_tagPetTraitDef_ToLua_FleeMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FleeMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FleeMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FleeMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetTraitDef_ToLua_FleeMul
static int tolua_set_tagPetTraitDef_ToLua_FleeMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FleeMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FleeMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HeavyHitRateMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetTraitDef_ToLua_HeavyHitRateMul
static int tolua_get_tagPetTraitDef_ToLua_HeavyHitRateMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HeavyHitRateMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HeavyHitRateMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HeavyHitRateMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetTraitDef_ToLua_HeavyHitRateMul
static int tolua_set_tagPetTraitDef_ToLua_HeavyHitRateMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HeavyHitRateMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HeavyHitRateMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PetTraitDesc of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetTraitDef_ToLua_PetTraitDesc
static int tolua_get_tagPetTraitDef_ToLua_PetTraitDesc(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetTraitDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->PetTraitDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PetTraitDesc of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetTraitDef_ToLua_PetTraitDesc
static int tolua_set_tagPetTraitDef_ToLua_PetTraitDesc(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetTraitDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->PetTraitDesc,tolua_tostring(tolua_S,2,0),SHORT_DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TiShenMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetTraitDef_ToLua_TiShenMul
static int tolua_get_tagPetTraitDef_ToLua_TiShenMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TiShenMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TiShenMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TiShenMul of class  tagPetTraitDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetTraitDef_ToLua_TiShenMul
static int tolua_set_tagPetTraitDef_ToLua_TiShenMul(lua_State* tolua_S)
{
  tagPetTraitDef_ToLua* self = (tagPetTraitDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TiShenMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TiShenMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_Level
static int tolua_get_tagPetLevelDef_ToLua_Level(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_Level
static int tolua_set_tagPetLevelDef_ToLua_Level(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LevelUpExp of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_unsigned_LevelUpExp
static int tolua_get_tagPetLevelDef_ToLua_unsigned_LevelUpExp(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelUpExp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LevelUpExp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LevelUpExp of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_unsigned_LevelUpExp
static int tolua_set_tagPetLevelDef_ToLua_unsigned_LevelUpExp(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelUpExp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LevelUpExp = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicAtk of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_PhsicAtk
static int tolua_get_tagPetLevelDef_ToLua_PhsicAtk(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicAtk of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_PhsicAtk
static int tolua_set_tagPetLevelDef_ToLua_PhsicAtk(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicAtk = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceAtk of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_IceAtk
static int tolua_get_tagPetLevelDef_ToLua_IceAtk(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceAtk of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_IceAtk
static int tolua_set_tagPetLevelDef_ToLua_IceAtk(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceAtk = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HP of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_HP
static int tolua_get_tagPetLevelDef_ToLua_HP(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HP'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HP);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HP of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_HP
static int tolua_set_tagPetLevelDef_ToLua_HP(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HP'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HP = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicDef of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_PhsicDef
static int tolua_get_tagPetLevelDef_ToLua_PhsicDef(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicDef of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_PhsicDef
static int tolua_set_tagPetLevelDef_ToLua_PhsicDef(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicDef = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceDef of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_IceDef
static int tolua_get_tagPetLevelDef_ToLua_IceDef(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceDef of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_IceDef
static int tolua_set_tagPetLevelDef_ToLua_IceDef(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceDef = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HitRate of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_HitRate
static int tolua_get_tagPetLevelDef_ToLua_HitRate(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HitRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HitRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HitRate of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_HitRate
static int tolua_set_tagPetLevelDef_ToLua_HitRate(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HitRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HitRate = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Flee of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_Flee
static int tolua_get_tagPetLevelDef_ToLua_Flee(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Flee'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Flee);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Flee of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_Flee
static int tolua_set_tagPetLevelDef_ToLua_Flee(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Flee'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Flee = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonMiniExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_unsigned_MonMiniExpLimit
static int tolua_get_tagPetLevelDef_ToLua_unsigned_MonMiniExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonMiniExpLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonMiniExpLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonMiniExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_unsigned_MonMiniExpLimit
static int tolua_set_tagPetLevelDef_ToLua_unsigned_MonMiniExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonMiniExpLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonMiniExpLimit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonWeakExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_unsigned_MonWeakExpLimit
static int tolua_get_tagPetLevelDef_ToLua_unsigned_MonWeakExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonWeakExpLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonWeakExpLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonWeakExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_unsigned_MonWeakExpLimit
static int tolua_set_tagPetLevelDef_ToLua_unsigned_MonWeakExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonWeakExpLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonWeakExpLimit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonSoftExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_unsigned_MonSoftExpLimit
static int tolua_get_tagPetLevelDef_ToLua_unsigned_MonSoftExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonSoftExpLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonSoftExpLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonSoftExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_unsigned_MonSoftExpLimit
static int tolua_set_tagPetLevelDef_ToLua_unsigned_MonSoftExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonSoftExpLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonSoftExpLimit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonNormalExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_unsigned_MonNormalExpLimit
static int tolua_get_tagPetLevelDef_ToLua_unsigned_MonNormalExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonNormalExpLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonNormalExpLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonNormalExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_unsigned_MonNormalExpLimit
static int tolua_set_tagPetLevelDef_ToLua_unsigned_MonNormalExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonNormalExpLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonNormalExpLimit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonHardExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_unsigned_MonHardExpLimit
static int tolua_get_tagPetLevelDef_ToLua_unsigned_MonHardExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonHardExpLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonHardExpLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonHardExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_unsigned_MonHardExpLimit
static int tolua_set_tagPetLevelDef_ToLua_unsigned_MonHardExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonHardExpLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonHardExpLimit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonXiExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_unsigned_MonXiExpLimit
static int tolua_get_tagPetLevelDef_ToLua_unsigned_MonXiExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonXiExpLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonXiExpLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonXiExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_unsigned_MonXiExpLimit
static int tolua_set_tagPetLevelDef_ToLua_unsigned_MonXiExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonXiExpLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonXiExpLimit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonJinExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_unsigned_MonJinExpLimit
static int tolua_get_tagPetLevelDef_ToLua_unsigned_MonJinExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonJinExpLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonJinExpLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonJinExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_unsigned_MonJinExpLimit
static int tolua_set_tagPetLevelDef_ToLua_unsigned_MonJinExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonJinExpLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonJinExpLimit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonBossExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_unsigned_MonBossExpLimit
static int tolua_get_tagPetLevelDef_ToLua_unsigned_MonBossExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonBossExpLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonBossExpLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonBossExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_unsigned_MonBossExpLimit
static int tolua_set_tagPetLevelDef_ToLua_unsigned_MonBossExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonBossExpLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonBossExpLimit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonJiExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_unsigned_MonJiExpLimit
static int tolua_get_tagPetLevelDef_ToLua_unsigned_MonJiExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonJiExpLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonJiExpLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonJiExpLimit of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_unsigned_MonJiExpLimit
static int tolua_set_tagPetLevelDef_ToLua_unsigned_MonJiExpLimit(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonJiExpLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonJiExpLimit = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HurtMul of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_unsigned_HurtMul
static int tolua_get_tagPetLevelDef_ToLua_unsigned_HurtMul(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HurtMul of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_unsigned_HurtMul
static int tolua_set_tagPetLevelDef_ToLua_unsigned_HurtMul(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HurtMul = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddSkillGrid of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetLevelDef_ToLua_unsigned_AddSkillGrid
static int tolua_get_tagPetLevelDef_ToLua_unsigned_AddSkillGrid(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddSkillGrid'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AddSkillGrid);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddSkillGrid of class  tagPetLevelDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetLevelDef_ToLua_unsigned_AddSkillGrid
static int tolua_set_tagPetLevelDef_ToLua_unsigned_AddSkillGrid(lua_State* tolua_S)
{
  tagPetLevelDef_ToLua* self = (tagPetLevelDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddSkillGrid'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AddSkillGrid = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: name of class  tagPetGeniusNamesDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetGeniusNamesDef_ToLua_name
static int tolua_get_tagPetGeniusNamesDef_ToLua_name(lua_State* tolua_S)
{
  tagPetGeniusNamesDef_ToLua* self = (tagPetGeniusNamesDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: name of class  tagPetGeniusNamesDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetGeniusNamesDef_ToLua_name
static int tolua_set_tagPetGeniusNamesDef_ToLua_name(lua_State* tolua_S)
{
  tagPetGeniusNamesDef_ToLua* self = (tagPetGeniusNamesDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->name,tolua_tostring(tolua_S,2,0),NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetStrengthenDef_ToLua_Level
static int tolua_get_tagPetStrengthenDef_ToLua_Level(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetStrengthenDef_ToLua_Level
static int tolua_set_tagPetStrengthenDef_ToLua_Level(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoneyType of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetStrengthenDef_ToLua_MoneyType
static int tolua_get_tagPetStrengthenDef_ToLua_MoneyType(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoneyType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoneyType of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetStrengthenDef_ToLua_MoneyType
static int tolua_set_tagPetStrengthenDef_ToLua_MoneyType(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoneyType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoneyVal of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetStrengthenDef_ToLua_MoneyVal
static int tolua_get_tagPetStrengthenDef_ToLua_MoneyVal(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoneyVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoneyVal of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetStrengthenDef_ToLua_MoneyVal
static int tolua_set_tagPetStrengthenDef_ToLua_MoneyVal(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoneyVal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PetGeniusName of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagPetStrengthenDef_ToLua_PetGeniusName
static int tolua_get_GameEngineTolua_tagPetStrengthenDef_ToLua_PetGeniusName(lua_State* tolua_S)
{
 int tolua_index;
  tagPetStrengthenDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetStrengthenDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_GENIUS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->PetGeniusName[tolua_index],"tagPetGeniusNamesDef_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PetGeniusName of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagPetStrengthenDef_ToLua_PetGeniusName
static int tolua_set_GameEngineTolua_tagPetStrengthenDef_ToLua_PetGeniusName(lua_State* tolua_S)
{
 int tolua_index;
  tagPetStrengthenDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetStrengthenDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_GENIUS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->PetGeniusName[tolua_index] = *((tagPetGeniusNamesDef_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseItemID of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetStrengthenDef_ToLua_UseItemID
static int tolua_get_tagPetStrengthenDef_ToLua_UseItemID(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseItemID of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetStrengthenDef_ToLua_UseItemID
static int tolua_set_tagPetStrengthenDef_ToLua_UseItemID(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseItemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseItemNum of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetStrengthenDef_ToLua_UseItemNum
static int tolua_get_tagPetStrengthenDef_ToLua_UseItemNum(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseItemNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseItemNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseItemNum of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetStrengthenDef_ToLua_UseItemNum
static int tolua_set_tagPetStrengthenDef_ToLua_UseItemNum(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseItemNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseItemNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LevelRate of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagPetStrengthenDef_ToLua_LevelRate
static int tolua_get_GameEngineTolua_tagPetStrengthenDef_ToLua_LevelRate(lua_State* tolua_S)
{
 int tolua_index;
  tagPetStrengthenDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetStrengthenDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_STRENGTHEN_RATE_LIST)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->LevelRate[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LevelRate of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagPetStrengthenDef_ToLua_LevelRate
static int tolua_set_GameEngineTolua_tagPetStrengthenDef_ToLua_LevelRate(lua_State* tolua_S)
{
 int tolua_index;
  tagPetStrengthenDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetStrengthenDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_STRENGTHEN_RATE_LIST)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->LevelRate[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PerfectRate of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetStrengthenDef_ToLua_PerfectRate
static int tolua_get_tagPetStrengthenDef_ToLua_PerfectRate(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PerfectRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PerfectRate of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetStrengthenDef_ToLua_PerfectRate
static int tolua_set_tagPetStrengthenDef_ToLua_PerfectRate(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PerfectRate = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PerfectNum of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetStrengthenDef_ToLua_PerfectNum
static int tolua_get_tagPetStrengthenDef_ToLua_PerfectNum(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PerfectNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PerfectNum of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetStrengthenDef_ToLua_PerfectNum
static int tolua_set_tagPetStrengthenDef_ToLua_PerfectNum(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PerfectNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoveMoneyType of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetStrengthenDef_ToLua_MoveMoneyType
static int tolua_get_tagPetStrengthenDef_ToLua_MoveMoneyType(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveMoneyType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoveMoneyType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoveMoneyType of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetStrengthenDef_ToLua_MoveMoneyType
static int tolua_set_tagPetStrengthenDef_ToLua_MoveMoneyType(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveMoneyType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoveMoneyType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoveMoneyVal of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetStrengthenDef_ToLua_MoveMoneyVal
static int tolua_get_tagPetStrengthenDef_ToLua_MoveMoneyVal(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveMoneyVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoveMoneyVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoveMoneyVal of class  tagPetStrengthenDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetStrengthenDef_ToLua_MoveMoneyVal
static int tolua_set_tagPetStrengthenDef_ToLua_MoveMoneyVal(lua_State* tolua_S)
{
  tagPetStrengthenDef_ToLua* self = (tagPetStrengthenDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoveMoneyVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoveMoneyVal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicAtk of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetFightAttr_ToLua_unsigned_PhsicAtk
static int tolua_get_tagPetFightAttr_ToLua_unsigned_PhsicAtk(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicAtk of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetFightAttr_ToLua_unsigned_PhsicAtk
static int tolua_set_tagPetFightAttr_ToLua_unsigned_PhsicAtk(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicAtk = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceAtk of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetFightAttr_ToLua_unsigned_IceAtk
static int tolua_get_tagPetFightAttr_ToLua_unsigned_IceAtk(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceAtk of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetFightAttr_ToLua_unsigned_IceAtk
static int tolua_set_tagPetFightAttr_ToLua_unsigned_IceAtk(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceAtk = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicDef of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetFightAttr_ToLua_unsigned_PhsicDef
static int tolua_get_tagPetFightAttr_ToLua_unsigned_PhsicDef(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicDef of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetFightAttr_ToLua_unsigned_PhsicDef
static int tolua_set_tagPetFightAttr_ToLua_unsigned_PhsicDef(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicDef = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceDef of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetFightAttr_ToLua_unsigned_IceDef
static int tolua_get_tagPetFightAttr_ToLua_unsigned_IceDef(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceDef'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceDef);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceDef of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetFightAttr_ToLua_unsigned_IceDef
static int tolua_set_tagPetFightAttr_ToLua_unsigned_IceDef(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceDef'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceDef = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HitRate of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetFightAttr_ToLua_unsigned_HitRate
static int tolua_get_tagPetFightAttr_ToLua_unsigned_HitRate(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HitRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HitRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HitRate of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetFightAttr_ToLua_unsigned_HitRate
static int tolua_set_tagPetFightAttr_ToLua_unsigned_HitRate(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HitRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HitRate = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Flee of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetFightAttr_ToLua_unsigned_Flee
static int tolua_get_tagPetFightAttr_ToLua_unsigned_Flee(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Flee'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Flee);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Flee of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetFightAttr_ToLua_unsigned_Flee
static int tolua_set_tagPetFightAttr_ToLua_unsigned_Flee(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Flee'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Flee = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HeavyHitRate of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetFightAttr_ToLua_HeavyHitRate
static int tolua_get_tagPetFightAttr_ToLua_HeavyHitRate(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HeavyHitRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HeavyHitRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HeavyHitRate of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetFightAttr_ToLua_HeavyHitRate
static int tolua_set_tagPetFightAttr_ToLua_HeavyHitRate(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HeavyHitRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HeavyHitRate = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: YongQi of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetFightAttr_ToLua_YongQi
static int tolua_get_tagPetFightAttr_ToLua_YongQi(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'YongQi'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->YongQi);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: YongQi of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetFightAttr_ToLua_YongQi
static int tolua_set_tagPetFightAttr_ToLua_YongQi(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'YongQi'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->YongQi = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DecHurtMul of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetFightAttr_ToLua_DecHurtMul
static int tolua_get_tagPetFightAttr_ToLua_DecHurtMul(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DecHurtMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DecHurtMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DecHurtMul of class  tagPetFightAttr_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetFightAttr_ToLua_DecHurtMul
static int tolua_set_tagPetFightAttr_ToLua_DecHurtMul(lua_State* tolua_S)
{
  tagPetFightAttr_ToLua* self = (tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DecHurtMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DecHurtMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillID of class  tagPetSkillGrid_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetSkillGrid_ToLua_unsigned_SkillID
static int tolua_get_tagPetSkillGrid_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagPetSkillGrid_ToLua* self = (tagPetSkillGrid_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillID of class  tagPetSkillGrid_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetSkillGrid_ToLua_unsigned_SkillID
static int tolua_set_tagPetSkillGrid_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagPetSkillGrid_ToLua* self = (tagPetSkillGrid_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillLevel of class  tagPetSkillGrid_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetSkillGrid_ToLua_unsigned_SkillLevel
static int tolua_get_tagPetSkillGrid_ToLua_unsigned_SkillLevel(lua_State* tolua_S)
{
  tagPetSkillGrid_ToLua* self = (tagPetSkillGrid_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillLevel of class  tagPetSkillGrid_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetSkillGrid_ToLua_unsigned_SkillLevel
static int tolua_set_tagPetSkillGrid_ToLua_unsigned_SkillLevel(lua_State* tolua_S)
{
  tagPetSkillGrid_ToLua* self = (tagPetSkillGrid_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillLevel = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GridType of class  tagPetSkillGrid_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetSkillGrid_ToLua_unsigned_GridType
static int tolua_get_tagPetSkillGrid_ToLua_unsigned_GridType(lua_State* tolua_S)
{
  tagPetSkillGrid_ToLua* self = (tagPetSkillGrid_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GridType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GridType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GridType of class  tagPetSkillGrid_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetSkillGrid_ToLua_unsigned_GridType
static int tolua_set_tagPetSkillGrid_ToLua_unsigned_GridType(lua_State* tolua_S)
{
  tagPetSkillGrid_ToLua* self = (tagPetSkillGrid_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GridType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GridType = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillGridNum of class  tagPetSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetSkill_ToLua_unsigned_SkillGridNum
static int tolua_get_tagPetSkill_ToLua_unsigned_SkillGridNum(lua_State* tolua_S)
{
  tagPetSkill_ToLua* self = (tagPetSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillGridNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillGridNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillGridNum of class  tagPetSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetSkill_ToLua_unsigned_SkillGridNum
static int tolua_set_tagPetSkill_ToLua_unsigned_SkillGridNum(lua_State* tolua_S)
{
  tagPetSkill_ToLua* self = (tagPetSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillGridNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillGridNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddSkillGridNum of class  tagPetSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetSkill_ToLua_unsigned_AddSkillGridNum
static int tolua_get_tagPetSkill_ToLua_unsigned_AddSkillGridNum(lua_State* tolua_S)
{
  tagPetSkill_ToLua* self = (tagPetSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddSkillGridNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AddSkillGridNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddSkillGridNum of class  tagPetSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetSkill_ToLua_unsigned_AddSkillGridNum
static int tolua_set_tagPetSkill_ToLua_unsigned_AddSkillGridNum(lua_State* tolua_S)
{
  tagPetSkill_ToLua* self = (tagPetSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddSkillGridNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AddSkillGridNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Res of class  tagPetSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetSkill_ToLua_Res
static int tolua_get_tagPetSkill_ToLua_Res(lua_State* tolua_S)
{
  tagPetSkill_ToLua* self = (tagPetSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Res'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Res);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Res of class  tagPetSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetSkill_ToLua_Res
static int tolua_set_tagPetSkill_ToLua_Res(lua_State* tolua_S)
{
  tagPetSkill_ToLua* self = (tagPetSkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Res'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Res,tolua_tostring(tolua_S,2,0),2-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillGrid of class  tagPetSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagPetSkill_ToLua_SkillGrid
static int tolua_get_GameEngineTolua_tagPetSkill_ToLua_SkillGrid(lua_State* tolua_S)
{
 int tolua_index;
  tagPetSkill_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetSkill_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_SKILL_GRID)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->SkillGrid[tolua_index],"tagPetSkillGrid_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillGrid of class  tagPetSkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagPetSkill_ToLua_SkillGrid
static int tolua_set_GameEngineTolua_tagPetSkill_ToLua_SkillGrid(lua_State* tolua_S)
{
 int tolua_index;
  tagPetSkill_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetSkill_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_SKILL_GRID)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->SkillGrid[tolua_index] = *((tagPetSkillGrid_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: nHeight of class  tagPetId_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetId_ToLua_nHeight
static int tolua_get_tagPetId_ToLua_nHeight(lua_State* tolua_S)
{
  tagPetId_ToLua* self = (tagPetId_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'nHeight'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->nHeight);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: nHeight of class  tagPetId_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetId_ToLua_nHeight
static int tolua_set_tagPetId_ToLua_nHeight(lua_State* tolua_S)
{
  tagPetId_ToLua* self = (tagPetId_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'nHeight'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->nHeight = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: nLow of class  tagPetId_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetId_ToLua_nLow
static int tolua_get_tagPetId_ToLua_nLow(lua_State* tolua_S)
{
  tagPetId_ToLua* self = (tagPetId_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'nLow'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->nLow);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: nLow of class  tagPetId_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetId_ToLua_nLow
static int tolua_set_tagPetId_ToLua_nLow(lua_State* tolua_S)
{
  tagPetId_ToLua* self = (tagPetId_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'nLow'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->nLow = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PetID of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_PetID
static int tolua_get_tagRolePet_ToLua_unsigned_PetID(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PetID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PetID of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_PetID
static int tolua_set_tagRolePet_ToLua_unsigned_PetID(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PetID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TraitID of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_TraitID
static int tolua_get_tagRolePet_ToLua_unsigned_TraitID(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TraitID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TraitID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TraitID of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_TraitID
static int tolua_set_tagRolePet_ToLua_unsigned_TraitID(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TraitID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TraitID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_Name
static int tolua_get_tagRolePet_ToLua_Name(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_Name
static int tolua_set_tagRolePet_ToLua_Name(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Name,tolua_tostring(tolua_S,2,0),PET_NAME_LEN_CLT-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WID of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_WID
static int tolua_get_tagRolePet_ToLua_WID(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WID'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->WID,"tagPetId_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WID of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_WID
static int tolua_set_tagRolePet_ToLua_WID(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WID'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagPetId_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WID = *((tagPetId_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Exp of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_Exp
static int tolua_get_tagRolePet_ToLua_unsigned_Exp(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Exp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Exp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Exp of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_Exp
static int tolua_set_tagRolePet_ToLua_unsigned_Exp(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Exp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Exp = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxHP of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_MaxHP
static int tolua_get_tagRolePet_ToLua_unsigned_MaxHP(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxHP'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxHP);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxHP of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_MaxHP
static int tolua_set_tagRolePet_ToLua_unsigned_MaxHP(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxHP'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxHP = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HP of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_HP
static int tolua_get_tagRolePet_ToLua_unsigned_HP(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HP'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HP);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HP of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_HP
static int tolua_set_tagRolePet_ToLua_unsigned_HP(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HP'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HP = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PetDefIdx of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_PetDefIdx
static int tolua_get_tagRolePet_ToLua_PetDefIdx(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetDefIdx'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PetDefIdx);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PetDefIdx of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_PetDefIdx
static int tolua_set_tagRolePet_ToLua_PetDefIdx(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetDefIdx'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PetDefIdx = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LoveVal of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_LoveVal
static int tolua_get_tagRolePet_ToLua_unsigned_LoveVal(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LoveVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LoveVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LoveVal of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_LoveVal
static int tolua_set_tagRolePet_ToLua_unsigned_LoveVal(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LoveVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LoveVal = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_Level
static int tolua_get_tagRolePet_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_Level
static int tolua_set_tagRolePet_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PetGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_PetGenius
static int tolua_get_tagRolePet_ToLua_unsigned_PetGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PetGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PetGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_PetGenius
static int tolua_set_tagRolePet_ToLua_unsigned_PetGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PetGenius = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BreedNum of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_BreedNum
static int tolua_get_tagRolePet_ToLua_unsigned_BreedNum(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BreedNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BreedNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BreedNum of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_BreedNum
static int tolua_set_tagRolePet_ToLua_unsigned_BreedNum(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BreedNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BreedNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Hierarchy of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_Hierarchy
static int tolua_get_tagRolePet_ToLua_unsigned_Hierarchy(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Hierarchy'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Hierarchy);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Hierarchy of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_Hierarchy
static int tolua_set_tagRolePet_ToLua_unsigned_Hierarchy(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Hierarchy'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Hierarchy = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StrengthenLevel of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_StrengthenLevel
static int tolua_get_tagRolePet_ToLua_unsigned_StrengthenLevel(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StrengthenLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StrengthenLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StrengthenLevel of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_StrengthenLevel
static int tolua_set_tagRolePet_ToLua_unsigned_StrengthenLevel(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StrengthenLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StrengthenLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhsicAtkGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_PhsicAtkGenius
static int tolua_get_tagRolePet_ToLua_unsigned_PhsicAtkGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicAtkGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhsicAtkGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhsicAtkGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_PhsicAtkGenius
static int tolua_set_tagRolePet_ToLua_unsigned_PhsicAtkGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhsicAtkGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhsicAtkGenius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceAtkGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_IceAtkGenius
static int tolua_get_tagRolePet_ToLua_unsigned_IceAtkGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceAtkGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceAtkGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceAtkGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_IceAtkGenius
static int tolua_set_tagRolePet_ToLua_unsigned_IceAtkGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceAtkGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceAtkGenius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HPGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_HPGenius
static int tolua_get_tagRolePet_ToLua_unsigned_HPGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HPGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HPGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HPGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_HPGenius
static int tolua_set_tagRolePet_ToLua_unsigned_HPGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HPGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HPGenius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DefGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_DefGenius
static int tolua_get_tagRolePet_ToLua_unsigned_DefGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DefGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DefGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_DefGenius
static int tolua_set_tagRolePet_ToLua_unsigned_DefGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DefGenius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HitRateGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_HitRateGenius
static int tolua_get_tagRolePet_ToLua_unsigned_HitRateGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HitRateGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HitRateGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HitRateGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_HitRateGenius
static int tolua_set_tagRolePet_ToLua_unsigned_HitRateGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HitRateGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HitRateGenius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FleeGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_FleeGenius
static int tolua_get_tagRolePet_ToLua_unsigned_FleeGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FleeGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FleeGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FleeGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_FleeGenius
static int tolua_set_tagRolePet_ToLua_unsigned_FleeGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FleeGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FleeGenius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StrengthenInfo of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_StrengthenInfo
static int tolua_get_tagRolePet_ToLua_StrengthenInfo(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StrengthenInfo'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->StrengthenInfo);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StrengthenInfo of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_StrengthenInfo
static int tolua_set_tagRolePet_ToLua_StrengthenInfo(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StrengthenInfo'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->StrengthenInfo,tolua_tostring(tolua_S,2,0),MAX_PET_STRENGTHEN_LEVEL-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NextStrenLvl of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_NextStrenLvl
static int tolua_get_tagRolePet_ToLua_unsigned_NextStrenLvl(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextStrenLvl'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NextStrenLvl);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NextStrenLvl of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_NextStrenLvl
static int tolua_set_tagRolePet_ToLua_unsigned_NextStrenLvl(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NextStrenLvl'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NextStrenLvl = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PetSkills of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_PetSkills
static int tolua_get_tagRolePet_ToLua_PetSkills(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetSkills'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->PetSkills,"tagPetSkill_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PetSkills of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_PetSkills
static int tolua_set_tagRolePet_ToLua_PetSkills(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetSkills'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagPetSkill_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PetSkills = *((tagPetSkill_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StatFlag of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_StatFlag
static int tolua_get_tagRolePet_ToLua_unsigned_StatFlag(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StatFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StatFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StatFlag of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_StatFlag
static int tolua_set_tagRolePet_ToLua_unsigned_StatFlag(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StatFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StatFlag = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Gender of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_Gender
static int tolua_get_tagRolePet_ToLua_unsigned_Gender(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Gender'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Gender);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Gender of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_Gender
static int tolua_set_tagRolePet_ToLua_unsigned_Gender(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Gender'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Gender = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Res of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_Res
static int tolua_get_tagRolePet_ToLua_Res(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Res'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Res);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Res of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_Res
static int tolua_set_tagRolePet_ToLua_Res(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Res'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Res = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FightAttr of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_FightAttr
static int tolua_get_tagRolePet_ToLua_FightAttr(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FightAttr'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->FightAttr,"tagPetFightAttr_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FightAttr of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_FightAttr
static int tolua_set_tagRolePet_ToLua_FightAttr(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FightAttr'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagPetFightAttr_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FightAttr = *((tagPetFightAttr_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HeavyHitRateMul of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_HeavyHitRateMul
static int tolua_get_tagRolePet_ToLua_HeavyHitRateMul(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HeavyHitRateMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HeavyHitRateMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HeavyHitRateMul of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_HeavyHitRateMul
static int tolua_set_tagRolePet_ToLua_HeavyHitRateMul(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HeavyHitRateMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HeavyHitRateMul = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Passive of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_Passive
static int tolua_get_tagRolePet_ToLua_Passive(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Passive'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Passive);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Passive of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_Passive
static int tolua_set_tagRolePet_ToLua_Passive(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Passive'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Passive = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NativeSkill of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_NativeSkill
static int tolua_get_tagRolePet_ToLua_NativeSkill(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NativeSkill'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->NativeSkill,"tagPetSkillGrid_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NativeSkill of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_NativeSkill
static int tolua_set_tagRolePet_ToLua_NativeSkill(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NativeSkill'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagPetSkillGrid_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NativeSkill = *((tagPetSkillGrid_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IceDefGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_IceDefGenius
static int tolua_get_tagRolePet_ToLua_unsigned_IceDefGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceDefGenius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IceDefGenius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IceDefGenius of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_IceDefGenius
static int tolua_set_tagRolePet_ToLua_unsigned_IceDefGenius(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IceDefGenius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IceDefGenius = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MiscFlag of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_MiscFlag
static int tolua_get_tagRolePet_ToLua_MiscFlag(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MiscFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MiscFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MiscFlag of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_MiscFlag
static int tolua_set_tagRolePet_ToLua_MiscFlag(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MiscFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MiscFlag = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LockNum of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_LockNum
static int tolua_get_tagRolePet_ToLua_unsigned_LockNum(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LockNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LockNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LockNum of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_LockNum
static int tolua_set_tagRolePet_ToLua_unsigned_LockNum(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LockNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LockNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LockIdxs of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_LockIdxs
static int tolua_get_tagRolePet_ToLua_LockIdxs(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LockIdxs'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->LockIdxs);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LockIdxs of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_LockIdxs
static int tolua_set_tagRolePet_ToLua_LockIdxs(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LockIdxs'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->LockIdxs,tolua_tostring(tolua_S,2,0),MAX_LOCK_SKILL_GRID-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StrengthenCount of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_StrengthenCount
static int tolua_get_tagRolePet_ToLua_StrengthenCount(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StrengthenCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StrengthenCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StrengthenCount of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_StrengthenCount
static int tolua_set_tagRolePet_ToLua_StrengthenCount(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StrengthenCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StrengthenCount = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LoveLevel of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_LoveLevel
static int tolua_get_tagRolePet_ToLua_unsigned_LoveLevel(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LoveLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LoveLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LoveLevel of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_LoveLevel
static int tolua_set_tagRolePet_ToLua_unsigned_LoveLevel(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LoveLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LoveLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Imp of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_unsigned_Imp
static int tolua_get_tagRolePet_ToLua_unsigned_Imp(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Imp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Imp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Imp of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_unsigned_Imp
static int tolua_set_tagRolePet_ToLua_unsigned_Imp(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Imp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Imp = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WenBao of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_WenBao
static int tolua_get_tagRolePet_ToLua_WenBao(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WenBao'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WenBao);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WenBao of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_WenBao
static int tolua_set_tagRolePet_ToLua_WenBao(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WenBao'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WenBao = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ImpExp of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRolePet_ToLua_ImpExp
static int tolua_get_tagRolePet_ToLua_ImpExp(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ImpExp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ImpExp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ImpExp of class  tagRolePet_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRolePet_ToLua_ImpExp
static int tolua_set_tagRolePet_ToLua_ImpExp(lua_State* tolua_S)
{
  tagRolePet_ToLua* self = (tagRolePet_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ImpExp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ImpExp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillGrid of class  tagPetSkillGridDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetSkillGridDef_ToLua_SkillGrid
static int tolua_get_tagPetSkillGridDef_ToLua_SkillGrid(lua_State* tolua_S)
{
  tagPetSkillGridDef_ToLua* self = (tagPetSkillGridDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillGrid'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillGrid);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillGrid of class  tagPetSkillGridDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetSkillGridDef_ToLua_SkillGrid
static int tolua_set_tagPetSkillGridDef_ToLua_SkillGrid(lua_State* tolua_S)
{
  tagPetSkillGridDef_ToLua* self = (tagPetSkillGridDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillGrid'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillGrid = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Money of class  tagPetSkillGridDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetSkillGridDef_ToLua_Money
static int tolua_get_tagPetSkillGridDef_ToLua_Money(lua_State* tolua_S)
{
  tagPetSkillGridDef_ToLua* self = (tagPetSkillGridDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Money'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Money);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Money of class  tagPetSkillGridDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetSkillGridDef_ToLua_Money
static int tolua_set_tagPetSkillGridDef_ToLua_Money(lua_State* tolua_S)
{
  tagPetSkillGridDef_ToLua* self = (tagPetSkillGridDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Money'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Money = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GridRate of class  tagPetSkillGridDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagPetSkillGridDef_ToLua_GridRate
static int tolua_get_GameEngineTolua_tagPetSkillGridDef_ToLua_GridRate(lua_State* tolua_S)
{
 int tolua_index;
  tagPetSkillGridDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetSkillGridDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_SKILL_GRID)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->GridRate[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GridRate of class  tagPetSkillGridDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagPetSkillGridDef_ToLua_GridRate
static int tolua_set_GameEngineTolua_tagPetSkillGridDef_ToLua_GridRate(lua_State* tolua_S)
{
 int tolua_index;
  tagPetSkillGridDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetSkillGridDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_SKILL_GRID)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->GridRate[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TransferRate of class  tagPetSkillGridDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetSkillGridDef_ToLua_TransferRate
static int tolua_get_tagPetSkillGridDef_ToLua_TransferRate(lua_State* tolua_S)
{
  tagPetSkillGridDef_ToLua* self = (tagPetSkillGridDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TransferRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TransferRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TransferRate of class  tagPetSkillGridDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetSkillGridDef_ToLua_TransferRate
static int tolua_set_tagPetSkillGridDef_ToLua_TransferRate(lua_State* tolua_S)
{
  tagPetSkillGridDef_ToLua* self = (tagPetSkillGridDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TransferRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TransferRate = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MemID of class  tagCSPetFuseInviteInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCSPetFuseInviteInfo_ToLua_unsigned_MemID
static int tolua_get_tagCSPetFuseInviteInfo_ToLua_unsigned_MemID(lua_State* tolua_S)
{
  tagCSPetFuseInviteInfo_ToLua* self = (tagCSPetFuseInviteInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MemID of class  tagCSPetFuseInviteInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCSPetFuseInviteInfo_ToLua_unsigned_MemID
static int tolua_set_tagCSPetFuseInviteInfo_ToLua_unsigned_MemID(lua_State* tolua_S)
{
  tagCSPetFuseInviteInfo_ToLua* self = (tagCSPetFuseInviteInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MemID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RoleName of class  tagCSPetFuseInviteInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCSPetFuseInviteInfo_ToLua_RoleName
static int tolua_get_tagCSPetFuseInviteInfo_ToLua_RoleName(lua_State* tolua_S)
{
  tagCSPetFuseInviteInfo_ToLua* self = (tagCSPetFuseInviteInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RoleName'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->RoleName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RoleName of class  tagCSPetFuseInviteInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCSPetFuseInviteInfo_ToLua_RoleName
static int tolua_set_tagCSPetFuseInviteInfo_ToLua_RoleName(lua_State* tolua_S)
{
  tagCSPetFuseInviteInfo_ToLua* self = (tagCSPetFuseInviteInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RoleName'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->RoleName,tolua_tostring(tolua_S,2,0),NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Pet of class  tagCSPetFuseInviteInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCSPetFuseInviteInfo_ToLua_Pet
static int tolua_get_tagCSPetFuseInviteInfo_ToLua_Pet(lua_State* tolua_S)
{
  tagCSPetFuseInviteInfo_ToLua* self = (tagCSPetFuseInviteInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pet'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Pet,"tagRolePet_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Pet of class  tagCSPetFuseInviteInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCSPetFuseInviteInfo_ToLua_Pet
static int tolua_set_tagCSPetFuseInviteInfo_ToLua_Pet(lua_State* tolua_S)
{
  tagCSPetFuseInviteInfo_ToLua* self = (tagCSPetFuseInviteInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pet'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagRolePet_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Pet = *((tagRolePet_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RoleName of class  tagCSPetFuseUI_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCSPetFuseUI_ToLua_RoleName
static int tolua_get_tagCSPetFuseUI_ToLua_RoleName(lua_State* tolua_S)
{
  tagCSPetFuseUI_ToLua* self = (tagCSPetFuseUI_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RoleName'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->RoleName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RoleName of class  tagCSPetFuseUI_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCSPetFuseUI_ToLua_RoleName
static int tolua_set_tagCSPetFuseUI_ToLua_RoleName(lua_State* tolua_S)
{
  tagCSPetFuseUI_ToLua* self = (tagCSPetFuseUI_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RoleName'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->RoleName,tolua_tostring(tolua_S,2,0),NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Pet of class  tagCSPetFuseUI_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCSPetFuseUI_ToLua_Pet
static int tolua_get_tagCSPetFuseUI_ToLua_Pet(lua_State* tolua_S)
{
  tagCSPetFuseUI_ToLua* self = (tagCSPetFuseUI_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pet'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Pet,"tagRolePet_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Pet of class  tagCSPetFuseUI_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCSPetFuseUI_ToLua_Pet
static int tolua_set_tagCSPetFuseUI_ToLua_Pet(lua_State* tolua_S)
{
  tagCSPetFuseUI_ToLua* self = (tagCSPetFuseUI_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pet'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagRolePet_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Pet = *((tagRolePet_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MemID of class  tagCSPetFuseBaby_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCSPetFuseBaby_ToLua_unsigned_MemID
static int tolua_get_tagCSPetFuseBaby_ToLua_unsigned_MemID(lua_State* tolua_S)
{
  tagCSPetFuseBaby_ToLua* self = (tagCSPetFuseBaby_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MemID of class  tagCSPetFuseBaby_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCSPetFuseBaby_ToLua_unsigned_MemID
static int tolua_set_tagCSPetFuseBaby_ToLua_unsigned_MemID(lua_State* tolua_S)
{
  tagCSPetFuseBaby_ToLua* self = (tagCSPetFuseBaby_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MemID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Pet of class  tagCSPetFuseBaby_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCSPetFuseBaby_ToLua_Pet
static int tolua_get_tagCSPetFuseBaby_ToLua_Pet(lua_State* tolua_S)
{
  tagCSPetFuseBaby_ToLua* self = (tagCSPetFuseBaby_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pet'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Pet,"tagRolePet_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Pet of class  tagCSPetFuseBaby_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCSPetFuseBaby_ToLua_Pet
static int tolua_set_tagCSPetFuseBaby_ToLua_Pet(lua_State* tolua_S)
{
  tagCSPetFuseBaby_ToLua* self = (tagCSPetFuseBaby_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pet'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagRolePet_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Pet = *((tagRolePet_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: OtherMemID of class  tagCSPetFuseBaby_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCSPetFuseBaby_ToLua_unsigned_OtherMemID
static int tolua_get_tagCSPetFuseBaby_ToLua_unsigned_OtherMemID(lua_State* tolua_S)
{
  tagCSPetFuseBaby_ToLua* self = (tagCSPetFuseBaby_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OtherMemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->OtherMemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: OtherMemID of class  tagCSPetFuseBaby_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCSPetFuseBaby_ToLua_unsigned_OtherMemID
static int tolua_set_tagCSPetFuseBaby_ToLua_unsigned_OtherMemID(lua_State* tolua_S)
{
  tagCSPetFuseBaby_ToLua* self = (tagCSPetFuseBaby_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OtherMemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->OtherMemID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: OtherPet of class  tagCSPetFuseBaby_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCSPetFuseBaby_ToLua_OtherPet
static int tolua_get_tagCSPetFuseBaby_ToLua_OtherPet(lua_State* tolua_S)
{
  tagCSPetFuseBaby_ToLua* self = (tagCSPetFuseBaby_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OtherPet'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->OtherPet,"tagRolePet_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: OtherPet of class  tagCSPetFuseBaby_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCSPetFuseBaby_ToLua_OtherPet
static int tolua_set_tagCSPetFuseBaby_ToLua_OtherPet(lua_State* tolua_S)
{
  tagCSPetFuseBaby_ToLua* self = (tagCSPetFuseBaby_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OtherPet'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagRolePet_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->OtherPet = *((tagRolePet_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PinZhi of class  tagPetGeniusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetGeniusDef_ToLua_PinZhi
static int tolua_get_tagPetGeniusDef_ToLua_PinZhi(lua_State* tolua_S)
{
  tagPetGeniusDef_ToLua* self = (tagPetGeniusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PinZhi'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PinZhi);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PinZhi of class  tagPetGeniusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetGeniusDef_ToLua_PinZhi
static int tolua_set_tagPetGeniusDef_ToLua_PinZhi(lua_State* tolua_S)
{
  tagPetGeniusDef_ToLua* self = (tagPetGeniusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PinZhi'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PinZhi = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: EatMoneyType of class  tagPetGeniusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetGeniusDef_ToLua_EatMoneyType
static int tolua_get_tagPetGeniusDef_ToLua_EatMoneyType(lua_State* tolua_S)
{
  tagPetGeniusDef_ToLua* self = (tagPetGeniusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EatMoneyType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->EatMoneyType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: EatMoneyType of class  tagPetGeniusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetGeniusDef_ToLua_EatMoneyType
static int tolua_set_tagPetGeniusDef_ToLua_EatMoneyType(lua_State* tolua_S)
{
  tagPetGeniusDef_ToLua* self = (tagPetGeniusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EatMoneyType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->EatMoneyType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: EatMoneyVal of class  tagPetGeniusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetGeniusDef_ToLua_EatMoneyVal
static int tolua_get_tagPetGeniusDef_ToLua_EatMoneyVal(lua_State* tolua_S)
{
  tagPetGeniusDef_ToLua* self = (tagPetGeniusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EatMoneyVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->EatMoneyVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: EatMoneyVal of class  tagPetGeniusDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetGeniusDef_ToLua_EatMoneyVal
static int tolua_set_tagPetGeniusDef_ToLua_EatMoneyVal(lua_State* tolua_S)
{
  tagPetGeniusDef_ToLua* self = (tagPetGeniusDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EatMoneyVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->EatMoneyVal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Imp of class  tagPetMoneyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetMoneyDef_ToLua_Imp
static int tolua_get_tagPetMoneyDef_ToLua_Imp(lua_State* tolua_S)
{
  tagPetMoneyDef_ToLua* self = (tagPetMoneyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Imp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Imp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Imp of class  tagPetMoneyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetMoneyDef_ToLua_Imp
static int tolua_set_tagPetMoneyDef_ToLua_Imp(lua_State* tolua_S)
{
  tagPetMoneyDef_ToLua* self = (tagPetMoneyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Imp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Imp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Money of class  tagPetMoneyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagPetMoneyDef_ToLua_Money
static int tolua_get_GameEngineTolua_tagPetMoneyDef_ToLua_Money(lua_State* tolua_S)
{
 int tolua_index;
  tagPetMoneyDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetMoneyDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_GENIUS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->Money[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Money of class  tagPetMoneyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagPetMoneyDef_ToLua_Money
static int tolua_set_GameEngineTolua_tagPetMoneyDef_ToLua_Money(lua_State* tolua_S)
{
 int tolua_index;
  tagPetMoneyDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetMoneyDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_GENIUS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Money[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Count of class  tagPetMoneyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetMoneyDef_ToLua_Count
static int tolua_get_tagPetMoneyDef_ToLua_Count(lua_State* tolua_S)
{
  tagPetMoneyDef_ToLua* self = (tagPetMoneyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Count'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Count);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Count of class  tagPetMoneyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetMoneyDef_ToLua_Count
static int tolua_set_tagPetMoneyDef_ToLua_Count(lua_State* tolua_S)
{
  tagPetMoneyDef_ToLua* self = (tagPetMoneyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Count'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Count = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Imp of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetImpUpDef_ToLua_Imp
static int tolua_get_tagPetImpUpDef_ToLua_Imp(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Imp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Imp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Imp of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetImpUpDef_ToLua_Imp
static int tolua_set_tagPetImpUpDef_ToLua_Imp(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Imp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Imp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ExpUp of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetImpUpDef_ToLua_ExpUp
static int tolua_get_tagPetImpUpDef_ToLua_ExpUp(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExpUp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ExpUp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ExpUp of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetImpUpDef_ToLua_ExpUp
static int tolua_set_tagPetImpUpDef_ToLua_ExpUp(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ExpUp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ExpUp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseExp of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetImpUpDef_ToLua_UseExp
static int tolua_get_tagPetImpUpDef_ToLua_UseExp(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseExp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseExp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseExp of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetImpUpDef_ToLua_UseExp
static int tolua_set_tagPetImpUpDef_ToLua_UseExp(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseExp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseExp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TouDecExp of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetImpUpDef_ToLua_TouDecExp
static int tolua_get_tagPetImpUpDef_ToLua_TouDecExp(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TouDecExp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TouDecExp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TouDecExp of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetImpUpDef_ToLua_TouDecExp
static int tolua_set_tagPetImpUpDef_ToLua_TouDecExp(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TouDecExp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TouDecExp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AddExp of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetImpUpDef_ToLua_AddExp
static int tolua_get_tagPetImpUpDef_ToLua_AddExp(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddExp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AddExp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AddExp of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetImpUpDef_ToLua_AddExp
static int tolua_set_tagPetImpUpDef_ToLua_AddExp(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AddExp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AddExp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseMoney of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetImpUpDef_ToLua_UseMoney
static int tolua_get_tagPetImpUpDef_ToLua_UseMoney(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseMoney'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseMoney);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseMoney of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetImpUpDef_ToLua_UseMoney
static int tolua_set_tagPetImpUpDef_ToLua_UseMoney(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseMoney'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseMoney = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseContri of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetImpUpDef_ToLua_UseContri
static int tolua_get_tagPetImpUpDef_ToLua_UseContri(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseContri'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseContri);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseContri of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetImpUpDef_ToLua_UseContri
static int tolua_set_tagPetImpUpDef_ToLua_UseContri(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseContri'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseContri = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UpUseMoney of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetImpUpDef_ToLua_UpUseMoney
static int tolua_get_tagPetImpUpDef_ToLua_UpUseMoney(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UpUseMoney'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UpUseMoney);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UpUseMoney of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetImpUpDef_ToLua_UpUseMoney
static int tolua_set_tagPetImpUpDef_ToLua_UpUseMoney(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UpUseMoney'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UpUseMoney = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UpUseItem of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetImpUpDef_ToLua_UpUseItem
static int tolua_get_tagPetImpUpDef_ToLua_UpUseItem(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UpUseItem'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UpUseItem);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UpUseItem of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetImpUpDef_ToLua_UpUseItem
static int tolua_set_tagPetImpUpDef_ToLua_UpUseItem(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UpUseItem'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UpUseItem = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UpUseItemNum of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetImpUpDef_ToLua_UpUseItemNum
static int tolua_get_tagPetImpUpDef_ToLua_UpUseItemNum(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UpUseItemNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UpUseItemNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UpUseItemNum of class  tagPetImpUpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetImpUpDef_ToLua_UpUseItemNum
static int tolua_set_tagPetImpUpDef_ToLua_UpUseItemNum(lua_State* tolua_S)
{
  tagPetImpUpDef_ToLua* self = (tagPetImpUpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UpUseItemNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UpUseItemNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Imp of class  tagPetImpUpAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetImpUpAttrDef_ToLua_Imp
static int tolua_get_tagPetImpUpAttrDef_ToLua_Imp(lua_State* tolua_S)
{
  tagPetImpUpAttrDef_ToLua* self = (tagPetImpUpAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Imp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Imp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Imp of class  tagPetImpUpAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetImpUpAttrDef_ToLua_Imp
static int tolua_set_tagPetImpUpAttrDef_ToLua_Imp(lua_State* tolua_S)
{
  tagPetImpUpAttrDef_ToLua* self = (tagPetImpUpAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Imp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Imp = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Type of class  tagPetImpUpAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagPetImpUpAttrDef_ToLua_Type
static int tolua_get_tagPetImpUpAttrDef_ToLua_Type(lua_State* tolua_S)
{
  tagPetImpUpAttrDef_ToLua* self = (tagPetImpUpAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Type of class  tagPetImpUpAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagPetImpUpAttrDef_ToLua_Type
static int tolua_set_tagPetImpUpAttrDef_ToLua_Type(lua_State* tolua_S)
{
  tagPetImpUpAttrDef_ToLua* self = (tagPetImpUpAttrDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Type = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Genius of class  tagPetImpUpAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagPetImpUpAttrDef_ToLua_Genius
static int tolua_get_GameEngineTolua_tagPetImpUpAttrDef_ToLua_Genius(lua_State* tolua_S)
{
 int tolua_index;
  tagPetImpUpAttrDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetImpUpAttrDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_GENIUS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Genius[tolua_index],"tagPetGenius_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Genius of class  tagPetImpUpAttrDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagPetImpUpAttrDef_ToLua_Genius
static int tolua_set_GameEngineTolua_tagPetImpUpAttrDef_ToLua_Genius(lua_State* tolua_S)
{
 int tolua_index;
  tagPetImpUpAttrDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagPetImpUpAttrDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_PET_GENIUS)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Genius[tolua_index] = *((tagPetGenius_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: getPetSkillGridDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getPetSkillGridDef00
static int tolua_GameEngineTolua_getPetSkillGridDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nGridIndex = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   tagPetSkillGridDef_ToLua* tolua_ret = (tagPetSkillGridDef_ToLua*)  getPetSkillGridDef(nGridIndex);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagPetSkillGridDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetSkillGridDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getPetDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getPetDef00
static int tolua_GameEngineTolua_getPetDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   tagPetDef_ToLua* tolua_ret = (tagPetDef_ToLua*)  getPetDef(nId);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagPetDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getPetGeniusDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getPetGeniusDef00
static int tolua_GameEngineTolua_getPetGeniusDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nGenius = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagPetGeniusDef_ToLua* tolua_ret = (const tagPetGeniusDef_ToLua*)  getPetGeniusDef(nGenius);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagPetGeniusDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetGeniusDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getPetStrengthenDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getPetStrengthenDef00
static int tolua_GameEngineTolua_getPetStrengthenDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nLv = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagPetStrengthenDef_ToLua* tolua_ret = (const tagPetStrengthenDef_ToLua*)  getPetStrengthenDef(nLv);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagPetStrengthenDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetStrengthenDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: isMaxStrengthenLevel */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_isMaxStrengthenLevel00
static int tolua_GameEngineTolua_isMaxStrengthenLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nLv = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  isMaxStrengthenLevel(nLv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isMaxStrengthenLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getPetStrengthenCost */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getPetStrengthenCost00
static int tolua_GameEngineTolua_getPetStrengthenCost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nLv = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  getPetStrengthenCost(nLv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetStrengthenCost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getPetLevelDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getPetLevelDef00
static int tolua_GameEngineTolua_getPetLevelDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nLv = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagPetLevelDef_ToLua* tolua_ret = (const tagPetLevelDef_ToLua*)  getPetLevelDef(nLv);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagPetLevelDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetLevelDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getPetTraitDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getPetTraitDef00
static int tolua_GameEngineTolua_getPetTraitDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nTraidId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagPetTraitDef_ToLua* tolua_ret = (const tagPetTraitDef_ToLua*)  getPetTraitDef(nTraidId);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagPetTraitDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetTraitDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getPetMoneyDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getPetMoneyDef00
static int tolua_GameEngineTolua_getPetMoneyDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nImp = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagPetMoneyDef_ToLua* tolua_ret = (const tagPetMoneyDef_ToLua*)  getPetMoneyDef(nImp);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagPetMoneyDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetMoneyDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getPetImpUpDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getPetImpUpDef00
static int tolua_GameEngineTolua_getPetImpUpDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nImp = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const tagPetImpUpDef_ToLua* tolua_ret = (const tagPetImpUpDef_ToLua*)  getPetImpUpDef(nImp);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagPetImpUpDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetImpUpDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: getPetImpUpAttrDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getPetImpUpAttrDef00
static int tolua_GameEngineTolua_getPetImpUpAttrDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nImp = ((int)  tolua_tonumber(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   const tagPetImpUpAttrDef_ToLua* tolua_ret = (const tagPetImpUpAttrDef_ToLua*)  getPetImpUpAttrDef(nImp,nType);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagPetImpUpAttrDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetImpUpAttrDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Attack of class  PetGrowValue */
#ifndef TOLUA_DISABLE_tolua_get_PetGrowValue_Attack
static int tolua_get_PetGrowValue_Attack(lua_State* tolua_S)
{
  PetGrowValue* self = (PetGrowValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Attack'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Attack);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Attack of class  PetGrowValue */
#ifndef TOLUA_DISABLE_tolua_set_PetGrowValue_Attack
static int tolua_set_PetGrowValue_Attack(lua_State* tolua_S)
{
  PetGrowValue* self = (PetGrowValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Attack'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Attack = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HP of class  PetGrowValue */
#ifndef TOLUA_DISABLE_tolua_get_PetGrowValue_HP
static int tolua_get_PetGrowValue_HP(lua_State* tolua_S)
{
  PetGrowValue* self = (PetGrowValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HP'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HP);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HP of class  PetGrowValue */
#ifndef TOLUA_DISABLE_tolua_set_PetGrowValue_HP
static int tolua_set_PetGrowValue_HP(lua_State* tolua_S)
{
  PetGrowValue* self = (PetGrowValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HP'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HP = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Defend of class  PetGrowValue */
#ifndef TOLUA_DISABLE_tolua_get_PetGrowValue_Defend
static int tolua_get_PetGrowValue_Defend(lua_State* tolua_S)
{
  PetGrowValue* self = (PetGrowValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Defend'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Defend);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Defend of class  PetGrowValue */
#ifndef TOLUA_DISABLE_tolua_set_PetGrowValue_Defend
static int tolua_set_PetGrowValue_Defend(lua_State* tolua_S)
{
  PetGrowValue* self = (PetGrowValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Defend'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Defend = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Resist of class  PetGrowValue */
#ifndef TOLUA_DISABLE_tolua_get_PetGrowValue_Resist
static int tolua_get_PetGrowValue_Resist(lua_State* tolua_S)
{
  PetGrowValue* self = (PetGrowValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Resist'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Resist);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Resist of class  PetGrowValue */
#ifndef TOLUA_DISABLE_tolua_set_PetGrowValue_Resist
static int tolua_set_PetGrowValue_Resist(lua_State* tolua_S)
{
  PetGrowValue* self = (PetGrowValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Resist'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Resist = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Exact of class  PetGrowValue */
#ifndef TOLUA_DISABLE_tolua_get_PetGrowValue_Exact
static int tolua_get_PetGrowValue_Exact(lua_State* tolua_S)
{
  PetGrowValue* self = (PetGrowValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Exact'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Exact);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Exact of class  PetGrowValue */
#ifndef TOLUA_DISABLE_tolua_set_PetGrowValue_Exact
static int tolua_set_PetGrowValue_Exact(lua_State* tolua_S)
{
  PetGrowValue* self = (PetGrowValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Exact'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Exact = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Dodge of class  PetGrowValue */
#ifndef TOLUA_DISABLE_tolua_get_PetGrowValue_Dodge
static int tolua_get_PetGrowValue_Dodge(lua_State* tolua_S)
{
  PetGrowValue* self = (PetGrowValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Dodge'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Dodge);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Dodge of class  PetGrowValue */
#ifndef TOLUA_DISABLE_tolua_set_PetGrowValue_Dodge
static int tolua_set_PetGrowValue_Dodge(lua_State* tolua_S)
{
  PetGrowValue* self = (PetGrowValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Dodge'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Dodge = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Min of class  PetGrowRange */
#ifndef TOLUA_DISABLE_tolua_get_PetGrowRange_Min
static int tolua_get_PetGrowRange_Min(lua_State* tolua_S)
{
  PetGrowRange* self = (PetGrowRange*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Min'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Min,"PetGrowValue");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Min of class  PetGrowRange */
#ifndef TOLUA_DISABLE_tolua_set_PetGrowRange_Min
static int tolua_set_PetGrowRange_Min(lua_State* tolua_S)
{
  PetGrowRange* self = (PetGrowRange*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Min'",NULL);
  if (!tolua_isusertype(tolua_S,2,"PetGrowValue",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Min = *((PetGrowValue*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Max of class  PetGrowRange */
#ifndef TOLUA_DISABLE_tolua_get_PetGrowRange_Max
static int tolua_get_PetGrowRange_Max(lua_State* tolua_S)
{
  PetGrowRange* self = (PetGrowRange*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Max'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Max,"PetGrowValue");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Max of class  PetGrowRange */
#ifndef TOLUA_DISABLE_tolua_set_PetGrowRange_Max
static int tolua_set_PetGrowRange_Max(lua_State* tolua_S)
{
  PetGrowRange* self = (PetGrowRange*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Max'",NULL);
  if (!tolua_isusertype(tolua_S,2,"PetGrowValue",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Max = *((PetGrowValue*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: petPre of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petPre00
static int tolua_GameEngineTolua_GamePet_petPre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petPre'",NULL);
#endif
  {
   self->petPre(nHightId,nLowId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petPre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petBackUp of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petBackUp00
static int tolua_GameEngineTolua_GamePet_petBackUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petBackUp'",NULL);
#endif
  {
   self->petBackUp(nHightId,nLowId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petBackUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petFreedom of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petFreedom00
static int tolua_GameEngineTolua_GamePet_petFreedom00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petFreedom'",NULL);
#endif
  {
   self->petFreedom(nHightId,nLowId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petFreedom'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petFreedom of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petFreedom01
static int tolua_GameEngineTolua_GamePet_petFreedom01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tdr_ulonglong petWID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petFreedom'",NULL);
#endif
  {
   self->petFreedom(petWID);
  }
 }
 return 0;
tolua_lerror:
 return tolua_GameEngineTolua_GamePet_petFreedom00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPetFightMode of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_setPetFightMode00
static int tolua_GameEngineTolua_GamePet_setPetFightMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nMode = ((int)  tolua_tonumber(tolua_S,2,0));
  int nHightId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPetFightMode'",NULL);
#endif
  {
   self->setPetFightMode(nMode,nHightId,nLowId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPetFightMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petSkillLearn of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petSkillLearn00
static int tolua_GameEngineTolua_GamePet_petSkillLearn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nGridIdx = ((int)  tolua_tonumber(tolua_S,4,0));
  Item* item = ((Item*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petSkillLearn'",NULL);
#endif
  {
   self->petSkillLearn(nHightId,nLowId,nGridIdx,*item);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petSkillLearn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petSkillLevelUp of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petSkillLevelUp00
static int tolua_GameEngineTolua_GamePet_petSkillLevelUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nSkillId = ((int)  tolua_tonumber(tolua_S,4,0));
  int nSkillLv = ((int)  tolua_tonumber(tolua_S,5,0));
  int nGridIdx = ((int)  tolua_tonumber(tolua_S,6,0));
  Item* item = ((Item*)  tolua_tousertype(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petSkillLevelUp'",NULL);
#endif
  {
   self->petSkillLevelUp(nHightId,nLowId,nSkillId,nSkillLv,nGridIdx,*item);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petSkillLevelUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petWashSkillGrid of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petWashSkillGrid00
static int tolua_GameEngineTolua_GamePet_petWashSkillGrid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  Item* item = ((Item*)  tolua_tousertype(tolua_S,4,0));
  int nGridIdx = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petWashSkillGrid'",NULL);
#endif
  {
   self->petWashSkillGrid(nHightId,nLowId,*item,nGridIdx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petWashSkillGrid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPetStrthenItem of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_isPetStrthenItem00
static int tolua_GameEngineTolua_GamePet_isPetStrthenItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nItemID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPetStrthenItem'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPetStrthenItem(nItemID);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPetStrthenItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petStrengthen of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petStrengthen00
static int tolua_GameEngineTolua_GamePet_petStrengthen00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Item",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  Item* stuffItem = ((Item*)  tolua_tousertype(tolua_S,4,0));
  Item* safeItem = ((Item*)  tolua_tousertype(tolua_S,5,0));
  int num = ((int)  tolua_tonumber(tolua_S,6,0));
  int nStrthenLevel = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petStrengthen'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->petStrengthen(nHightId,nLowId,*stuffItem,safeItem,num,nStrthenLevel);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petStrengthen'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petResetStrengthen of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petResetStrengthen00
static int tolua_GameEngineTolua_GamePet_petResetStrengthen00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nStrthenLevel = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petResetStrengthen'",NULL);
#endif
  {
   self->petResetStrengthen(nHightId,nLowId,nStrthenLevel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petResetStrengthen'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petSaveStrengthen of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petSaveStrengthen00
static int tolua_GameEngineTolua_GamePet_petSaveStrengthen00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nVal = ((int)  tolua_tonumber(tolua_S,4,0));
  int nStrthenLevel = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petSaveStrengthen'",NULL);
#endif
  {
   self->petSaveStrengthen(nHightId,nLowId,nVal,nStrthenLevel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petSaveStrengthen'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petWatch of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petWatch00
static int tolua_GameEngineTolua_GamePet_petWatch00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nMemId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petWatch'",NULL);
#endif
  {
   self->petWatch(nMemId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petWatch'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canChangePetName of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_canChangePetName00
static int tolua_GameEngineTolua_GamePet_canChangePetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canChangePetName'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canChangePetName(nHightId,nLowId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canChangePetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petChangeName of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petChangeName00
static int tolua_GameEngineTolua_GamePet_petChangeName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* szName = ((const char*)  tolua_tostring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petChangeName'",NULL);
#endif
  {
   self->petChangeName(nHightId,nLowId,szName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petChangeName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPetActor of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_setPetActor00
static int tolua_GameEngineTolua_GamePet_setPetActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nXieDaiPos = ((int)  tolua_tonumber(tolua_S,2,0));
  GameActor* pActor = ((GameActor*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPetActor'",NULL);
#endif
  {
   self->setPetActor(nXieDaiPos,pActor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPetActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetActor of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetActor00
static int tolua_GameEngineTolua_GamePet_getPetActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nXieDaiPos = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetActor'",NULL);
#endif
  {
   GameActor* tolua_ret = (GameActor*)  self->getPetActor(nXieDaiPos);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetActor of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetActor01
static int tolua_GameEngineTolua_GamePet_getPetActor01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tdr_ulonglong WID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetActor'",NULL);
#endif
  {
   GameActor* tolua_ret = (GameActor*)  self->getPetActor(WID);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameActor");
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GamePet_getPetActor00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: callBackAllPets of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_callBackAllPets00
static int tolua_GameEngineTolua_GamePet_callBackAllPets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'callBackAllPets'",NULL);
#endif
  {
   self->callBackAllPets();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'callBackAllPets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addPetSkillGrid of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_addPetSkillGrid00
static int tolua_GameEngineTolua_GamePet_addPetSkillGrid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHeightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addPetSkillGrid'",NULL);
#endif
  {
   self->addPetSkillGrid(nHeightId,nLowId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addPetSkillGrid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addFreedomPet of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_addFreedomPet00
static int tolua_GameEngineTolua_GamePet_addFreedomPet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHeightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addFreedomPet'",NULL);
#endif
  {
   self->addFreedomPet(nHeightId,nLowId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addFreedomPet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPetInFreedom of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_isPetInFreedom00
static int tolua_GameEngineTolua_GamePet_isPetInFreedom00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHeightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPetInFreedom'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPetInFreedom(nHeightId,nLowId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPetInFreedom'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStrthenVal of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getStrthenVal00
static int tolua_GameEngineTolua_GamePet_getStrthenVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tagRolePet_ToLua",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tagRolePet_ToLua* pOnePetInfo = ((tagRolePet_ToLua*)  tolua_tousertype(tolua_S,2,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStrthenVal'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getStrthenVal(pOnePetInfo,nIndex);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStrthenVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LockPetSkill of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_LockPetSkill00
static int tolua_GameEngineTolua_GamePet_LockPetSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int high = ((int)  tolua_tonumber(tolua_S,2,0));
  int low = ((int)  tolua_tonumber(tolua_S,3,0));
  int idx = ((int)  tolua_tonumber(tolua_S,4,0));
  bool usecoin = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LockPetSkill'",NULL);
#endif
  {
   self->LockPetSkill(high,low,idx,usecoin);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LockPetSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnLockPetSkill of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_UnLockPetSkill00
static int tolua_GameEngineTolua_GamePet_UnLockPetSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int high = ((int)  tolua_tonumber(tolua_S,2,0));
  int low = ((int)  tolua_tonumber(tolua_S,3,0));
  int idx = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UnLockPetSkill'",NULL);
#endif
  {
   self->UnLockPetSkill(high,low,idx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UnLockPetSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetPetSkill of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_ResetPetSkill00
static int tolua_GameEngineTolua_GamePet_ResetPetSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int high = ((int)  tolua_tonumber(tolua_S,2,0));
  int low = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetPetSkill'",NULL);
#endif
  {
   self->ResetPetSkill(high,low);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetPetSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LevelUpPetSkill of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_LevelUpPetSkill00
static int tolua_GameEngineTolua_GamePet_LevelUpPetSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int high = ((int)  tolua_tonumber(tolua_S,2,0));
  int low = ((int)  tolua_tonumber(tolua_S,3,0));
  int idx = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LevelUpPetSkill'",NULL);
#endif
  {
   self->LevelUpPetSkill(high,low,idx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LevelUpPetSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetPetGrow of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_ResetPetGrow00
static int tolua_GameEngineTolua_GamePet_ResetPetGrow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int high = ((int)  tolua_tonumber(tolua_S,2,0));
  int low = ((int)  tolua_tonumber(tolua_S,3,0));
  int lock = ((int)  tolua_tonumber(tolua_S,4,0));
  bool usecoin = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetPetGrow'",NULL);
#endif
  {
   self->ResetPetGrow(high,low,lock,usecoin);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetPetGrow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetPetGrow of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_ResetPetGrow01
static int tolua_GameEngineTolua_GamePet_ResetPetGrow01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int high = ((int)  tolua_tonumber(tolua_S,2,0));
  int low = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetPetGrow'",NULL);
#endif
  {
   self->ResetPetGrow(high,low);
  }
 }
 return 0;
tolua_lerror:
 return tolua_GameEngineTolua_GamePet_ResetPetGrow00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetPetGrowSave of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_ResetPetGrowSave00
static int tolua_GameEngineTolua_GamePet_ResetPetGrowSave00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int high = ((int)  tolua_tonumber(tolua_S,2,0));
  int low = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetPetGrowSave'",NULL);
#endif
  {
   self->ResetPetGrowSave(high,low);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetPetGrowSave'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petFreeHeti of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petFreeHeti00
static int tolua_GameEngineTolua_GamePet_petFreeHeti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int high = ((int)  tolua_tonumber(tolua_S,2,0));
  int low = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petFreeHeti'",NULL);
#endif
  {
   self->petFreeHeti(high,low);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petFreeHeti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loveLevelUp of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_loveLevelUp00
static int tolua_GameEngineTolua_GamePet_loveLevelUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int high = ((int)  tolua_tonumber(tolua_S,2,0));
  int low = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loveLevelUp'",NULL);
#endif
  {
   self->loveLevelUp(high,low);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loveLevelUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetNum of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetNum00
static int tolua_GameEngineTolua_GamePet_getPetNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetMaxNum of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetMaxNum00
static int tolua_GameEngineTolua_GamePet_getPetMaxNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetMaxNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetMaxNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetMaxNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBattlePetNum of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getBattlePetNum00
static int tolua_GameEngineTolua_GamePet_getBattlePetNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBattlePetNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getBattlePetNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBattlePetNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isExtraBattlePet of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_isExtraBattlePet00
static int tolua_GameEngineTolua_GamePet_isExtraBattlePet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tagRolePet_ToLua",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tagRolePet_ToLua* info = ((tagRolePet_ToLua*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isExtraBattlePet'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isExtraBattlePet(info);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isExtraBattlePet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isExtraClanJiYangPet of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_isExtraClanJiYangPet00
static int tolua_GameEngineTolua_GamePet_isExtraClanJiYangPet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tagRolePet_ToLua",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tagRolePet_ToLua* info = ((tagRolePet_ToLua*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isExtraClanJiYangPet'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isExtraClanJiYangPet(info);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isExtraClanJiYangPet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petStartStepUp of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petStartStepUp00
static int tolua_GameEngineTolua_GamePet_petStartStepUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHighID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowID = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petStartStepUp'",NULL);
#endif
  {
   self->petStartStepUp(nHighID,nLowID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petStartStepUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petStartImpUp of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petStartImpUp00
static int tolua_GameEngineTolua_GamePet_petStartImpUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHighID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowID = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petStartImpUp'",NULL);
#endif
  {
   self->petStartImpUp(nHighID,nLowID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petStartImpUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petGiftBookUse of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petGiftBookUse00
static int tolua_GameEngineTolua_GamePet_petGiftBookUse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nGrid = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petGiftBookUse'",NULL);
#endif
  {
   self->petGiftBookUse(nGrid);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petGiftBookUse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: petStartUnBind of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_petStartUnBind00
static int tolua_GameEngineTolua_GamePet_petStartUnBind00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHighID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowID = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'petStartUnBind'",NULL);
#endif
  {
   self->petStartUnBind(nHighID,nLowID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'petStartUnBind'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updatePetIndexDelPet of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_updatePetIndexDelPet00
static int tolua_GameEngineTolua_GamePet_updatePetIndexDelPet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tdr_ulonglong delPetWid = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updatePetIndexDelPet'",NULL);
#endif
  {
   self->updatePetIndexDelPet(delPetWid);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updatePetIndexDelPet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetInfo of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetInfo00
static int tolua_GameEngineTolua_GamePet_getPetInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetInfo'",NULL);
#endif
  {
   tagRolePet_ToLua* tolua_ret = (tagRolePet_ToLua*)  self->getPetInfo(nIndex);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagRolePet_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetInfo of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetInfo01
static int tolua_GameEngineTolua_GamePet_getPetInfo01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tdr_ulonglong WID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetInfo'",NULL);
#endif
  {
   tagRolePet_ToLua* tolua_ret = (tagRolePet_ToLua*)  self->getPetInfo(WID);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagRolePet_ToLua");
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GamePet_getPetInfo00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetInfo of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetInfo02
static int tolua_GameEngineTolua_GamePet_getPetInfo02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHeightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetInfo'",NULL);
#endif
  {
   tagRolePet_ToLua* tolua_ret = (tagRolePet_ToLua*)  self->getPetInfo(nHeightId,nLowId);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagRolePet_ToLua");
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GamePet_getPetInfo01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetInfo of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetInfo03
static int tolua_GameEngineTolua_GamePet_getPetInfo03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pActor = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetInfo'",NULL);
#endif
  {
   tagRolePet_ToLua* tolua_ret = (tagRolePet_ToLua*)  self->getPetInfo(pActor);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagRolePet_ToLua");
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GamePet_getPetInfo02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetIndex of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetIndex00
static int tolua_GameEngineTolua_GamePet_getPetIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tagRolePet_ToLua",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tagRolePet_ToLua* pPetInfo = ((tagRolePet_ToLua*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetIndex'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetIndex(pPetInfo);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWatchPetInfo of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getWatchPetInfo00
static int tolua_GameEngineTolua_GamePet_getWatchPetInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWatchPetInfo'",NULL);
#endif
  {
   tagRolePet_ToLua* tolua_ret = (tagRolePet_ToLua*)  self->getWatchPetInfo();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagRolePet_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWatchPetInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetDef of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetDef00
static int tolua_GameEngineTolua_GamePet_getPetDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetDef'",NULL);
#endif
  {
   tagPetDef_ToLua* tolua_ret = (tagPetDef_ToLua*)  self->getPetDef(nId);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagPetDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPetInState of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_isPetInState00
static int tolua_GameEngineTolua_GamePet_isPetInState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int nState = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPetInState'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPetInState(nIndex,nState);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPetInState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPetInState of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_isPetInState01
static int tolua_GameEngineTolua_GamePet_isPetInState01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHeightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nState = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPetInState'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPetInState(nHeightId,nLowId,nState);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GamePet_isPetInState00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPetInState of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_isPetInState02
static int tolua_GameEngineTolua_GamePet_isPetInState02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tagPetId_ToLua",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tagPetId_ToLua* WID = ((tagPetId_ToLua*)  tolua_tousertype(tolua_S,2,0));
  int nState = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPetInState'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPetInState(*WID,nState);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GamePet_isPetInState01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPetInState of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_isPetInState03
static int tolua_GameEngineTolua_GamePet_isPetInState03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tdr_ulonglong WID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
  int nState = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPetInState'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPetInState(WID,nState);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GamePet_isPetInState02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPetResetSkillLockUseCoin of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_isPetResetSkillLockUseCoin00
static int tolua_GameEngineTolua_GamePet_isPetResetSkillLockUseCoin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tagRolePet_ToLua",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tagRolePet_ToLua* info = ((tagRolePet_ToLua*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPetResetSkillLockUseCoin'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPetResetSkillLockUseCoin(info);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPetResetSkillLockUseCoin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetResetSkillLockNum of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetResetSkillLockNum00
static int tolua_GameEngineTolua_GamePet_getPetResetSkillLockNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tagRolePet_ToLua",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tagRolePet_ToLua* info = ((tagRolePet_ToLua*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetResetSkillLockNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetResetSkillLockNum(info);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetResetSkillLockNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetResetSkillLockIdx of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetResetSkillLockIdx00
static int tolua_GameEngineTolua_GamePet_getPetResetSkillLockIdx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tagRolePet_ToLua",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tagRolePet_ToLua* info = ((tagRolePet_ToLua*)  tolua_tousertype(tolua_S,2,0));
  int idx = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetResetSkillLockIdx'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetResetSkillLockIdx(info,idx);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetResetSkillLockIdx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetResetSkillCostMoney of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetResetSkillCostMoney00
static int tolua_GameEngineTolua_GamePet_getPetResetSkillCostMoney00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetResetSkillCostMoney'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetResetSkillCostMoney();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetResetSkillCostMoney'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetResetSkillCostMoney of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetResetSkillCostMoney01
static int tolua_GameEngineTolua_GamePet_getPetResetSkillCostMoney01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int num = ((int)  tolua_tonumber(tolua_S,2,0));
  bool usecoin = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetResetSkillCostMoney'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetResetSkillCostMoney(num,usecoin);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GamePet_getPetResetSkillCostMoney00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPetSkillCanLevelUp of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_isPetSkillCanLevelUp00
static int tolua_GameEngineTolua_GamePet_isPetSkillCanLevelUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPetSkillCanLevelUp'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPetSkillCanLevelUp(id,level);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPetSkillCanLevelUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetSkillLevelUpCostItemCount of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetSkillLevelUpCostItemCount00
static int tolua_GameEngineTolua_GamePet_getPetSkillLevelUpCostItemCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetSkillLevelUpCostItemCount'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetSkillLevelUpCostItemCount(id,level);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetSkillLevelUpCostItemCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetGrowResetCostMoney of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetGrowResetCostMoney00
static int tolua_GameEngineTolua_GamePet_getPetGrowResetCostMoney00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int high = ((int)  tolua_tonumber(tolua_S,2,0));
  int low = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetGrowResetCostMoney'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetGrowResetCostMoney(high,low);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetGrowResetCostMoney'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetGrowResetCostMoney of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetGrowResetCostMoney01
static int tolua_GameEngineTolua_GamePet_getPetGrowResetCostMoney01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int high = ((int)  tolua_tonumber(tolua_S,2,0));
  int low = ((int)  tolua_tonumber(tolua_S,3,0));
  int locknum = ((int)  tolua_tonumber(tolua_S,4,0));
  bool usecoin = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetGrowResetCostMoney'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetGrowResetCostMoney(high,low,locknum,usecoin);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GamePet_getPetGrowResetCostMoney00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetGrowValue of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetGrowValue00
static int tolua_GameEngineTolua_GamePet_getPetGrowValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tagRolePet_ToLua",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tagRolePet_ToLua* info = ((tagRolePet_ToLua*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetGrowValue'",NULL);
#endif
  {
   PetGrowValue tolua_ret = (PetGrowValue)  self->getPetGrowValue(info);
   {
#ifdef __cplusplus
    void* tolua_obj = new PetGrowValue(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"PetGrowValue");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(PetGrowValue));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"PetGrowValue");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetGrowValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetGrowValue of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetGrowValue01
static int tolua_GameEngineTolua_GamePet_getPetGrowValue01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int high = ((int)  tolua_tonumber(tolua_S,2,0));
  int low = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetGrowValue'",NULL);
#endif
  {
   PetGrowValue tolua_ret = (PetGrowValue)  self->getPetGrowValue(high,low);
   {
#ifdef __cplusplus
    void* tolua_obj = new PetGrowValue(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"PetGrowValue");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(PetGrowValue));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"PetGrowValue");
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GamePet_getPetGrowValue00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetGrowResetRange of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetGrowResetRange00
static int tolua_GameEngineTolua_GamePet_getPetGrowResetRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int nImp = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetGrowResetRange'",NULL);
#endif
  {
   PetGrowRange tolua_ret = (PetGrowRange)  self->getPetGrowResetRange(id,nImp);
   {
#ifdef __cplusplus
    void* tolua_obj = new PetGrowRange(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"PetGrowRange");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(PetGrowRange));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"PetGrowRange");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetGrowResetRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetGrowResetRange of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetGrowResetRange01
static int tolua_GameEngineTolua_GamePet_getPetGrowResetRange01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tagRolePet_ToLua",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tagRolePet_ToLua* info = ((tagRolePet_ToLua*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetGrowResetRange'",NULL);
#endif
  {
   PetGrowRange tolua_ret = (PetGrowRange)  self->getPetGrowResetRange(info);
   {
#ifdef __cplusplus
    void* tolua_obj = new PetGrowRange(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"PetGrowRange");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(PetGrowRange));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"PetGrowRange");
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GamePet_getPetGrowResetRange00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetBlinkMinRange of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetBlinkMinRange00
static int tolua_GameEngineTolua_GamePet_getPetBlinkMinRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nGrade = ((int)  tolua_tonumber(tolua_S,2,0));
  int nPetID = ((int)  tolua_tonumber(tolua_S,3,0));
  int nImp = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetBlinkMinRange'",NULL);
#endif
  {
   PetGrowRange tolua_ret = (PetGrowRange)  self->getPetBlinkMinRange(nGrade,nPetID,nImp);
   {
#ifdef __cplusplus
    void* tolua_obj = new PetGrowRange(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"PetGrowRange");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(PetGrowRange));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"PetGrowRange");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetBlinkMinRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetGrowResetLimit of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetGrowResetLimit00
static int tolua_GameEngineTolua_GamePet_getPetGrowResetLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int nImp = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetGrowResetLimit'",NULL);
#endif
  {
   PetGrowRange tolua_ret = (PetGrowRange)  self->getPetGrowResetLimit(id,nImp);
   {
#ifdef __cplusplus
    void* tolua_obj = new PetGrowRange(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"PetGrowRange");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(PetGrowRange));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"PetGrowRange");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetGrowResetLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetGrowResetLimit of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetGrowResetLimit01
static int tolua_GameEngineTolua_GamePet_getPetGrowResetLimit01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tagRolePet_ToLua",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  tagRolePet_ToLua* info = ((tagRolePet_ToLua*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetGrowResetLimit'",NULL);
#endif
  {
   PetGrowRange tolua_ret = (PetGrowRange)  self->getPetGrowResetLimit(info);
   {
#ifdef __cplusplus
    void* tolua_obj = new PetGrowRange(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"PetGrowRange");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(PetGrowRange));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"PetGrowRange");
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GamePet_getPetGrowResetLimit00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPetFull of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_isPetFull00
static int tolua_GameEngineTolua_GamePet_isPetFull00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPetFull'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPetFull();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPetFull'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canCampaignPet of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_canCampaignPet00
static int tolua_GameEngineTolua_GamePet_canCampaignPet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canCampaignPet'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canCampaignPet(nHightId,nLowId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canCampaignPet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPre of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_isPre00
static int tolua_GameEngineTolua_GamePet_isPre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPre'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPre();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetHeti of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetHeti00
static int tolua_GameEngineTolua_GamePet_getPetHeti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetHeti'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPetHeti();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetHeti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFightPet of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getFightPet00
static int tolua_GameEngineTolua_GamePet_getFightPet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFightPet'",NULL);
#endif
  {
   GameActor* tolua_ret = (GameActor*)  self->getFightPet(nIndex);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFightPet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPetHetiEntity of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_setPetHetiEntity00
static int tolua_GameEngineTolua_GamePet_setPetHetiEntity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pOwner = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
  int nPetGenius = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPetHetiEntity'",NULL);
#endif
  {
   self->setPetHetiEntity(pOwner,nPetGenius);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPetHetiEntity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBattlePetEntity of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_setBattlePetEntity00
static int tolua_GameEngineTolua_GamePet_setBattlePetEntity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pOwner = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
  int nPetGenius = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBattlePetEntity'",NULL);
#endif
  {
   self->setBattlePetEntity(pOwner,nPetGenius);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBattlePetEntity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPetStrenthenItem of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_isPetStrenthenItem00
static int tolua_GameEngineTolua_GamePet_isPetStrenthenItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nStrengthenLvel = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemID = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  GamePet::isPetStrenthenItem(nStrengthenLvel,nItemID);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPetStrenthenItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: inviteFuse of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_inviteFuse00
static int tolua_GameEngineTolua_GamePet_inviteFuse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nDestPetMemID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inviteFuse'",NULL);
#endif
  {
   self->inviteFuse(nDestPetMemID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'inviteFuse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: acceptFuseInvite of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_acceptFuseInvite00
static int tolua_GameEngineTolua_GamePet_acceptFuseInvite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nDestPlayerMemID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'acceptFuseInvite'",NULL);
#endif
  {
   self->acceptFuseInvite(nDestPlayerMemID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'acceptFuseInvite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rejectFuse of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_rejectFuse00
static int tolua_GameEngineTolua_GamePet_rejectFuse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nDestPlayerMemID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rejectFuse'",NULL);
#endif
  {
   self->rejectFuse(nDestPlayerMemID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rejectFuse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cancelFuse of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_cancelFuse00
static int tolua_GameEngineTolua_GamePet_cancelFuse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nDestPlayerMemID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cancelFuse'",NULL);
#endif
  {
   self->cancelFuse(nDestPlayerMemID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cancelFuse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: agreeFuse of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_agreeFuse00
static int tolua_GameEngineTolua_GamePet_agreeFuse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nDestPlayerMemID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'agreeFuse'",NULL);
#endif
  {
   self->agreeFuse(nDestPlayerMemID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'agreeFuse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startEatPet of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_startEatPet00
static int tolua_GameEngineTolua_GamePet_startEatPet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nSrcHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nSrcLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nDesHightId = ((int)  tolua_tonumber(tolua_S,4,0));
  int nDesLowId = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startEatPet'",NULL);
#endif
  {
   self->startEatPet(nSrcHightId,nSrcLowId,nDesHightId,nDesLowId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startEatPet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startMoveStar of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_startMoveStar00
static int tolua_GameEngineTolua_GamePet_startMoveStar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
  int nSrcHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nSrcLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nDesHightId = ((int)  tolua_tonumber(tolua_S,4,0));
  int nDesLowId = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startMoveStar'",NULL);
#endif
  {
   self->startMoveStar(nSrcHightId,nSrcLowId,nDesHightId,nDesLowId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startMoveStar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetFuseInviteInfo of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getPetFuseInviteInfo00
static int tolua_GameEngineTolua_GamePet_getPetFuseInviteInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetFuseInviteInfo'",NULL);
#endif
  {
   const tagCSPetFuseInviteInfo_ToLua& tolua_ret = (const tagCSPetFuseInviteInfo_ToLua&)  self->getPetFuseInviteInfo();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagCSPetFuseInviteInfo_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetFuseInviteInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRongHePlayerInfo of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getRongHePlayerInfo00
static int tolua_GameEngineTolua_GamePet_getRongHePlayerInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRongHePlayerInfo'",NULL);
#endif
  {
   const tagCSPetFuseUI_ToLua& tolua_ret = (const tagCSPetFuseUI_ToLua&)  self->getRongHePlayerInfo();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagCSPetFuseUI_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRongHePlayerInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSelfRongHePetWID of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getSelfRongHePetWID00
static int tolua_GameEngineTolua_GamePet_getSelfRongHePetWID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSelfRongHePetWID'",NULL);
#endif
  {
   tagPetId_ToLua& tolua_ret = (tagPetId_ToLua&)  self->getSelfRongHePetWID();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"tagPetId_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSelfRongHePetWID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clearSelfRongHePetInfo of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_clearSelfRongHePetInfo00
static int tolua_GameEngineTolua_GamePet_clearSelfRongHePetInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clearSelfRongHePetInfo'",NULL);
#endif
  {
   self->clearSelfRongHePetInfo();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearSelfRongHePetInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSuccessFuseInfo of class  GamePet */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GamePet_getSuccessFuseInfo00
static int tolua_GameEngineTolua_GamePet_getSuccessFuseInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GamePet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GamePet* self = (GamePet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSuccessFuseInfo'",NULL);
#endif
  {
   tagCSPetFuseBaby_ToLua& tolua_ret = (tagCSPetFuseBaby_ToLua&)  self->getSuccessFuseInfo();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"tagCSPetFuseBaby_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSuccessFuseInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagConvoyTask_new00
static int tolua_GameEngineTolua_tagConvoyTask_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagConvoyTask",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagConvoyTask* tolua_ret = (tagConvoyTask*)  new tagConvoyTask();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagConvoyTask");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_tagConvoyTask_new00_local
static int tolua_GameEngineTolua_tagConvoyTask_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"tagConvoyTask",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   tagConvoyTask* tolua_ret = (tagConvoyTask*)  new tagConvoyTask();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"tagConvoyTask");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bHaveConvoy of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_get_tagConvoyTask_m_bHaveConvoy
static int tolua_get_tagConvoyTask_m_bHaveConvoy(lua_State* tolua_S)
{
  tagConvoyTask* self = (tagConvoyTask*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bHaveConvoy'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_bHaveConvoy);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bHaveConvoy of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_set_tagConvoyTask_m_bHaveConvoy
static int tolua_set_tagConvoyTask_m_bHaveConvoy(lua_State* tolua_S)
{
  tagConvoyTask* self = (tagConvoyTask*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bHaveConvoy'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bHaveConvoy = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMonsterID of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_get_tagConvoyTask_m_nMonsterID
static int tolua_get_tagConvoyTask_m_nMonsterID(lua_State* tolua_S)
{
  tagConvoyTask* self = (tagConvoyTask*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMonsterID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMonsterID of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_set_tagConvoyTask_m_nMonsterID
static int tolua_set_tagConvoyTask_m_nMonsterID(lua_State* tolua_S)
{
  tagConvoyTask* self = (tagConvoyTask*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMonsterID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMonsterResID of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_get_tagConvoyTask_m_nMonsterResID
static int tolua_get_tagConvoyTask_m_nMonsterResID(lua_State* tolua_S)
{
  tagConvoyTask* self = (tagConvoyTask*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterResID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMonsterResID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMonsterResID of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_set_tagConvoyTask_m_nMonsterResID
static int tolua_set_tagConvoyTask_m_nMonsterResID(lua_State* tolua_S)
{
  tagConvoyTask* self = (tagConvoyTask*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterResID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMonsterResID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMonsterMapId of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_get_tagConvoyTask_m_nMonsterMapId
static int tolua_get_tagConvoyTask_m_nMonsterMapId(lua_State* tolua_S)
{
  tagConvoyTask* self = (tagConvoyTask*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterMapId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMonsterMapId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMonsterMapId of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_set_tagConvoyTask_m_nMonsterMapId
static int tolua_set_tagConvoyTask_m_nMonsterMapId(lua_State* tolua_S)
{
  tagConvoyTask* self = (tagConvoyTask*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterMapId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMonsterMapId = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMonsterPosX of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_get_tagConvoyTask_m_nMonsterPosX
static int tolua_get_tagConvoyTask_m_nMonsterPosX(lua_State* tolua_S)
{
  tagConvoyTask* self = (tagConvoyTask*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterPosX'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMonsterPosX);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMonsterPosX of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_set_tagConvoyTask_m_nMonsterPosX
static int tolua_set_tagConvoyTask_m_nMonsterPosX(lua_State* tolua_S)
{
  tagConvoyTask* self = (tagConvoyTask*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterPosX'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMonsterPosX = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMosnterPoxY of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_get_tagConvoyTask_m_nMosnterPoxY
static int tolua_get_tagConvoyTask_m_nMosnterPoxY(lua_State* tolua_S)
{
  tagConvoyTask* self = (tagConvoyTask*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMosnterPoxY'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMosnterPoxY);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMosnterPoxY of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_set_tagConvoyTask_m_nMosnterPoxY
static int tolua_set_tagConvoyTask_m_nMosnterPoxY(lua_State* tolua_S)
{
  tagConvoyTask* self = (tagConvoyTask*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMosnterPoxY'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMosnterPoxY = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nQuestId of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_get_tagConvoyTask_m_nQuestId
static int tolua_get_tagConvoyTask_m_nQuestId(lua_State* tolua_S)
{
  tagConvoyTask* self = (tagConvoyTask*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nQuestId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nQuestId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nQuestId of class  tagConvoyTask */
#ifndef TOLUA_DISABLE_tolua_set_tagConvoyTask_m_nQuestId
static int tolua_set_tagConvoyTask_m_nQuestId(lua_State* tolua_S)
{
  tagConvoyTask* self = (tagConvoyTask*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nQuestId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nQuestId = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoneyType of class  tagReviveMoney_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveMoney_ToLua_MoneyType
static int tolua_get_tagReviveMoney_ToLua_MoneyType(lua_State* tolua_S)
{
  tagReviveMoney_ToLua* self = (tagReviveMoney_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoneyType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoneyType of class  tagReviveMoney_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveMoney_ToLua_MoneyType
static int tolua_set_tagReviveMoney_ToLua_MoneyType(lua_State* tolua_S)
{
  tagReviveMoney_ToLua* self = (tagReviveMoney_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoneyType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MoneyVal of class  tagReviveMoney_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveMoney_ToLua_MoneyVal
static int tolua_get_tagReviveMoney_ToLua_MoneyVal(lua_State* tolua_S)
{
  tagReviveMoney_ToLua* self = (tagReviveMoney_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MoneyVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MoneyVal of class  tagReviveMoney_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveMoney_ToLua_MoneyVal
static int tolua_set_tagReviveMoney_ToLua_MoneyVal(lua_State* tolua_S)
{
  tagReviveMoney_ToLua* self = (tagReviveMoney_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MoneyVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MoneyVal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_Level
static int tolua_get_tagReviveDef_ToLua_Level(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_Level
static int tolua_set_tagReviveDef_ToLua_Level(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StandRevive of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_StandRevive
static int tolua_get_tagReviveDef_ToLua_StandRevive(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StandRevive'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->StandRevive,"tagReviveMoney_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StandRevive of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_StandRevive
static int tolua_set_tagReviveDef_ToLua_StandRevive(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StandRevive'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagReviveMoney_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StandRevive = *((tagReviveMoney_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PerfectRevive of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_PerfectRevive
static int tolua_get_tagReviveDef_ToLua_PerfectRevive(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectRevive'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->PerfectRevive,"tagReviveMoney_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PerfectRevive of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_PerfectRevive
static int tolua_set_tagReviveDef_ToLua_PerfectRevive(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectRevive'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagReviveMoney_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PerfectRevive = *((tagReviveMoney_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ReviveTimes of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_ReviveTimes
static int tolua_get_tagReviveDef_ToLua_ReviveTimes(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ReviveTimes'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ReviveTimes);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ReviveTimes of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_ReviveTimes
static int tolua_set_tagReviveDef_ToLua_ReviveTimes(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ReviveTimes'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ReviveTimes = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PerfectReviveTimes of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_PerfectReviveTimes
static int tolua_get_tagReviveDef_ToLua_PerfectReviveTimes(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectReviveTimes'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PerfectReviveTimes);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PerfectReviveTimes of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_PerfectReviveTimes
static int tolua_set_tagReviveDef_ToLua_PerfectReviveTimes(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectReviveTimes'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PerfectReviveTimes = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IncreaseVal of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_IncreaseVal
static int tolua_get_tagReviveDef_ToLua_IncreaseVal(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IncreaseVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IncreaseVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IncreaseVal of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_IncreaseVal
static int tolua_set_tagReviveDef_ToLua_IncreaseVal(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IncreaseVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IncreaseVal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HPMPRate of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_HPMPRate
static int tolua_get_tagReviveDef_ToLua_HPMPRate(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HPMPRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HPMPRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HPMPRate of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_HPMPRate
static int tolua_set_tagReviveDef_ToLua_HPMPRate(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HPMPRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HPMPRate = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StandIncreaseVal of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_StandIncreaseVal
static int tolua_get_tagReviveDef_ToLua_StandIncreaseVal(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StandIncreaseVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StandIncreaseVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StandIncreaseVal of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_StandIncreaseVal
static int tolua_set_tagReviveDef_ToLua_StandIncreaseVal(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StandIncreaseVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StandIncreaseVal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StandIncreaseVal2 of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_StandIncreaseVal2
static int tolua_get_tagReviveDef_ToLua_StandIncreaseVal2(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StandIncreaseVal2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StandIncreaseVal2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StandIncreaseVal2 of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_StandIncreaseVal2
static int tolua_set_tagReviveDef_ToLua_StandIncreaseVal2(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StandIncreaseVal2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StandIncreaseVal2 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StandIncreaseNum of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_StandIncreaseNum
static int tolua_get_tagReviveDef_ToLua_StandIncreaseNum(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StandIncreaseNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StandIncreaseNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StandIncreaseNum of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_StandIncreaseNum
static int tolua_set_tagReviveDef_ToLua_StandIncreaseNum(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StandIncreaseNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StandIncreaseNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PerfectIncreaseVal2 of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_PerfectIncreaseVal2
static int tolua_get_tagReviveDef_ToLua_PerfectIncreaseVal2(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectIncreaseVal2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PerfectIncreaseVal2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PerfectIncreaseVal2 of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_PerfectIncreaseVal2
static int tolua_set_tagReviveDef_ToLua_PerfectIncreaseVal2(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectIncreaseVal2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PerfectIncreaseVal2 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PerfectIncreaseNum of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_PerfectIncreaseNum
static int tolua_get_tagReviveDef_ToLua_PerfectIncreaseNum(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectIncreaseNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PerfectIncreaseNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PerfectIncreaseNum of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_PerfectIncreaseNum
static int tolua_set_tagReviveDef_ToLua_PerfectIncreaseNum(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectIncreaseNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PerfectIncreaseNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DayReviveTimes of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_DayReviveTimes
static int tolua_get_tagReviveDef_ToLua_DayReviveTimes(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DayReviveTimes'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DayReviveTimes);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DayReviveTimes of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_DayReviveTimes
static int tolua_set_tagReviveDef_ToLua_DayReviveTimes(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DayReviveTimes'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DayReviveTimes = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DayPerfectReviveTimes of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_DayPerfectReviveTimes
static int tolua_get_tagReviveDef_ToLua_DayPerfectReviveTimes(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DayPerfectReviveTimes'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DayPerfectReviveTimes);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DayPerfectReviveTimes of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_DayPerfectReviveTimes
static int tolua_set_tagReviveDef_ToLua_DayPerfectReviveTimes(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DayPerfectReviveTimes'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DayPerfectReviveTimes = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PerfectFixedNum of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_PerfectFixedNum
static int tolua_get_tagReviveDef_ToLua_PerfectFixedNum(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectFixedNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PerfectFixedNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PerfectFixedNum of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_PerfectFixedNum
static int tolua_set_tagReviveDef_ToLua_PerfectFixedNum(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectFixedNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PerfectFixedNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PerfectFixedMul of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagReviveDef_ToLua_PerfectFixedMul
static int tolua_get_tagReviveDef_ToLua_PerfectFixedMul(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectFixedMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PerfectFixedMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PerfectFixedMul of class  tagReviveDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagReviveDef_ToLua_PerfectFixedMul
static int tolua_set_tagReviveDef_ToLua_PerfectFixedMul(lua_State* tolua_S)
{
  tagReviveDef_ToLua* self = (tagReviveDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PerfectFixedMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PerfectFixedMul = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagLevelExpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelExpDef_ToLua_Level
static int tolua_get_tagLevelExpDef_ToLua_Level(lua_State* tolua_S)
{
  tagLevelExpDef_ToLua* self = (tagLevelExpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagLevelExpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelExpDef_ToLua_Level
static int tolua_set_tagLevelExpDef_ToLua_Level(lua_State* tolua_S)
{
  tagLevelExpDef_ToLua* self = (tagLevelExpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ExpMul of class  tagLevelExpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagLevelExpDef_ToLua_ExpMul
static int tolua_get_GameEngineTolua_tagLevelExpDef_ToLua_ExpMul(lua_State* tolua_S)
{
 int tolua_index;
  tagLevelExpDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagLevelExpDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_LEVEL_EXP_LIST)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->ExpMul[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ExpMul of class  tagLevelExpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagLevelExpDef_ToLua_ExpMul
static int tolua_set_GameEngineTolua_tagLevelExpDef_ToLua_ExpMul(lua_State* tolua_S)
{
 int tolua_index;
  tagLevelExpDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagLevelExpDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_LEVEL_EXP_LIST)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->ExpMul[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagLevelBuffExpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelBuffExpDef_ToLua_Level
static int tolua_get_tagLevelBuffExpDef_ToLua_Level(lua_State* tolua_S)
{
  tagLevelBuffExpDef_ToLua* self = (tagLevelBuffExpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagLevelBuffExpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelBuffExpDef_ToLua_Level
static int tolua_set_tagLevelBuffExpDef_ToLua_Level(lua_State* tolua_S)
{
  tagLevelBuffExpDef_ToLua* self = (tagLevelBuffExpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Time of class  tagLevelBuffExpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelBuffExpDef_ToLua_Time
static int tolua_get_tagLevelBuffExpDef_ToLua_Time(lua_State* tolua_S)
{
  tagLevelBuffExpDef_ToLua* self = (tagLevelBuffExpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Time'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Time);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Time of class  tagLevelBuffExpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelBuffExpDef_ToLua_Time
static int tolua_set_tagLevelBuffExpDef_ToLua_Time(lua_State* tolua_S)
{
  tagLevelBuffExpDef_ToLua* self = (tagLevelBuffExpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Time'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Time = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Exp of class  tagLevelBuffExpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelBuffExpDef_ToLua_Exp
static int tolua_get_tagLevelBuffExpDef_ToLua_Exp(lua_State* tolua_S)
{
  tagLevelBuffExpDef_ToLua* self = (tagLevelBuffExpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Exp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Exp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Exp of class  tagLevelBuffExpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelBuffExpDef_ToLua_Exp
static int tolua_set_tagLevelBuffExpDef_ToLua_Exp(lua_State* tolua_S)
{
  tagLevelBuffExpDef_ToLua* self = (tagLevelBuffExpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Exp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Exp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DayLimit of class  tagLevelBuffExpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelBuffExpDef_ToLua_DayLimit
static int tolua_get_tagLevelBuffExpDef_ToLua_DayLimit(lua_State* tolua_S)
{
  tagLevelBuffExpDef_ToLua* self = (tagLevelBuffExpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DayLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DayLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DayLimit of class  tagLevelBuffExpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelBuffExpDef_ToLua_DayLimit
static int tolua_set_tagLevelBuffExpDef_ToLua_DayLimit(lua_State* tolua_S)
{
  tagLevelBuffExpDef_ToLua* self = (tagLevelBuffExpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DayLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DayLimit = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LevelAwardLimit of class  tagLevelBuffExpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagLevelBuffExpDef_ToLua_LevelAwardLimit
static int tolua_get_tagLevelBuffExpDef_ToLua_LevelAwardLimit(lua_State* tolua_S)
{
  tagLevelBuffExpDef_ToLua* self = (tagLevelBuffExpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelAwardLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LevelAwardLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LevelAwardLimit of class  tagLevelBuffExpDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagLevelBuffExpDef_ToLua_LevelAwardLimit
static int tolua_set_tagLevelBuffExpDef_ToLua_LevelAwardLimit(lua_State* tolua_S)
{
  tagLevelBuffExpDef_ToLua* self = (tagLevelBuffExpDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LevelAwardLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LevelAwardLimit = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: OfflineExpType of class  tagOfflineExpParameter_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagOfflineExpParameter_ToLua_OfflineExpType
static int tolua_get_tagOfflineExpParameter_ToLua_OfflineExpType(lua_State* tolua_S)
{
  tagOfflineExpParameter_ToLua* self = (tagOfflineExpParameter_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OfflineExpType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->OfflineExpType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: OfflineExpType of class  tagOfflineExpParameter_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagOfflineExpParameter_ToLua_OfflineExpType
static int tolua_set_tagOfflineExpParameter_ToLua_OfflineExpType(lua_State* tolua_S)
{
  tagOfflineExpParameter_ToLua* self = (tagOfflineExpParameter_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OfflineExpType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->OfflineExpType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Parameter1 of class  tagOfflineExpParameter_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagOfflineExpParameter_ToLua_Parameter1
static int tolua_get_tagOfflineExpParameter_ToLua_Parameter1(lua_State* tolua_S)
{
  tagOfflineExpParameter_ToLua* self = (tagOfflineExpParameter_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Parameter1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Parameter1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Parameter1 of class  tagOfflineExpParameter_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagOfflineExpParameter_ToLua_Parameter1
static int tolua_set_tagOfflineExpParameter_ToLua_Parameter1(lua_State* tolua_S)
{
  tagOfflineExpParameter_ToLua* self = (tagOfflineExpParameter_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Parameter1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Parameter1 = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Parameter2 of class  tagOfflineExpParameter_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagOfflineExpParameter_ToLua_Parameter2
static int tolua_get_tagOfflineExpParameter_ToLua_Parameter2(lua_State* tolua_S)
{
  tagOfflineExpParameter_ToLua* self = (tagOfflineExpParameter_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Parameter2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Parameter2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Parameter2 of class  tagOfflineExpParameter_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagOfflineExpParameter_ToLua_Parameter2
static int tolua_set_tagOfflineExpParameter_ToLua_Parameter2(lua_State* tolua_S)
{
  tagOfflineExpParameter_ToLua* self = (tagOfflineExpParameter_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Parameter2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Parameter2 = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: canWalk of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_canWalk00
static int tolua_GameEngineTolua_MainGamePlayer_canWalk00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int to_x = ((int)  tolua_tonumber(tolua_S,2,0));
  int to_y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canWalk'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canWalk(to_x,to_y);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canWalk'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canDelayMove of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_canDelayMove00
static int tolua_GameEngineTolua_MainGamePlayer_canDelayMove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canDelayMove'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canDelayMove();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canDelayMove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canMove of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_canMove00
static int tolua_GameEngineTolua_MainGamePlayer_canMove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canMove'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canMove();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canMove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CmdMovePause of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_CmdMovePause00
static int tolua_GameEngineTolua_MainGamePlayer_CmdMovePause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CmdMovePause'",NULL);
#endif
  {
   self->CmdMovePause();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CmdMovePause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CmdMoveStop of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_CmdMoveStop00
static int tolua_GameEngineTolua_MainGamePlayer_CmdMoveStop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CmdMoveStop'",NULL);
#endif
  {
   self->CmdMoveStop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CmdMoveStop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAFK of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setAFK00
static int tolua_GameEngineTolua_MainGamePlayer_setAFK00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  bool b = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAFK'",NULL);
#endif
  {
   self->setAFK(b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAFK'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInPilState of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_isInPilState00
static int tolua_GameEngineTolua_MainGamePlayer_isInPilState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInPilState'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInPilState();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInPilState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFace of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setFace00
static int tolua_GameEngineTolua_MainGamePlayer_setFace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int f = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFace'",NULL);
#endif
  {
   self->setFace(f);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHair of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setHair00
static int tolua_GameEngineTolua_MainGamePlayer_setHair00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int h = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHair'",NULL);
#endif
  {
   self->setHair(h);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHair'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHead of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setHead00
static int tolua_GameEngineTolua_MainGamePlayer_setHead00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int h = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHead'",NULL);
#endif
  {
   self->setHead(h);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHead'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInPVPMap of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_isInPVPMap00
static int tolua_GameEngineTolua_MainGamePlayer_isInPVPMap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInPVPMap'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInPVPMap();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInPVPMap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getConvoyInfo of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getConvoyInfo00
static int tolua_GameEngineTolua_MainGamePlayer_getConvoyInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getConvoyInfo'",NULL);
#endif
  {
   tagConvoyTask& tolua_ret = (tagConvoyTask&)  self->getConvoyInfo();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"tagConvoyTask");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getConvoyInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldID of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_GetWorldID00
static int tolua_GameEngineTolua_MainGamePlayer_GetWorldID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOwnMonster of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getOwnMonster00
static int tolua_GameEngineTolua_MainGamePlayer_getOwnMonster00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOwnMonster'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getOwnMonster();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOwnMonster'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContainer of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getContainer00
static int tolua_GameEngineTolua_MainGamePlayer_getContainer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContainer'",NULL);
#endif
  {
   Container& tolua_ret = (Container&)  self->getContainer();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Container");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContainer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEquip of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getEquip00
static int tolua_GameEngineTolua_MainGamePlayer_getEquip00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEquip'",NULL);
#endif
  {
   Equip& tolua_ret = (Equip&)  self->getEquip();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Equip");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEquip'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPworldLeaveTime of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getPworldLeaveTime00
static int tolua_GameEngineTolua_MainGamePlayer_getPworldLeaveTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPworldLeaveTime'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPworldLeaveTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPworldLeaveTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPworldStartTime of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getPworldStartTime00
static int tolua_GameEngineTolua_MainGamePlayer_getPworldStartTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPworldStartTime'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPworldStartTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPworldStartTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOldDayPworldScore of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getOldDayPworldScore00
static int tolua_GameEngineTolua_MainGamePlayer_getOldDayPworldScore00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOldDayPworldScore'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getOldDayPworldScore();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOldDayPworldScore'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOldDayPworldScore of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setOldDayPworldScore00
static int tolua_GameEngineTolua_MainGamePlayer_setOldDayPworldScore00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int num = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOldDayPworldScore'",NULL);
#endif
  {
   self->setOldDayPworldScore(num);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOldDayPworldScore'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setShowHead of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setShowHead00
static int tolua_GameEngineTolua_MainGamePlayer_setShowHead00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  bool bShow = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setShowHead'",NULL);
#endif
  {
   self->setShowHead(bShow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setShowHead'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setShowFashion of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setShowFashion00
static int tolua_GameEngineTolua_MainGamePlayer_setShowFashion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  bool bShow = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setShowFashion'",NULL);
#endif
  {
   self->setShowFashion(bShow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setShowFashion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setShowBack of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setShowBack00
static int tolua_GameEngineTolua_MainGamePlayer_setShowBack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  bool bShow = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setShowBack'",NULL);
#endif
  {
   self->setShowBack(bShow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setShowBack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setShowFace of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setShowFace00
static int tolua_GameEngineTolua_MainGamePlayer_setShowFace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  bool bShow = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setShowFace'",NULL);
#endif
  {
   self->setShowFace(bShow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setShowFace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setShowLove of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setShowLove00
static int tolua_GameEngineTolua_MainGamePlayer_setShowLove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  bool bShow = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setShowLove'",NULL);
#endif
  {
   self->setShowLove(bShow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setShowLove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: levelUp of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_levelUp00
static int tolua_GameEngineTolua_MainGamePlayer_levelUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'levelUp'",NULL);
#endif
  {
   self->levelUp();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'levelUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: revivePlayer of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_revivePlayer00
static int tolua_GameEngineTolua_MainGamePlayer_revivePlayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int reviveType = ((int)  tolua_tonumber(tolua_S,2,0));
  int helperId = ((int)  tolua_tonumber(tolua_S,3,0));
  int skillId = ((int)  tolua_tonumber(tolua_S,4,0));
  int nFlag = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'revivePlayer'",NULL);
#endif
  {
   self->revivePlayer(reviveType,helperId,skillId,nFlag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'revivePlayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endCollect of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_endCollect00
static int tolua_GameEngineTolua_MainGamePlayer_endCollect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endCollect'",NULL);
#endif
  {
   self->endCollect();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endCollect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kill of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_kill00
static int tolua_GameEngineTolua_MainGamePlayer_kill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'kill'",NULL);
#endif
  {
   self->kill(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cast of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_cast00
static int tolua_GameEngineTolua_MainGamePlayer_cast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int lv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cast'",NULL);
#endif
  {
   self->cast(id,lv);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasFashion of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_hasFashion00
static int tolua_GameEngineTolua_MainGamePlayer_hasFashion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasFashion'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasFashion();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasFashion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checkXP of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_checkXP00
static int tolua_GameEngineTolua_MainGamePlayer_checkXP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int skillid = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checkXP'",NULL);
#endif
  {
   int tolua_ret = (int)  self->checkXP(skillid);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkXP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isOnMorph of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_isOnMorph00
static int tolua_GameEngineTolua_MainGamePlayer_isOnMorph00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isOnMorph'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isOnMorph();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isOnMorph'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPathPointNum of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getPathPointNum00
static int tolua_GameEngineTolua_MainGamePlayer_getPathPointNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPathPointNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPathPointNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPathPointNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPathPoint of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getPathPoint00
static int tolua_GameEngineTolua_MainGamePlayer_getPathPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPathPoint'",NULL);
#endif
  {
   Ogre::Point2D tolua_ret = (Ogre::Point2D)  self->getPathPoint(nIndex);
   {
#ifdef __cplusplus
    void* tolua_obj = new Ogre::Point2D(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"Ogre::Point2D");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Point2D));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"Ogre::Point2D");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPathPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurPosotion of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getCurPosotion00
static int tolua_GameEngineTolua_MainGamePlayer_getCurPosotion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurPosotion'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCurPosotion();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurPosotion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAutoFind of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getAutoFind00
static int tolua_GameEngineTolua_MainGamePlayer_getAutoFind00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAutoFind'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAutoFind();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAutoFind'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAutoFind of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setAutoFind00
static int tolua_GameEngineTolua_MainGamePlayer_setAutoFind00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  bool bAuto = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAutoFind'",NULL);
#endif
  {
   self->setAutoFind(bAuto);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAutoFind'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setContinueAutoMove of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setContinueAutoMove00
static int tolua_GameEngineTolua_MainGamePlayer_setContinueAutoMove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setContinueAutoMove'",NULL);
#endif
  {
   self->setContinueAutoMove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setContinueAutoMove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOneOfflineExp of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getOneOfflineExp00
static int tolua_GameEngineTolua_MainGamePlayer_getOneOfflineExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOneOfflineExp'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getOneOfflineExp();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOneOfflineExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOfflineExp of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getOfflineExp00
static int tolua_GameEngineTolua_MainGamePlayer_getOfflineExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOfflineExp'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getOfflineExp();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOfflineExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxOfflineExp of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getMaxOfflineExp00
static int tolua_GameEngineTolua_MainGamePlayer_getMaxOfflineExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxOfflineExp'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxOfflineExp();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxOfflineExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxOfflineExp of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setMaxOfflineExp00
static int tolua_GameEngineTolua_MainGamePlayer_setMaxOfflineExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxOfflineExp'",NULL);
#endif
  {
   self->setMaxOfflineExp(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxOfflineExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPworldExp of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getPworldExp00
static int tolua_GameEngineTolua_MainGamePlayer_getPworldExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPworldExp'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPworldExp();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPworldExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPworldExp of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setPworldExp00
static int tolua_GameEngineTolua_MainGamePlayer_setPworldExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPworldExp'",NULL);
#endif
  {
   self->setPworldExp(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPworldExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxPworldExp of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getMaxPworldExp00
static int tolua_GameEngineTolua_MainGamePlayer_getMaxPworldExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxPworldExp'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxPworldExp();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxPworldExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxPworldExp of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setMaxPworldExp00
static int tolua_GameEngineTolua_MainGamePlayer_setMaxPworldExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxPworldExp'",NULL);
#endif
  {
   self->setMaxPworldExp(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxPworldExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAutoLine of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getAutoLine00
static int tolua_GameEngineTolua_MainGamePlayer_getAutoLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAutoLine'",NULL);
#endif
  {
   IAutoFind* tolua_ret = (IAutoFind*)  self->getAutoLine();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"IAutoFind");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAutoLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: continueLastAutoFind of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_continueLastAutoFind00
static int tolua_GameEngineTolua_MainGamePlayer_continueLastAutoFind00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'continueLastAutoFind'",NULL);
#endif
  {
   int tolua_ret = (int)  self->continueLastAutoFind();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'continueLastAutoFind'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ContinueAutoFind of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_ContinueAutoFind00
static int tolua_GameEngineTolua_MainGamePlayer_ContinueAutoFind00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ContinueAutoFind'",NULL);
#endif
  {
   int tolua_ret = (int)  self->ContinueAutoFind();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ContinueAutoFind'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDiathesisManager of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getDiathesisManager00
static int tolua_GameEngineTolua_MainGamePlayer_getDiathesisManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDiathesisManager'",NULL);
#endif
  {
   DiathesisManager& tolua_ret = (DiathesisManager&)  self->getDiathesisManager();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"DiathesisManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDiathesisManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOverlayRegion of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_setOverlayRegion00
static int tolua_GameEngineTolua_MainGamePlayer_setOverlayRegion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  const char* pName = ((const char*)  tolua_tostring(tolua_S,2,0));
  float fSpeed = ((float)  tolua_tonumber(tolua_S,3,0.5f));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOverlayRegion'",NULL);
#endif
  {
   self->setOverlayRegion(pName,fSpeed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOverlayRegion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: breakBTypePre of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_breakBTypePre00
static int tolua_GameEngineTolua_MainGamePlayer_breakBTypePre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'breakBTypePre'",NULL);
#endif
  {
   self->breakBTypePre();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'breakBTypePre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: breakPreAction of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_breakPreAction00
static int tolua_GameEngineTolua_MainGamePlayer_breakPreAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'breakPreAction'",NULL);
#endif
  {
   self->breakPreAction();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'breakPreAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: breakChannel of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_breakChannel00
static int tolua_GameEngineTolua_MainGamePlayer_breakChannel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'breakChannel'",NULL);
#endif
  {
   self->breakChannel();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'breakChannel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: jump of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_jump00
static int tolua_GameEngineTolua_MainGamePlayer_jump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'jump'",NULL);
#endif
  {
   self->jump();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'jump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canControl of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_canControl00
static int tolua_GameEngineTolua_MainGamePlayer_canControl00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canControl'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canControl();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canControl'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeCareer of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_changeCareer00
static int tolua_GameEngineTolua_MainGamePlayer_changeCareer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nCareerType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeCareer'",NULL);
#endif
  {
   self->changeCareer(nCareerType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeCareer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ChangeCareerToFightLevle of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_ChangeCareerToFightLevle00
static int tolua_GameEngineTolua_MainGamePlayer_ChangeCareerToFightLevle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nCareerType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nGridIdx = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ChangeCareerToFightLevle'",NULL);
#endif
  {
   self->ChangeCareerToFightLevle(nCareerType,nGridIdx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ChangeCareerToFightLevle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPkTargetName of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getPkTargetName00
static int tolua_GameEngineTolua_MainGamePlayer_getPkTargetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPkTargetName'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getPkTargetName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPkTargetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInPK of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_isInPK00
static int tolua_GameEngineTolua_MainGamePlayer_isInPK00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInPK'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInPK();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInPK'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sendLockFace of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_sendLockFace00
static int tolua_GameEngineTolua_MainGamePlayer_sendLockFace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int type = ((int)  tolua_tonumber(tolua_S,2,0));
  int value = ((int)  tolua_tonumber(tolua_S,3,0));
  int skillId = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sendLockFace'",NULL);
#endif
  {
   self->sendLockFace(type,value,skillId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendLockFace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unLockFace of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_unLockFace00
static int tolua_GameEngineTolua_MainGamePlayer_unLockFace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unLockFace'",NULL);
#endif
  {
   self->unLockFace();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unLockFace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ChangeClanName of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_ChangeClanName00
static int tolua_GameEngineTolua_MainGamePlayer_ChangeClanName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  const char* pszClanName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ChangeClanName'",NULL);
#endif
  {
   self->ChangeClanName(pszClanName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ChangeClanName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ChangeRoleName of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_ChangeRoleName00
static int tolua_GameEngineTolua_MainGamePlayer_ChangeRoleName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  const char* pszRoleName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ChangeRoleName'",NULL);
#endif
  {
   self->ChangeRoleName(pszRoleName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ChangeRoleName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestRideMonsterMachine of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestRideMonsterMachine00
static int tolua_GameEngineTolua_MainGamePlayer_requestRideMonsterMachine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nMonsterMemId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nIdx = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestRideMonsterMachine'",NULL);
#endif
  {
   self->requestRideMonsterMachine(nMonsterMemId,nIdx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestRideMonsterMachine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestDownMonsterMachine of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestDownMonsterMachine00
static int tolua_GameEngineTolua_MainGamePlayer_requestDownMonsterMachine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestDownMonsterMachine'",NULL);
#endif
  {
   self->requestDownMonsterMachine(nMonsterId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestDownMonsterMachine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: prepareDownMonsterMachine of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_prepareDownMonsterMachine00
static int tolua_GameEngineTolua_MainGamePlayer_prepareDownMonsterMachine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'prepareDownMonsterMachine'",NULL);
#endif
  {
   self->prepareDownMonsterMachine(nMonsterId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'prepareDownMonsterMachine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: breakPrepareDownMonsterMachine of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_breakPrepareDownMonsterMachine00
static int tolua_GameEngineTolua_MainGamePlayer_breakPrepareDownMonsterMachine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'breakPrepareDownMonsterMachine'",NULL);
#endif
  {
   self->breakPrepareDownMonsterMachine(nMonsterId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'breakPrepareDownMonsterMachine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestMachineKickPlayer of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestMachineKickPlayer00
static int tolua_GameEngineTolua_MainGamePlayer_requestMachineKickPlayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestMachineKickPlayer'",NULL);
#endif
  {
   self->requestMachineKickPlayer(nId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestMachineKickPlayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestMachinePassenger of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestMachinePassenger00
static int tolua_GameEngineTolua_MainGamePlayer_requestMachinePassenger00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nMachineID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestMachinePassenger'",NULL);
#endif
  {
   self->requestMachinePassenger(nMachineID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestMachinePassenger'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestAcceptOfflineExp of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestAcceptOfflineExp00
static int tolua_GameEngineTolua_MainGamePlayer_requestAcceptOfflineExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestAcceptOfflineExp'",NULL);
#endif
  {
   self->requestAcceptOfflineExp();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestAcceptOfflineExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestCowRangeAward of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestCowRangeAward00
static int tolua_GameEngineTolua_MainGamePlayer_requestCowRangeAward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestCowRangeAward'",NULL);
#endif
  {
   self->requestCowRangeAward();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestCowRangeAward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestOfflineExpBuff of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestOfflineExpBuff00
static int tolua_GameEngineTolua_MainGamePlayer_requestOfflineExpBuff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestOfflineExpBuff'",NULL);
#endif
  {
   self->requestOfflineExpBuff();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestOfflineExpBuff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RequestOpenBaoXiang of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_RequestOpenBaoXiang00
static int tolua_GameEngineTolua_MainGamePlayer_RequestOpenBaoXiang00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nListType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nGridIdx = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RequestOpenBaoXiang'",NULL);
#endif
  {
   self->RequestOpenBaoXiang(nListType,nGridIdx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RequestOpenBaoXiang'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestHangHaiRangeAward of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestHangHaiRangeAward00
static int tolua_GameEngineTolua_MainGamePlayer_requestHangHaiRangeAward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestHangHaiRangeAward'",NULL);
#endif
  {
   self->requestHangHaiRangeAward();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestHangHaiRangeAward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestYangHaiBangAdd of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestYangHaiBangAdd00
static int tolua_GameEngineTolua_MainGamePlayer_requestYangHaiBangAdd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nNum = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestYangHaiBangAdd'",NULL);
#endif
  {
   self->requestYangHaiBangAdd(nNum);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestYangHaiBangAdd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestYangHaiBangAward of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestYangHaiBangAward00
static int tolua_GameEngineTolua_MainGamePlayer_requestYangHaiBangAward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestYangHaiBangAward'",NULL);
#endif
  {
   self->requestYangHaiBangAward();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestYangHaiBangAward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestClanWarAward of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestClanWarAward00
static int tolua_GameEngineTolua_MainGamePlayer_requestClanWarAward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestClanWarAward'",NULL);
#endif
  {
   self->requestClanWarAward();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestClanWarAward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestPaoShangOpt of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestPaoShangOpt00
static int tolua_GameEngineTolua_MainGamePlayer_requestPaoShangOpt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nPrice = ((int)  tolua_tonumber(tolua_S,4,0));
  int nNum = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestPaoShangOpt'",NULL);
#endif
  {
   self->requestPaoShangOpt(nType,nItemId,nPrice,nNum);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestPaoShangOpt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getReviveDef of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getReviveDef00
static int tolua_GameEngineTolua_MainGamePlayer_getReviveDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getReviveDef'",NULL);
#endif
  {
   tagReviveDef_ToLua* tolua_ret = (tagReviveDef_ToLua*)  self->getReviveDef();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagReviveDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getReviveDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLevelExpDef of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getLevelExpDef00
static int tolua_GameEngineTolua_MainGamePlayer_getLevelExpDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nLevel = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLevelExpDef'",NULL);
#endif
  {
   tagLevelExpDef_ToLua* tolua_ret = (tagLevelExpDef_ToLua*)  self->getLevelExpDef(nLevel);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagLevelExpDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLevelExpDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLevelBuffExpDef of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getLevelBuffExpDef00
static int tolua_GameEngineTolua_MainGamePlayer_getLevelBuffExpDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLevelBuffExpDef'",NULL);
#endif
  {
   tagLevelBuffExpDef_ToLua* tolua_ret = (tagLevelBuffExpDef_ToLua*)  self->getLevelBuffExpDef();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagLevelBuffExpDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLevelBuffExpDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOfflineExpParameter of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getOfflineExpParameter00
static int tolua_GameEngineTolua_MainGamePlayer_getOfflineExpParameter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOfflineExpParameter'",NULL);
#endif
  {
   tagOfflineExpParameter_ToLua* tolua_ret = (tagOfflineExpParameter_ToLua*)  self->getOfflineExpParameter(nType);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagOfflineExpParameter_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOfflineExpParameter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestSendMotionAction of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestSendMotionAction00
static int tolua_GameEngineTolua_MainGamePlayer_requestSendMotionAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int nActionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nTargetId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestSendMotionAction'",NULL);
#endif
  {
   self->requestSendMotionAction(nActionId,nTargetId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestSendMotionAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isHaveGMPerm of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_isHaveGMPerm00
static int tolua_GameEngineTolua_MainGamePlayer_isHaveGMPerm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isHaveGMPerm'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isHaveGMPerm();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isHaveGMPerm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isOutSide of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_isOutSide00
static int tolua_GameEngineTolua_MainGamePlayer_isOutSide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isOutSide'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isOutSide();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isOutSide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestApplyMachineInvite of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestApplyMachineInvite00
static int tolua_GameEngineTolua_MainGamePlayer_requestApplyMachineInvite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestApplyMachineInvite'",NULL);
#endif
  {
   self->requestApplyMachineInvite(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestApplyMachineInvite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestRefuseMachineInvite of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestRefuseMachineInvite00
static int tolua_GameEngineTolua_MainGamePlayer_requestRefuseMachineInvite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestRefuseMachineInvite'",NULL);
#endif
  {
   self->requestRefuseMachineInvite(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestRefuseMachineInvite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestMachineInvite of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestMachineInvite00
static int tolua_GameEngineTolua_MainGamePlayer_requestMachineInvite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestMachineInvite'",NULL);
#endif
  {
   self->requestMachineInvite(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestMachineInvite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBattleLimitLeftTime of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getBattleLimitLeftTime00
static int tolua_GameEngineTolua_MainGamePlayer_getBattleLimitLeftTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBattleLimitLeftTime'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getBattleLimitLeftTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBattleLimitLeftTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SelectTarget of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_SelectTarget00
static int tolua_GameEngineTolua_MainGamePlayer_SelectTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
  int resid = ((int)  tolua_tonumber(tolua_S,2,0));
  int resType = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SelectTarget'",NULL);
#endif
  {
   self->SelectTarget(resid,resType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SelectTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDailyUsedBull of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getDailyUsedBull00
static int tolua_GameEngineTolua_MainGamePlayer_getDailyUsedBull00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDailyUsedBull'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getDailyUsedBull();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDailyUsedBull'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isColorFontValid of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_isColorFontValid00
static int tolua_GameEngineTolua_MainGamePlayer_isColorFontValid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isColorFontValid'",NULL);
#endif
  {
   int tolua_ret = (int)  self->isColorFontValid();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isColorFontValid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpartaVictory of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getSpartaVictory00
static int tolua_GameEngineTolua_MainGamePlayer_getSpartaVictory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpartaVictory'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpartaVictory();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpartaVictory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpartaRunAway of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getSpartaRunAway00
static int tolua_GameEngineTolua_MainGamePlayer_getSpartaRunAway00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpartaRunAway'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpartaRunAway();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpartaRunAway'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpartaDefeat of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getSpartaDefeat00
static int tolua_GameEngineTolua_MainGamePlayer_getSpartaDefeat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpartaDefeat'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getSpartaDefeat();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpartaDefeat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWeekCharm of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getWeekCharm00
static int tolua_GameEngineTolua_MainGamePlayer_getWeekCharm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWeekCharm'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getWeekCharm();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWeekCharm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOfflineDay of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getOfflineDay00
static int tolua_GameEngineTolua_MainGamePlayer_getOfflineDay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOfflineDay'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getOfflineDay();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOfflineDay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestOffLineGift of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_requestOffLineGift00
static int tolua_GameEngineTolua_MainGamePlayer_requestOffLineGift00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestOffLineGift'",NULL);
#endif
  {
   self->requestOffLineGift();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestOffLineGift'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNormalMachinePworldClanID of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getNormalMachinePworldClanID00
static int tolua_GameEngineTolua_MainGamePlayer_getNormalMachinePworldClanID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNormalMachinePworldClanID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getNormalMachinePworldClanID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNormalMachinePworldClanID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUnionMachinePworldClanID of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getUnionMachinePworldClanID00
static int tolua_GameEngineTolua_MainGamePlayer_getUnionMachinePworldClanID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUnionMachinePworldClanID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getUnionMachinePworldClanID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUnionMachinePworldClanID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLoveColorType of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getLoveColorType00
static int tolua_GameEngineTolua_MainGamePlayer_getLoveColorType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLoveColorType'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getLoveColorType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLoveColorType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasLover of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_hasLover00
static int tolua_GameEngineTolua_MainGamePlayer_hasLover00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasLover'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasLover();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasLover'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLoverName of class  MainGamePlayer */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MainGamePlayer_getLoverName00
static int tolua_GameEngineTolua_MainGamePlayer_getLoverName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainGamePlayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainGamePlayer* self = (MainGamePlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLoverName'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getLoverName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLoverName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: CompareRoleName */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_CompareRoleName00
static int tolua_GameEngineTolua_CompareRoleName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszLeftName = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* pszRightName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  CompareRoleName(pszLeftName,pszRightName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CompareRoleName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: FindActor of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_FindActor00
static int tolua_GameEngineTolua_ActorManager_FindActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'FindActor'",NULL);
#endif
  {
   GameActor* tolua_ret = (GameActor*)  self->FindActor(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'FindActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActorIdByResId of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getActorIdByResId00
static int tolua_GameEngineTolua_ActorManager_getActorIdByResId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActorIdByResId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getActorIdByResId(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorIdByResId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMainPlayer of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getMainPlayer00
static int tolua_GameEngineTolua_ActorManager_getMainPlayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMainPlayer'",NULL);
#endif
  {
   MainGamePlayer* tolua_ret = (MainGamePlayer*)  self->getMainPlayer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"MainGamePlayer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMainPlayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findActorByName of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_findActorByName00
static int tolua_GameEngineTolua_ActorManager_findActorByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  const char* pszName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findActorByName'",NULL);
#endif
  {
   GameActor* tolua_ret = (GameActor*)  self->findActorByName(pszName);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findActorByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findActorByName of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_findActorByName01
static int tolua_GameEngineTolua_ActorManager_findActorByName01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  const char* pszName = ((const char*)  tolua_tostring(tolua_S,2,0));
  int nType = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findActorByName'",NULL);
#endif
  {
   GameActor* tolua_ret = (GameActor*)  self->findActorByName(pszName,nType);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameActor");
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_ActorManager_findActorByName00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: findActorByWId of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_findActorByWId00
static int tolua_GameEngineTolua_ActorManager_findActorByWId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tdr_longlong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  tdr_longlong wId = *((tdr_longlong*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findActorByWId'",NULL);
#endif
  {
   GameActor* tolua_ret = (GameActor*)  self->findActorByWId(wId);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findActorByWId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canPickTmpItem of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_canPickTmpItem00
static int tolua_GameEngineTolua_ActorManager_canPickTmpItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canPickTmpItem'",NULL);
#endif
  {
   self->canPickTmpItem();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canPickTmpItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tryPickMonsterMachine of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_tryPickMonsterMachine00
static int tolua_GameEngineTolua_ActorManager_tryPickMonsterMachine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tryPickMonsterMachine'",NULL);
#endif
  {
   self->tryPickMonsterMachine();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tryPickMonsterMachine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pickTmpItem of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_pickTmpItem00
static int tolua_GameEngineTolua_ActorManager_pickTmpItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pickTmpItem'",NULL);
#endif
  {
   self->pickTmpItem(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pickTmpItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: needConvertName of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_needConvertName00
static int tolua_GameEngineTolua_ActorManager_needConvertName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  const char* pszName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'needConvertName'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->needConvertName(pszName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'needConvertName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: replaceSpecialCode of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_replaceSpecialCode00
static int tolua_GameEngineTolua_ActorManager_replaceSpecialCode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string strNeedConvertString = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'replaceSpecialCode'",NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->replaceSpecialCode(strNeedConvertString);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)strNeedConvertString);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'replaceSpecialCode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNearestActor of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getNearestActor00
static int tolua_GameEngineTolua_ActorManager_getNearestActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  int src = ((int)  tolua_tonumber(tolua_S,2,0));
  int radius = ((int)  tolua_tonumber(tolua_S,3,-1));
  bool bTask = ((bool)  tolua_toboolean(tolua_S,4,false));
  int resid = ((int)  tolua_tonumber(tolua_S,5,0));
  int actorType = ((int)  tolua_tonumber(tolua_S,6,-1));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNearestActor'",NULL);
#endif
  {
   GameActor* tolua_ret = (GameActor*)  self->getNearestActor(src,radius,bTask,resid,actorType);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNearestActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isShowOtherPlayerTitle of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_isShowOtherPlayerTitle00
static int tolua_GameEngineTolua_ActorManager_isShowOtherPlayerTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isShowOtherPlayerTitle'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isShowOtherPlayerTitle();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isShowOtherPlayerTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getShowOtherPlayerModelOption of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getShowOtherPlayerModelOption00
static int tolua_GameEngineTolua_ActorManager_getShowOtherPlayerModelOption00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getShowOtherPlayerModelOption'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getShowOtherPlayerModelOption();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getShowOtherPlayerModelOption'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPerfectStarNineActor of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_SetPerfectStarNineActor00
static int tolua_GameEngineTolua_ActorManager_SetPerfectStarNineActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPerfectStarNineActor'",NULL);
#endif
  {
   self->SetPerfectStarNineActor();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPerfectStarNineActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addClientSelfDestroy of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_addClientSelfDestroy00
static int tolua_GameEngineTolua_ActorManager_addClientSelfDestroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pActor = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addClientSelfDestroy'",NULL);
#endif
  {
   self->addClientSelfDestroy(pActor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addClientSelfDestroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerCount of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getPlayerCount00
static int tolua_GameEngineTolua_ActorManager_getPlayerCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerCount'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPlayerCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMonsterCount of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getMonsterCount00
static int tolua_GameEngineTolua_ActorManager_getMonsterCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMonsterCount'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getMonsterCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMonster of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getMonster00
static int tolua_GameEngineTolua_ActorManager_getMonster00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMonster'",NULL);
#endif
  {
   GameActor* tolua_ret = (GameActor*)  self->getMonster(nIndex);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonster'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActorNums of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getActorNums00
static int tolua_GameEngineTolua_ActorManager_getActorNums00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActorNums'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getActorNums();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorNums'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActor of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getActor00
static int tolua_GameEngineTolua_ActorManager_getActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActor'",NULL);
#endif
  {
   GameActor* tolua_ret = (GameActor*)  self->getActor(nIndex);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateMonsters of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_updateMonsters00
static int tolua_GameEngineTolua_ActorManager_updateMonsters00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pActor = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateMonsters'",NULL);
#endif
  {
   self->updateMonsters(pActor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateMonsters'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGameOpt of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getGameOpt00
static int tolua_GameEngineTolua_ActorManager_getGameOpt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGameOpt'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getGameOpt(nIndex);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGameOpt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGameConfig of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getGameConfig00
static int tolua_GameEngineTolua_ActorManager_getGameConfig00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGameConfig'",NULL);
#endif
  {
   GameSettingConfig& tolua_ret = (GameSettingConfig&)  self->getGameConfig();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"GameSettingConfig");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGameConfig'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextActorById of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getNextActorById00
static int tolua_GameEngineTolua_ActorManager_getNextActorById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextActorById'",NULL);
#endif
  {
   GameActor* tolua_ret = (GameActor*)  self->getNextActorById(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextActorById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextActor of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getNextActor00
static int tolua_GameEngineTolua_ActorManager_getNextActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pre = ((GameActor*)  tolua_tousertype(tolua_S,2,NULL));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextActor'",NULL);
#endif
  {
   GameActor* tolua_ret = (GameActor*)  self->getNextActor(pre);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeShowPlayerID of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_changeShowPlayerID00
static int tolua_GameEngineTolua_ActorManager_changeShowPlayerID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeShowPlayerID'",NULL);
#endif
  {
   self->changeShowPlayerID();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeShowPlayerID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextPlayerEnemy of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getNextPlayerEnemy00
static int tolua_GameEngineTolua_ActorManager_getNextPlayerEnemy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextPlayerEnemy'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextPlayerEnemy(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextPlayerEnemy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getServerId of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getServerId00
static int tolua_GameEngineTolua_ActorManager_getServerId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  const char* szName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getServerId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getServerId(szName);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getServerId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getClanFengHao of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_getClanFengHao00
static int tolua_GameEngineTolua_ActorManager_getClanFengHao00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const tdr_ulonglong",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  const tdr_ulonglong ClanWid = *((const tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getClanFengHao'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getClanFengHao(ClanWid);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getClanFengHao'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setClanFengHao of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_setClanFengHao00
static int tolua_GameEngineTolua_ActorManager_setClanFengHao00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setClanFengHao'",NULL);
#endif
  {
   self->setClanFengHao();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setClanFengHao'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSpartaLevelName of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_ActorManager_GetSpartaLevelName00
static int tolua_GameEngineTolua_ActorManager_GetSpartaLevelName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActorManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
  int nFightVal = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSpartaLevelName'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->GetSpartaLevelName(nFightVal);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSpartaLevelName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __Ogre of class  ActorManager */
#ifndef TOLUA_DISABLE_tolua_get_ActorManager___Ogre__Singleton_ActorManager___
static int tolua_get_ActorManager___Ogre__Singleton_ActorManager___(lua_State* tolua_S)
{
  ActorManager* self = (ActorManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__Ogre'",NULL);
#endif
#ifdef __cplusplus
  tolua_pushusertype(tolua_S,(void*)static_cast<Ogre::Singleton<ActorManager>*>(self), "Ogre::Singleton<ActorManager>");
#else
  tolua_pushusertype(tolua_S,(void*)((Ogre::Singleton<ActorManager>*)self), "Ogre::Singleton<ActorManager>");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* function: getDiathesisDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getDiathesisDef00
static int tolua_GameEngineTolua_getDiathesisDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,1,0));
  int lv = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   const tagDiathesisDef_ToLua* tolua_ret = (const tagDiathesisDef_ToLua*)  getDiathesisDef(id,lv);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagDiathesisDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDiathesisDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDiathesisInfo of class  DiathesisManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_DiathesisManager_getDiathesisInfo00
static int tolua_GameEngineTolua_DiathesisManager_getDiathesisInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const DiathesisManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const DiathesisManager* self = (const DiathesisManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDiathesisInfo'",NULL);
#endif
  {
   const tagDiathesisInfo_toLua& tolua_ret = (const tagDiathesisInfo_toLua&)  self->getDiathesisInfo();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagDiathesisInfo_toLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDiathesisInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isLearnedGenius of class  DiathesisManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_DiathesisManager_isLearnedGenius00
static int tolua_GameEngineTolua_DiathesisManager_isLearnedGenius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DiathesisManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DiathesisManager* self = (DiathesisManager*)  tolua_tousertype(tolua_S,1,0);
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isLearnedGenius'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isLearnedGenius(nId,nLv);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isLearnedGenius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLearnedGeniusLevel of class  DiathesisManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_DiathesisManager_getLearnedGeniusLevel00
static int tolua_GameEngineTolua_DiathesisManager_getLearnedGeniusLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DiathesisManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DiathesisManager* self = (DiathesisManager*)  tolua_tousertype(tolua_S,1,0);
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLearnedGeniusLevel'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getLearnedGeniusLevel(nId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLearnedGeniusLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDiathesis of class  DiathesisManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_DiathesisManager_getDiathesis00
static int tolua_GameEngineTolua_DiathesisManager_getDiathesis00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DiathesisManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DiathesisManager* self = (DiathesisManager*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDiathesis'",NULL);
#endif
  {
   const tagDiathesisDef_ToLua& tolua_ret = (const tagDiathesisDef_ToLua&)  self->getDiathesis(nIndex);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagDiathesisDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDiathesis'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAllGeniusNum of class  DiathesisManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_DiathesisManager_getAllGeniusNum00
static int tolua_GameEngineTolua_DiathesisManager_getAllGeniusNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DiathesisManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DiathesisManager* self = (DiathesisManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAllGeniusNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getAllGeniusNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAllGeniusNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLearnedDiathesisNum of class  DiathesisManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_DiathesisManager_getLearnedDiathesisNum00
static int tolua_GameEngineTolua_DiathesisManager_getLearnedDiathesisNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DiathesisManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DiathesisManager* self = (DiathesisManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLearnedDiathesisNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getLearnedDiathesisNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLearnedDiathesisNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDiathesisData of class  DiathesisManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_DiathesisManager_getDiathesisData00
static int tolua_GameEngineTolua_DiathesisManager_getDiathesisData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DiathesisManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DiathesisManager* self = (DiathesisManager*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDiathesisData'",NULL);
#endif
  {
   const tagDiathesisData_toLua& tolua_ret = (const tagDiathesisData_toLua&)  self->getDiathesisData(nIndex);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagDiathesisData_toLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDiathesisData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: nHeight of class  tagTrumpId */
#ifndef TOLUA_DISABLE_tolua_get_tagTrumpId_nHeight
static int tolua_get_tagTrumpId_nHeight(lua_State* tolua_S)
{
  tagTrumpId* self = (tagTrumpId*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'nHeight'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->nHeight);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: nHeight of class  tagTrumpId */
#ifndef TOLUA_DISABLE_tolua_set_tagTrumpId_nHeight
static int tolua_set_tagTrumpId_nHeight(lua_State* tolua_S)
{
  tagTrumpId* self = (tagTrumpId*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'nHeight'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->nHeight = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: nLow of class  tagTrumpId */
#ifndef TOLUA_DISABLE_tolua_get_tagTrumpId_nLow
static int tolua_get_tagTrumpId_nLow(lua_State* tolua_S)
{
  tagTrumpId* self = (tagTrumpId*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'nLow'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->nLow);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: nLow of class  tagTrumpId */
#ifndef TOLUA_DISABLE_tolua_set_tagTrumpId_nLow
static int tolua_set_tagTrumpId_nLow(lua_State* tolua_S)
{
  tagTrumpId* self = (tagTrumpId*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'nLow'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->nLow = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FairyID of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleFairy_ToLua_unsigned_FairyID
static int tolua_get_tagRoleFairy_ToLua_unsigned_FairyID(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FairyID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FairyID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FairyID of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleFairy_ToLua_unsigned_FairyID
static int tolua_set_tagRoleFairy_ToLua_unsigned_FairyID(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FairyID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FairyID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FairyLevel of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleFairy_ToLua_unsigned_FairyLevel
static int tolua_get_tagRoleFairy_ToLua_unsigned_FairyLevel(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FairyLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FairyLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FairyLevel of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleFairy_ToLua_unsigned_FairyLevel
static int tolua_set_tagRoleFairy_ToLua_unsigned_FairyLevel(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FairyLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FairyLevel = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WID of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleFairy_ToLua_WID
static int tolua_get_tagRoleFairy_ToLua_WID(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WID'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->WID,"tagTrumpId");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WID of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleFairy_ToLua_WID
static int tolua_set_tagRoleFairy_ToLua_WID(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WID'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagTrumpId",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WID = *((tagTrumpId*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Stat of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleFairy_ToLua_Stat
static int tolua_get_tagRoleFairy_ToLua_Stat(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Stat'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Stat);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Stat of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleFairy_ToLua_Stat
static int tolua_set_tagRoleFairy_ToLua_Stat(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Stat'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Stat = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: EvolveLeftTM of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleFairy_ToLua_unsigned_EvolveLeftTM
static int tolua_get_tagRoleFairy_ToLua_unsigned_EvolveLeftTM(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EvolveLeftTM'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->EvolveLeftTM);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: EvolveLeftTM of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleFairy_ToLua_unsigned_EvolveLeftTM
static int tolua_set_tagRoleFairy_ToLua_unsigned_EvolveLeftTM(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EvolveLeftTM'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->EvolveLeftTM = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GridIdx of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleFairy_ToLua_GridIdx
static int tolua_get_tagRoleFairy_ToLua_GridIdx(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GridIdx'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GridIdx);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GridIdx of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleFairy_ToLua_GridIdx
static int tolua_set_tagRoleFairy_ToLua_GridIdx(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GridIdx'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GridIdx = ((char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Flag of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleFairy_ToLua_unsigned_Flag
static int tolua_get_tagRoleFairy_ToLua_unsigned_Flag(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Flag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Flag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Flag of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleFairy_ToLua_unsigned_Flag
static int tolua_set_tagRoleFairy_ToLua_unsigned_Flag(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Flag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Flag = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Exp of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleFairy_ToLua_Exp
static int tolua_get_tagRoleFairy_ToLua_Exp(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Exp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Exp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Exp of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleFairy_ToLua_Exp
static int tolua_set_tagRoleFairy_ToLua_Exp(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Exp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Exp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StarLvl of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleFairy_ToLua_StarLvl
static int tolua_get_tagRoleFairy_ToLua_StarLvl(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StarLvl'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StarLvl);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StarLvl of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleFairy_ToLua_StarLvl
static int tolua_set_tagRoleFairy_ToLua_StarLvl(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StarLvl'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StarLvl = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TraitID of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleFairy_ToLua_TraitID
static int tolua_get_tagRoleFairy_ToLua_TraitID(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TraitID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TraitID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TraitID of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleFairy_ToLua_TraitID
static int tolua_set_tagRoleFairy_ToLua_TraitID(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TraitID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TraitID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IsKeyin of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagRoleFairy_ToLua_IsKeyin
static int tolua_get_tagRoleFairy_ToLua_IsKeyin(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsKeyin'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->IsKeyin);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IsKeyin of class  tagRoleFairy_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagRoleFairy_ToLua_IsKeyin
static int tolua_set_tagRoleFairy_ToLua_IsKeyin(lua_State* tolua_S)
{
  tagRoleFairy_ToLua* self = (tagRoleFairy_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsKeyin'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IsKeyin = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillType of class  tagFairySkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairySkill_ToLua_unsigned_SkillType
static int tolua_get_tagFairySkill_ToLua_unsigned_SkillType(lua_State* tolua_S)
{
  tagFairySkill_ToLua* self = (tagFairySkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillType of class  tagFairySkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairySkill_ToLua_unsigned_SkillType
static int tolua_set_tagFairySkill_ToLua_unsigned_SkillType(lua_State* tolua_S)
{
  tagFairySkill_ToLua* self = (tagFairySkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillID of class  tagFairySkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairySkill_ToLua_unsigned_SkillID
static int tolua_get_tagFairySkill_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagFairySkill_ToLua* self = (tagFairySkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillID of class  tagFairySkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairySkill_ToLua_unsigned_SkillID
static int tolua_set_tagFairySkill_ToLua_unsigned_SkillID(lua_State* tolua_S)
{
  tagFairySkill_ToLua* self = (tagFairySkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SkillLevel of class  tagFairySkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairySkill_ToLua_unsigned_SkillLevel
static int tolua_get_tagFairySkill_ToLua_unsigned_SkillLevel(lua_State* tolua_S)
{
  tagFairySkill_ToLua* self = (tagFairySkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->SkillLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SkillLevel of class  tagFairySkill_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairySkill_ToLua_unsigned_SkillLevel
static int tolua_set_tagFairySkill_ToLua_unsigned_SkillLevel(lua_State* tolua_S)
{
  tagFairySkill_ToLua* self = (tagFairySkill_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SkillLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SkillLevel = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemID of class  tagEvolveStuff_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagEvolveStuff_ToLua_unsigned_ItemID
static int tolua_get_tagEvolveStuff_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagEvolveStuff_ToLua* self = (tagEvolveStuff_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemID of class  tagEvolveStuff_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagEvolveStuff_ToLua_unsigned_ItemID
static int tolua_set_tagEvolveStuff_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagEvolveStuff_ToLua* self = (tagEvolveStuff_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemNum of class  tagEvolveStuff_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagEvolveStuff_ToLua_unsigned_ItemNum
static int tolua_get_tagEvolveStuff_ToLua_unsigned_ItemNum(lua_State* tolua_S)
{
  tagEvolveStuff_ToLua* self = (tagEvolveStuff_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemNum of class  tagEvolveStuff_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagEvolveStuff_ToLua_unsigned_ItemNum
static int tolua_set_tagEvolveStuff_ToLua_unsigned_ItemNum(lua_State* tolua_S)
{
  tagEvolveStuff_ToLua* self = (tagEvolveStuff_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FairyID of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_FairyID
static int tolua_get_tagFairyDef_ToLua_unsigned_FairyID(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FairyID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FairyID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FairyID of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_FairyID
static int tolua_set_tagFairyDef_ToLua_unsigned_FairyID(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FairyID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FairyID = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_Level
static int tolua_get_tagFairyDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_Level
static int tolua_set_tagFairyDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_Name
static int tolua_get_tagFairyDef_ToLua_Name(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_Name
static int tolua_set_tagFairyDef_ToLua_Name(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->Name,tolua_tostring(tolua_S,2,0),RES_NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ModeID of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_ModeID
static int tolua_get_tagFairyDef_ToLua_unsigned_ModeID(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ModeID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ModeID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ModeID of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_ModeID
static int tolua_set_tagFairyDef_ToLua_unsigned_ModeID(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ModeID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ModeID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BuffID of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_BuffID
static int tolua_get_tagFairyDef_ToLua_unsigned_BuffID(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BuffID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BuffID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BuffID of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_BuffID
static int tolua_set_tagFairyDef_ToLua_unsigned_BuffID(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BuffID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BuffID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FairyDesc of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_FairyDesc
static int tolua_get_tagFairyDef_ToLua_FairyDesc(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FairyDesc'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->FairyDesc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FairyDesc of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_FairyDesc
static int tolua_set_tagFairyDef_ToLua_FairyDesc(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FairyDesc'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->FairyDesc,tolua_tostring(tolua_S,2,0),SHORT_DESC_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FairySkillList of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagFairyDef_ToLua_FairySkillList
static int tolua_get_GameEngineTolua_tagFairyDef_ToLua_FairySkillList(lua_State* tolua_S)
{
 int tolua_index;
  tagFairyDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagFairyDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=FAIRY_MAX_SKILL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->FairySkillList[tolua_index],"tagFairySkill_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FairySkillList of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagFairyDef_ToLua_FairySkillList
static int tolua_set_GameEngineTolua_tagFairyDef_ToLua_FairySkillList(lua_State* tolua_S)
{
 int tolua_index;
  tagFairyDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagFairyDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=FAIRY_MAX_SKILL)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->FairySkillList[tolua_index] = *((tagFairySkill_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: EvolveTime of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_EvolveTime
static int tolua_get_tagFairyDef_ToLua_unsigned_EvolveTime(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EvolveTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->EvolveTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: EvolveTime of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_EvolveTime
static int tolua_set_tagFairyDef_ToLua_unsigned_EvolveTime(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EvolveTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->EvolveTime = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: EvolveLevelLimit of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_EvolveLevelLimit
static int tolua_get_tagFairyDef_ToLua_unsigned_EvolveLevelLimit(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EvolveLevelLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->EvolveLevelLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: EvolveLevelLimit of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_EvolveLevelLimit
static int tolua_set_tagFairyDef_ToLua_unsigned_EvolveLevelLimit(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EvolveLevelLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->EvolveLevelLimit = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PhyAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_PhyAtk
static int tolua_get_tagFairyDef_ToLua_unsigned_PhyAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhyAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PhyAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PhyAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_PhyAtk
static int tolua_set_tagFairyDef_ToLua_unsigned_PhyAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PhyAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PhyAtk = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MgcAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_MgcAtk
static int tolua_get_tagFairyDef_ToLua_unsigned_MgcAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MgcAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MgcAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MgcAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_MgcAtk
static int tolua_set_tagFairyDef_ToLua_unsigned_MgcAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MgcAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MgcAtk = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BrkAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_BrkAtk
static int tolua_get_tagFairyDef_ToLua_unsigned_BrkAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BrkAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BrkAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BrkAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_BrkAtk
static int tolua_set_tagFairyDef_ToLua_unsigned_BrkAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BrkAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BrkAtk = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BaseXp of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_BaseXp
static int tolua_get_tagFairyDef_ToLua_BaseXp(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BaseXp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BaseXp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BaseXp of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_BaseXp
static int tolua_set_tagFairyDef_ToLua_BaseXp(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BaseXp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BaseXp = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseMoney of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_UseMoney
static int tolua_get_tagFairyDef_ToLua_unsigned_UseMoney(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseMoney'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseMoney);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseMoney of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_UseMoney
static int tolua_set_tagFairyDef_ToLua_unsigned_UseMoney(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseMoney'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseMoney = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UseExp of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_UseExp
static int tolua_get_tagFairyDef_ToLua_unsigned_UseExp(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseExp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UseExp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UseExp of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_UseExp
static int tolua_set_tagFairyDef_ToLua_unsigned_UseExp(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UseExp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UseExp = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GetXpRate of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_GetXpRate
static int tolua_get_tagFairyDef_ToLua_unsigned_GetXpRate(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GetXpRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->GetXpRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GetXpRate of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_GetXpRate
static int tolua_set_tagFairyDef_ToLua_unsigned_GetXpRate(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GetXpRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GetXpRate = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: XpUpperLimit of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_XpUpperLimit
static int tolua_get_tagFairyDef_ToLua_XpUpperLimit(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'XpUpperLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->XpUpperLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: XpUpperLimit of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_XpUpperLimit
static int tolua_set_tagFairyDef_ToLua_XpUpperLimit(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'XpUpperLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->XpUpperLimit = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FireAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_FireAtk
static int tolua_get_tagFairyDef_ToLua_FireAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FireAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FireAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_FireAtk
static int tolua_set_tagFairyDef_ToLua_FireAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FireAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FireAtk = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ThunderAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_ThunderAtk
static int tolua_get_tagFairyDef_ToLua_ThunderAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ThunderAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ThunderAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_ThunderAtk
static int tolua_set_tagFairyDef_ToLua_ThunderAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ThunderAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ThunderAtk = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LightAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_LightAtk
static int tolua_get_tagFairyDef_ToLua_LightAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LightAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LightAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_LightAtk
static int tolua_set_tagFairyDef_ToLua_LightAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LightAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LightAtk = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NightAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_NightAtk
static int tolua_get_tagFairyDef_ToLua_NightAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->NightAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NightAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_NightAtk
static int tolua_set_tagFairyDef_ToLua_NightAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NightAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NightAtk = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WaterAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_WaterAtk
static int tolua_get_tagFairyDef_ToLua_WaterAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterAtk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WaterAtk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WaterAtk of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_WaterAtk
static int tolua_set_tagFairyDef_ToLua_WaterAtk(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WaterAtk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WaterAtk = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxStar of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_MaxStar
static int tolua_get_tagFairyDef_ToLua_unsigned_MaxStar(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxStar'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxStar);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxStar of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_MaxStar
static int tolua_set_tagFairyDef_ToLua_unsigned_MaxStar(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxStar'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxStar = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TraitID of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_TraitID
static int tolua_get_tagFairyDef_ToLua_unsigned_TraitID(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TraitID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TraitID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TraitID of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_TraitID
static int tolua_set_tagFairyDef_ToLua_unsigned_TraitID(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TraitID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TraitID = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PNum of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_unsigned_PNum
static int tolua_get_tagFairyDef_ToLua_unsigned_PNum(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PNum of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_unsigned_PNum
static int tolua_set_tagFairyDef_ToLua_unsigned_PNum(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PItems of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagFairyDef_ToLua_PItems
static int tolua_get_GameEngineTolua_tagFairyDef_ToLua_PItems(lua_State* tolua_S)
{
 int tolua_index;
  tagFairyDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagFairyDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=FAIRY_MAX_PRODUCE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->PItems[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PItems of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagFairyDef_ToLua_PItems
static int tolua_set_GameEngineTolua_tagFairyDef_ToLua_PItems(lua_State* tolua_S)
{
 int tolua_index;
  tagFairyDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagFairyDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=FAIRY_MAX_PRODUCE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->PItems[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ZeroReelID of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_ZeroReelID
static int tolua_get_tagFairyDef_ToLua_ZeroReelID(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ZeroReelID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ZeroReelID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ZeroReelID of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_ZeroReelID
static int tolua_set_tagFairyDef_ToLua_ZeroReelID(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ZeroReelID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ZeroReelID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: KeyinUseXp of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyDef_ToLua_KeyinUseXp
static int tolua_get_tagFairyDef_ToLua_KeyinUseXp(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KeyinUseXp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->KeyinUseXp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: KeyinUseXp of class  tagFairyDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyDef_ToLua_KeyinUseXp
static int tolua_set_tagFairyDef_ToLua_KeyinUseXp(lua_State* tolua_S)
{
  tagFairyDef_ToLua* self = (tagFairyDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KeyinUseXp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->KeyinUseXp = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Star of class  tagFairyStuffRate_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStuffRate_ToLua_unsigned_Star
static int tolua_get_tagFairyStuffRate_ToLua_unsigned_Star(lua_State* tolua_S)
{
  tagFairyStuffRate_ToLua* self = (tagFairyStuffRate_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Star'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Star);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Star of class  tagFairyStuffRate_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStuffRate_ToLua_unsigned_Star
static int tolua_set_tagFairyStuffRate_ToLua_unsigned_Star(lua_State* tolua_S)
{
  tagFairyStuffRate_ToLua* self = (tagFairyStuffRate_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Star'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Star = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Rate of class  tagFairyStuffRate_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStuffRate_ToLua_unsigned_Rate
static int tolua_get_tagFairyStuffRate_ToLua_unsigned_Rate(lua_State* tolua_S)
{
  tagFairyStuffRate_ToLua* self = (tagFairyStuffRate_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Rate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Rate of class  tagFairyStuffRate_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStuffRate_ToLua_unsigned_Rate
static int tolua_set_tagFairyStuffRate_ToLua_unsigned_Rate(lua_State* tolua_S)
{
  tagFairyStuffRate_ToLua* self = (tagFairyStuffRate_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Rate = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemID of class  tagFairyStarStuffDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStarStuffDef_ToLua_ItemID
static int tolua_get_tagFairyStarStuffDef_ToLua_ItemID(lua_State* tolua_S)
{
  tagFairyStarStuffDef_ToLua* self = (tagFairyStarStuffDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemID of class  tagFairyStarStuffDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStarStuffDef_ToLua_ItemID
static int tolua_set_tagFairyStarStuffDef_ToLua_ItemID(lua_State* tolua_S)
{
  tagFairyStarStuffDef_ToLua* self = (tagFairyStarStuffDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MinStar of class  tagFairyStarStuffDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStarStuffDef_ToLua_unsigned_MinStar
static int tolua_get_tagFairyStarStuffDef_ToLua_unsigned_MinStar(lua_State* tolua_S)
{
  tagFairyStarStuffDef_ToLua* self = (tagFairyStarStuffDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinStar'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MinStar);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MinStar of class  tagFairyStarStuffDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStarStuffDef_ToLua_unsigned_MinStar
static int tolua_set_tagFairyStarStuffDef_ToLua_unsigned_MinStar(lua_State* tolua_S)
{
  tagFairyStarStuffDef_ToLua* self = (tagFairyStarStuffDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinStar'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MinStar = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxStar of class  tagFairyStarStuffDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStarStuffDef_ToLua_unsigned_MaxStar
static int tolua_get_tagFairyStarStuffDef_ToLua_unsigned_MaxStar(lua_State* tolua_S)
{
  tagFairyStarStuffDef_ToLua* self = (tagFairyStarStuffDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxStar'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxStar);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxStar of class  tagFairyStarStuffDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStarStuffDef_ToLua_unsigned_MaxStar
static int tolua_set_tagFairyStarStuffDef_ToLua_unsigned_MaxStar(lua_State* tolua_S)
{
  tagFairyStarStuffDef_ToLua* self = (tagFairyStarStuffDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxStar'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxStar = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StuffRate of class  tagFairyStarStuffDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagFairyStarStuffDef_ToLua_StuffRate
static int tolua_get_GameEngineTolua_tagFairyStarStuffDef_ToLua_StuffRate(lua_State* tolua_S)
{
 int tolua_index;
  tagFairyStarStuffDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagFairyStarStuffDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=FAIRY_MAX_STAR)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->StuffRate[tolua_index],"tagFairyStuffRate_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StuffRate of class  tagFairyStarStuffDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagFairyStarStuffDef_ToLua_StuffRate
static int tolua_set_GameEngineTolua_tagFairyStarStuffDef_ToLua_StuffRate(lua_State* tolua_S)
{
 int tolua_index;
  tagFairyStarStuffDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagFairyStarStuffDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=FAIRY_MAX_STAR)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->StuffRate[tolua_index] = *((tagFairyStuffRate_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MainStuffID of class  tagFairyStarStuff_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStarStuff_ToLua_MainStuffID
static int tolua_get_tagFairyStarStuff_ToLua_MainStuffID(lua_State* tolua_S)
{
  tagFairyStarStuff_ToLua* self = (tagFairyStarStuff_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MainStuffID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MainStuffID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MainStuffID of class  tagFairyStarStuff_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStarStuff_ToLua_MainStuffID
static int tolua_set_tagFairyStarStuff_ToLua_MainStuffID(lua_State* tolua_S)
{
  tagFairyStarStuff_ToLua* self = (tagFairyStarStuff_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MainStuffID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MainStuffID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MainStuffNum of class  tagFairyStarStuff_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStarStuff_ToLua_MainStuffNum
static int tolua_get_tagFairyStarStuff_ToLua_MainStuffNum(lua_State* tolua_S)
{
  tagFairyStarStuff_ToLua* self = (tagFairyStarStuff_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MainStuffNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MainStuffNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MainStuffNum of class  tagFairyStarStuff_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStarStuff_ToLua_MainStuffNum
static int tolua_set_tagFairyStarStuff_ToLua_MainStuffNum(lua_State* tolua_S)
{
  tagFairyStarStuff_ToLua* self = (tagFairyStarStuff_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MainStuffNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MainStuffNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Money of class  tagFairyStarStuff_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStarStuff_ToLua_Money
static int tolua_get_tagFairyStarStuff_ToLua_Money(lua_State* tolua_S)
{
  tagFairyStarStuff_ToLua* self = (tagFairyStarStuff_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Money'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Money);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Money of class  tagFairyStarStuff_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStarStuff_ToLua_Money
static int tolua_set_tagFairyStarStuff_ToLua_Money(lua_State* tolua_S)
{
  tagFairyStarStuff_ToLua* self = (tagFairyStarStuff_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Money'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Money = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FairyID of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStarDef_ToLua_FairyID
static int tolua_get_tagFairyStarDef_ToLua_FairyID(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FairyID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->FairyID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FairyID of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStarDef_ToLua_FairyID
static int tolua_set_tagFairyStarDef_ToLua_FairyID(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FairyID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FairyID = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Star of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStarDef_ToLua_Star
static int tolua_get_tagFairyStarDef_ToLua_Star(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Star'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Star);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Star of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStarDef_ToLua_Star
static int tolua_set_tagFairyStarDef_ToLua_Star(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Star'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Star = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StarBackRate of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStarDef_ToLua_unsigned_StarBackRate
static int tolua_get_tagFairyStarDef_ToLua_unsigned_StarBackRate(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StarBackRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StarBackRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StarBackRate of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStarDef_ToLua_unsigned_StarBackRate
static int tolua_set_tagFairyStarDef_ToLua_unsigned_StarBackRate(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StarBackRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StarBackRate = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PetExpMul of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStarDef_ToLua_unsigned_PetExpMul
static int tolua_get_tagFairyStarDef_ToLua_unsigned_PetExpMul(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetExpMul'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PetExpMul);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PetExpMul of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStarDef_ToLua_unsigned_PetExpMul
static int tolua_set_tagFairyStarDef_ToLua_unsigned_PetExpMul(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PetExpMul'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PetExpMul = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AttrType of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStarDef_ToLua_unsigned_AttrType
static int tolua_get_tagFairyStarDef_ToLua_unsigned_AttrType(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AttrType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AttrType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AttrType of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStarDef_ToLua_unsigned_AttrType
static int tolua_set_tagFairyStarDef_ToLua_unsigned_AttrType(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AttrType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AttrType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Atk of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStarDef_ToLua_Atk
static int tolua_get_tagFairyStarDef_ToLua_Atk(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Atk'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Atk);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Atk of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStarDef_ToLua_Atk
static int tolua_set_tagFairyStarDef_ToLua_Atk(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Atk'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Atk = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StarUpStuff of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStarDef_ToLua_StarUpStuff
static int tolua_get_tagFairyStarDef_ToLua_StarUpStuff(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StarUpStuff'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->StarUpStuff,"tagFairyStarStuff_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StarUpStuff of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStarDef_ToLua_StarUpStuff
static int tolua_set_tagFairyStarDef_ToLua_StarUpStuff(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StarUpStuff'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagFairyStarStuff_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StarUpStuff = *((tagFairyStarStuff_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: StarSuccRate of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagFairyStarDef_ToLua_StarSuccRate
static int tolua_get_tagFairyStarDef_ToLua_StarSuccRate(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StarSuccRate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->StarSuccRate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: StarSuccRate of class  tagFairyStarDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagFairyStarDef_ToLua_StarSuccRate
static int tolua_set_tagFairyStarDef_ToLua_StarSuccRate(lua_State* tolua_S)
{
  tagFairyStarDef_ToLua* self = (tagFairyStarDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'StarSuccRate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->StarSuccRate = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: trumpPre of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_trumpPre00
static int tolua_GameEngineTolua_GameTrump_trumpPre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nGridIdx = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'trumpPre'",NULL);
#endif
  {
   self->trumpPre(nHightId,nLowId,nGridIdx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'trumpPre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: trumpEvolve of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_trumpEvolve00
static int tolua_GameEngineTolua_GameTrump_trumpEvolve00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nGridIdx = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'trumpEvolve'",NULL);
#endif
  {
   self->trumpEvolve(nHightId,nLowId,nGridIdx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'trumpEvolve'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: trumpStopEvolve of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_trumpStopEvolve00
static int tolua_GameEngineTolua_GameTrump_trumpStopEvolve00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nGridIdx = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'trumpStopEvolve'",NULL);
#endif
  {
   self->trumpStopEvolve(nHightId,nLowId,nGridIdx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'trumpStopEvolve'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: trumpBack of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_trumpBack00
static int tolua_GameEngineTolua_GameTrump_trumpBack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nGridIdx = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'trumpBack'",NULL);
#endif
  {
   self->trumpBack(nHightId,nLowId,nGridIdx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'trumpBack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: trumpInfuseExp of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_trumpInfuseExp00
static int tolua_GameEngineTolua_GameTrump_trumpInfuseExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nHightId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLowId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nGridIdx = ((int)  tolua_tonumber(tolua_S,4,0));
  int nIntoExp = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'trumpInfuseExp'",NULL);
#endif
  {
   self->trumpInfuseExp(nHightId,nLowId,nGridIdx,nIntoExp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'trumpInfuseExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTrumpMaxNum of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_getTrumpMaxNum00
static int tolua_GameEngineTolua_GameTrump_getTrumpMaxNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTrumpMaxNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getTrumpMaxNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTrumpMaxNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTrumpNum of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_getTrumpNum00
static int tolua_GameEngineTolua_GameTrump_getTrumpNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTrumpNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getTrumpNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTrumpNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRoleFairy of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_getRoleFairy00
static int tolua_GameEngineTolua_GameTrump_getRoleFairy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nGridIdx = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRoleFairy'",NULL);
#endif
  {
   tagRoleFairy_ToLua* tolua_ret = (tagRoleFairy_ToLua*)  self->getRoleFairy(nGridIdx);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagRoleFairy_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRoleFairy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCampRoleFairy of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_getCampRoleFairy00
static int tolua_GameEngineTolua_GameTrump_getCampRoleFairy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCampRoleFairy'",NULL);
#endif
  {
   tagRoleFairy_ToLua* tolua_ret = (tagRoleFairy_ToLua*)  self->getCampRoleFairy();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagRoleFairy_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCampRoleFairy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isAnyFairyCamp of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_isAnyFairyCamp00
static int tolua_GameEngineTolua_GameTrump_isAnyFairyCamp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isAnyFairyCamp'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isAnyFairyCamp();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isAnyFairyCamp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFairyDef of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_getFairyDef00
static int tolua_GameEngineTolua_GameTrump_getFairyDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFairyDef'",NULL);
#endif
  {
   tagFairyDef_ToLua* tolua_ret = (tagFairyDef_ToLua*)  self->getFairyDef(nId,nLv);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagFairyDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFairyDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPre of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_isPre00
static int tolua_GameEngineTolua_GameTrump_isPre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPre'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPre();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canBackTrump of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_canBackTrump00
static int tolua_GameEngineTolua_GameTrump_canBackTrump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canBackTrump'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canBackTrump();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canBackTrump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canCampaignTrump of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_canCampaignTrump00
static int tolua_GameEngineTolua_GameTrump_canCampaignTrump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canCampaignTrump'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canCampaignTrump();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canCampaignTrump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canCampInPworld of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_canCampInPworld00
static int tolua_GameEngineTolua_GameTrump_canCampInPworld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nRealMapId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canCampInPworld'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canCampInPworld(nRealMapId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canCampInPworld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFairyInState of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_isFairyInState00
static int tolua_GameEngineTolua_GameTrump_isFairyInState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nFairyState = ((int)  tolua_tonumber(tolua_S,2,0));
  int nState = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFairyInState'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFairyInState(nFairyState,nState);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFairyInState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCampFairyId of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_getCampFairyId00
static int tolua_GameEngineTolua_GameTrump_getCampFairyId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCampFairyId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCampFairyId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCampFairyId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCampFairyLv of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_getCampFairyLv00
static int tolua_GameEngineTolua_GameTrump_getCampFairyLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCampFairyLv'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCampFairyLv();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCampFairyLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFairyStarStuffDef of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_getFairyStarStuffDef00
static int tolua_GameEngineTolua_GameTrump_getFairyStarStuffDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int itemId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFairyStarStuffDef'",NULL);
#endif
  {
   const tagFairyStarStuffDef_ToLua* tolua_ret = (const tagFairyStarStuffDef_ToLua*)  self->getFairyStarStuffDef(itemId);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagFairyStarStuffDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFairyStarStuffDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFairyStarDef of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_getFairyStarDef00
static int tolua_GameEngineTolua_GameTrump_getFairyStarDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nFairyId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nStar = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFairyStarDef'",NULL);
#endif
  {
   const tagFairyStarDef_ToLua* tolua_ret = (const tagFairyStarDef_ToLua*)  self->getFairyStarDef(nFairyId,nStar);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagFairyStarDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFairyStarDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPetTraitDef of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_getPetTraitDef00
static int tolua_GameEngineTolua_GameTrump_getPetTraitDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nTraidId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nStar = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPetTraitDef'",NULL);
#endif
  {
   const tagPetTraitDef_ToLua* tolua_ret = (const tagPetTraitDef_ToLua*)  self->getPetTraitDef(nTraidId,nStar);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagPetTraitDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetTraitDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestOpStarUp of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_requestOpStarUp00
static int tolua_GameEngineTolua_GameTrump_requestOpStarUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nIdx = ((int)  tolua_tonumber(tolua_S,2,0));
  int nStuffID = ((int)  tolua_tonumber(tolua_S,3,0));
  int nStuffNum = ((int)  tolua_tonumber(tolua_S,4,0));
  int nMoney = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestOpStarUp'",NULL);
#endif
  {
   self->requestOpStarUp(nIdx,nStuffID,nStuffNum,nMoney);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestOpStarUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestOpKeyIn of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_requestOpKeyIn00
static int tolua_GameEngineTolua_GameTrump_requestOpKeyIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestOpKeyIn'",NULL);
#endif
  {
   self->requestOpKeyIn(nIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestOpKeyIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestKeyInItem of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_requestKeyInItem00
static int tolua_GameEngineTolua_GameTrump_requestKeyInItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nSrcList = ((int)  tolua_tonumber(tolua_S,2,0));
  int nSrcGrid = ((int)  tolua_tonumber(tolua_S,3,0));
  int nDestList = ((int)  tolua_tonumber(tolua_S,4,0));
  int nDestGrid = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestKeyInItem'",NULL);
#endif
  {
   self->requestKeyInItem(nSrcList,nSrcGrid,nDestList,nDestGrid);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestKeyInItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestDecEvolveTime of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_requestDecEvolveTime00
static int tolua_GameEngineTolua_GameTrump_requestDecEvolveTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int nIdx = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestDecEvolveTime'",NULL);
#endif
  {
   self->requestDecEvolveTime(nIdx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestDecEvolveTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStrengthFairyLevel of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_getStrengthFairyLevel00
static int tolua_GameEngineTolua_GameTrump_getStrengthFairyLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
  int fairyID = ((int)  tolua_tonumber(tolua_S,2,0));
  int StarLv = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStrengthFairyLevel'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getStrengthFairyLevel(fairyID,StarLv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStrengthFairyLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clearTrumpData of class  GameTrump */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameTrump_clearTrumpData00
static int tolua_GameEngineTolua_GameTrump_clearTrumpData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameTrump",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameTrump* self = (GameTrump*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clearTrumpData'",NULL);
#endif
  {
   self->clearTrumpData();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearTrumpData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPkMode of class  GameActor_PVP */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_PVP_getPkMode00
static int tolua_GameEngineTolua_GameActor_PVP_getPkMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor_PVP",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor_PVP* self = (GameActor_PVP*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPkMode'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPkMode();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPkMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isForcePkMode of class  GameActor_PVP */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_PVP_isForcePkMode00
static int tolua_GameEngineTolua_GameActor_PVP_isForcePkMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor_PVP",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor_PVP* self = (GameActor_PVP*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isForcePkMode'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isForcePkMode();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isForcePkMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmok of class  GameActor_PVP */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_PVP_getAmok00
static int tolua_GameEngineTolua_GameActor_PVP_getAmok00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor_PVP",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor_PVP* self = (GameActor_PVP*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pActor = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmok'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getAmok(pActor);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmok'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmok of class  GameActor_PVP */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_PVP_getAmok01
static int tolua_GameEngineTolua_GameActor_PVP_getAmok01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor_PVP",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GameActor_PVP* self = (GameActor_PVP*)  tolua_tousertype(tolua_S,1,0);
  int amok = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmok'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getAmok(amok);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GameActor_PVP_getAmok00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPkValue of class  GameActor_PVP */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_PVP_getPkValue00
static int tolua_GameEngineTolua_GameActor_PVP_getPkValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor_PVP",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor_PVP* self = (GameActor_PVP*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPkValue'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPkValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPkValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changePKMode of class  GameActor_PVP */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_PVP_changePKMode00
static int tolua_GameEngineTolua_GameActor_PVP_changePKMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor_PVP",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor_PVP* self = (GameActor_PVP*)  tolua_tousertype(tolua_S,1,0);
  int mode = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changePKMode'",NULL);
#endif
  {
   self->changePKMode(mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changePKMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeNextPkMode of class  GameActor_PVP */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_PVP_changeNextPkMode00
static int tolua_GameEngineTolua_GameActor_PVP_changeNextPkMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor_PVP",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor_PVP* self = (GameActor_PVP*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeNextPkMode'",NULL);
#endif
  {
   self->changeNextPkMode();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeNextPkMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestSafePK of class  GameActor_PVP */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_PVP_requestSafePK00
static int tolua_GameEngineTolua_GameActor_PVP_requestSafePK00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor_PVP",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor_PVP* self = (GameActor_PVP*)  tolua_tousertype(tolua_S,1,0);
  const char* szRoleName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestSafePK'",NULL);
#endif
  {
   self->requestSafePK(szRoleName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestSafePK'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestSafePKRes of class  GameActor_PVP */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameActor_PVP_requestSafePKRes00
static int tolua_GameEngineTolua_GameActor_PVP_requestSafePKRes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameActor_PVP",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameActor_PVP* self = (GameActor_PVP*)  tolua_tousertype(tolua_S,1,0);
  int nFlag = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* szRoleName = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestSafePKRes'",NULL);
#endif
  {
   self->requestSafePKRes(nFlag,szRoleName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestSafePKRes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: damage of class  GameDamageHealInfo */
#ifndef TOLUA_DISABLE_tolua_get_GameDamageHealInfo_damage
static int tolua_get_GameDamageHealInfo_damage(lua_State* tolua_S)
{
  GameDamageHealInfo* self = (GameDamageHealInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'damage'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->damage);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: damage of class  GameDamageHealInfo */
#ifndef TOLUA_DISABLE_tolua_set_GameDamageHealInfo_damage
static int tolua_set_GameDamageHealInfo_damage(lua_State* tolua_S)
{
  GameDamageHealInfo* self = (GameDamageHealInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'damage'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->damage = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: heal of class  GameDamageHealInfo */
#ifndef TOLUA_DISABLE_tolua_get_GameDamageHealInfo_heal
static int tolua_get_GameDamageHealInfo_heal(lua_State* tolua_S)
{
  GameDamageHealInfo* self = (GameDamageHealInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'heal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->heal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: heal of class  GameDamageHealInfo */
#ifndef TOLUA_DISABLE_tolua_set_GameDamageHealInfo_heal
static int tolua_set_GameDamageHealInfo_heal(lua_State* tolua_S)
{
  GameDamageHealInfo* self = (GameDamageHealInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'heal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->heal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: hurt of class  GameDamageHealInfo */
#ifndef TOLUA_DISABLE_tolua_get_GameDamageHealInfo_hurt
static int tolua_get_GameDamageHealInfo_hurt(lua_State* tolua_S)
{
  GameDamageHealInfo* self = (GameDamageHealInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'hurt'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->hurt);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: hurt of class  GameDamageHealInfo */
#ifndef TOLUA_DISABLE_tolua_set_GameDamageHealInfo_hurt
static int tolua_set_GameDamageHealInfo_hurt(lua_State* tolua_S)
{
  GameDamageHealInfo* self = (GameDamageHealInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'hurt'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->hurt = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: time of class  GameDamageHealInfo */
#ifndef TOLUA_DISABLE_tolua_get_GameDamageHealInfo_time
static int tolua_get_GameDamageHealInfo_time(lua_State* tolua_S)
{
  GameDamageHealInfo* self = (GameDamageHealInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'time'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->time);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: time of class  GameDamageHealInfo */
#ifndef TOLUA_DISABLE_tolua_set_GameDamageHealInfo_time
static int tolua_set_GameDamageHealInfo_time(lua_State* tolua_S)
{
  GameDamageHealInfo* self = (GameDamageHealInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'time'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->time = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: targetId of class  GameBossInfo */
#ifndef TOLUA_DISABLE_tolua_get_GameBossInfo_targetId
static int tolua_get_GameBossInfo_targetId(lua_State* tolua_S)
{
  GameBossInfo* self = (GameBossInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'targetId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->targetId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: targetId of class  GameBossInfo */
#ifndef TOLUA_DISABLE_tolua_set_GameBossInfo_targetId
static int tolua_set_GameBossInfo_targetId(lua_State* tolua_S)
{
  GameBossInfo* self = (GameBossInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'targetId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->targetId = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFilter of class  GameDamageHealCounter */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameDamageHealCounter_SetFilter00
static int tolua_GameEngineTolua_GameDamageHealCounter_SetFilter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameDamageHealCounter",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameDamageHealCounter* self = (GameDamageHealCounter*)  tolua_tousertype(tolua_S,1,0);
  const char* func = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFilter'",NULL);
#endif
  {
   self->SetFilter(func);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFilter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextPlayer of class  GameDamageHealCounter */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameDamageHealCounter_getNextPlayer00
static int tolua_GameEngineTolua_GameDamageHealCounter_getNextPlayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameDamageHealCounter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameDamageHealCounter* self = (GameDamageHealCounter*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pActor = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextPlayer'",NULL);
#endif
  {
   GameActor* tolua_ret = (GameActor*)  self->getNextPlayer(pActor);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextPlayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerInfo of class  GameDamageHealCounter */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameDamageHealCounter_getPlayerInfo00
static int tolua_GameEngineTolua_GameDamageHealCounter_getPlayerInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameDamageHealCounter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameDamageHealCounter* self = (GameDamageHealCounter*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pActor = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerInfo'",NULL);
#endif
  {
   const GameDamageHealInfo* tolua_ret = (const GameDamageHealInfo*)  self->getPlayerInfo(pActor);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const GameDamageHealInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reset of class  GameDamageHealCounter */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameDamageHealCounter_reset00
static int tolua_GameEngineTolua_GameDamageHealCounter_reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameDamageHealCounter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameDamageHealCounter* self = (GameDamageHealCounter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reset'",NULL);
#endif
  {
   self->reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextBoss of class  GameDamageHealCounter */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameDamageHealCounter_getNextBoss00
static int tolua_GameEngineTolua_GameDamageHealCounter_getNextBoss00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameDamageHealCounter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameDamageHealCounter* self = (GameDamageHealCounter*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pActor = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextBoss'",NULL);
#endif
  {
   GameActor* tolua_ret = (GameActor*)  self->getNextBoss(pActor);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextBoss'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBossInfo of class  GameDamageHealCounter */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameDamageHealCounter_getBossInfo00
static int tolua_GameEngineTolua_GameDamageHealCounter_getBossInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameDamageHealCounter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameDamageHealCounter* self = (GameDamageHealCounter*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pActor = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBossInfo'",NULL);
#endif
  {
   const GameBossInfo* tolua_ret = (const GameBossInfo*)  self->getBossInfo(pActor);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const GameBossInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBossInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: freeTimeTotal of class  PworldLimitData */
#ifndef TOLUA_DISABLE_tolua_get_PworldLimitData_freeTimeTotal
static int tolua_get_PworldLimitData_freeTimeTotal(lua_State* tolua_S)
{
  PworldLimitData* self = (PworldLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'freeTimeTotal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->freeTimeTotal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: freeTimeTotal of class  PworldLimitData */
#ifndef TOLUA_DISABLE_tolua_set_PworldLimitData_freeTimeTotal
static int tolua_set_PworldLimitData_freeTimeTotal(lua_State* tolua_S)
{
  PworldLimitData* self = (PworldLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'freeTimeTotal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->freeTimeTotal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: freeTimeUse of class  PworldLimitData */
#ifndef TOLUA_DISABLE_tolua_get_PworldLimitData_freeTimeUse
static int tolua_get_PworldLimitData_freeTimeUse(lua_State* tolua_S)
{
  PworldLimitData* self = (PworldLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'freeTimeUse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->freeTimeUse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: freeTimeUse of class  PworldLimitData */
#ifndef TOLUA_DISABLE_tolua_set_PworldLimitData_freeTimeUse
static int tolua_set_PworldLimitData_freeTimeUse(lua_State* tolua_S)
{
  PworldLimitData* self = (PworldLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'freeTimeUse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->freeTimeUse = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: itemId of class  PworldLimitData */
#ifndef TOLUA_DISABLE_tolua_get_PworldLimitData_itemId
static int tolua_get_PworldLimitData_itemId(lua_State* tolua_S)
{
  PworldLimitData* self = (PworldLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'itemId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->itemId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: itemId of class  PworldLimitData */
#ifndef TOLUA_DISABLE_tolua_set_PworldLimitData_itemId
static int tolua_set_PworldLimitData_itemId(lua_State* tolua_S)
{
  PworldLimitData* self = (PworldLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'itemId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->itemId = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: itemTimeTotal of class  PworldLimitData */
#ifndef TOLUA_DISABLE_tolua_get_PworldLimitData_itemTimeTotal
static int tolua_get_PworldLimitData_itemTimeTotal(lua_State* tolua_S)
{
  PworldLimitData* self = (PworldLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'itemTimeTotal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->itemTimeTotal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: itemTimeTotal of class  PworldLimitData */
#ifndef TOLUA_DISABLE_tolua_set_PworldLimitData_itemTimeTotal
static int tolua_set_PworldLimitData_itemTimeTotal(lua_State* tolua_S)
{
  PworldLimitData* self = (PworldLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'itemTimeTotal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->itemTimeTotal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: itemTimeUse of class  PworldLimitData */
#ifndef TOLUA_DISABLE_tolua_get_PworldLimitData_itemTimeUse
static int tolua_get_PworldLimitData_itemTimeUse(lua_State* tolua_S)
{
  PworldLimitData* self = (PworldLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'itemTimeUse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->itemTimeUse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: itemTimeUse of class  PworldLimitData */
#ifndef TOLUA_DISABLE_tolua_set_PworldLimitData_itemTimeUse
static int tolua_set_PworldLimitData_itemTimeUse(lua_State* tolua_S)
{
  PworldLimitData* self = (PworldLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'itemTimeUse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->itemTimeUse = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  PworldLimitData */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_PworldLimitData_new00
static int tolua_GameEngineTolua_PworldLimitData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PworldLimitData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PworldLimitData* tolua_ret = (PworldLimitData*)  new PworldLimitData();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"PworldLimitData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  PworldLimitData */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_PworldLimitData_new00_local
static int tolua_GameEngineTolua_PworldLimitData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PworldLimitData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PworldLimitData* tolua_ret = (PworldLimitData*)  new PworldLimitData();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"PworldLimitData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPworldData of class  PworldLimitInfo */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_PworldLimitInfo_getPworldData00
static int tolua_GameEngineTolua_PworldLimitInfo_getPworldData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PworldLimitInfo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PworldLimitInfo* self = (PworldLimitInfo*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPworldData'",NULL);
#endif
  {
   PworldLimitData& tolua_ret = (PworldLimitData&)  self->getPworldData(id);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"PworldLimitData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPworldData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canEnterPworld of class  PworldLimitInfo */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_PworldLimitInfo_canEnterPworld00
static int tolua_GameEngineTolua_PworldLimitInfo_canEnterPworld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PworldLimitInfo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PworldLimitInfo* self = (PworldLimitInfo*)  tolua_tousertype(tolua_S,1,0);
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canEnterPworld'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canEnterPworld(nId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canEnterPworld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: index of class  BattleLimitData */
#ifndef TOLUA_DISABLE_tolua_get_BattleLimitData_index
static int tolua_get_BattleLimitData_index(lua_State* tolua_S)
{
  BattleLimitData* self = (BattleLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'index'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->index);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: index of class  BattleLimitData */
#ifndef TOLUA_DISABLE_tolua_set_BattleLimitData_index
static int tolua_set_BattleLimitData_index(lua_State* tolua_S)
{
  BattleLimitData* self = (BattleLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'index'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->index = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Total of class  BattleLimitData */
#ifndef TOLUA_DISABLE_tolua_get_BattleLimitData_Total
static int tolua_get_BattleLimitData_Total(lua_State* tolua_S)
{
  BattleLimitData* self = (BattleLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Total'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Total);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Total of class  BattleLimitData */
#ifndef TOLUA_DISABLE_tolua_set_BattleLimitData_Total
static int tolua_set_BattleLimitData_Total(lua_State* tolua_S)
{
  BattleLimitData* self = (BattleLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Total'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Total = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Use of class  BattleLimitData */
#ifndef TOLUA_DISABLE_tolua_get_BattleLimitData_Use
static int tolua_get_BattleLimitData_Use(lua_State* tolua_S)
{
  BattleLimitData* self = (BattleLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Use'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Use);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Use of class  BattleLimitData */
#ifndef TOLUA_DISABLE_tolua_set_BattleLimitData_Use
static int tolua_set_BattleLimitData_Use(lua_State* tolua_S)
{
  BattleLimitData* self = (BattleLimitData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Use'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Use = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  BattleLimitData */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_BattleLimitData_new00
static int tolua_GameEngineTolua_BattleLimitData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BattleLimitData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   BattleLimitData* tolua_ret = (BattleLimitData*)  new BattleLimitData();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattleLimitData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  BattleLimitData */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_BattleLimitData_new00_local
static int tolua_GameEngineTolua_BattleLimitData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BattleLimitData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   BattleLimitData* tolua_ret = (BattleLimitData*)  new BattleLimitData();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"BattleLimitData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBattleData of class  BattleLimitInfo */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_BattleLimitInfo_getBattleData00
static int tolua_GameEngineTolua_BattleLimitInfo_getBattleData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattleLimitInfo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattleLimitInfo* self = (BattleLimitInfo*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBattleData'",NULL);
#endif
  {
   BattleLimitData& tolua_ret = (BattleLimitData&)  self->getBattleData(id);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"BattleLimitData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBattleData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: X of class  tagResPosEngine_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagResPosEngine_ToLua_X
static int tolua_get_tagResPosEngine_ToLua_X(lua_State* tolua_S)
{
  tagResPosEngine_ToLua* self = (tagResPosEngine_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->X);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: X of class  tagResPosEngine_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagResPosEngine_ToLua_X
static int tolua_set_tagResPosEngine_ToLua_X(lua_State* tolua_S)
{
  tagResPosEngine_ToLua* self = (tagResPosEngine_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->X = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Y of class  tagResPosEngine_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagResPosEngine_ToLua_Y
static int tolua_get_tagResPosEngine_ToLua_Y(lua_State* tolua_S)
{
  tagResPosEngine_ToLua* self = (tagResPosEngine_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Y of class  tagResPosEngine_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagResPosEngine_ToLua_Y
static int tolua_set_tagResPosEngine_ToLua_Y(lua_State* tolua_S)
{
  tagResPosEngine_ToLua* self = (tagResPosEngine_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Y = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemID of class  tagCangBaoTuMapInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCangBaoTuMapInfo_ToLua_unsigned_ItemID
static int tolua_get_tagCangBaoTuMapInfo_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagCangBaoTuMapInfo_ToLua* self = (tagCangBaoTuMapInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemID of class  tagCangBaoTuMapInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCangBaoTuMapInfo_ToLua_unsigned_ItemID
static int tolua_set_tagCangBaoTuMapInfo_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagCangBaoTuMapInfo_ToLua* self = (tagCangBaoTuMapInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MapID of class  tagCangBaoTuMapInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCangBaoTuMapInfo_ToLua_unsigned_MapID
static int tolua_get_tagCangBaoTuMapInfo_ToLua_unsigned_MapID(lua_State* tolua_S)
{
  tagCangBaoTuMapInfo_ToLua* self = (tagCangBaoTuMapInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MapID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MapID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MapID of class  tagCangBaoTuMapInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCangBaoTuMapInfo_ToLua_unsigned_MapID
static int tolua_set_tagCangBaoTuMapInfo_ToLua_unsigned_MapID(lua_State* tolua_S)
{
  tagCangBaoTuMapInfo_ToLua* self = (tagCangBaoTuMapInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MapID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MapID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Pos of class  tagCangBaoTuMapInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCangBaoTuMapInfo_ToLua_Pos
static int tolua_get_tagCangBaoTuMapInfo_ToLua_Pos(lua_State* tolua_S)
{
  tagCangBaoTuMapInfo_ToLua* self = (tagCangBaoTuMapInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pos'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Pos,"tagResPosEngine_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Pos of class  tagCangBaoTuMapInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCangBaoTuMapInfo_ToLua_Pos
static int tolua_set_tagCangBaoTuMapInfo_ToLua_Pos(lua_State* tolua_S)
{
  tagCangBaoTuMapInfo_ToLua* self = (tagCangBaoTuMapInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pos'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagResPosEngine_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Pos = *((tagResPosEngine_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UpdateDayTime of class  tagCangBaoTuInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCangBaoTuInfo_ToLua_unsigned_UpdateDayTime
static int tolua_get_tagCangBaoTuInfo_ToLua_unsigned_UpdateDayTime(lua_State* tolua_S)
{
  tagCangBaoTuInfo_ToLua* self = (tagCangBaoTuInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UpdateDayTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->UpdateDayTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UpdateDayTime of class  tagCangBaoTuInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCangBaoTuInfo_ToLua_unsigned_UpdateDayTime
static int tolua_set_tagCangBaoTuInfo_ToLua_unsigned_UpdateDayTime(lua_State* tolua_S)
{
  tagCangBaoTuInfo_ToLua* self = (tagCangBaoTuInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UpdateDayTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UpdateDayTime = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DayTimes of class  tagCangBaoTuInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCangBaoTuInfo_ToLua_DayTimes
static int tolua_get_tagCangBaoTuInfo_ToLua_DayTimes(lua_State* tolua_S)
{
  tagCangBaoTuInfo_ToLua* self = (tagCangBaoTuInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DayTimes'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DayTimes);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DayTimes of class  tagCangBaoTuInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCangBaoTuInfo_ToLua_DayTimes
static int tolua_set_tagCangBaoTuInfo_ToLua_DayTimes(lua_State* tolua_S)
{
  tagCangBaoTuInfo_ToLua* self = (tagCangBaoTuInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DayTimes'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DayTimes = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CangBaoTuMapInfo of class  tagCangBaoTuInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagCangBaoTuInfo_ToLua_CangBaoTuMapInfo
static int tolua_get_GameEngineTolua_tagCangBaoTuInfo_ToLua_CangBaoTuMapInfo(lua_State* tolua_S)
{
 int tolua_index;
  tagCangBaoTuInfo_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagCangBaoTuInfo_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=CANGBAOTU_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->CangBaoTuMapInfo[tolua_index],"tagCangBaoTuMapInfo_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CangBaoTuMapInfo of class  tagCangBaoTuInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagCangBaoTuInfo_ToLua_CangBaoTuMapInfo
static int tolua_set_GameEngineTolua_tagCangBaoTuInfo_ToLua_CangBaoTuMapInfo(lua_State* tolua_S)
{
 int tolua_index;
  tagCangBaoTuInfo_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagCangBaoTuInfo_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=CANGBAOTU_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->CangBaoTuMapInfo[tolua_index] = *((tagCangBaoTuMapInfo_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MapID of class  tagCangBaoTuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCangBaoTuDef_ToLua_unsigned_MapID
static int tolua_get_tagCangBaoTuDef_ToLua_unsigned_MapID(lua_State* tolua_S)
{
  tagCangBaoTuDef_ToLua* self = (tagCangBaoTuDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MapID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MapID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MapID of class  tagCangBaoTuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCangBaoTuDef_ToLua_unsigned_MapID
static int tolua_set_tagCangBaoTuDef_ToLua_unsigned_MapID(lua_State* tolua_S)
{
  tagCangBaoTuDef_ToLua* self = (tagCangBaoTuDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MapID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MapID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagCangBaoTuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCangBaoTuDef_ToLua_unsigned_Level
static int tolua_get_tagCangBaoTuDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagCangBaoTuDef_ToLua* self = (tagCangBaoTuDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagCangBaoTuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCangBaoTuDef_ToLua_unsigned_Level
static int tolua_set_tagCangBaoTuDef_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagCangBaoTuDef_ToLua* self = (tagCangBaoTuDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ItemID of class  tagCangBaoTuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCangBaoTuDef_ToLua_unsigned_ItemID
static int tolua_get_tagCangBaoTuDef_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagCangBaoTuDef_ToLua* self = (tagCangBaoTuDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ItemID of class  tagCangBaoTuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCangBaoTuDef_ToLua_unsigned_ItemID
static int tolua_set_tagCangBaoTuDef_ToLua_unsigned_ItemID(lua_State* tolua_S)
{
  tagCangBaoTuDef_ToLua* self = (tagCangBaoTuDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ItemID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MapPic of class  tagCangBaoTuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCangBaoTuDef_ToLua_MapPic
static int tolua_get_tagCangBaoTuDef_ToLua_MapPic(lua_State* tolua_S)
{
  tagCangBaoTuDef_ToLua* self = (tagCangBaoTuDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MapPic'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->MapPic);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MapPic of class  tagCangBaoTuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCangBaoTuDef_ToLua_MapPic
static int tolua_set_tagCangBaoTuDef_ToLua_MapPic(lua_State* tolua_S)
{
  tagCangBaoTuDef_ToLua* self = (tagCangBaoTuDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MapPic'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->MapPic,tolua_tostring(tolua_S,2,0),RES_NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Pos of class  tagCangBaoTuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagCangBaoTuDef_ToLua_Pos
static int tolua_get_GameEngineTolua_tagCangBaoTuDef_ToLua_Pos(lua_State* tolua_S)
{
 int tolua_index;
  tagCangBaoTuDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagCangBaoTuDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=CANGBAOTUPOS_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Pos[tolua_index],"tagResPosEngine_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Pos of class  tagCangBaoTuDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagCangBaoTuDef_ToLua_Pos
static int tolua_set_GameEngineTolua_tagCangBaoTuDef_ToLua_Pos(lua_State* tolua_S)
{
 int tolua_index;
  tagCangBaoTuDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagCangBaoTuDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=CANGBAOTUPOS_NUM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Pos[tolua_index] = *((tagResPosEngine_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: getCangBaoTuDefDef */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_getCangBaoTuDefDef00
static int tolua_GameEngineTolua_getCangBaoTuDefDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nMapID = ((int)  tolua_tonumber(tolua_S,1,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemID = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   const tagCangBaoTuDef_ToLua* tolua_ret = (const tagCangBaoTuDef_ToLua*)  getCangBaoTuDefDef(nMapID,nLevel,nItemID);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagCangBaoTuDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCangBaoTuDefDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isCangBaoTuItem of class  GameCBT */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameCBT_isCangBaoTuItem00
static int tolua_GameEngineTolua_GameCBT_isCangBaoTuItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameCBT",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameCBT* self = (GameCBT*)  tolua_tousertype(tolua_S,1,0);
  int nItemID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isCangBaoTuItem'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isCangBaoTuItem(nItemID);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCangBaoTuItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxCangBaoTuMap of class  GameCBT */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameCBT_getMaxCangBaoTuMap00
static int tolua_GameEngineTolua_GameCBT_getMaxCangBaoTuMap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameCBT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameCBT* self = (GameCBT*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxCangBaoTuMap'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxCangBaoTuMap();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxCangBaoTuMap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCangBaoTuMapInfo of class  GameCBT */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameCBT_getCangBaoTuMapInfo00
static int tolua_GameEngineTolua_GameCBT_getCangBaoTuMapInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const GameCBT",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const GameCBT* self = (const GameCBT*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCangBaoTuMapInfo'",NULL);
#endif
  {
   const tagCangBaoTuMapInfo_ToLua& tolua_ret = (const tagCangBaoTuMapInfo_ToLua&)  self->getCangBaoTuMapInfo(nIndex);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagCangBaoTuMapInfo_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCangBaoTuMapInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCangBaoTuMapInfo of class  GameCBT */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameCBT_getCangBaoTuMapInfo01
static int tolua_GameEngineTolua_GameCBT_getCangBaoTuMapInfo01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameCBT",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GameCBT* self = (GameCBT*)  tolua_tousertype(tolua_S,1,0);
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCangBaoTuMapInfo'",NULL);
#endif
  {
   const tagCangBaoTuMapInfo_ToLua& tolua_ret = (const tagCangBaoTuMapInfo_ToLua&)  self->getCangBaoTuMapInfo(nIndex);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const tagCangBaoTuMapInfo_ToLua");
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_GameCBT_getCangBaoTuMapInfo00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCangBaoTuMapInfoByItemID of class  GameCBT */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameCBT_getCangBaoTuMapInfoByItemID00
static int tolua_GameEngineTolua_GameCBT_getCangBaoTuMapInfoByItemID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameCBT",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameCBT* self = (GameCBT*)  tolua_tousertype(tolua_S,1,0);
  int nItemID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCangBaoTuMapInfoByItemID'",NULL);
#endif
  {
   const tagCangBaoTuMapInfo_ToLua* tolua_ret = (const tagCangBaoTuMapInfo_ToLua*)  self->getCangBaoTuMapInfoByItemID(nItemID);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const tagCangBaoTuMapInfo_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCangBaoTuMapInfoByItemID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isArriveMaxCangBaoTimesOneDay of class  GameCBT */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameCBT_isArriveMaxCangBaoTimesOneDay00
static int tolua_GameEngineTolua_GameCBT_isArriveMaxCangBaoTimesOneDay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameCBT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameCBT* self = (GameCBT*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isArriveMaxCangBaoTimesOneDay'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isArriveMaxCangBaoTimesOneDay();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isArriveMaxCangBaoTimesOneDay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAlreadyUseTimes of class  GameCBT */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameCBT_getAlreadyUseTimes00
static int tolua_GameEngineTolua_GameCBT_getAlreadyUseTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameCBT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameCBT* self = (GameCBT*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAlreadyUseTimes'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getAlreadyUseTimes();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAlreadyUseTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCanUseTimes of class  GameCBT */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameCBT_getCanUseTimes00
static int tolua_GameEngineTolua_GameCBT_getCanUseTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameCBT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameCBT* self = (GameCBT*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCanUseTimes'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCanUseTimes();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCanUseTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send_reset of class  GameCBT */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameCBT_send_reset00
static int tolua_GameEngineTolua_GameCBT_send_reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameCBT",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameCBT* self = (GameCBT*)  tolua_tousertype(tolua_S,1,0);
  int nItemId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send_reset'",NULL);
#endif
  {
   self->send_reset(nItemId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isRequestReset of class  GameCBT */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameCBT_isRequestReset00
static int tolua_GameEngineTolua_GameCBT_isRequestReset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameCBT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameCBT* self = (GameCBT*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isRequestReset'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isRequestReset();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isRequestReset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRequestReset of class  GameCBT */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GameCBT_setRequestReset00
static int tolua_GameEngineTolua_GameCBT_setRequestReset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameCBT",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameCBT* self = (GameCBT*)  tolua_tousertype(tolua_S,1,0);
  bool bRequestReset = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRequestReset'",NULL);
#endif
  {
   self->setRequestReset(bRequestReset);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRequestReset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PassengerID of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMachinePassengerUIInfo_ToLua_PassengerID
static int tolua_get_tagMachinePassengerUIInfo_ToLua_PassengerID(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PassengerID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PassengerID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PassengerID of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMachinePassengerUIInfo_ToLua_PassengerID
static int tolua_set_tagMachinePassengerUIInfo_ToLua_PassengerID(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PassengerID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PassengerID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Level of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Level
static int tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Level);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Level of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Level
static int tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Level(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Level'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Level = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Career of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Career
static int tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Career(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Career'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Career);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Career of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Career
static int tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Career(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Career'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Career = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Head of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Head
static int tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Head(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Head'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Head);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Head of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Head
static int tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Head(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Head'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Head = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Hair of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Hair
static int tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Hair(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Hair'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Hair);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Hair of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Hair
static int tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Hair(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Hair'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Hair = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Face of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Face
static int tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Face(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Face'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Face);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Face of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Face
static int tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Face(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Face'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Face = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Gender of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Gender
static int tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Gender(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Gender'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Gender);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Gender of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Gender
static int tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Gender(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Gender'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Gender = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RoleName of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMachinePassengerUIInfo_ToLua_RoleName
static int tolua_get_tagMachinePassengerUIInfo_ToLua_RoleName(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RoleName'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->RoleName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RoleName of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMachinePassengerUIInfo_ToLua_RoleName
static int tolua_set_tagMachinePassengerUIInfo_ToLua_RoleName(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RoleName'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->RoleName,tolua_tostring(tolua_S,2,0),NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ClanName of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMachinePassengerUIInfo_ToLua_ClanName
static int tolua_get_tagMachinePassengerUIInfo_ToLua_ClanName(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ClanName'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->ClanName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ClanName of class  tagMachinePassengerUIInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMachinePassengerUIInfo_ToLua_ClanName
static int tolua_set_tagMachinePassengerUIInfo_ToLua_ClanName(lua_State* tolua_S)
{
  tagMachinePassengerUIInfo_ToLua* self = (tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ClanName'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->ClanName,tolua_tostring(tolua_S,2,0),NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxPassenger of class  tagCSActionMachinePassengerInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCSActionMachinePassengerInfo_ToLua_MaxPassenger
static int tolua_get_tagCSActionMachinePassengerInfo_ToLua_MaxPassenger(lua_State* tolua_S)
{
  tagCSActionMachinePassengerInfo_ToLua* self = (tagCSActionMachinePassengerInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxPassenger'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxPassenger);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxPassenger of class  tagCSActionMachinePassengerInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCSActionMachinePassengerInfo_ToLua_MaxPassenger
static int tolua_set_tagCSActionMachinePassengerInfo_ToLua_MaxPassenger(lua_State* tolua_S)
{
  tagCSActionMachinePassengerInfo_ToLua* self = (tagCSActionMachinePassengerInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxPassenger'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxPassenger = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Passengers of class  tagCSActionMachinePassengerInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagCSActionMachinePassengerInfo_ToLua_Passengers
static int tolua_get_GameEngineTolua_tagCSActionMachinePassengerInfo_ToLua_Passengers(lua_State* tolua_S)
{
 int tolua_index;
  tagCSActionMachinePassengerInfo_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagCSActionMachinePassengerInfo_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MON_MACHINE_PASSENGER)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Passengers[tolua_index],"tagMachinePassengerUIInfo_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Passengers of class  tagCSActionMachinePassengerInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagCSActionMachinePassengerInfo_ToLua_Passengers
static int tolua_set_GameEngineTolua_tagCSActionMachinePassengerInfo_ToLua_Passengers(lua_State* tolua_S)
{
 int tolua_index;
  tagCSActionMachinePassengerInfo_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagCSActionMachinePassengerInfo_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MON_MACHINE_PASSENGER)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Passengers[tolua_index] = *((tagMachinePassengerUIInfo_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMonsterMemID of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachineMonsterInfo_m_nMonsterMemID
static int tolua_get_tagMachineMonsterInfo_m_nMonsterMemID(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterMemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMonsterMemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMonsterMemID of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachineMonsterInfo_m_nMonsterMemID
static int tolua_set_tagMachineMonsterInfo_m_nMonsterMemID(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterMemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMonsterMemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMonsterDefID of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachineMonsterInfo_m_nMonsterDefID
static int tolua_get_tagMachineMonsterInfo_m_nMonsterDefID(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterDefID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMonsterDefID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMonsterDefID of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachineMonsterInfo_m_nMonsterDefID
static int tolua_set_tagMachineMonsterInfo_m_nMonsterDefID(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterDefID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMonsterDefID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nCollcetTime of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachineMonsterInfo_m_nCollcetTime
static int tolua_get_tagMachineMonsterInfo_m_nCollcetTime(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nCollcetTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nCollcetTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nCollcetTime of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachineMonsterInfo_m_nCollcetTime
static int tolua_set_tagMachineMonsterInfo_m_nCollcetTime(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nCollcetTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nCollcetTime = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nCollcetVal of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachineMonsterInfo_m_nCollcetVal
static int tolua_get_tagMachineMonsterInfo_m_nCollcetVal(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nCollcetVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nCollcetVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nCollcetVal of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachineMonsterInfo_m_nCollcetVal
static int tolua_set_tagMachineMonsterInfo_m_nCollcetVal(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nCollcetVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nCollcetVal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nOre of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMachineMonsterInfo_m_nOre
static int tolua_get_GameEngineTolua_tagMachineMonsterInfo_m_nOre(lua_State* tolua_S)
{
 int tolua_index;
  tagMachineMonsterInfo* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMachineMonsterInfo*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MON_MACHINE_ORE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->m_nOre[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nOre of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMachineMonsterInfo_m_nOre
static int tolua_set_GameEngineTolua_tagMachineMonsterInfo_m_nOre(lua_State* tolua_S)
{
 int tolua_index;
  tagMachineMonsterInfo* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMachineMonsterInfo*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MON_MACHINE_ORE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_nOre[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMaxOre of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachineMonsterInfo_m_nMaxOre
static int tolua_get_tagMachineMonsterInfo_m_nMaxOre(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxOre'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMaxOre);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMaxOre of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachineMonsterInfo_m_nMaxOre
static int tolua_set_tagMachineMonsterInfo_m_nMaxOre(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxOre'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMaxOre = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nEnergy of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachineMonsterInfo_m_nEnergy
static int tolua_get_tagMachineMonsterInfo_m_nEnergy(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nEnergy'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nEnergy);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nEnergy of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachineMonsterInfo_m_nEnergy
static int tolua_set_tagMachineMonsterInfo_m_nEnergy(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nEnergy'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nEnergy = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMaxEnergy of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachineMonsterInfo_m_nMaxEnergy
static int tolua_get_tagMachineMonsterInfo_m_nMaxEnergy(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxEnergy'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMaxEnergy);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMaxEnergy of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachineMonsterInfo_m_nMaxEnergy
static int tolua_set_tagMachineMonsterInfo_m_nMaxEnergy(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxEnergy'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMaxEnergy = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMaxPassenger of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachineMonsterInfo_m_nMaxPassenger
static int tolua_get_tagMachineMonsterInfo_m_nMaxPassenger(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxPassenger'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMaxPassenger);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMaxPassenger of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachineMonsterInfo_m_nMaxPassenger
static int tolua_set_tagMachineMonsterInfo_m_nMaxPassenger(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMaxPassenger'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMaxPassenger = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nPassengerID of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMachineMonsterInfo_m_nPassengerID
static int tolua_get_GameEngineTolua_tagMachineMonsterInfo_m_nPassengerID(lua_State* tolua_S)
{
 int tolua_index;
  tagMachineMonsterInfo* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMachineMonsterInfo*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MON_MACHINE_PASSENGER)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->m_nPassengerID[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nPassengerID of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMachineMonsterInfo_m_nPassengerID
static int tolua_set_GameEngineTolua_tagMachineMonsterInfo_m_nPassengerID(lua_State* tolua_S)
{
 int tolua_index;
  tagMachineMonsterInfo* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMachineMonsterInfo*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MON_MACHINE_PASSENGER)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_nPassengerID[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_OwnerType of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachineMonsterInfo_m_OwnerType
static int tolua_get_tagMachineMonsterInfo_m_OwnerType(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_OwnerType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_OwnerType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_OwnerType of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachineMonsterInfo_m_OwnerType
static int tolua_set_tagMachineMonsterInfo_m_OwnerType(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_OwnerType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_OwnerType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_OwnerClanWID of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachineMonsterInfo_m_OwnerClanWID
static int tolua_get_tagMachineMonsterInfo_m_OwnerClanWID(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_OwnerClanWID'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->m_OwnerClanWID,"tdr_ulonglong");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_OwnerClanWID of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachineMonsterInfo_m_OwnerClanWID
static int tolua_set_tagMachineMonsterInfo_m_OwnerClanWID(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_OwnerClanWID'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_OwnerClanWID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nCollectType of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachineMonsterInfo_m_nCollectType
static int tolua_get_tagMachineMonsterInfo_m_nCollectType(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nCollectType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nCollectType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nCollectType of class  tagMachineMonsterInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachineMonsterInfo_m_nCollectType
static int tolua_set_tagMachineMonsterInfo_m_nCollectType(lua_State* tolua_S)
{
  tagMachineMonsterInfo* self = (tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nCollectType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nCollectType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMonsterMemID of class  tagMachinePlayerInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachinePlayerInfo_m_nMonsterMemID
static int tolua_get_tagMachinePlayerInfo_m_nMonsterMemID(lua_State* tolua_S)
{
  tagMachinePlayerInfo* self = (tagMachinePlayerInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterMemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMonsterMemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMonsterMemID of class  tagMachinePlayerInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachinePlayerInfo_m_nMonsterMemID
static int tolua_set_tagMachinePlayerInfo_m_nMonsterMemID(lua_State* tolua_S)
{
  tagMachinePlayerInfo* self = (tagMachinePlayerInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterMemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMonsterMemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nMonsterDefID of class  tagMachinePlayerInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachinePlayerInfo_m_nMonsterDefID
static int tolua_get_tagMachinePlayerInfo_m_nMonsterDefID(lua_State* tolua_S)
{
  tagMachinePlayerInfo* self = (tagMachinePlayerInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterDefID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nMonsterDefID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nMonsterDefID of class  tagMachinePlayerInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachinePlayerInfo_m_nMonsterDefID
static int tolua_set_tagMachinePlayerInfo_m_nMonsterDefID(lua_State* tolua_S)
{
  tagMachinePlayerInfo* self = (tagMachinePlayerInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nMonsterDefID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nMonsterDefID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nSitIdx of class  tagMachinePlayerInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachinePlayerInfo_m_nSitIdx
static int tolua_get_tagMachinePlayerInfo_m_nSitIdx(lua_State* tolua_S)
{
  tagMachinePlayerInfo* self = (tagMachinePlayerInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nSitIdx'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nSitIdx);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nSitIdx of class  tagMachinePlayerInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachinePlayerInfo_m_nSitIdx
static int tolua_set_tagMachinePlayerInfo_m_nSitIdx(lua_State* tolua_S)
{
  tagMachinePlayerInfo* self = (tagMachinePlayerInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nSitIdx'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nSitIdx = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bBind of class  tagMachinePlayerInfo */
#ifndef TOLUA_DISABLE_tolua_get_tagMachinePlayerInfo_m_bBind
static int tolua_get_tagMachinePlayerInfo_m_bBind(lua_State* tolua_S)
{
  tagMachinePlayerInfo* self = (tagMachinePlayerInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bBind'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_bBind);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bBind of class  tagMachinePlayerInfo */
#ifndef TOLUA_DISABLE_tolua_set_tagMachinePlayerInfo_m_bBind
static int tolua_set_tagMachinePlayerInfo_m_bBind(lua_State* tolua_S)
{
  tagMachinePlayerInfo* self = (tagMachinePlayerInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bBind'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bBind = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: OreItemID of class  tagMonMachineOreLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineOreLimit_ToLua_OreItemID
static int tolua_get_tagMonMachineOreLimit_ToLua_OreItemID(lua_State* tolua_S)
{
  tagMonMachineOreLimit_ToLua* self = (tagMonMachineOreLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OreItemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->OreItemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: OreItemID of class  tagMonMachineOreLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineOreLimit_ToLua_OreItemID
static int tolua_set_tagMonMachineOreLimit_ToLua_OreItemID(lua_State* tolua_S)
{
  tagMonMachineOreLimit_ToLua* self = (tagMonMachineOreLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OreItemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->OreItemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ID of class  tagMonMachineOreLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineOreLimit_ToLua_ID
static int tolua_get_tagMonMachineOreLimit_ToLua_ID(lua_State* tolua_S)
{
  tagMonMachineOreLimit_ToLua* self = (tagMonMachineOreLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ID of class  tagMonMachineOreLimit_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineOreLimit_ToLua_ID
static int tolua_set_tagMonMachineOreLimit_ToLua_ID(lua_State* tolua_S)
{
  tagMonMachineOreLimit_ToLua* self = (tagMonMachineOreLimit_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MonsterID of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_unsigned_MonsterID
static int tolua_get_tagMonMachineDef_ToLua_unsigned_MonsterID(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonsterID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MonsterID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MonsterID of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_unsigned_MonsterID
static int tolua_set_tagMonMachineDef_ToLua_unsigned_MonsterID(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MonsterID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MonsterID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxEnergy of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_MaxEnergy
static int tolua_get_tagMonMachineDef_ToLua_MaxEnergy(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxEnergy'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxEnergy);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxEnergy of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_MaxEnergy
static int tolua_set_tagMonMachineDef_ToLua_MaxEnergy(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxEnergy'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxEnergy = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollcetTime of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_CollcetTime
static int tolua_get_tagMonMachineDef_ToLua_CollcetTime(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollcetTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollcetTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollcetTime of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_CollcetTime
static int tolua_set_tagMonMachineDef_ToLua_CollcetTime(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollcetTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollcetTime = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollcetVal of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_CollcetVal
static int tolua_get_tagMonMachineDef_ToLua_CollcetVal(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollcetVal'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollcetVal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollcetVal of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_CollcetVal
static int tolua_set_tagMonMachineDef_ToLua_CollcetVal(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollcetVal'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollcetVal = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxPackOre of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_MaxPackOre
static int tolua_get_tagMonMachineDef_ToLua_MaxPackOre(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxPackOre'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxPackOre);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxPackOre of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_MaxPackOre
static int tolua_set_tagMonMachineDef_ToLua_MaxPackOre(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxPackOre'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxPackOre = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BootyOreID of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_BootyOreID
static int tolua_get_tagMonMachineDef_ToLua_BootyOreID(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BootyOreID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BootyOreID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BootyOreID of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_BootyOreID
static int tolua_set_tagMonMachineDef_ToLua_BootyOreID(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BootyOreID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BootyOreID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PassengerNum of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_PassengerNum
static int tolua_get_tagMonMachineDef_ToLua_PassengerNum(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PassengerNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PassengerNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PassengerNum of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_PassengerNum
static int tolua_set_tagMonMachineDef_ToLua_PassengerNum(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PassengerNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PassengerNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollectType of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_CollectType
static int tolua_get_tagMonMachineDef_ToLua_CollectType(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollectType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollectType of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_CollectType
static int tolua_set_tagMonMachineDef_ToLua_CollectType(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollectType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollectType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: EnergyID of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_EnergyID
static int tolua_get_tagMonMachineDef_ToLua_EnergyID(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EnergyID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->EnergyID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: EnergyID of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_EnergyID
static int tolua_set_tagMonMachineDef_ToLua_EnergyID(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EnergyID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->EnergyID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: EnergyDec of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_EnergyDec
static int tolua_get_tagMonMachineDef_ToLua_EnergyDec(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EnergyDec'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->EnergyDec);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: EnergyDec of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_EnergyDec
static int tolua_set_tagMonMachineDef_ToLua_EnergyDec(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EnergyDec'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->EnergyDec = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Ore of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMonMachineDef_ToLua_Ore
static int tolua_get_GameEngineTolua_tagMonMachineDef_ToLua_Ore(lua_State* tolua_S)
{
 int tolua_index;
  tagMonMachineDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonMachineDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MON_MACHINE_ORE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Ore[tolua_index],"tagMonMachineOreLimit_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Ore of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMonMachineDef_ToLua_Ore
static int tolua_set_GameEngineTolua_tagMonMachineDef_ToLua_Ore(lua_State* tolua_S)
{
 int tolua_index;
  tagMonMachineDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonMachineDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MON_MACHINE_ORE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Ore[tolua_index] = *((tagMonMachineOreLimit_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LimitMapID of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMonMachineDef_ToLua_LimitMapID
static int tolua_get_GameEngineTolua_tagMonMachineDef_ToLua_LimitMapID(lua_State* tolua_S)
{
 int tolua_index;
  tagMonMachineDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonMachineDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MACHINE_LIMIT_MAP)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->LimitMapID[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LimitMapID of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMonMachineDef_ToLua_LimitMapID
static int tolua_set_GameEngineTolua_tagMonMachineDef_ToLua_LimitMapID(lua_State* tolua_S)
{
 int tolua_index;
  tagMonMachineDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonMachineDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MACHINE_LIMIT_MAP)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->LimitMapID[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CtrlFlag of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_CtrlFlag
static int tolua_get_tagMonMachineDef_ToLua_CtrlFlag(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CtrlFlag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CtrlFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CtrlFlag of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_CtrlFlag
static int tolua_set_tagMonMachineDef_ToLua_CtrlFlag(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CtrlFlag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CtrlFlag = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: OreViewDist of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_OreViewDist
static int tolua_get_tagMonMachineDef_ToLua_OreViewDist(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OreViewDist'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->OreViewDist);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: OreViewDist of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_OreViewDist
static int tolua_set_tagMonMachineDef_ToLua_OreViewDist(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OreViewDist'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->OreViewDist = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LimitOreMonD of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagMonMachineDef_ToLua_LimitOreMonD
static int tolua_get_GameEngineTolua_tagMonMachineDef_ToLua_LimitOreMonD(lua_State* tolua_S)
{
 int tolua_index;
  tagMonMachineDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonMachineDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MACHINE_LIMIT_ORE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->LimitOreMonD[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LimitOreMonD of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagMonMachineDef_ToLua_LimitOreMonD
static int tolua_set_GameEngineTolua_tagMonMachineDef_ToLua_LimitOreMonD(lua_State* tolua_S)
{
 int tolua_index;
  tagMonMachineDef_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagMonMachineDef_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_MACHINE_LIMIT_ORE)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->LimitOreMonD[tolua_index] = ((int)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollcetEnergyDec of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_CollcetEnergyDec
static int tolua_get_tagMonMachineDef_ToLua_CollcetEnergyDec(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollcetEnergyDec'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CollcetEnergyDec);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollcetEnergyDec of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_CollcetEnergyDec
static int tolua_set_tagMonMachineDef_ToLua_CollcetEnergyDec(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollcetEnergyDec'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollcetEnergyDec = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PlayerDie of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_PlayerDie
static int tolua_get_tagMonMachineDef_ToLua_PlayerDie(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PlayerDie'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PlayerDie);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PlayerDie of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_PlayerDie
static int tolua_set_tagMonMachineDef_ToLua_PlayerDie(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PlayerDie'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PlayerDie = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LeaveLimit of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagMonMachineDef_ToLua_LeaveLimit
static int tolua_get_tagMonMachineDef_ToLua_LeaveLimit(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LeaveLimit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LeaveLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LeaveLimit of class  tagMonMachineDef_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagMonMachineDef_ToLua_LeaveLimit
static int tolua_set_tagMonMachineDef_ToLua_LeaveLimit(lua_State* tolua_S)
{
  tagMonMachineDef_ToLua* self = (tagMonMachineDef_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LeaveLimit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LeaveLimit = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInMonsterMachine of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_isInMonsterMachine00
static int tolua_GameEngineTolua_MonsterMachine_isInMonsterMachine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInMonsterMachine'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInMonsterMachine();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInMonsterMachine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOre of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_getOre00
static int tolua_GameEngineTolua_MonsterMachine_getOre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOre'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getOre(i);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxOre of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_getMaxOre00
static int tolua_GameEngineTolua_MonsterMachine_getMaxOre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxOre'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxOre();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxOre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnergy of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_getEnergy00
static int tolua_GameEngineTolua_MonsterMachine_getEnergy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnergy'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getEnergy();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnergy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxEnergy of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_getMaxEnergy00
static int tolua_GameEngineTolua_MonsterMachine_getMaxEnergy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxEnergy'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxEnergy();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxEnergy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOreId of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_getOreId00
static int tolua_GameEngineTolua_MonsterMachine_getOreId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOreId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getOreId(i);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOreId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerMonsterMachine of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_getPlayerMonsterMachine00
static int tolua_GameEngineTolua_MonsterMachine_getPlayerMonsterMachine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerMonsterMachine'",NULL);
#endif
  {
   MonsterMachine* tolua_ret = (MonsterMachine*)  self->getPlayerMonsterMachine();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"MonsterMachine");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerMonsterMachine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMonMachineDef of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_getMonMachineDef00
static int tolua_GameEngineTolua_MonsterMachine_getMonMachineDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMonMachineDef'",NULL);
#endif
  {
   tagMonMachineDef_ToLua* tolua_ret = (tagMonMachineDef_ToLua*)  self->getMonMachineDef();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagMonMachineDef_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonMachineDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cancelSkillSelectData of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_cancelSkillSelectData00
static int tolua_GameEngineTolua_MonsterMachine_cancelSkillSelectData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cancelSkillSelectData'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->cancelSkillSelectData();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cancelSkillSelectData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLeavePrepareTime of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_getLeavePrepareTime00
static int tolua_GameEngineTolua_MonsterMachine_getLeavePrepareTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLeavePrepareTime'",NULL);
#endif
  {
   float tolua_ret = (float)  self->getLeavePrepareTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLeavePrepareTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMachinePassgerInfo of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_getMachinePassgerInfo00
static int tolua_GameEngineTolua_MonsterMachine_getMachinePassgerInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMachinePassgerInfo'",NULL);
#endif
  {
   tagCSActionMachinePassengerInfo_ToLua* tolua_ret = (tagCSActionMachinePassengerInfo_ToLua*)  self->getMachinePassgerInfo();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagCSActionMachinePassengerInfo_ToLua");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMachinePassgerInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canChangeSide of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_canChangeSide00
static int tolua_GameEngineTolua_MonsterMachine_canChangeSide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canChangeSide'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canChangeSide();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canChangeSide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMonMachineDef of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_getMonMachineDef01
static int tolua_GameEngineTolua_MonsterMachine_getMonMachineDef01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
  int nMonsterID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMonMachineDef'",NULL);
#endif
  {
   tagMonMachineDef_ToLua* tolua_ret = (tagMonMachineDef_ToLua*)  self->getMonMachineDef(nMonsterID);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"tagMonMachineDef_ToLua");
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_MonsterMachine_getMonMachineDef00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: canRideOn of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_canRideOn00
static int tolua_GameEngineTolua_MonsterMachine_canRideOn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canRideOn'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canRideOn();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canRideOn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isMainPlayerDriver of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_isMainPlayerDriver00
static int tolua_GameEngineTolua_MonsterMachine_isMainPlayerDriver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isMainPlayerDriver'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isMainPlayerDriver();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isMainPlayerDriver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPassenger of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_getPassenger00
static int tolua_GameEngineTolua_MonsterMachine_getPassenger00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPassenger'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPassenger(i);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPassenger'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPassengerNum of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_MonsterMachine_getPassengerNum00
static int tolua_GameEngineTolua_MonsterMachine_getPassengerNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MonsterMachine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPassengerNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getPassengerNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPassengerNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nOwnerID of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_get_MonsterMachine_m_nOwnerID
static int tolua_get_MonsterMachine_m_nOwnerID(lua_State* tolua_S)
{
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nOwnerID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nOwnerID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nOwnerID of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_set_MonsterMachine_m_nOwnerID
static int tolua_set_MonsterMachine_m_nOwnerID(lua_State* tolua_S)
{
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nOwnerID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nOwnerID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_FromItemWID of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_get_MonsterMachine_m_FromItemWID
static int tolua_get_MonsterMachine_m_FromItemWID(lua_State* tolua_S)
{
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_FromItemWID'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->m_FromItemWID,"tdr_ulonglong");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_FromItemWID of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_set_MonsterMachine_m_FromItemWID
static int tolua_set_MonsterMachine_m_FromItemWID(lua_State* tolua_S)
{
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_FromItemWID'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tdr_ulonglong",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_FromItemWID = *((tdr_ulonglong*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_monsterInfo of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_get_MonsterMachine_m_monsterInfo
static int tolua_get_MonsterMachine_m_monsterInfo(lua_State* tolua_S)
{
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_monsterInfo'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->m_monsterInfo,"tagMachineMonsterInfo");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_monsterInfo of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_set_MonsterMachine_m_monsterInfo
static int tolua_set_MonsterMachine_m_monsterInfo(lua_State* tolua_S)
{
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_monsterInfo'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagMachineMonsterInfo",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_monsterInfo = *((tagMachineMonsterInfo*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_playerInfo of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_get_MonsterMachine_m_playerInfo
static int tolua_get_MonsterMachine_m_playerInfo(lua_State* tolua_S)
{
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_playerInfo'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->m_playerInfo,"tagMachinePlayerInfo");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_playerInfo of class  MonsterMachine */
#ifndef TOLUA_DISABLE_tolua_set_MonsterMachine_m_playerInfo
static int tolua_set_MonsterMachine_m_playerInfo(lua_State* tolua_S)
{
  MonsterMachine* self = (MonsterMachine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_playerInfo'",NULL);
  if (!tolua_isusertype(tolua_S,2,"tagMachinePlayerInfo",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_playerInfo = *((tagMachinePlayerInfo*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: GhostSchema::enter */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GhostSchema_enter00
static int tolua_GameEngineTolua_GhostSchema_enter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int i = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   GhostSchema::enter(i);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: GhostSchema::exit */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_GhostSchema_exit00
static int tolua_GameEngineTolua_GhostSchema_exit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GhostSchema::exit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playEffect of class  EffectManage */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_EffectManage_playEffect00
static int tolua_GameEngineTolua_EffectManage_playEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectManage",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectManage* self = (EffectManage*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int angle = ((int)  tolua_tonumber(tolua_S,4,0));
  const char* path = ((const char*)  tolua_tostring(tolua_S,5,0));
  unsigned int delay = ((unsigned int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playEffect'",NULL);
#endif
  {
   EntityEffect* tolua_ret = (EntityEffect*)  self->playEffect(x,y,angle,path,delay);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"EntityEffect");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: AddFlyFont */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_AddFlyFont00
static int tolua_GameEngineTolua_AddFlyFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int fontType = ((int)  tolua_tonumber(tolua_S,1,0));
  int fontTypeTex = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* text = ((const char*)  tolua_tostring(tolua_S,3,0));
  int color = ((int)  tolua_tonumber(tolua_S,4,0xffffff));
  {
   AddFlyFont(fontType,fontTypeTex,text,color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddFlyFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DefID of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_get_CityBuildInfo_DefID
static int tolua_get_CityBuildInfo_DefID(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DefID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DefID of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_set_CityBuildInfo_DefID
static int tolua_set_CityBuildInfo_DefID(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DefID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DefID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MemID of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_get_CityBuildInfo_MemID
static int tolua_get_CityBuildInfo_MemID(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MemID of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_set_CityBuildInfo_MemID
static int tolua_set_CityBuildInfo_MemID(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: State of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_get_CityBuildInfo_State
static int tolua_get_CityBuildInfo_State(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'State'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->State);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: State of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_set_CityBuildInfo_State
static int tolua_set_CityBuildInfo_State(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'State'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->State = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Type of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_get_CityBuildInfo_Type
static int tolua_get_CityBuildInfo_Type(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Type of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_set_CityBuildInfo_Type
static int tolua_set_CityBuildInfo_Type(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Type = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BuildIdx of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_get_CityBuildInfo_BuildIdx
static int tolua_get_CityBuildInfo_BuildIdx(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BuildIdx'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BuildIdx);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BuildIdx of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_set_CityBuildInfo_BuildIdx
static int tolua_set_CityBuildInfo_BuildIdx(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BuildIdx'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BuildIdx = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BuildLevel of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_get_CityBuildInfo_BuildLevel
static int tolua_get_CityBuildInfo_BuildLevel(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BuildLevel'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->BuildLevel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BuildLevel of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_set_CityBuildInfo_BuildLevel
static int tolua_set_CityBuildInfo_BuildLevel(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BuildLevel'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BuildLevel = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HP of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_get_CityBuildInfo_HP
static int tolua_get_CityBuildInfo_HP(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HP'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->HP);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HP of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_set_CityBuildInfo_HP
static int tolua_set_CityBuildInfo_HP(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HP'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HP = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxHP of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_get_CityBuildInfo_MaxHP
static int tolua_get_CityBuildInfo_MaxHP(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxHP'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxHP);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxHP of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_set_CityBuildInfo_MaxHP
static int tolua_set_CityBuildInfo_MaxHP(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxHP'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxHP = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Energy of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_get_CityBuildInfo_Energy
static int tolua_get_CityBuildInfo_Energy(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Energy'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Energy);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Energy of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_set_CityBuildInfo_Energy
static int tolua_set_CityBuildInfo_Energy(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Energy'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Energy = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxEnergy of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_get_CityBuildInfo_MaxEnergy
static int tolua_get_CityBuildInfo_MaxEnergy(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxEnergy'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxEnergy);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxEnergy of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_set_CityBuildInfo_MaxEnergy
static int tolua_set_CityBuildInfo_MaxEnergy(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxEnergy'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxEnergy = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ClanName of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_get_CityBuildInfo_ClanName
static int tolua_get_CityBuildInfo_ClanName(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ClanName'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->ClanName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ClanName of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_set_CityBuildInfo_ClanName
static int tolua_set_CityBuildInfo_ClanName(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ClanName'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy(self->ClanName,tolua_tostring(tolua_S,2,0),NAME_LEN-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WarnEndTime of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_get_CityBuildInfo_WarnEndTime
static int tolua_get_CityBuildInfo_WarnEndTime(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WarnEndTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WarnEndTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WarnEndTime of class  CityBuildInfo */
#ifndef TOLUA_DISABLE_tolua_set_CityBuildInfo_WarnEndTime
static int tolua_set_CityBuildInfo_WarnEndTime(lua_State* tolua_S)
{
  CityBuildInfo* self = (CityBuildInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WarnEndTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WarnEndTime = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: X of class  resPos_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_resPos_ToLua_X
static int tolua_get_resPos_ToLua_X(lua_State* tolua_S)
{
  resPos_ToLua* self = (resPos_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->X);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: X of class  resPos_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_resPos_ToLua_X
static int tolua_set_resPos_ToLua_X(lua_State* tolua_S)
{
  resPos_ToLua* self = (resPos_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->X = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Y of class  resPos_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_resPos_ToLua_Y
static int tolua_get_resPos_ToLua_Y(lua_State* tolua_S)
{
  resPos_ToLua* self = (resPos_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Y of class  resPos_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_resPos_ToLua_Y
static int tolua_set_resPos_ToLua_Y(lua_State* tolua_S)
{
  resPos_ToLua* self = (resPos_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Y = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MemID of class  tagCSCityMemInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCSCityMemInfo_ToLua_MemID
static int tolua_get_tagCSCityMemInfo_ToLua_MemID(lua_State* tolua_S)
{
  tagCSCityMemInfo_ToLua* self = (tagCSCityMemInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MemID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MemID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MemID of class  tagCSCityMemInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCSCityMemInfo_ToLua_MemID
static int tolua_set_tagCSCityMemInfo_ToLua_MemID(lua_State* tolua_S)
{
  tagCSCityMemInfo_ToLua* self = (tagCSCityMemInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MemID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MemID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Pos of class  tagCSCityMemInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCSCityMemInfo_ToLua_Pos
static int tolua_get_tagCSCityMemInfo_ToLua_Pos(lua_State* tolua_S)
{
  tagCSCityMemInfo_ToLua* self = (tagCSCityMemInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pos'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Pos,"resPos_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Pos of class  tagCSCityMemInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCSCityMemInfo_ToLua_Pos
static int tolua_set_tagCSCityMemInfo_ToLua_Pos(lua_State* tolua_S)
{
  tagCSCityMemInfo_ToLua* self = (tagCSCityMemInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pos'",NULL);
  if (!tolua_isusertype(tolua_S,2,"resPos_ToLua",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Pos = *((resPos_ToLua*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MemNum of class  tagCSCityMapPosInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_tagCSCityMapPosInfo_ToLua_MemNum
static int tolua_get_tagCSCityMapPosInfo_ToLua_MemNum(lua_State* tolua_S)
{
  tagCSCityMapPosInfo_ToLua* self = (tagCSCityMapPosInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MemNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MemNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MemNum of class  tagCSCityMapPosInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_tagCSCityMapPosInfo_ToLua_MemNum
static int tolua_set_tagCSCityMapPosInfo_ToLua_MemNum(lua_State* tolua_S)
{
  tagCSCityMapPosInfo_ToLua* self = (tagCSCityMapPosInfo_ToLua*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MemNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MemNum = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Members of class  tagCSCityMapPosInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_get_GameEngineTolua_tagCSCityMapPosInfo_ToLua_Members
static int tolua_get_GameEngineTolua_tagCSCityMapPosInfo_ToLua_Members(lua_State* tolua_S)
{
 int tolua_index;
  tagCSCityMapPosInfo_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagCSCityMapPosInfo_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=CLAN_MAX_MEM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->Members[tolua_index],"tagCSCityMemInfo_ToLua");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Members of class  tagCSCityMapPosInfo_ToLua */
#ifndef TOLUA_DISABLE_tolua_set_GameEngineTolua_tagCSCityMapPosInfo_ToLua_Members
static int tolua_set_GameEngineTolua_tagCSCityMapPosInfo_ToLua_Members(lua_State* tolua_S)
{
 int tolua_index;
  tagCSCityMapPosInfo_ToLua* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (tagCSCityMapPosInfo_ToLua*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=CLAN_MAX_MEM)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->Members[tolua_index] = *((tagCSCityMemInfo_ToLua*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCityBuildInfo of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_getCityBuildInfo00
static int tolua_GameEngineTolua_WorldCityManager_getCityBuildInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCityBuildInfo'",NULL);
#endif
  {
   const CityBuildInfo* tolua_ret = (const CityBuildInfo*)  self->getCityBuildInfo(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const CityBuildInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityBuildInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFirstCityBuildId of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_getFirstCityBuildId00
static int tolua_GameEngineTolua_WorldCityManager_getFirstCityBuildId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFirstCityBuildId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getFirstCityBuildId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFirstCityBuildId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextCityBuildId of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_getNextCityBuildId00
static int tolua_GameEngineTolua_WorldCityManager_getNextCityBuildId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextCityBuildId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextCityBuildId(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextCityBuildId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCityBuildPosX of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_getCityBuildPosX00
static int tolua_GameEngineTolua_WorldCityManager_getCityBuildPosX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCityBuildPosX'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCityBuildPosX(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityBuildPosX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCityBuildPosY of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_getCityBuildPosY00
static int tolua_GameEngineTolua_WorldCityManager_getCityBuildPosY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCityBuildPosY'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCityBuildPosY(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityBuildPosY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCityBuildResID of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_getCityBuildResID00
static int tolua_GameEngineTolua_WorldCityManager_getCityBuildResID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const CityBuildInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  const CityBuildInfo* info = ((const CityBuildInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCityBuildResID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCityBuildResID(info);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityBuildResID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCityBuildMapIconId of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_getCityBuildMapIconId00
static int tolua_GameEngineTolua_WorldCityManager_getCityBuildMapIconId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCityBuildMapIconId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCityBuildMapIconId(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityBuildMapIconId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CityBuildCanDisplay of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_CityBuildCanDisplay00
static int tolua_GameEngineTolua_WorldCityManager_CityBuildCanDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const CityBuildInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  const CityBuildInfo* info = ((const CityBuildInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CityBuildCanDisplay'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->CityBuildCanDisplay(info);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CityBuildCanDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CityBuildUpgradeId of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_CityBuildUpgradeId00
static int tolua_GameEngineTolua_WorldCityManager_CityBuildUpgradeId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const CityBuildInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  const CityBuildInfo* info = ((const CityBuildInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CityBuildUpgradeId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->CityBuildUpgradeId(info);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CityBuildUpgradeId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CityBuildCanRepair of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_CityBuildCanRepair00
static int tolua_GameEngineTolua_WorldCityManager_CityBuildCanRepair00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const CityBuildInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  const CityBuildInfo* info = ((const CityBuildInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CityBuildCanRepair'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->CityBuildCanRepair(info);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CityBuildCanRepair'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CityBuildCanSupply of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_CityBuildCanSupply00
static int tolua_GameEngineTolua_WorldCityManager_CityBuildCanSupply00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const CityBuildInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  const CityBuildInfo* info = ((const CityBuildInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CityBuildCanSupply'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->CityBuildCanSupply(info);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CityBuildCanSupply'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CityBuildCanRemove of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_CityBuildCanRemove00
static int tolua_GameEngineTolua_WorldCityManager_CityBuildCanRemove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const CityBuildInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  const CityBuildInfo* info = ((const CityBuildInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CityBuildCanRemove'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->CityBuildCanRemove(info);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CityBuildCanRemove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCityBuildFirstConstruct of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_getCityBuildFirstConstruct00
static int tolua_GameEngineTolua_WorldCityManager_getCityBuildFirstConstruct00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const CityBuildInfo",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  const CityBuildInfo* info = ((const CityBuildInfo*)  tolua_tousertype(tolua_S,2,0));
  bool state = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCityBuildFirstConstruct'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCityBuildFirstConstruct(info,state);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityBuildFirstConstruct'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCityBuildNextConstruct of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_getCityBuildNextConstruct00
static int tolua_GameEngineTolua_WorldCityManager_getCityBuildNextConstruct00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const CityBuildInfo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  const CityBuildInfo* info = ((const CityBuildInfo*)  tolua_tousertype(tolua_S,2,0));
  int id = ((int)  tolua_tonumber(tolua_S,3,0));
  bool state = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCityBuildNextConstruct'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCityBuildNextConstruct(info,id,state);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityBuildNextConstruct'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCityProductMapIconId of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_getCityProductMapIconId00
static int tolua_GameEngineTolua_WorldCityManager_getCityProductMapIconId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCityProductMapIconId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCityProductMapIconId(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityProductMapIconId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCityProductBuildIconId of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_getCityProductBuildIconId00
static int tolua_GameEngineTolua_WorldCityManager_getCityProductBuildIconId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCityProductBuildIconId'",NULL);
#endif
  {
   int tolua_ret = (int)  self->getCityProductBuildIconId(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityProductBuildIconId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCityProductBuildTips of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_getCityProductBuildTips00
static int tolua_GameEngineTolua_WorldCityManager_getCityProductBuildTips00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCityProductBuildTips'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getCityProductBuildTips(id);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityProductBuildTips'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCityProductBuildDesc of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_getCityProductBuildDesc00
static int tolua_GameEngineTolua_WorldCityManager_getCityProductBuildDesc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCityProductBuildDesc'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getCityProductBuildDesc(id);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityProductBuildDesc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpgradeCityBuild of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_UpgradeCityBuild00
static int tolua_GameEngineTolua_WorldCityManager_UpgradeCityBuild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UpgradeCityBuild'",NULL);
#endif
  {
   self->UpgradeCityBuild(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UpgradeCityBuild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ConstructCityBuild of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_ConstructCityBuild00
static int tolua_GameEngineTolua_WorldCityManager_ConstructCityBuild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int idx = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ConstructCityBuild'",NULL);
#endif
  {
   self->ConstructCityBuild(id,idx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ConstructCityBuild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RepairCityBuild of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_RepairCityBuild00
static int tolua_GameEngineTolua_WorldCityManager_RepairCityBuild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RepairCityBuild'",NULL);
#endif
  {
   self->RepairCityBuild(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RepairCityBuild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SupplyCityBuild of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_SupplyCityBuild00
static int tolua_GameEngineTolua_WorldCityManager_SupplyCityBuild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SupplyCityBuild'",NULL);
#endif
  {
   self->SupplyCityBuild(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SupplyCityBuild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveCityBuild of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_RemoveCityBuild00
static int tolua_GameEngineTolua_WorldCityManager_RemoveCityBuild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveCityBuild'",NULL);
#endif
  {
   self->RemoveCityBuild(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveCityBuild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsWorldCityKeeper of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_IsWorldCityKeeper00
static int tolua_GameEngineTolua_WorldCityManager_IsWorldCityKeeper00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  unsigned int id = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsWorldCityKeeper'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsWorldCityKeeper(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsWorldCityKeeper'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsWorldCityKeeper of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_IsWorldCityKeeper01
static int tolua_GameEngineTolua_WorldCityManager_IsWorldCityKeeper01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pActor = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsWorldCityKeeper'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsWorldCityKeeper(pActor);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_WorldCityManager_IsWorldCityKeeper00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsCityBuildFight of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_IsCityBuildFight00
static int tolua_GameEngineTolua_WorldCityManager_IsCityBuildFight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pActor = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsCityBuildFight'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsCityBuildFight(pActor);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsCityBuildFight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsCityBuildFight of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_IsCityBuildFight01
static int tolua_GameEngineTolua_WorldCityManager_IsCityBuildFight01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsCityBuildFight'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsCityBuildFight(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_WorldCityManager_IsCityBuildFight00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCityBuildDefID of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetCityBuildDefID00
static int tolua_GameEngineTolua_WorldCityManager_GetCityBuildDefID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  GameActor* pActor = ((GameActor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCityBuildDefID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCityBuildDefID(pActor);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCityBuildDefID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCityBuildDefID of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetCityBuildDefID01
static int tolua_GameEngineTolua_WorldCityManager_GetCityBuildDefID01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCityBuildDefID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCityBuildDefID(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_GameEngineTolua_WorldCityManager_GetCityBuildDefID00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCityBuildRepairCost of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetCityBuildRepairCost00
static int tolua_GameEngineTolua_WorldCityManager_GetCityBuildRepairCost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCityBuildRepairCost'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCityBuildRepairCost(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCityBuildRepairCost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCityBuildSupplyCost of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetCityBuildSupplyCost00
static int tolua_GameEngineTolua_WorldCityManager_GetCityBuildSupplyCost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCityBuildSupplyCost'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCityBuildSupplyCost(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCityBuildSupplyCost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCityBuildConstructCost of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetCityBuildConstructCost00
static int tolua_GameEngineTolua_WorldCityManager_GetCityBuildConstructCost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCityBuildConstructCost'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCityBuildConstructCost(id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCityBuildConstructCost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCityBuildConstructNextResource of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetCityBuildConstructNextResource00
static int tolua_GameEngineTolua_WorldCityManager_GetCityBuildConstructNextResource00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int resourceId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCityBuildConstructNextResource'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCityBuildConstructNextResource(id,resourceId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCityBuildConstructNextResource'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCityBuildConstructResourceCost of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetCityBuildConstructResourceCost00
static int tolua_GameEngineTolua_WorldCityManager_GetCityBuildConstructResourceCost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  int resourceId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCityBuildConstructResourceCost'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCityBuildConstructResourceCost(id,resourceId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCityBuildConstructResourceCost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCityFightEnableStat of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetCityFightEnableStat00
static int tolua_GameEngineTolua_WorldCityManager_GetCityFightEnableStat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCityFightEnableStat'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCityFightEnableStat();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCityFightEnableStat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RequestClanMemberPos of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_RequestClanMemberPos00
static int tolua_GameEngineTolua_WorldCityManager_RequestClanMemberPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RequestClanMemberPos'",NULL);
#endif
  {
   self->RequestClanMemberPos();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RequestClanMemberPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCityKeeperClanID of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetCityKeeperClanID00
static int tolua_GameEngineTolua_WorldCityManager_GetCityKeeperClanID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCityKeeperClanID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCityKeeperClanID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCityKeeperClanID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCityKeepClanWID of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetCityKeepClanWID00
static int tolua_GameEngineTolua_WorldCityManager_GetCityKeepClanWID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCityKeepClanWID'",NULL);
#endif
  {
   tdr_ulonglong tolua_ret = (tdr_ulonglong)  self->GetCityKeepClanWID();
   {
#ifdef __cplusplus
    void* tolua_obj = new tdr_ulonglong(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(tdr_ulonglong));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"tdr_ulonglong");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCityKeepClanWID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GerCityFightEnableStat of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GerCityFightEnableStat00
static int tolua_GameEngineTolua_WorldCityManager_GerCityFightEnableStat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GerCityFightEnableStat'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GerCityFightEnableStat();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GerCityFightEnableStat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCityOwnerKeepNum of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetCityOwnerKeepNum00
static int tolua_GameEngineTolua_WorldCityManager_GetCityOwnerKeepNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCityOwnerKeepNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCityOwnerKeepNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCityOwnerKeepNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCityOwnerAwardMoney of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetCityOwnerAwardMoney00
static int tolua_GameEngineTolua_WorldCityManager_GetCityOwnerAwardMoney00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCityOwnerAwardMoney'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCityOwnerAwardMoney();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCityOwnerAwardMoney'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCityStat of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetCityStat00
static int tolua_GameEngineTolua_WorldCityManager_GetCityStat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCityStat'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCityStat();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCityStat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCityClanNum of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanNum00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCityClanNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCityClanNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCityClanNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCityClanName of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanName00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCityClanName'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->GetWorldCityClanName(index);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCityClanName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCityClanGetReviveNum of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanGetReviveNum00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanGetReviveNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCityClanGetReviveNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCityClanGetReviveNum(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCityClanGetReviveNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCityClanGetControlNum of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanGetControlNum00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanGetControlNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCityClanGetControlNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCityClanGetControlNum(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCityClanGetControlNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCityClanBuffNum of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanBuffNum00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanBuffNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCityClanBuffNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCityClanBuffNum(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCityClanBuffNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCityClanDoorNum of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanDoorNum00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanDoorNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCityClanDoorNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCityClanDoorNum(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCityClanDoorNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCityClanDefNum of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanDefNum00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanDefNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCityClanDefNum'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCityClanDefNum(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCityClanDefNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCityClanTotal of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanTotal00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanTotal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCityClanTotal'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCityClanTotal(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCityClanTotal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCityClanTime of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanTime00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCityClanTime'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCityClanTime(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCityClanTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCitySelClanTotal of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelClanTotal00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelClanTotal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCitySelClanTotal'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCitySelClanTotal();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCitySelClanTotal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCityClanAwardMoneyType of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanAwardMoneyType00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanAwardMoneyType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCityClanAwardMoneyType'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCityClanAwardMoneyType(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCityClanAwardMoneyType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCityClanAwardMoney of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanAwardMoney00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanAwardMoney00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCityClanAwardMoney'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCityClanAwardMoney(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCityClanAwardMoney'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCityClanAwardItemID of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanAwardItemID00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanAwardItemID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCityClanAwardItemID'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCityClanAwardItemID(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCityClanAwardItemID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCityClanAwardExp of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanAwardExp00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanAwardExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCityClanAwardExp'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCityClanAwardExp(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCityClanAwardExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCityClanEnterTime of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanEnterTime00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanEnterTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCityClanEnterTime'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCityClanEnterTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCityClanEnterTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCitySelfClanRank of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelfClanRank00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelfClanRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCitySelfClanRank'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCitySelfClanRank();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCitySelfClanRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCitySelfClanMoneyType of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelfClanMoneyType00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelfClanMoneyType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCitySelfClanMoneyType'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCitySelfClanMoneyType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCitySelfClanMoneyType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCitySelfClanMoney of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelfClanMoney00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelfClanMoney00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCitySelfClanMoney'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCitySelfClanMoney();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCitySelfClanMoney'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCitySelfContineKill of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelfContineKill00
static int tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelfContineKill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCitySelfContineKill'",NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWorldCitySelfContineKill();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCitySelfContineKill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearWorldCitySelfContineKill of class  WorldCityManager */
#ifndef TOLUA_DISABLE_tolua_GameEngineTolua_WorldCityManager_ClearWorldCitySelfContineKill00
static int tolua_GameEngineTolua_WorldCityManager_ClearWorldCitySelfContineKill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WorldCityManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WorldCityManager* self = (WorldCityManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearWorldCitySelfContineKill'",NULL);
#endif
  {
   self->ClearWorldCitySelfContineKill();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearWorldCitySelfContineKill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: x of class  GameXYZ */
#ifndef TOLUA_DISABLE_tolua_get_GameXYZ_x
static int tolua_get_GameXYZ_x(lua_State* tolua_S)
{
  GameXYZ* self = (GameXYZ*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->x);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: x of class  GameXYZ */
#ifndef TOLUA_DISABLE_tolua_set_GameXYZ_x
static int tolua_set_GameXYZ_x(lua_State* tolua_S)
{
  GameXYZ* self = (GameXYZ*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->x = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: y of class  GameXYZ */
#ifndef TOLUA_DISABLE_tolua_get_GameXYZ_y
static int tolua_get_GameXYZ_y(lua_State* tolua_S)
{
  GameXYZ* self = (GameXYZ*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: y of class  GameXYZ */
#ifndef TOLUA_DISABLE_tolua_set_GameXYZ_y
static int tolua_set_GameXYZ_y(lua_State* tolua_S)
{
  GameXYZ* self = (GameXYZ*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->y = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: z of class  GameXYZ */
#ifndef TOLUA_DISABLE_tolua_get_GameXYZ_z
static int tolua_get_GameXYZ_z(lua_State* tolua_S)
{
  GameXYZ* self = (GameXYZ*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'z'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->z);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: z of class  GameXYZ */
#ifndef TOLUA_DISABLE_tolua_set_GameXYZ_z
static int tolua_set_GameXYZ_z(lua_State* tolua_S)
{
  GameXYZ* self = (GameXYZ*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'z'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->z = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* Open function */
TOLUA_API int tolua_GameEngineTolua_open (lua_State* tolua_S)
{
 tolua_open(tolua_S);
 tolua_reg_types(tolua_S);
 tolua_module(tolua_S,NULL,1);
 tolua_beginmodule(tolua_S,NULL);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ServerTime_ToLua","ServerTime_ToLua","",tolua_collect_ServerTime_ToLua);
  #else
  tolua_cclass(tolua_S,"ServerTime_ToLua","ServerTime_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ServerTime_ToLua");
   tolua_variable(tolua_S,"sec",tolua_get_ServerTime_ToLua_unsigned_sec,tolua_set_ServerTime_ToLua_unsigned_sec);
   tolua_variable(tolua_S,"usec",tolua_get_ServerTime_ToLua_unsigned_usec,tolua_set_ServerTime_ToLua_unsigned_usec);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"getServerTime",tolua_GameEngineTolua_getServerTime00);
  tolua_function(tolua_S,"isSameDay",tolua_GameEngineTolua_isSameDay00);
  tolua_function(tolua_S,"getWeekDay",tolua_GameEngineTolua_getWeekDay00);
  tolua_cclass(tolua_S,"SkillManager","SkillManager","",NULL);
  tolua_beginmodule(tolua_S,"SkillManager");
   tolua_constant(tolua_S,"MAX_ARMTYPE",SkillManager::MAX_ARMTYPE);
   tolua_function(tolua_S,"isNormalSkill",tolua_GameEngineTolua_SkillManager_isNormalSkill00);
   tolua_function(tolua_S,"isNormalSkill",tolua_GameEngineTolua_SkillManager_isNormalSkill01);
   tolua_function(tolua_S,"isSkillPassive",tolua_GameEngineTolua_SkillManager_isSkillPassive00);
   tolua_function(tolua_S,"isSkillPassive",tolua_GameEngineTolua_SkillManager_isSkillPassive01);
   tolua_function(tolua_S,"isSkillLearned",tolua_GameEngineTolua_SkillManager_isSkillLearned00);
   tolua_function(tolua_S,"getNextLearnedSkill",tolua_GameEngineTolua_SkillManager_getNextLearnedSkill00);
   tolua_function(tolua_S,"reloadSkill",tolua_GameEngineTolua_SkillManager_reloadSkill00);
   tolua_function(tolua_S,"reSetSkilList",tolua_GameEngineTolua_SkillManager_reSetSkilList00);
   tolua_function(tolua_S,"getSpellControler",tolua_GameEngineTolua_SkillManager_getSpellControler00);
   tolua_function(tolua_S,"getSpellUIControl",tolua_GameEngineTolua_SkillManager_getSpellUIControl00);
   tolua_function(tolua_S,"setSpellUIControl",tolua_GameEngineTolua_SkillManager_setSpellUIControl00);
   tolua_function(tolua_S,"getSpellLv",tolua_GameEngineTolua_SkillManager_getSpellLv00);
   tolua_function(tolua_S,"getSpellCollectNumUse",tolua_GameEngineTolua_SkillManager_getSpellCollectNumUse00);
   tolua_function(tolua_S,"getSpellCollectNumCur",tolua_GameEngineTolua_SkillManager_getSpellCollectNumCur00);
   tolua_function(tolua_S,"setSpellCollectNumCur",tolua_GameEngineTolua_SkillManager_setSpellCollectNumCur00);
   tolua_function(tolua_S,"getSpellDes",tolua_GameEngineTolua_SkillManager_getSpellDes00);
   tolua_function(tolua_S,"getSpellStaticAtt",tolua_GameEngineTolua_SkillManager_getSpellStaticAtt00);
   tolua_function(tolua_S,"getDiathesisDef",tolua_GameEngineTolua_SkillManager_getDiathesisDef00);
   tolua_function(tolua_S,"setTmpSkill",tolua_GameEngineTolua_SkillManager_setTmpSkill00);
   tolua_function(tolua_S,"getTmpSkillId",tolua_GameEngineTolua_SkillManager_getTmpSkillId00);
   tolua_function(tolua_S,"getTmpSkillLv",tolua_GameEngineTolua_SkillManager_getTmpSkillLv00);
   tolua_function(tolua_S,"checkMagic",tolua_GameEngineTolua_SkillManager_checkMagic00);
   tolua_function(tolua_S,"isXPSkill",tolua_GameEngineTolua_SkillManager_isXPSkill00);
   tolua_function(tolua_S,"getLevelSkillId",tolua_GameEngineTolua_SkillManager_getLevelSkillId00);
   tolua_function(tolua_S,"getIntentSpell",tolua_GameEngineTolua_SkillManager_getIntentSpell00);
   tolua_function(tolua_S,"clearIntentSpell",tolua_GameEngineTolua_SkillManager_clearIntentSpell00);
   tolua_function(tolua_S,"getReadySpell",tolua_GameEngineTolua_SkillManager_getReadySpell00);
   tolua_function(tolua_S,"setReadySpell",tolua_GameEngineTolua_SkillManager_setReadySpell00);
   tolua_function(tolua_S,"getTurnSpell",tolua_GameEngineTolua_SkillManager_getTurnSpell00);
   tolua_function(tolua_S,"setTurnSpell",tolua_GameEngineTolua_SkillManager_setTurnSpell00);
   tolua_function(tolua_S,"setAngleSpell",tolua_GameEngineTolua_SkillManager_setAngleSpell00);
   tolua_function(tolua_S,"getAngleSpell",tolua_GameEngineTolua_SkillManager_getAngleSpell00);
   tolua_function(tolua_S,"sendBreakMsg",tolua_GameEngineTolua_SkillManager_sendBreakMsg00);
   tolua_function(tolua_S,"sendPrepareMsg",tolua_GameEngineTolua_SkillManager_sendPrepareMsg00);
   tolua_function(tolua_S,"sendAttackMsg",tolua_GameEngineTolua_SkillManager_sendAttackMsg00);
   tolua_function(tolua_S,"sendAttackMsg",tolua_GameEngineTolua_SkillManager_sendAttackMsg01);
   tolua_function(tolua_S,"sendHitMsg",tolua_GameEngineTolua_SkillManager_sendHitMsg00);
   tolua_function(tolua_S,"setNextSpell",tolua_GameEngineTolua_SkillManager_setNextSpell00);
   tolua_function(tolua_S,"setNextSpell",tolua_GameEngineTolua_SkillManager_setNextSpell01);
   tolua_function(tolua_S,"setNextSpell",tolua_GameEngineTolua_SkillManager_setNextSpell02);
   tolua_function(tolua_S,"setNextSpell",tolua_GameEngineTolua_SkillManager_setNextSpell03);
   tolua_function(tolua_S,"setNextSpell",tolua_GameEngineTolua_SkillManager_setNextSpell04);
   tolua_function(tolua_S,"getNextSpell",tolua_GameEngineTolua_SkillManager_getNextSpell00);
   tolua_function(tolua_S,"getSkillReq",tolua_GameEngineTolua_SkillManager_getSkillReq00);
   tolua_function(tolua_S,"setSkillReq",tolua_GameEngineTolua_SkillManager_setSkillReq00);
   tolua_function(tolua_S,"delSkillDyAttrib",tolua_GameEngineTolua_SkillManager_delSkillDyAttrib00);
   tolua_function(tolua_S,"setSkillDyAttrib",tolua_GameEngineTolua_SkillManager_setSkillDyAttrib00);
   tolua_function(tolua_S,"getSkillCommCoolTime",tolua_GameEngineTolua_SkillManager_getSkillCommCoolTime00);
   tolua_function(tolua_S,"getSkillSelfCoolTime",tolua_GameEngineTolua_SkillManager_getSkillSelfCoolTime00);
   tolua_function(tolua_S,"getSkillDistance",tolua_GameEngineTolua_SkillManager_getSkillDistance00);
   tolua_function(tolua_S,"getSkillDistance",tolua_GameEngineTolua_SkillManager_getSkillDistance01);
   tolua_function(tolua_S,"getSkillPrepareTime",tolua_GameEngineTolua_SkillManager_getSkillPrepareTime00);
   tolua_function(tolua_S,"getSkillPrepareTime",tolua_GameEngineTolua_SkillManager_getSkillPrepareTime01);
   tolua_function(tolua_S,"getSkillCollectTime",tolua_GameEngineTolua_SkillManager_getSkillCollectTime00);
   tolua_function(tolua_S,"getSkillCollectTime",tolua_GameEngineTolua_SkillManager_getSkillCollectTime01);
   tolua_function(tolua_S,"getSkillCollectNum",tolua_GameEngineTolua_SkillManager_getSkillCollectNum00);
   tolua_function(tolua_S,"getSkillCollectNum",tolua_GameEngineTolua_SkillManager_getSkillCollectNum01);
   tolua_function(tolua_S,"getSkillPilotTime",tolua_GameEngineTolua_SkillManager_getSkillPilotTime00);
   tolua_function(tolua_S,"getSkillPilotTime",tolua_GameEngineTolua_SkillManager_getSkillPilotTime01);
   tolua_function(tolua_S,"getSkillPilotNum",tolua_GameEngineTolua_SkillManager_getSkillPilotNum00);
   tolua_function(tolua_S,"getSkillPilotNum",tolua_GameEngineTolua_SkillManager_getSkillPilotNum01);
   tolua_function(tolua_S,"getSkillCostMp",tolua_GameEngineTolua_SkillManager_getSkillCostMp00);
   tolua_function(tolua_S,"getSkillCostMp",tolua_GameEngineTolua_SkillManager_getSkillCostMp01);
   tolua_function(tolua_S,"getSkillCostCollect",tolua_GameEngineTolua_SkillManager_getSkillCostCollect00);
   tolua_function(tolua_S,"getSkillCostCollect",tolua_GameEngineTolua_SkillManager_getSkillCostCollect01);
   tolua_function(tolua_S,"getSkillCostXp",tolua_GameEngineTolua_SkillManager_getSkillCostXp00);
   tolua_function(tolua_S,"getSkillCostXp",tolua_GameEngineTolua_SkillManager_getSkillCostXp01);
   tolua_function(tolua_S,"getSkillMainRange",tolua_GameEngineTolua_SkillManager_getSkillMainRange00);
   tolua_function(tolua_S,"getSkillMaxTargets",tolua_GameEngineTolua_SkillManager_getSkillMaxTargets00);
   tolua_function(tolua_S,"getSkillDyAttrib",tolua_GameEngineTolua_SkillManager_getSkillDyAttrib00);
   tolua_function(tolua_S,"addTmpSkill",tolua_GameEngineTolua_SkillManager_addTmpSkill00);
   tolua_function(tolua_S,"delTmpSkill",tolua_GameEngineTolua_SkillManager_delTmpSkill00);
   tolua_function(tolua_S,"isTmpSkill",tolua_GameEngineTolua_SkillManager_isTmpSkill00);
   tolua_function(tolua_S,"canMoveAttack",tolua_GameEngineTolua_SkillManager_canMoveAttack00);
   tolua_function(tolua_S,"isNoPrepareSkill",tolua_GameEngineTolua_SkillManager_isNoPrepareSkill00);
   tolua_function(tolua_S,"canCastSelf",tolua_GameEngineTolua_SkillManager_canCastSelf00);
   tolua_function(tolua_S,"setCommonCDTime",tolua_GameEngineTolua_SkillManager_setCommonCDTime00);
   tolua_function(tolua_S,"resetSkillCDTime",tolua_GameEngineTolua_SkillManager_resetSkillCDTime00);
   tolua_function(tolua_S,"setSkillCDTime",tolua_GameEngineTolua_SkillManager_setSkillCDTime00);
   tolua_function(tolua_S,"setSkillCDTime",tolua_GameEngineTolua_SkillManager_setSkillCDTime01);
   tolua_function(tolua_S,"reduceCD",tolua_GameEngineTolua_SkillManager_reduceCD00);
   tolua_function(tolua_S,"clearCD",tolua_GameEngineTolua_SkillManager_clearCD00);
   tolua_function(tolua_S,"clearAllCD",tolua_GameEngineTolua_SkillManager_clearAllCD00);
   tolua_function(tolua_S,"checkCD_resetTypeCD",tolua_GameEngineTolua_SkillManager_checkCD_resetTypeCD00);
   tolua_function(tolua_S,"checkCD_setTypeCD",tolua_GameEngineTolua_SkillManager_checkCD_setTypeCD00);
   tolua_function(tolua_S,"getSkillCDTime",tolua_GameEngineTolua_SkillManager_getSkillCDTime00);
   tolua_function(tolua_S,"getCommonCDTime",tolua_GameEngineTolua_SkillManager_getCommonCDTime00);
   tolua_function(tolua_S,"getCDTime",tolua_GameEngineTolua_SkillManager_getCDTime00);
   tolua_function(tolua_S,"castInspect",tolua_GameEngineTolua_SkillManager_castInspect00);
   tolua_function(tolua_S,"getSpellSample",tolua_GameEngineTolua_SkillManager_getSpellSample00);
   tolua_function(tolua_S,"createSpell",tolua_GameEngineTolua_SkillManager_createSpell00);
   tolua_function(tolua_S,"update",tolua_GameEngineTolua_SkillManager_update00);
   tolua_function(tolua_S,"deleteActorSpell",tolua_GameEngineTolua_SkillManager_deleteActorSpell00);
   tolua_function(tolua_S,"getSpellWeaponType",tolua_GameEngineTolua_SkillManager_getSpellWeaponType00);
   tolua_function(tolua_S,"getSpellWeaponType",tolua_GameEngineTolua_SkillManager_getSpellWeaponType01);
   tolua_function(tolua_S,"castInMap",tolua_GameEngineTolua_SkillManager_castInMap00);
   tolua_function(tolua_S,"castInMap",tolua_GameEngineTolua_SkillManager_castInMap01);
   tolua_function(tolua_S,"castInPworld",tolua_GameEngineTolua_SkillManager_castInPworld00);
   tolua_function(tolua_S,"castInPworld",tolua_GameEngineTolua_SkillManager_castInPworld01);
   tolua_function(tolua_S,"castWeapon",tolua_GameEngineTolua_SkillManager_castWeapon00);
   tolua_function(tolua_S,"castWeapon",tolua_GameEngineTolua_SkillManager_castWeapon01);
   tolua_function(tolua_S,"castSkillCD",tolua_GameEngineTolua_SkillManager_castSkillCD00);
   tolua_function(tolua_S,"castCommonCD",tolua_GameEngineTolua_SkillManager_castCommonCD00);
   tolua_function(tolua_S,"castCD",tolua_GameEngineTolua_SkillManager_castCD00);
   tolua_function(tolua_S,"castMP",tolua_GameEngineTolua_SkillManager_castMP00);
   tolua_function(tolua_S,"castMP",tolua_GameEngineTolua_SkillManager_castMP01);
   tolua_function(tolua_S,"castXP",tolua_GameEngineTolua_SkillManager_castXP00);
   tolua_function(tolua_S,"castXP",tolua_GameEngineTolua_SkillManager_castXP01);
   tolua_function(tolua_S,"castCollect",tolua_GameEngineTolua_SkillManager_castCollect00);
   tolua_function(tolua_S,"castCollect",tolua_GameEngineTolua_SkillManager_castCollect01);
   tolua_function(tolua_S,"castEnergy",tolua_GameEngineTolua_SkillManager_castEnergy00);
   tolua_function(tolua_S,"castEnergy",tolua_GameEngineTolua_SkillManager_castEnergy01);
   tolua_function(tolua_S,"castMachineEnergy",tolua_GameEngineTolua_SkillManager_castMachineEnergy00);
   tolua_function(tolua_S,"castMachineEnergy",tolua_GameEngineTolua_SkillManager_castMachineEnergy01);
   tolua_function(tolua_S,"castMorph",tolua_GameEngineTolua_SkillManager_castMorph00);
   tolua_function(tolua_S,"castPlayerLv",tolua_GameEngineTolua_SkillManager_castPlayerLv00);
   tolua_function(tolua_S,"castPlayerLv",tolua_GameEngineTolua_SkillManager_castPlayerLv01);
   tolua_function(tolua_S,"castItem",tolua_GameEngineTolua_SkillManager_castItem00);
   tolua_function(tolua_S,"castItem",tolua_GameEngineTolua_SkillManager_castItem01);
   tolua_function(tolua_S,"useSpellOnce",tolua_GameEngineTolua_SkillManager_useSpellOnce00);
   tolua_function(tolua_S,"useSpellOnce",tolua_GameEngineTolua_SkillManager_useSpellOnce01);
   tolua_function(tolua_S,"useSpellOnce",tolua_GameEngineTolua_SkillManager_useSpellOnce02);
   tolua_function(tolua_S,"useSpellOnce",tolua_GameEngineTolua_SkillManager_useSpellOnce03);
   tolua_function(tolua_S,"useSpell",tolua_GameEngineTolua_SkillManager_useSpell00);
   tolua_function(tolua_S,"useSpell",tolua_GameEngineTolua_SkillManager_useSpell01);
   tolua_function(tolua_S,"useSpell",tolua_GameEngineTolua_SkillManager_useSpell02);
   tolua_function(tolua_S,"useSpell",tolua_GameEngineTolua_SkillManager_useSpell03);
   tolua_function(tolua_S,"testResult",tolua_GameEngineTolua_SkillManager_testResult00);
   tolua_function(tolua_S,"unUseSpell",tolua_GameEngineTolua_SkillManager_unUseSpell00);
   tolua_function(tolua_S,"normalAttack",tolua_GameEngineTolua_SkillManager_normalAttack00);
   tolua_function(tolua_S,"onStart",tolua_GameEngineTolua_SkillManager_onStart00);
   tolua_function(tolua_S,"onStop",tolua_GameEngineTolua_SkillManager_onStop00);
   tolua_function(tolua_S,"spellAttack",tolua_GameEngineTolua_SkillManager_spellAttack00);
   tolua_function(tolua_S,"spellStop",tolua_GameEngineTolua_SkillManager_spellStop00);
   tolua_function(tolua_S,"spellBreak",tolua_GameEngineTolua_SkillManager_spellBreak00);
   tolua_function(tolua_S,"execSpellStop",tolua_GameEngineTolua_SkillManager_execSpellStop00);
   tolua_function(tolua_S,"getNormalAttackSkill",tolua_GameEngineTolua_SkillManager_getNormalAttackSkill00);
   tolua_function(tolua_S,"getNormalAttackSkill",tolua_GameEngineTolua_SkillManager_getNormalAttackSkill01);
   tolua_function(tolua_S,"getInsteadSkillId",tolua_GameEngineTolua_SkillManager_getInsteadSkillId00);
   tolua_function(tolua_S,"addInsteadBind",tolua_GameEngineTolua_SkillManager_addInsteadBind00);
   tolua_function(tolua_S,"delInsteadBind",tolua_GameEngineTolua_SkillManager_delInsteadBind00);
   tolua_function(tolua_S,"getRuneSkillId",tolua_GameEngineTolua_SkillManager_getRuneSkillId00);
   tolua_function(tolua_S,"getReserveSkillId",tolua_GameEngineTolua_SkillManager_getReserveSkillId00);
   tolua_function(tolua_S,"getSpellRuneEnable",tolua_GameEngineTolua_SkillManager_getSpellRuneEnable00);
   tolua_function(tolua_S,"getSpellRuneType",tolua_GameEngineTolua_SkillManager_getSpellRuneType00);
   tolua_function(tolua_S,"getSpellRuneItemId",tolua_GameEngineTolua_SkillManager_getSpellRuneItemId00);
   tolua_function(tolua_S,"getSpellRuneItemId",tolua_GameEngineTolua_SkillManager_getSpellRuneItemId01);
   tolua_function(tolua_S,"getSpkillRuneDesc",tolua_GameEngineTolua_SkillManager_getSpkillRuneDesc00);
   tolua_function(tolua_S,"getSpkillRuneDesc",tolua_GameEngineTolua_SkillManager_getSpkillRuneDesc01);
   tolua_function(tolua_S,"getSpkillRuneSkillId",tolua_GameEngineTolua_SkillManager_getSpkillRuneSkillId00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"GAME_OPT_SHOW_ALLPLAYER_AND_PET_NAME",GAME_OPT_SHOW_ALLPLAYER_AND_PET_NAME);
  tolua_constant(tolua_S,"GAME_OPT_SHOW_ALLPLAYER_TEAM_DESIGNATION_NAME",GAME_OPT_SHOW_ALLPLAYER_TEAM_DESIGNATION_NAME);
  tolua_constant(tolua_S,"GAME_OPT_SHOW_MAIN_CLAN_NAME",GAME_OPT_SHOW_MAIN_CLAN_NAME);
  tolua_constant(tolua_S,"GAME_OPT_SHOW_MONSTER_NAME",GAME_OPT_SHOW_MONSTER_NAME);
  tolua_constant(tolua_S,"GAME_OPT_SHOW_MONSTER_HP",GAME_OPT_SHOW_MONSTER_HP);
  tolua_constant(tolua_S,"GAME_OPT_SHOW_OTHERPLAYER_HP",GAME_OPT_SHOW_OTHERPLAYER_HP);
  tolua_constant(tolua_S,"GAME_OPT_SHOW_OTHERPLAYER_CLAN_NAME",GAME_OPT_SHOW_OTHERPLAYER_CLAN_NAME);
  tolua_constant(tolua_S,"GAME_OPT_SHOW_MAINPLAYER_AND_TEAM_HP",GAME_OPT_SHOW_MAINPLAYER_AND_TEAM_HP);
  tolua_constant(tolua_S,"GAME_OPT_SHOW_OTHERPLAYER_TALK_POP",GAME_OPT_SHOW_OTHERPLAYER_TALK_POP);
  tolua_constant(tolua_S,"GAME_OPT_SHOW_MAINPLAYER_DAMAGE_SHOW",GAME_OPT_SHOW_MAINPLAYER_DAMAGE_SHOW);
  tolua_constant(tolua_S,"GAME_OPT_SHOW_EQUIP_SHOW",GAME_OPT_SHOW_EQUIP_SHOW);
  tolua_constant(tolua_S,"GAME_OPT_REFUSE_RIDE_INVITE",GAME_OPT_REFUSE_RIDE_INVITE);
  tolua_constant(tolua_S,"GAME_OPT_REFUSE_ADD_FRIEND_REQ",GAME_OPT_REFUSE_ADD_FRIEND_REQ);
  tolua_constant(tolua_S,"GAME_OPT_REFUSE_CLAN_INVITE",GAME_OPT_REFUSE_CLAN_INVITE);
  tolua_constant(tolua_S,"GAME_OPT_REFUSE_TRADE_REQ",GAME_OPT_REFUSE_TRADE_REQ);
  tolua_constant(tolua_S,"GAME_OPT_REFUSE_TEAM_INVITE",GAME_OPT_REFUSE_TEAM_INVITE);
  tolua_constant(tolua_S,"GAME_OPT_REFUSE_SEE_EQUIP",GAME_OPT_REFUSE_SEE_EQUIP);
  tolua_constant(tolua_S,"GAME_OPT_REFUSE_REFUSE_PK",GAME_OPT_REFUSE_REFUSE_PK);
  tolua_constant(tolua_S,"GAME_OPT_SWAP_MOUSE",GAME_OPT_SWAP_MOUSE);
  tolua_constant(tolua_S,"GAME_OPT_SWAP_MOUSE_DEFAULT_SHOW_HAVE_SELECT",GAME_OPT_SWAP_MOUSE_DEFAULT_SHOW_HAVE_SELECT);
  tolua_constant(tolua_S,"GAME_OPT_LAST_PET_SELECT",GAME_OPT_LAST_PET_SELECT);
  tolua_constant(tolua_S,"GAME_OPT_LOCK_SHORTCUT",GAME_OPT_LOCK_SHORTCUT);
  tolua_constant(tolua_S,"GAME_OPT_FORBIT_SELECT_PET",GAME_OPT_FORBIT_SELECT_PET);
  tolua_constant(tolua_S,"GAME_OPT_LAST_PET_FIGHT",GAME_OPT_LAST_PET_FIGHT);
  tolua_constant(tolua_S,"GAME_OPT_AUTO_SKILL_RELEASE",GAME_OPT_AUTO_SKILL_RELEASE);
  tolua_constant(tolua_S,"GAME_OPT_AUTO_ACCEPT_TEAM_FOLLOW",GAME_OPT_AUTO_ACCEPT_TEAM_FOLLOW);
  tolua_constant(tolua_S,"GAME_OPT_SHOW_PERFECT_STAR_EFFECT",GAME_OPT_SHOW_PERFECT_STAR_EFFECT);
  tolua_constant(tolua_S,"GAME_OPT_SHOW_STAR_STONE",GAME_OPT_SHOW_STAR_STONE);
  tolua_constant(tolua_S,"GAME_OPT_CAMERA_3D",GAME_OPT_CAMERA_3D);
  tolua_constant(tolua_S,"MAX_GAME_SET_OPT",MAX_GAME_SET_OPT);
  tolua_constant(tolua_S,"CLIENT_GENDER_NONE",CLIENT_GENDER_NONE);
  tolua_constant(tolua_S,"CLIENT_GENDER_MALE",CLIENT_GENDER_MALE);
  tolua_constant(tolua_S,"CLIENT_GENDER_FEMALE",CLIENT_GENDER_FEMALE);
  tolua_constant(tolua_S,"CLIENT_GENDER_MAX",CLIENT_GENDER_MAX);
  tolua_cclass(tolua_S,"RoleAttr","RoleAttr","",NULL);
  tolua_beginmodule(tolua_S,"RoleAttr");
   tolua_function(tolua_S,"getBaseAttriValue",tolua_GameEngineTolua_RoleAttr_getBaseAttriValue00);
   tolua_function(tolua_S,"getClanWID",tolua_GameEngineTolua_RoleAttr_getClanWID00);
   tolua_function(tolua_S,"getClanID",tolua_GameEngineTolua_RoleAttr_getClanID00);
   tolua_function(tolua_S,"setClanWID",tolua_GameEngineTolua_RoleAttr_setClanWID00);
   tolua_function(tolua_S,"isInSameClan",tolua_GameEngineTolua_RoleAttr_isInSameClan00);
   tolua_function(tolua_S,"isInClan",tolua_GameEngineTolua_RoleAttr_isInClan00);
   tolua_function(tolua_S,"setPkValue",tolua_GameEngineTolua_RoleAttr_setPkValue00);
   tolua_function(tolua_S,"getRoleWId",tolua_GameEngineTolua_RoleAttr_getRoleWId00);
   tolua_function(tolua_S,"setRoleWId",tolua_GameEngineTolua_RoleAttr_setRoleWId00);
   tolua_function(tolua_S,"getShortAttriValule",tolua_GameEngineTolua_RoleAttr_getShortAttriValule00);
   tolua_function(tolua_S,"getIntAttriValue",tolua_GameEngineTolua_RoleAttr_getIntAttriValue00);
   tolua_function(tolua_S,"getSignedShortAttriValule",tolua_GameEngineTolua_RoleAttr_getSignedShortAttriValule00);
   tolua_function(tolua_S,"setName",tolua_GameEngineTolua_RoleAttr_setName00);
   tolua_function(tolua_S,"getName",tolua_GameEngineTolua_RoleAttr_getName00);
   tolua_function(tolua_S,"setStallName",tolua_GameEngineTolua_RoleAttr_setStallName00);
   tolua_function(tolua_S,"getStallName",tolua_GameEngineTolua_RoleAttr_getStallName00);
   tolua_function(tolua_S,"getHead",tolua_GameEngineTolua_RoleAttr_getHead00);
   tolua_function(tolua_S,"getFace",tolua_GameEngineTolua_RoleAttr_getFace00);
   tolua_function(tolua_S,"getHair",tolua_GameEngineTolua_RoleAttr_getHair00);
   tolua_function(tolua_S,"setViewFlg",tolua_GameEngineTolua_RoleAttr_setViewFlg00);
   tolua_function(tolua_S,"setClanName",tolua_GameEngineTolua_RoleAttr_setClanName00);
   tolua_function(tolua_S,"getClanName",tolua_GameEngineTolua_RoleAttr_getClanName00);
   tolua_function(tolua_S,"setTeamName",tolua_GameEngineTolua_RoleAttr_setTeamName00);
   tolua_function(tolua_S,"getTeamName",tolua_GameEngineTolua_RoleAttr_getTeamName00);
   tolua_function(tolua_S,"getOwnerTeamWID",tolua_GameEngineTolua_RoleAttr_getOwnerTeamWID00);
   tolua_function(tolua_S,"setOwnerTeamWID",tolua_GameEngineTolua_RoleAttr_setOwnerTeamWID00);
   tolua_function(tolua_S,"getTeamWID",tolua_GameEngineTolua_RoleAttr_getTeamWID00);
   tolua_function(tolua_S,"isInSameTeam",tolua_GameEngineTolua_RoleAttr_isInSameTeam00);
   tolua_function(tolua_S,"setTeamWID",tolua_GameEngineTolua_RoleAttr_setTeamWID00);
   tolua_function(tolua_S,"isInTeam",tolua_GameEngineTolua_RoleAttr_isInTeam00);
   tolua_function(tolua_S,"setCaptain",tolua_GameEngineTolua_RoleAttr_setCaptain00);
   tolua_function(tolua_S,"isCaptain",tolua_GameEngineTolua_RoleAttr_isCaptain00);
   tolua_function(tolua_S,"setType",tolua_GameEngineTolua_RoleAttr_setType00);
   tolua_function(tolua_S,"getType",tolua_GameEngineTolua_RoleAttr_getType00);
   tolua_function(tolua_S,"getGender",tolua_GameEngineTolua_RoleAttr_getGender00);
   tolua_function(tolua_S,"getRace",tolua_GameEngineTolua_RoleAttr_getRace00);
   tolua_function(tolua_S,"getItemNum",tolua_GameEngineTolua_RoleAttr_getItemNum00);
   tolua_function(tolua_S,"setArmStar",tolua_GameEngineTolua_RoleAttr_setArmStar00);
   tolua_function(tolua_S,"getArmStar",tolua_GameEngineTolua_RoleAttr_getArmStar00);
   tolua_function(tolua_S,"setHP",tolua_GameEngineTolua_RoleAttr_setHP00);
   tolua_function(tolua_S,"setTmpHp",tolua_GameEngineTolua_RoleAttr_setTmpHp00);
   tolua_function(tolua_S,"reSetHp",tolua_GameEngineTolua_RoleAttr_reSetHp00);
   tolua_function(tolua_S,"getHP",tolua_GameEngineTolua_RoleAttr_getHP00);
   tolua_function(tolua_S,"setMaxHP",tolua_GameEngineTolua_RoleAttr_setMaxHP00);
   tolua_function(tolua_S,"getMaxHP",tolua_GameEngineTolua_RoleAttr_getMaxHP00);
   tolua_function(tolua_S,"setMP",tolua_GameEngineTolua_RoleAttr_setMP00);
   tolua_function(tolua_S,"getMP",tolua_GameEngineTolua_RoleAttr_getMP00);
   tolua_function(tolua_S,"setMaxMP",tolua_GameEngineTolua_RoleAttr_setMaxMP00);
   tolua_function(tolua_S,"getMaxMP",tolua_GameEngineTolua_RoleAttr_getMaxMP00);
   tolua_function(tolua_S,"setVigor",tolua_GameEngineTolua_RoleAttr_setVigor00);
   tolua_function(tolua_S,"getVigor",tolua_GameEngineTolua_RoleAttr_getVigor00);
   tolua_function(tolua_S,"setVigorMax",tolua_GameEngineTolua_RoleAttr_setVigorMax00);
   tolua_function(tolua_S,"getVigorMax",tolua_GameEngineTolua_RoleAttr_getVigorMax00);
   tolua_function(tolua_S,"getXP",tolua_GameEngineTolua_RoleAttr_getXP00);
   tolua_function(tolua_S,"setXP",tolua_GameEngineTolua_RoleAttr_setXP00);
   tolua_function(tolua_S,"getMaxXP",tolua_GameEngineTolua_RoleAttr_getMaxXP00);
   tolua_function(tolua_S,"getVIM",tolua_GameEngineTolua_RoleAttr_getVIM00);
   tolua_function(tolua_S,"getMaxVIM",tolua_GameEngineTolua_RoleAttr_getMaxVIM00);
   tolua_function(tolua_S,"setLv",tolua_GameEngineTolua_RoleAttr_setLv00);
   tolua_function(tolua_S,"getLv",tolua_GameEngineTolua_RoleAttr_getLv00);
   tolua_function(tolua_S,"getExp",tolua_GameEngineTolua_RoleAttr_getExp00);
   tolua_function(tolua_S,"getLvExp",tolua_GameEngineTolua_RoleAttr_getLvExp00);
   tolua_function(tolua_S,"getOfflineLvExp",tolua_GameEngineTolua_RoleAttr_getOfflineLvExp00);
   tolua_function(tolua_S,"getMoney",tolua_GameEngineTolua_RoleAttr_getMoney00);
   tolua_function(tolua_S,"getBull",tolua_GameEngineTolua_RoleAttr_getBull00);
   tolua_function(tolua_S,"getStashMoney",tolua_GameEngineTolua_RoleAttr_getStashMoney00);
   tolua_function(tolua_S,"getStashBull",tolua_GameEngineTolua_RoleAttr_getStashBull00);
   tolua_function(tolua_S,"getGodCoin",tolua_GameEngineTolua_RoleAttr_getGodCoin00);
   tolua_function(tolua_S,"getBindGodCoin",tolua_GameEngineTolua_RoleAttr_getBindGodCoin00);
   tolua_function(tolua_S,"getVipPoint",tolua_GameEngineTolua_RoleAttr_getVipPoint00);
   tolua_function(tolua_S,"setEnerge",tolua_GameEngineTolua_RoleAttr_setEnerge00);
   tolua_function(tolua_S,"getEnerge",tolua_GameEngineTolua_RoleAttr_getEnerge00);
   tolua_function(tolua_S,"setMaxEnerge",tolua_GameEngineTolua_RoleAttr_setMaxEnerge00);
   tolua_function(tolua_S,"getMaxEnerge",tolua_GameEngineTolua_RoleAttr_getMaxEnerge00);
   tolua_function(tolua_S,"getSpeMove",tolua_GameEngineTolua_RoleAttr_getSpeMove00);
   tolua_function(tolua_S,"getMaxSpeMove",tolua_GameEngineTolua_RoleAttr_getMaxSpeMove00);
   tolua_function(tolua_S,"getSkillPoint",tolua_GameEngineTolua_RoleAttr_getSkillPoint00);
   tolua_function(tolua_S,"setQiYue",tolua_GameEngineTolua_RoleAttr_setQiYue00);
   tolua_function(tolua_S,"getQiYue",tolua_GameEngineTolua_RoleAttr_getQiYue00);
   tolua_function(tolua_S,"isCamp",tolua_GameEngineTolua_RoleAttr_isCamp00);
   tolua_function(tolua_S,"setOwnerFlag",tolua_GameEngineTolua_RoleAttr_setOwnerFlag00);
   tolua_function(tolua_S,"setOwnerName",tolua_GameEngineTolua_RoleAttr_setOwnerName00);
   tolua_function(tolua_S,"getOwnerName",tolua_GameEngineTolua_RoleAttr_getOwnerName00);
   tolua_function(tolua_S,"setOwnerId",tolua_GameEngineTolua_RoleAttr_setOwnerId00);
   tolua_function(tolua_S,"getOwnerId",tolua_GameEngineTolua_RoleAttr_getOwnerId00);
   tolua_function(tolua_S,"getClanPosition",tolua_GameEngineTolua_RoleAttr_getClanPosition00);
   tolua_function(tolua_S,"getPetIconId",tolua_GameEngineTolua_RoleAttr_getPetIconId00);
   tolua_function(tolua_S,"getPetDefId",tolua_GameEngineTolua_RoleAttr_getPetDefId00);
   tolua_function(tolua_S,"setDesignation",tolua_GameEngineTolua_RoleAttr_setDesignation00);
   tolua_function(tolua_S,"getDesignation",tolua_GameEngineTolua_RoleAttr_getDesignation00);
   tolua_function(tolua_S,"setDesignationID",tolua_GameEngineTolua_RoleAttr_setDesignationID00);
   tolua_function(tolua_S,"getDesignationID",tolua_GameEngineTolua_RoleAttr_getDesignationID00);
   tolua_function(tolua_S,"getCampIdx",tolua_GameEngineTolua_RoleAttr_getCampIdx00);
   tolua_function(tolua_S,"isSameRoleWId",tolua_GameEngineTolua_RoleAttr_isSameRoleWId00);
   tolua_function(tolua_S,"isSameRoleWId",tolua_GameEngineTolua_RoleAttr_isSameRoleWId01);
   tolua_function(tolua_S,"getBattleGlory",tolua_GameEngineTolua_RoleAttr_getBattleGlory00);
   tolua_function(tolua_S,"getAoShanBrand",tolua_GameEngineTolua_RoleAttr_getAoShanBrand00);
   tolua_function(tolua_S,"getLiftBrand",tolua_GameEngineTolua_RoleAttr_getLiftBrand00);
   tolua_function(tolua_S,"getCharm",tolua_GameEngineTolua_RoleAttr_getCharm00);
   tolua_function(tolua_S,"getSchoolVal",tolua_GameEngineTolua_RoleAttr_getSchoolVal00);
   tolua_function(tolua_S,"getDaoBaClanWid",tolua_GameEngineTolua_RoleAttr_getDaoBaClanWid00);
   tolua_function(tolua_S,"getDaoBaEnd",tolua_GameEngineTolua_RoleAttr_getDaoBaEnd00);
   tolua_function(tolua_S,"getDaoBaName",tolua_GameEngineTolua_RoleAttr_getDaoBaName00);
   tolua_function(tolua_S,"getClanGroupID",tolua_GameEngineTolua_RoleAttr_getClanGroupID00);
   tolua_function(tolua_S,"isInClanGroup",tolua_GameEngineTolua_RoleAttr_isInClanGroup00);
   tolua_function(tolua_S,"getSpartaGlory",tolua_GameEngineTolua_RoleAttr_getSpartaGlory00);
   tolua_function(tolua_S,"getSpartaFightVal",tolua_GameEngineTolua_RoleAttr_getSpartaFightVal00);
   tolua_function(tolua_S,"getZhengYiPoint",tolua_GameEngineTolua_RoleAttr_getZhengYiPoint00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagQiYueInfo_ToLua","tagQiYueInfo_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagQiYueInfo_ToLua");
   tolua_variable(tolua_S,"CurrQiYueID",tolua_get_tagQiYueInfo_ToLua_unsigned_CurrQiYueID,tolua_set_tagQiYueInfo_ToLua_unsigned_CurrQiYueID);
   tolua_variable(tolua_S,"QiYueNum",tolua_get_tagQiYueInfo_ToLua_unsigned_QiYueNum,tolua_set_tagQiYueInfo_ToLua_unsigned_QiYueNum);
   tolua_variable(tolua_S,"QiYueMax",tolua_get_tagQiYueInfo_ToLua_unsigned_QiYueMax,tolua_set_tagQiYueInfo_ToLua_unsigned_QiYueMax);
   tolua_array(tolua_S,"QiYueList",tolua_get_GameEngineTolua_tagQiYueInfo_ToLua_QiYueList,tolua_set_GameEngineTolua_tagQiYueInfo_ToLua_QiYueList);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GameQiYue","GameQiYue","",NULL);
  tolua_beginmodule(tolua_S,"GameQiYue");
   tolua_function(tolua_S,"getQiYueList",tolua_GameEngineTolua_GameQiYue_getQiYueList00);
   tolua_function(tolua_S,"getQiYueList",tolua_GameEngineTolua_GameQiYue_getQiYueList01);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagNpcDisplayInfo_ToLua","tagNpcDisplayInfo_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagNpcDisplayInfo_ToLua");
   tolua_variable(tolua_S,"id",tolua_get_tagNpcDisplayInfo_ToLua_unsigned_id,tolua_set_tagNpcDisplayInfo_ToLua_unsigned_id);
   tolua_variable(tolua_S,"name",tolua_get_tagNpcDisplayInfo_ToLua_name,tolua_set_tagNpcDisplayInfo_ToLua_name);
   tolua_variable(tolua_S,"model",tolua_get_tagNpcDisplayInfo_ToLua_model,tolua_set_tagNpcDisplayInfo_ToLua_model);
   tolua_variable(tolua_S,"scale",tolua_get_tagNpcDisplayInfo_ToLua_scale,tolua_set_tagNpcDisplayInfo_ToLua_scale);
   tolua_variable(tolua_S,"alpha",tolua_get_tagNpcDisplayInfo_ToLua_alpha,tolua_set_tagNpcDisplayInfo_ToLua_alpha);
   tolua_variable(tolua_S,"skin1",tolua_get_tagNpcDisplayInfo_ToLua_skin1,tolua_set_tagNpcDisplayInfo_ToLua_skin1);
   tolua_variable(tolua_S,"skin2",tolua_get_tagNpcDisplayInfo_ToLua_skin2,tolua_set_tagNpcDisplayInfo_ToLua_skin2);
   tolua_variable(tolua_S,"skin3",tolua_get_tagNpcDisplayInfo_ToLua_skin3,tolua_set_tagNpcDisplayInfo_ToLua_skin3);
   tolua_variable(tolua_S,"sound",tolua_get_tagNpcDisplayInfo_ToLua_unsigned_sound,tolua_set_tagNpcDisplayInfo_ToLua_unsigned_sound);
   tolua_variable(tolua_S,"race",tolua_get_tagNpcDisplayInfo_ToLua_race,tolua_set_tagNpcDisplayInfo_ToLua_race);
   tolua_variable(tolua_S,"gender",tolua_get_tagNpcDisplayInfo_ToLua_gender,tolua_set_tagNpcDisplayInfo_ToLua_gender);
   tolua_variable(tolua_S,"deadstate",tolua_get_tagNpcDisplayInfo_ToLua_unsigned_deadstate,tolua_set_tagNpcDisplayInfo_ToLua_unsigned_deadstate);
   tolua_variable(tolua_S,"normalrot",tolua_get_tagNpcDisplayInfo_ToLua_unsigned_normalrot,tolua_set_tagNpcDisplayInfo_ToLua_unsigned_normalrot);
   tolua_array(tolua_S,"userdata",tolua_get_GameEngineTolua_tagNpcDisplayInfo_ToLua_userdata,tolua_set_GameEngineTolua_tagNpcDisplayInfo_ToLua_userdata);
   tolua_variable(tolua_S,"radius",tolua_get_tagNpcDisplayInfo_ToLua_unsigned_radius,tolua_set_tagNpcDisplayInfo_ToLua_unsigned_radius);
   tolua_variable(tolua_S,"height",tolua_get_tagNpcDisplayInfo_ToLua_unsigned_height,tolua_set_tagNpcDisplayInfo_ToLua_unsigned_height);
   tolua_variable(tolua_S,"size",tolua_get_tagNpcDisplayInfo_ToLua_size,tolua_set_tagNpcDisplayInfo_ToLua_size);
   tolua_variable(tolua_S,"rideact",tolua_get_tagNpcDisplayInfo_ToLua_rideact,tolua_set_tagNpcDisplayInfo_ToLua_rideact);
   tolua_variable(tolua_S,"visuals",tolua_get_tagNpcDisplayInfo_ToLua_visuals,tolua_set_tagNpcDisplayInfo_ToLua_visuals);
   tolua_variable(tolua_S,"npcdesc",tolua_get_tagNpcDisplayInfo_ToLua_npcdesc,tolua_set_tagNpcDisplayInfo_ToLua_npcdesc);
   tolua_variable(tolua_S,"effect",tolua_get_tagNpcDisplayInfo_ToLua_effect,tolua_set_tagNpcDisplayInfo_ToLua_effect);
   tolua_variable(tolua_S,"ZHigh",tolua_get_tagNpcDisplayInfo_ToLua_ZHigh,tolua_set_tagNpcDisplayInfo_ToLua_ZHigh);
   tolua_variable(tolua_S,"MiscType",tolua_get_tagNpcDisplayInfo_ToLua_unsigned_MiscType,tolua_set_tagNpcDisplayInfo_ToLua_unsigned_MiscType);
   tolua_variable(tolua_S,"PoseType",tolua_get_tagNpcDisplayInfo_ToLua_PoseType,tolua_set_tagNpcDisplayInfo_ToLua_PoseType);
   tolua_variable(tolua_S,"passengeract",tolua_get_tagNpcDisplayInfo_ToLua_passengeract,tolua_set_tagNpcDisplayInfo_ToLua_passengeract);
   tolua_variable(tolua_S,"socket",tolua_get_tagNpcDisplayInfo_ToLua_socket,tolua_set_tagNpcDisplayInfo_ToLua_socket);
   tolua_variable(tolua_S,"dieeffect",tolua_get_tagNpcDisplayInfo_ToLua_dieeffect,tolua_set_tagNpcDisplayInfo_ToLua_dieeffect);
   tolua_variable(tolua_S,"birth",tolua_get_tagNpcDisplayInfo_ToLua_birth,tolua_set_tagNpcDisplayInfo_ToLua_birth);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagLevelUP_ToLua","tagLevelUP_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagLevelUP_ToLua");
   tolua_variable(tolua_S,"Level",tolua_get_tagLevelUP_ToLua_unsigned_Level,tolua_set_tagLevelUP_ToLua_unsigned_Level);
   tolua_variable(tolua_S,"LevelNextExp",tolua_get_tagLevelUP_ToLua_unsigned_LevelNextExp,tolua_set_tagLevelUP_ToLua_unsigned_LevelNextExp);
   tolua_variable(tolua_S,"MoneyLimit",tolua_get_tagLevelUP_ToLua_unsigned_MoneyLimit,tolua_set_tagLevelUP_ToLua_unsigned_MoneyLimit);
   tolua_variable(tolua_S,"LevelStand",tolua_get_tagLevelUP_ToLua_unsigned_LevelStand,tolua_set_tagLevelUP_ToLua_unsigned_LevelStand);
   tolua_variable(tolua_S,"ContributeExp",tolua_get_tagLevelUP_ToLua_unsigned_ContributeExp,tolua_set_tagLevelUP_ToLua_unsigned_ContributeExp);
   tolua_variable(tolua_S,"ContributeMoney",tolua_get_tagLevelUP_ToLua_unsigned_ContributeMoney,tolua_set_tagLevelUP_ToLua_unsigned_ContributeMoney);
   tolua_variable(tolua_S,"SitAddMp",tolua_get_tagLevelUP_ToLua_unsigned_SitAddMp,tolua_set_tagLevelUP_ToLua_unsigned_SitAddMp);
   tolua_variable(tolua_S,"SitAddHp",tolua_get_tagLevelUP_ToLua_unsigned_SitAddHp,tolua_set_tagLevelUP_ToLua_unsigned_SitAddHp);
   tolua_array(tolua_S,"WarriorSkillList",tolua_get_GameEngineTolua_tagLevelUP_ToLua_WarriorSkillList,tolua_set_GameEngineTolua_tagLevelUP_ToLua_WarriorSkillList);
   tolua_array(tolua_S,"MagicorSkillList",tolua_get_GameEngineTolua_tagLevelUP_ToLua_MagicorSkillList,tolua_set_GameEngineTolua_tagLevelUP_ToLua_MagicorSkillList);
   tolua_array(tolua_S,"GunerSkillList",tolua_get_GameEngineTolua_tagLevelUP_ToLua_GunerSkillList,tolua_set_GameEngineTolua_tagLevelUP_ToLua_GunerSkillList);
   tolua_array(tolua_S,"ChurchSkillList",tolua_get_GameEngineTolua_tagLevelUP_ToLua_ChurchSkillList,tolua_set_GameEngineTolua_tagLevelUP_ToLua_ChurchSkillList);
   tolua_variable(tolua_S,"DayExpLimit",tolua_get_tagLevelUP_ToLua_unsigned_DayExpLimit,tolua_set_tagLevelUP_ToLua_unsigned_DayExpLimit);
   tolua_variable(tolua_S,"WarriorLiliang",tolua_get_tagLevelUP_ToLua_unsigned_WarriorLiliang,tolua_set_tagLevelUP_ToLua_unsigned_WarriorLiliang);
   tolua_variable(tolua_S,"MagicorLiliang",tolua_get_tagLevelUP_ToLua_unsigned_MagicorLiliang,tolua_set_tagLevelUP_ToLua_unsigned_MagicorLiliang);
   tolua_variable(tolua_S,"GunerLiliang",tolua_get_tagLevelUP_ToLua_unsigned_GunerLiliang,tolua_set_tagLevelUP_ToLua_unsigned_GunerLiliang);
   tolua_variable(tolua_S,"ChurchLiliang",tolua_get_tagLevelUP_ToLua_unsigned_ChurchLiliang,tolua_set_tagLevelUP_ToLua_unsigned_ChurchLiliang);
   tolua_variable(tolua_S,"WarriorZhili",tolua_get_tagLevelUP_ToLua_unsigned_WarriorZhili,tolua_set_tagLevelUP_ToLua_unsigned_WarriorZhili);
   tolua_variable(tolua_S,"MagicorZhili",tolua_get_tagLevelUP_ToLua_unsigned_MagicorZhili,tolua_set_tagLevelUP_ToLua_unsigned_MagicorZhili);
   tolua_variable(tolua_S,"GunerZhili",tolua_get_tagLevelUP_ToLua_unsigned_GunerZhili,tolua_set_tagLevelUP_ToLua_unsigned_GunerZhili);
   tolua_variable(tolua_S,"ChurchZhili",tolua_get_tagLevelUP_ToLua_unsigned_ChurchZhili,tolua_set_tagLevelUP_ToLua_unsigned_ChurchZhili);
   tolua_variable(tolua_S,"WarriorTili",tolua_get_tagLevelUP_ToLua_unsigned_WarriorTili,tolua_set_tagLevelUP_ToLua_unsigned_WarriorTili);
   tolua_variable(tolua_S,"MagicorTili",tolua_get_tagLevelUP_ToLua_unsigned_MagicorTili,tolua_set_tagLevelUP_ToLua_unsigned_MagicorTili);
   tolua_variable(tolua_S,"GunerTili",tolua_get_tagLevelUP_ToLua_unsigned_GunerTili,tolua_set_tagLevelUP_ToLua_unsigned_GunerTili);
   tolua_variable(tolua_S,"ChurchTili",tolua_get_tagLevelUP_ToLua_unsigned_ChurchTili,tolua_set_tagLevelUP_ToLua_unsigned_ChurchTili);
   tolua_variable(tolua_S,"WarriorJingshen",tolua_get_tagLevelUP_ToLua_unsigned_WarriorJingshen,tolua_set_tagLevelUP_ToLua_unsigned_WarriorJingshen);
   tolua_variable(tolua_S,"MagicorJingshen",tolua_get_tagLevelUP_ToLua_unsigned_MagicorJingshen,tolua_set_tagLevelUP_ToLua_unsigned_MagicorJingshen);
   tolua_variable(tolua_S,"GunerJingshen",tolua_get_tagLevelUP_ToLua_unsigned_GunerJingshen,tolua_set_tagLevelUP_ToLua_unsigned_GunerJingshen);
   tolua_variable(tolua_S,"ChurchJingshen",tolua_get_tagLevelUP_ToLua_unsigned_ChurchJingshen,tolua_set_tagLevelUP_ToLua_unsigned_ChurchJingshen);
   tolua_variable(tolua_S,"WarriorFangyu",tolua_get_tagLevelUP_ToLua_unsigned_WarriorFangyu,tolua_set_tagLevelUP_ToLua_unsigned_WarriorFangyu);
   tolua_variable(tolua_S,"MagicorFangyu",tolua_get_tagLevelUP_ToLua_unsigned_MagicorFangyu,tolua_set_tagLevelUP_ToLua_unsigned_MagicorFangyu);
   tolua_variable(tolua_S,"GunerFangyu",tolua_get_tagLevelUP_ToLua_unsigned_GunerFangyu,tolua_set_tagLevelUP_ToLua_unsigned_GunerFangyu);
   tolua_variable(tolua_S,"ChurchFangyu",tolua_get_tagLevelUP_ToLua_unsigned_ChurchFangyu,tolua_set_tagLevelUP_ToLua_unsigned_ChurchFangyu);
   tolua_variable(tolua_S,"VimAdd",tolua_get_tagLevelUP_ToLua_unsigned_VimAdd,tolua_set_tagLevelUP_ToLua_unsigned_VimAdd);
   tolua_variable(tolua_S,"VimMax",tolua_get_tagLevelUP_ToLua_unsigned_VimMax,tolua_set_tagLevelUP_ToLua_unsigned_VimMax);
   tolua_variable(tolua_S,"AddRolePetGrid",tolua_get_tagLevelUP_ToLua_unsigned_AddRolePetGrid,tolua_set_tagLevelUP_ToLua_unsigned_AddRolePetGrid);
   tolua_variable(tolua_S,"MaxOfflineExp",tolua_get_tagLevelUP_ToLua_MaxOfflineExp,tolua_set_tagLevelUP_ToLua_MaxOfflineExp);
   tolua_variable(tolua_S,"WarriorAgile",tolua_get_tagLevelUP_ToLua_unsigned_WarriorAgile,tolua_set_tagLevelUP_ToLua_unsigned_WarriorAgile);
   tolua_variable(tolua_S,"MagicorAgile",tolua_get_tagLevelUP_ToLua_unsigned_MagicorAgile,tolua_set_tagLevelUP_ToLua_unsigned_MagicorAgile);
   tolua_variable(tolua_S,"GunerAgile",tolua_get_tagLevelUP_ToLua_unsigned_GunerAgile,tolua_set_tagLevelUP_ToLua_unsigned_GunerAgile);
   tolua_variable(tolua_S,"ChurchAgile",tolua_get_tagLevelUP_ToLua_unsigned_ChurchAgile,tolua_set_tagLevelUP_ToLua_unsigned_ChurchAgile);
   tolua_variable(tolua_S,"AtkLevelMul",tolua_get_tagLevelUP_ToLua_unsigned_AtkLevelMul,tolua_set_tagLevelUP_ToLua_unsigned_AtkLevelMul);
   tolua_variable(tolua_S,"DefLevelMul",tolua_get_tagLevelUP_ToLua_unsigned_DefLevelMul,tolua_set_tagLevelUP_ToLua_unsigned_DefLevelMul);
   tolua_variable(tolua_S,"MonDefHeavyHit",tolua_get_tagLevelUP_ToLua_MonDefHeavyHit,tolua_set_tagLevelUP_ToLua_MonDefHeavyHit);
   tolua_variable(tolua_S,"SwordWarriorLiliang",tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorLiliang,tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorLiliang);
   tolua_variable(tolua_S,"FireMagicorLiliang",tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorLiliang,tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorLiliang);
   tolua_variable(tolua_S,"DoubleGunerLiliang",tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerLiliang,tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerLiliang);
   tolua_variable(tolua_S,"ThunderChurchLiliang",tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchLiliang,tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchLiliang);
   tolua_variable(tolua_S,"SwordWarriorZhili",tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorZhili,tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorZhili);
   tolua_variable(tolua_S,"FireMagicorZhili",tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorZhili,tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorZhili);
   tolua_variable(tolua_S,"DoubleGunerZhili",tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerZhili,tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerZhili);
   tolua_variable(tolua_S,"ThunderChurchZhili",tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchZhili,tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchZhili);
   tolua_variable(tolua_S,"SwordWarriorTili",tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorTili,tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorTili);
   tolua_variable(tolua_S,"FireMagicorTili",tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorTili,tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorTili);
   tolua_variable(tolua_S,"DoubleGunerTili",tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerTili,tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerTili);
   tolua_variable(tolua_S,"ThunderChurchTili",tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchTili,tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchTili);
   tolua_variable(tolua_S,"SwordWarriorJingshen",tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorJingshen,tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorJingshen);
   tolua_variable(tolua_S,"FireMagicorJingshen",tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorJingshen,tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorJingshen);
   tolua_variable(tolua_S,"DoubleGunerJingshen",tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerJingshen,tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerJingshen);
   tolua_variable(tolua_S,"ThunderChurchJingshen",tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchJingshen,tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchJingshen);
   tolua_variable(tolua_S,"SwordWarriorFangyu",tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorFangyu,tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorFangyu);
   tolua_variable(tolua_S,"FireMagicorFangyu",tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorFangyu,tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorFangyu);
   tolua_variable(tolua_S,"DoubleGunerFangyu",tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerFangyu,tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerFangyu);
   tolua_variable(tolua_S,"ThunderChurchFangyu",tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchFangyu,tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchFangyu);
   tolua_variable(tolua_S,"SwordWarriorAgile",tolua_get_tagLevelUP_ToLua_unsigned_SwordWarriorAgile,tolua_set_tagLevelUP_ToLua_unsigned_SwordWarriorAgile);
   tolua_variable(tolua_S,"FireMagicorAgile",tolua_get_tagLevelUP_ToLua_unsigned_FireMagicorAgile,tolua_set_tagLevelUP_ToLua_unsigned_FireMagicorAgile);
   tolua_variable(tolua_S,"DoubleGunerAgile",tolua_get_tagLevelUP_ToLua_unsigned_DoubleGunerAgile,tolua_set_tagLevelUP_ToLua_unsigned_DoubleGunerAgile);
   tolua_variable(tolua_S,"ThunderChurchAgile",tolua_get_tagLevelUP_ToLua_unsigned_ThunderChurchAgile,tolua_set_tagLevelUP_ToLua_unsigned_ThunderChurchAgile);
   tolua_variable(tolua_S,"UIBaseFlee",tolua_get_tagLevelUP_ToLua_UIBaseFlee,tolua_set_tagLevelUP_ToLua_UIBaseFlee);
   tolua_variable(tolua_S,"BattleWinExp",tolua_get_tagLevelUP_ToLua_BattleWinExp,tolua_set_tagLevelUP_ToLua_BattleWinExp);
   tolua_variable(tolua_S,"BattleFailExp",tolua_get_tagLevelUP_ToLua_BattleFailExp,tolua_set_tagLevelUP_ToLua_BattleFailExp);
   tolua_variable(tolua_S,"MaxPworldOffExp",tolua_get_tagLevelUP_ToLua_MaxPworldOffExp,tolua_set_tagLevelUP_ToLua_MaxPworldOffExp);
   tolua_variable(tolua_S,"MonLevelHit",tolua_get_tagLevelUP_ToLua_MonLevelHit,tolua_set_tagLevelUP_ToLua_MonLevelHit);
   tolua_variable(tolua_S,"AddSparPkg",tolua_get_tagLevelUP_ToLua_AddSparPkg,tolua_set_tagLevelUP_ToLua_AddSparPkg);
   tolua_variable(tolua_S,"VigUp",tolua_get_tagLevelUP_ToLua_VigUp,tolua_set_tagLevelUP_ToLua_VigUp);
   tolua_variable(tolua_S,"MaxStashMoney",tolua_get_tagLevelUP_ToLua_MaxStashMoney,tolua_set_tagLevelUP_ToLua_MaxStashMoney);
   tolua_variable(tolua_S,"MaxPackageMoney",tolua_get_tagLevelUP_ToLua_MaxPackageMoney,tolua_set_tagLevelUP_ToLua_MaxPackageMoney);
   tolua_variable(tolua_S,"DailyUseBull",tolua_get_tagLevelUP_ToLua_DailyUseBull,tolua_set_tagLevelUP_ToLua_DailyUseBull);
   tolua_variable(tolua_S,"FzMod",tolua_get_tagLevelUP_ToLua_FzMod,tolua_set_tagLevelUP_ToLua_FzMod);
   tolua_variable(tolua_S,"ExpLeiji",tolua_get_tagLevelUP_ToLua_ExpLeiji,tolua_set_tagLevelUP_ToLua_ExpLeiji);
   tolua_variable(tolua_S,"DayZhengyiLimit",tolua_get_tagLevelUP_ToLua_unsigned_DayZhengyiLimit,tolua_set_tagLevelUP_ToLua_unsigned_DayZhengyiLimit);
   tolua_variable(tolua_S,"BaseGenius",tolua_get_tagLevelUP_ToLua_BaseGenius,tolua_set_tagLevelUP_ToLua_BaseGenius);
   tolua_variable(tolua_S,"GreenGemLimit",tolua_get_tagLevelUP_ToLua_unsigned_GreenGemLimit,tolua_set_tagLevelUP_ToLua_unsigned_GreenGemLimit);
   tolua_variable(tolua_S,"RemainTm",tolua_get_tagLevelUP_ToLua_RemainTm,tolua_set_tagLevelUP_ToLua_RemainTm);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagAtkerHurtChg_ToLua","tagAtkerHurtChg_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagAtkerHurtChg_ToLua");
   tolua_variable(tolua_S,"AtkerIceHurtMul",tolua_get_tagAtkerHurtChg_ToLua_AtkerIceHurtMul,tolua_set_tagAtkerHurtChg_ToLua_AtkerIceHurtMul);
   tolua_variable(tolua_S,"AtkerPhsicHurtMul",tolua_get_tagAtkerHurtChg_ToLua_AtkerPhsicHurtMul,tolua_set_tagAtkerHurtChg_ToLua_AtkerPhsicHurtMul);
   tolua_variable(tolua_S,"AtkerSiegeHurtMul",tolua_get_tagAtkerHurtChg_ToLua_AtkerSiegeHurtMul,tolua_set_tagAtkerHurtChg_ToLua_AtkerSiegeHurtMul);
   tolua_variable(tolua_S,"AtkerHolyHurtMul",tolua_get_tagAtkerHurtChg_ToLua_AtkerHolyHurtMul,tolua_set_tagAtkerHurtChg_ToLua_AtkerHolyHurtMul);
   tolua_variable(tolua_S,"AtkerMachineHurtMul",tolua_get_tagAtkerHurtChg_ToLua_AtkerMachineHurtMul,tolua_set_tagAtkerHurtChg_ToLua_AtkerMachineHurtMul);
   tolua_variable(tolua_S,"AtkerFireHurtMul",tolua_get_tagAtkerHurtChg_ToLua_AtkerFireHurtMul,tolua_set_tagAtkerHurtChg_ToLua_AtkerFireHurtMul);
   tolua_variable(tolua_S,"AtkerThunderHurtMul",tolua_get_tagAtkerHurtChg_ToLua_AtkerThunderHurtMul,tolua_set_tagAtkerHurtChg_ToLua_AtkerThunderHurtMul);
   tolua_variable(tolua_S,"AtkerLightHurtMul",tolua_get_tagAtkerHurtChg_ToLua_AtkerLightHurtMul,tolua_set_tagAtkerHurtChg_ToLua_AtkerLightHurtMul);
   tolua_variable(tolua_S,"AtkerNightHurtMul",tolua_get_tagAtkerHurtChg_ToLua_AtkerNightHurtMul,tolua_set_tagAtkerHurtChg_ToLua_AtkerNightHurtMul);
   tolua_variable(tolua_S,"AtkerWaterHurtMul",tolua_get_tagAtkerHurtChg_ToLua_AtkerWaterHurtMul,tolua_set_tagAtkerHurtChg_ToLua_AtkerWaterHurtMul);
   tolua_variable(tolua_S,"AtkerMagicHurtMul",tolua_get_tagAtkerHurtChg_ToLua_AtkerMagicHurtMul,tolua_set_tagAtkerHurtChg_ToLua_AtkerMagicHurtMul);
   tolua_variable(tolua_S,"AtkerHurtMul",tolua_get_tagAtkerHurtChg_ToLua_AtkerHurtMul,tolua_set_tagAtkerHurtChg_ToLua_AtkerHurtMul);
   tolua_variable(tolua_S,"AtkerPhsicHurtAdd",tolua_get_tagAtkerHurtChg_ToLua_AtkerPhsicHurtAdd,tolua_set_tagAtkerHurtChg_ToLua_AtkerPhsicHurtAdd);
   tolua_variable(tolua_S,"AtkerIceHurtAdd",tolua_get_tagAtkerHurtChg_ToLua_AtkerIceHurtAdd,tolua_set_tagAtkerHurtChg_ToLua_AtkerIceHurtAdd);
   tolua_variable(tolua_S,"AtkerSiegeHurtAdd",tolua_get_tagAtkerHurtChg_ToLua_AtkerSiegeHurtAdd,tolua_set_tagAtkerHurtChg_ToLua_AtkerSiegeHurtAdd);
   tolua_variable(tolua_S,"AtkerHolyHurtAdd",tolua_get_tagAtkerHurtChg_ToLua_AtkerHolyHurtAdd,tolua_set_tagAtkerHurtChg_ToLua_AtkerHolyHurtAdd);
   tolua_variable(tolua_S,"AtkerMachineHurtAdd",tolua_get_tagAtkerHurtChg_ToLua_AtkerMachineHurtAdd,tolua_set_tagAtkerHurtChg_ToLua_AtkerMachineHurtAdd);
   tolua_variable(tolua_S,"AtkerFireHurtAdd",tolua_get_tagAtkerHurtChg_ToLua_AtkerFireHurtAdd,tolua_set_tagAtkerHurtChg_ToLua_AtkerFireHurtAdd);
   tolua_variable(tolua_S,"AtkerThunderHurtAdd",tolua_get_tagAtkerHurtChg_ToLua_AtkerThunderHurtAdd,tolua_set_tagAtkerHurtChg_ToLua_AtkerThunderHurtAdd);
   tolua_variable(tolua_S,"AtkerLightHurtAdd",tolua_get_tagAtkerHurtChg_ToLua_AtkerLightHurtAdd,tolua_set_tagAtkerHurtChg_ToLua_AtkerLightHurtAdd);
   tolua_variable(tolua_S,"AtkerNightHurtAdd",tolua_get_tagAtkerHurtChg_ToLua_AtkerNightHurtAdd,tolua_set_tagAtkerHurtChg_ToLua_AtkerNightHurtAdd);
   tolua_variable(tolua_S,"AtkerWaterHurtAdd",tolua_get_tagAtkerHurtChg_ToLua_AtkerWaterHurtAdd,tolua_set_tagAtkerHurtChg_ToLua_AtkerWaterHurtAdd);
   tolua_variable(tolua_S,"AtkerMagicHurtAdd",tolua_get_tagAtkerHurtChg_ToLua_AtkerMagicHurtAdd,tolua_set_tagAtkerHurtChg_ToLua_AtkerMagicHurtAdd);
   tolua_variable(tolua_S,"AtkerHurtAdd",tolua_get_tagAtkerHurtChg_ToLua_AtkerHurtAdd,tolua_set_tagAtkerHurtChg_ToLua_AtkerHurtAdd);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagAtkeeHurtChg_ToLua","tagAtkeeHurtChg_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagAtkeeHurtChg_ToLua");
   tolua_variable(tolua_S,"AtkeePhsicHurtMul",tolua_get_tagAtkeeHurtChg_ToLua_AtkeePhsicHurtMul,tolua_set_tagAtkeeHurtChg_ToLua_AtkeePhsicHurtMul);
   tolua_variable(tolua_S,"AtkeeIceHurtMul",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeIceHurtMul,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeIceHurtMul);
   tolua_variable(tolua_S,"AtkeeSiegeHurtMul",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeSiegeHurtMul,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeSiegeHurtMul);
   tolua_variable(tolua_S,"AtkeeHolyHurtMul",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeHolyHurtMul,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeHolyHurtMul);
   tolua_variable(tolua_S,"AtkeeMachineHurtMul",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeMachineHurtMul,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeMachineHurtMul);
   tolua_variable(tolua_S,"AtkeeFireHurtMul",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeFireHurtMul,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeFireHurtMul);
   tolua_variable(tolua_S,"AtkeeThunderHurtMul",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeThunderHurtMul,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeThunderHurtMul);
   tolua_variable(tolua_S,"AtkeeLightHurtMul",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeLightHurtMul,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeLightHurtMul);
   tolua_variable(tolua_S,"AtkeeNightHurtMul",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeNightHurtMul,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeNightHurtMul);
   tolua_variable(tolua_S,"AtkeeWaterHurtMul",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeWaterHurtMul,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeWaterHurtMul);
   tolua_variable(tolua_S,"AtkeeMagicHurtMul",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeMagicHurtMul,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeMagicHurtMul);
   tolua_variable(tolua_S,"AtkeeHurtMul",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeHurtMul,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeHurtMul);
   tolua_variable(tolua_S,"AtkeePhsicHurtAdd",tolua_get_tagAtkeeHurtChg_ToLua_AtkeePhsicHurtAdd,tolua_set_tagAtkeeHurtChg_ToLua_AtkeePhsicHurtAdd);
   tolua_variable(tolua_S,"AtkeeIceHurtAdd",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeIceHurtAdd,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeIceHurtAdd);
   tolua_variable(tolua_S,"AtkeeSiegeHurtAdd",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeSiegeHurtAdd,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeSiegeHurtAdd);
   tolua_variable(tolua_S,"AtkeeHolyHurtAdd",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeHolyHurtAdd,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeHolyHurtAdd);
   tolua_variable(tolua_S,"AtkeeMachineHurtAdd",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeMachineHurtAdd,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeMachineHurtAdd);
   tolua_variable(tolua_S,"AtkeeFireHurtAdd",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeFireHurtAdd,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeFireHurtAdd);
   tolua_variable(tolua_S,"AtkeeThunderHurtAdd",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeThunderHurtAdd,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeThunderHurtAdd);
   tolua_variable(tolua_S,"AtkeeLightHurtAdd",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeLightHurtAdd,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeLightHurtAdd);
   tolua_variable(tolua_S,"AtkeeNightHurtAdd",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeNightHurtAdd,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeNightHurtAdd);
   tolua_variable(tolua_S,"AtkeeWaterHurtAdd",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeWaterHurtAdd,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeWaterHurtAdd);
   tolua_variable(tolua_S,"AtkeeMagicHurtAdd",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeMagicHurtAdd,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeMagicHurtAdd);
   tolua_variable(tolua_S,"AtkeeHurtAdd",tolua_get_tagAtkeeHurtChg_ToLua_AtkeeHurtAdd,tolua_set_tagAtkeeHurtChg_ToLua_AtkeeHurtAdd);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagPressInit_ToLua","tagPressInit_ToLua","",tolua_collect_tagPressInit_ToLua);
  #else
  tolua_cclass(tolua_S,"tagPressInit_ToLua","tagPressInit_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagPressInit_ToLua");
   tolua_variable(tolua_S,"PressInitType",tolua_get_tagPressInit_ToLua_unsigned_PressInitType,tolua_set_tagPressInit_ToLua_unsigned_PressInitType);
   tolua_variable(tolua_S,"Val1",tolua_get_tagPressInit_ToLua_unsigned_Val1,tolua_set_tagPressInit_ToLua_unsigned_Val1);
   tolua_variable(tolua_S,"Val2",tolua_get_tagPressInit_ToLua_unsigned_Val2,tolua_set_tagPressInit_ToLua_unsigned_Val2);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagAINextSkill_ToLua","tagAINextSkill_ToLua","",tolua_collect_tagAINextSkill_ToLua);
  #else
  tolua_cclass(tolua_S,"tagAINextSkill_ToLua","tagAINextSkill_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagAINextSkill_ToLua");
   tolua_variable(tolua_S,"SkillID",tolua_get_tagAINextSkill_ToLua_unsigned_SkillID,tolua_set_tagAINextSkill_ToLua_unsigned_SkillID);
   tolua_variable(tolua_S,"SkillLevel",tolua_get_tagAINextSkill_ToLua_unsigned_SkillLevel,tolua_set_tagAINextSkill_ToLua_unsigned_SkillLevel);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagAINormalSkill_ToLua","tagAINormalSkill_ToLua","",tolua_collect_tagAINormalSkill_ToLua);
  #else
  tolua_cclass(tolua_S,"tagAINormalSkill_ToLua","tagAINormalSkill_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagAINormalSkill_ToLua");
   tolua_variable(tolua_S,"SkillID",tolua_get_tagAINormalSkill_ToLua_unsigned_SkillID,tolua_set_tagAINormalSkill_ToLua_unsigned_SkillID);
   tolua_variable(tolua_S,"SkillLevel",tolua_get_tagAINormalSkill_ToLua_unsigned_SkillLevel,tolua_set_tagAINormalSkill_ToLua_unsigned_SkillLevel);
   tolua_variable(tolua_S,"ConditionID",tolua_get_tagAINormalSkill_ToLua_ConditionID,tolua_set_tagAINormalSkill_ToLua_ConditionID);
   tolua_variable(tolua_S,"ConditionVal",tolua_get_tagAINormalSkill_ToLua_ConditionVal,tolua_set_tagAINormalSkill_ToLua_ConditionVal);
   tolua_variable(tolua_S,"Rate",tolua_get_tagAINormalSkill_ToLua_unsigned_Rate,tolua_set_tagAINormalSkill_ToLua_unsigned_Rate);
   tolua_variable(tolua_S,"Once",tolua_get_tagAINormalSkill_ToLua_Once,tolua_set_tagAINormalSkill_ToLua_Once);
   tolua_array(tolua_S,"NextSkill",tolua_get_GameEngineTolua_tagAINormalSkill_ToLua_NextSkill,tolua_set_GameEngineTolua_tagAINormalSkill_ToLua_NextSkill);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagAIInsertSkill_ToLua","tagAIInsertSkill_ToLua","",tolua_collect_tagAIInsertSkill_ToLua);
  #else
  tolua_cclass(tolua_S,"tagAIInsertSkill_ToLua","tagAIInsertSkill_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagAIInsertSkill_ToLua");
   tolua_variable(tolua_S,"SkillID",tolua_get_tagAIInsertSkill_ToLua_unsigned_SkillID,tolua_set_tagAIInsertSkill_ToLua_unsigned_SkillID);
   tolua_variable(tolua_S,"SkillLevel",tolua_get_tagAIInsertSkill_ToLua_unsigned_SkillLevel,tolua_set_tagAIInsertSkill_ToLua_unsigned_SkillLevel);
   tolua_variable(tolua_S,"ConditionID",tolua_get_tagAIInsertSkill_ToLua_ConditionID,tolua_set_tagAIInsertSkill_ToLua_ConditionID);
   tolua_variable(tolua_S,"ConditionVal",tolua_get_tagAIInsertSkill_ToLua_ConditionVal,tolua_set_tagAIInsertSkill_ToLua_ConditionVal);
   tolua_variable(tolua_S,"Rate",tolua_get_tagAIInsertSkill_ToLua_Rate,tolua_set_tagAIInsertSkill_ToLua_Rate);
   tolua_variable(tolua_S,"Once",tolua_get_tagAIInsertSkill_ToLua_Once,tolua_set_tagAIInsertSkill_ToLua_Once);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagAIRefreshedSkill_ToLua","tagAIRefreshedSkill_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagAIRefreshedSkill_ToLua");
   tolua_variable(tolua_S,"SkillID",tolua_get_tagAIRefreshedSkill_ToLua_unsigned_SkillID,tolua_set_tagAIRefreshedSkill_ToLua_unsigned_SkillID);
   tolua_variable(tolua_S,"SkillLevel",tolua_get_tagAIRefreshedSkill_ToLua_unsigned_SkillLevel,tolua_set_tagAIRefreshedSkill_ToLua_unsigned_SkillLevel);
   tolua_variable(tolua_S,"Rate",tolua_get_tagAIRefreshedSkill_ToLua_Rate,tolua_set_tagAIRefreshedSkill_ToLua_Rate);
   tolua_variable(tolua_S,"Self",tolua_get_tagAIRefreshedSkill_ToLua_Self,tolua_set_tagAIRefreshedSkill_ToLua_Self);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagMonBootyMoney_ToLua","tagMonBootyMoney_ToLua","",tolua_collect_tagMonBootyMoney_ToLua);
  #else
  tolua_cclass(tolua_S,"tagMonBootyMoney_ToLua","tagMonBootyMoney_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagMonBootyMoney_ToLua");
   tolua_variable(tolua_S,"MoneyAttrID",tolua_get_tagMonBootyMoney_ToLua_unsigned_MoneyAttrID,tolua_set_tagMonBootyMoney_ToLua_unsigned_MoneyAttrID);
   tolua_variable(tolua_S,"Rate",tolua_get_tagMonBootyMoney_ToLua_unsigned_Rate,tolua_set_tagMonBootyMoney_ToLua_unsigned_Rate);
   tolua_variable(tolua_S,"MoneyVal",tolua_get_tagMonBootyMoney_ToLua_unsigned_MoneyVal,tolua_set_tagMonBootyMoney_ToLua_unsigned_MoneyVal);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagMonBootyItem_ToLua","tagMonBootyItem_ToLua","",tolua_collect_tagMonBootyItem_ToLua);
  #else
  tolua_cclass(tolua_S,"tagMonBootyItem_ToLua","tagMonBootyItem_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagMonBootyItem_ToLua");
   tolua_variable(tolua_S,"ItemID",tolua_get_tagMonBootyItem_ToLua_unsigned_ItemID,tolua_set_tagMonBootyItem_ToLua_unsigned_ItemID);
   tolua_variable(tolua_S,"Rate",tolua_get_tagMonBootyItem_ToLua_unsigned_Rate,tolua_set_tagMonBootyItem_ToLua_unsigned_Rate);
   tolua_variable(tolua_S,"TeamBootyType",tolua_get_tagMonBootyItem_ToLua_unsigned_TeamBootyType,tolua_set_tagMonBootyItem_ToLua_unsigned_TeamBootyType);
   tolua_variable(tolua_S,"Num",tolua_get_tagMonBootyItem_ToLua_unsigned_Num,tolua_set_tagMonBootyItem_ToLua_unsigned_Num);
   tolua_variable(tolua_S,"DirectPakage",tolua_get_tagMonBootyItem_ToLua_unsigned_DirectPakage,tolua_set_tagMonBootyItem_ToLua_unsigned_DirectPakage);
   tolua_variable(tolua_S,"MinLevel",tolua_get_tagMonBootyItem_ToLua_unsigned_MinLevel,tolua_set_tagMonBootyItem_ToLua_unsigned_MinLevel);
   tolua_variable(tolua_S,"MaxLevel",tolua_get_tagMonBootyItem_ToLua_unsigned_MaxLevel,tolua_set_tagMonBootyItem_ToLua_unsigned_MaxLevel);
   tolua_variable(tolua_S,"Career",tolua_get_tagMonBootyItem_ToLua_unsigned_Career,tolua_set_tagMonBootyItem_ToLua_unsigned_Career);
   tolua_variable(tolua_S,"TaskID1",tolua_get_tagMonBootyItem_ToLua_unsigned_TaskID1,tolua_set_tagMonBootyItem_ToLua_unsigned_TaskID1);
   tolua_variable(tolua_S,"TaskID2",tolua_get_tagMonBootyItem_ToLua_unsigned_TaskID2,tolua_set_tagMonBootyItem_ToLua_unsigned_TaskID2);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagMonBooty_ToLua","tagMonBooty_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagMonBooty_ToLua");
   tolua_variable(tolua_S,"Exp",tolua_get_tagMonBooty_ToLua_unsigned_Exp,tolua_set_tagMonBooty_ToLua_unsigned_Exp);
   tolua_array(tolua_S,"Moneys",tolua_get_GameEngineTolua_tagMonBooty_ToLua_Moneys,tolua_set_GameEngineTolua_tagMonBooty_ToLua_Moneys);
   tolua_array(tolua_S,"Items",tolua_get_GameEngineTolua_tagMonBooty_ToLua_Items,tolua_set_GameEngineTolua_tagMonBooty_ToLua_Items);
   tolua_variable(tolua_S,"BootyPetEgg",tolua_get_tagMonBooty_ToLua_unsigned_BootyPetEgg,tolua_set_tagMonBooty_ToLua_unsigned_BootyPetEgg);
   tolua_variable(tolua_S,"BootyPetEggRate",tolua_get_tagMonBooty_ToLua_BootyPetEggRate,tolua_set_tagMonBooty_ToLua_BootyPetEggRate);
   tolua_variable(tolua_S,"Respact",tolua_get_tagMonBooty_ToLua_Respact,tolua_set_tagMonBooty_ToLua_Respact);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagMonColorLevel_ToLua","tagMonColorLevel_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagMonColorLevel_ToLua");
   tolua_variable(tolua_S,"BlackLevel",tolua_get_tagMonColorLevel_ToLua_unsigned_BlackLevel,tolua_set_tagMonColorLevel_ToLua_unsigned_BlackLevel);
   tolua_variable(tolua_S,"RedLevel",tolua_get_tagMonColorLevel_ToLua_unsigned_RedLevel,tolua_set_tagMonColorLevel_ToLua_unsigned_RedLevel);
   tolua_variable(tolua_S,"WhiteLevel",tolua_get_tagMonColorLevel_ToLua_unsigned_WhiteLevel,tolua_set_tagMonColorLevel_ToLua_unsigned_WhiteLevel);
   tolua_variable(tolua_S,"GreenLevel",tolua_get_tagMonColorLevel_ToLua_unsigned_GreenLevel,tolua_set_tagMonColorLevel_ToLua_unsigned_GreenLevel);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagMonCollect_ToLua","tagMonCollect_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagMonCollect_ToLua");
   tolua_array(tolua_S,"TaskID",tolua_get_GameEngineTolua_tagMonCollect_ToLua_TaskID,tolua_set_GameEngineTolua_tagMonCollect_ToLua_TaskID);
   tolua_variable(tolua_S,"CollectOnce",tolua_get_tagMonCollect_ToLua_unsigned_CollectOnce,tolua_set_tagMonCollect_ToLua_unsigned_CollectOnce);
   tolua_variable(tolua_S,"CollectTime",tolua_get_tagMonCollect_ToLua_unsigned_CollectTime,tolua_set_tagMonCollect_ToLua_unsigned_CollectTime);
   tolua_variable(tolua_S,"CollectArmDur",tolua_get_tagMonCollect_ToLua_unsigned_CollectArmDur,tolua_set_tagMonCollect_ToLua_unsigned_CollectArmDur);
   tolua_variable(tolua_S,"CollectSkillID",tolua_get_tagMonCollect_ToLua_unsigned_CollectSkillID,tolua_set_tagMonCollect_ToLua_unsigned_CollectSkillID);
   tolua_variable(tolua_S,"CollectArm",tolua_get_tagMonCollect_ToLua_unsigned_CollectArm,tolua_set_tagMonCollect_ToLua_unsigned_CollectArm);
   tolua_variable(tolua_S,"CollectItem",tolua_get_tagMonCollect_ToLua_unsigned_CollectItem,tolua_set_tagMonCollect_ToLua_unsigned_CollectItem);
   tolua_variable(tolua_S,"CollectItemDur",tolua_get_tagMonCollect_ToLua_unsigned_CollectItemDur,tolua_set_tagMonCollect_ToLua_unsigned_CollectItemDur);
   tolua_variable(tolua_S,"CollectSecondarySkillType",tolua_get_tagMonCollect_ToLua_unsigned_CollectSecondarySkillType,tolua_set_tagMonCollect_ToLua_unsigned_CollectSecondarySkillType);
   tolua_variable(tolua_S,"CollectRecipeID",tolua_get_tagMonCollect_ToLua_unsigned_CollectRecipeID,tolua_set_tagMonCollect_ToLua_unsigned_CollectRecipeID);
   tolua_variable(tolua_S,"NoDecHP",tolua_get_tagMonCollect_ToLua_NoDecHP,tolua_set_tagMonCollect_ToLua_NoDecHP);
   tolua_variable(tolua_S,"CollectType",tolua_get_tagMonCollect_ToLua_CollectType,tolua_set_tagMonCollect_ToLua_CollectType);
   tolua_array(tolua_S,"CollectPackgeItem",tolua_get_GameEngineTolua_tagMonCollect_ToLua_CollectPackgeItem,tolua_set_GameEngineTolua_tagMonCollect_ToLua_CollectPackgeItem);
   tolua_variable(tolua_S,"CollectFlag",tolua_get_tagMonCollect_ToLua_CollectFlag,tolua_set_tagMonCollect_ToLua_CollectFlag);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagAberrantList_ToLua","tagAberrantList_ToLua","",tolua_collect_tagAberrantList_ToLua);
  #else
  tolua_cclass(tolua_S,"tagAberrantList_ToLua","tagAberrantList_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagAberrantList_ToLua");
   tolua_variable(tolua_S,"MonsterID",tolua_get_tagAberrantList_ToLua_unsigned_MonsterID,tolua_set_tagAberrantList_ToLua_unsigned_MonsterID);
   tolua_variable(tolua_S,"Rate",tolua_get_tagAberrantList_ToLua_unsigned_Rate,tolua_set_tagAberrantList_ToLua_unsigned_Rate);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagAddMonBootyGroup_ToLua","tagAddMonBootyGroup_ToLua","",tolua_collect_tagAddMonBootyGroup_ToLua);
  #else
  tolua_cclass(tolua_S,"tagAddMonBootyGroup_ToLua","tagAddMonBootyGroup_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagAddMonBootyGroup_ToLua");
   tolua_variable(tolua_S,"GroupID",tolua_get_tagAddMonBootyGroup_ToLua_GroupID,tolua_set_tagAddMonBootyGroup_ToLua_GroupID);
   tolua_variable(tolua_S,"CollectTime",tolua_get_tagAddMonBootyGroup_ToLua_CollectTime,tolua_set_tagAddMonBootyGroup_ToLua_CollectTime);
   tolua_variable(tolua_S,"Flag",tolua_get_tagAddMonBootyGroup_ToLua_Flag,tolua_set_tagAddMonBootyGroup_ToLua_Flag);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagMonsterDef_ToLua","tagMonsterDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagMonsterDef_ToLua");
   tolua_variable(tolua_S,"MonsterID",tolua_get_tagMonsterDef_ToLua_unsigned_MonsterID,tolua_set_tagMonsterDef_ToLua_unsigned_MonsterID);
   tolua_variable(tolua_S,"Name",tolua_get_tagMonsterDef_ToLua_Name,tolua_set_tagMonsterDef_ToLua_Name);
   tolua_variable(tolua_S,"IconID",tolua_get_tagMonsterDef_ToLua_IconID,tolua_set_tagMonsterDef_ToLua_IconID);
   tolua_variable(tolua_S,"HP",tolua_get_tagMonsterDef_ToLua_unsigned_HP,tolua_set_tagMonsterDef_ToLua_unsigned_HP);
   tolua_variable(tolua_S,"IceAtk",tolua_get_tagMonsterDef_ToLua_unsigned_IceAtk,tolua_set_tagMonsterDef_ToLua_unsigned_IceAtk);
   tolua_variable(tolua_S,"IceDef",tolua_get_tagMonsterDef_ToLua_unsigned_IceDef,tolua_set_tagMonsterDef_ToLua_unsigned_IceDef);
   tolua_variable(tolua_S,"FireAtk",tolua_get_tagMonsterDef_ToLua_unsigned_FireAtk,tolua_set_tagMonsterDef_ToLua_unsigned_FireAtk);
   tolua_variable(tolua_S,"FireDef",tolua_get_tagMonsterDef_ToLua_unsigned_FireDef,tolua_set_tagMonsterDef_ToLua_unsigned_FireDef);
   tolua_variable(tolua_S,"ThunderAtk",tolua_get_tagMonsterDef_ToLua_unsigned_ThunderAtk,tolua_set_tagMonsterDef_ToLua_unsigned_ThunderAtk);
   tolua_variable(tolua_S,"ThunderDef",tolua_get_tagMonsterDef_ToLua_unsigned_ThunderDef,tolua_set_tagMonsterDef_ToLua_unsigned_ThunderDef);
   tolua_variable(tolua_S,"LightAtk",tolua_get_tagMonsterDef_ToLua_unsigned_LightAtk,tolua_set_tagMonsterDef_ToLua_unsigned_LightAtk);
   tolua_variable(tolua_S,"LightDef",tolua_get_tagMonsterDef_ToLua_unsigned_LightDef,tolua_set_tagMonsterDef_ToLua_unsigned_LightDef);
   tolua_variable(tolua_S,"NightAtk",tolua_get_tagMonsterDef_ToLua_unsigned_NightAtk,tolua_set_tagMonsterDef_ToLua_unsigned_NightAtk);
   tolua_variable(tolua_S,"NightDef",tolua_get_tagMonsterDef_ToLua_unsigned_NightDef,tolua_set_tagMonsterDef_ToLua_unsigned_NightDef);
   tolua_variable(tolua_S,"PhsicAtk",tolua_get_tagMonsterDef_ToLua_unsigned_PhsicAtk,tolua_set_tagMonsterDef_ToLua_unsigned_PhsicAtk);
   tolua_variable(tolua_S,"PhsicDef",tolua_get_tagMonsterDef_ToLua_unsigned_PhsicDef,tolua_set_tagMonsterDef_ToLua_unsigned_PhsicDef);
   tolua_variable(tolua_S,"WaterAtk",tolua_get_tagMonsterDef_ToLua_unsigned_WaterAtk,tolua_set_tagMonsterDef_ToLua_unsigned_WaterAtk);
   tolua_variable(tolua_S,"WaterDef",tolua_get_tagMonsterDef_ToLua_unsigned_WaterDef,tolua_set_tagMonsterDef_ToLua_unsigned_WaterDef);
   tolua_variable(tolua_S,"SiegeAtk",tolua_get_tagMonsterDef_ToLua_unsigned_SiegeAtk,tolua_set_tagMonsterDef_ToLua_unsigned_SiegeAtk);
   tolua_variable(tolua_S,"SiegeDef",tolua_get_tagMonsterDef_ToLua_unsigned_SiegeDef,tolua_set_tagMonsterDef_ToLua_unsigned_SiegeDef);
   tolua_variable(tolua_S,"HolyAtk",tolua_get_tagMonsterDef_ToLua_unsigned_HolyAtk,tolua_set_tagMonsterDef_ToLua_unsigned_HolyAtk);
   tolua_variable(tolua_S,"HolyDef",tolua_get_tagMonsterDef_ToLua_unsigned_HolyDef,tolua_set_tagMonsterDef_ToLua_unsigned_HolyDef);
   tolua_variable(tolua_S,"MachineAtk",tolua_get_tagMonsterDef_ToLua_unsigned_MachineAtk,tolua_set_tagMonsterDef_ToLua_unsigned_MachineAtk);
   tolua_variable(tolua_S,"MachineDef",tolua_get_tagMonsterDef_ToLua_unsigned_MachineDef,tolua_set_tagMonsterDef_ToLua_unsigned_MachineDef);
   tolua_variable(tolua_S,"AtkerHurtChg",tolua_get_tagMonsterDef_ToLua_AtkerHurtChg,tolua_set_tagMonsterDef_ToLua_AtkerHurtChg);
   tolua_variable(tolua_S,"AtkeeHurtChg",tolua_get_tagMonsterDef_ToLua_AtkeeHurtChg,tolua_set_tagMonsterDef_ToLua_AtkeeHurtChg);
   tolua_variable(tolua_S,"Hit",tolua_get_tagMonsterDef_ToLua_unsigned_Hit,tolua_set_tagMonsterDef_ToLua_unsigned_Hit);
   tolua_variable(tolua_S,"Flee",tolua_get_tagMonsterDef_ToLua_unsigned_Flee,tolua_set_tagMonsterDef_ToLua_unsigned_Flee);
   tolua_variable(tolua_S,"Type",tolua_get_tagMonsterDef_ToLua_unsigned_Type,tolua_set_tagMonsterDef_ToLua_unsigned_Type);
   tolua_variable(tolua_S,"BackMul",tolua_get_tagMonsterDef_ToLua_BackMul,tolua_set_tagMonsterDef_ToLua_BackMul);
   tolua_variable(tolua_S,"NotRefresh",tolua_get_tagMonsterDef_ToLua_unsigned_NotRefresh,tolua_set_tagMonsterDef_ToLua_unsigned_NotRefresh);
   tolua_variable(tolua_S,"DynAttr",tolua_get_tagMonsterDef_ToLua_unsigned_DynAttr,tolua_set_tagMonsterDef_ToLua_unsigned_DynAttr);
   tolua_variable(tolua_S,"MoveSpd",tolua_get_tagMonsterDef_ToLua_unsigned_MoveSpd,tolua_set_tagMonsterDef_ToLua_unsigned_MoveSpd);
   tolua_variable(tolua_S,"FightMoveSpd",tolua_get_tagMonsterDef_ToLua_unsigned_FightMoveSpd,tolua_set_tagMonsterDef_ToLua_unsigned_FightMoveSpd);
   tolua_variable(tolua_S,"HomeMoveSpd",tolua_get_tagMonsterDef_ToLua_unsigned_HomeMoveSpd,tolua_set_tagMonsterDef_ToLua_unsigned_HomeMoveSpd);
   tolua_variable(tolua_S,"RefreshTime",tolua_get_tagMonsterDef_ToLua_RefreshTime,tolua_set_tagMonsterDef_ToLua_RefreshTime);
   tolua_variable(tolua_S,"DeadAddResourceMul",tolua_get_tagMonsterDef_ToLua_DeadAddResourceMul,tolua_set_tagMonsterDef_ToLua_DeadAddResourceMul);
   tolua_array(tolua_S,"PressInit",tolua_get_GameEngineTolua_tagMonsterDef_ToLua_PressInit,tolua_set_GameEngineTolua_tagMonsterDef_ToLua_PressInit);
   tolua_variable(tolua_S,"PressHurtRate",tolua_get_tagMonsterDef_ToLua_unsigned_PressHurtRate,tolua_set_tagMonsterDef_ToLua_unsigned_PressHurtRate);
   tolua_variable(tolua_S,"PressSelectAdd",tolua_get_tagMonsterDef_ToLua_unsigned_PressSelectAdd,tolua_set_tagMonsterDef_ToLua_unsigned_PressSelectAdd);
   tolua_array(tolua_S,"AINormalSkills",tolua_get_GameEngineTolua_tagMonsterDef_ToLua_AINormalSkills,tolua_set_GameEngineTolua_tagMonsterDef_ToLua_AINormalSkills);
   tolua_array(tolua_S,"AIAtkeeSkills",tolua_get_GameEngineTolua_tagMonsterDef_ToLua_AIAtkeeSkills,tolua_set_GameEngineTolua_tagMonsterDef_ToLua_AIAtkeeSkills);
   tolua_array(tolua_S,"AIAtkerSkills",tolua_get_GameEngineTolua_tagMonsterDef_ToLua_AIAtkerSkills,tolua_set_GameEngineTolua_tagMonsterDef_ToLua_AIAtkerSkills);
   tolua_variable(tolua_S,"ViewDist",tolua_get_tagMonsterDef_ToLua_unsigned_ViewDist,tolua_set_tagMonsterDef_ToLua_unsigned_ViewDist);
   tolua_variable(tolua_S,"TraceDist",tolua_get_tagMonsterDef_ToLua_unsigned_TraceDist,tolua_set_tagMonsterDef_ToLua_unsigned_TraceDist);
   tolua_variable(tolua_S,"MoveType",tolua_get_tagMonsterDef_ToLua_unsigned_MoveType,tolua_set_tagMonsterDef_ToLua_unsigned_MoveType);
   tolua_variable(tolua_S,"AtkType",tolua_get_tagMonsterDef_ToLua_unsigned_AtkType,tolua_set_tagMonsterDef_ToLua_unsigned_AtkType);
   tolua_variable(tolua_S,"RandSelect",tolua_get_tagMonsterDef_ToLua_unsigned_RandSelect,tolua_set_tagMonsterDef_ToLua_unsigned_RandSelect);
   tolua_variable(tolua_S,"HeavyHitRate",tolua_get_tagMonsterDef_ToLua_unsigned_HeavyHitRate,tolua_set_tagMonsterDef_ToLua_unsigned_HeavyHitRate);
   tolua_variable(tolua_S,"Radius",tolua_get_tagMonsterDef_ToLua_unsigned_Radius,tolua_set_tagMonsterDef_ToLua_unsigned_Radius);
   tolua_variable(tolua_S,"DynMask",tolua_get_tagMonsterDef_ToLua_unsigned_DynMask,tolua_set_tagMonsterDef_ToLua_unsigned_DynMask);
   tolua_variable(tolua_S,"DynMaskX",tolua_get_tagMonsterDef_ToLua_unsigned_DynMaskX,tolua_set_tagMonsterDef_ToLua_unsigned_DynMaskX);
   tolua_variable(tolua_S,"DynMaskY",tolua_get_tagMonsterDef_ToLua_unsigned_DynMaskY,tolua_set_tagMonsterDef_ToLua_unsigned_DynMaskY);
   tolua_variable(tolua_S,"Height",tolua_get_tagMonsterDef_ToLua_unsigned_Height,tolua_set_tagMonsterDef_ToLua_unsigned_Height);
   tolua_variable(tolua_S,"Level",tolua_get_tagMonsterDef_ToLua_unsigned_Level,tolua_set_tagMonsterDef_ToLua_unsigned_Level);
   tolua_variable(tolua_S,"BirthTime",tolua_get_tagMonsterDef_ToLua_unsigned_BirthTime,tolua_set_tagMonsterDef_ToLua_unsigned_BirthTime);
   tolua_variable(tolua_S,"SubType",tolua_get_tagMonsterDef_ToLua_unsigned_SubType,tolua_set_tagMonsterDef_ToLua_unsigned_SubType);
   tolua_variable(tolua_S,"Booty",tolua_get_tagMonsterDef_ToLua_Booty,tolua_set_tagMonsterDef_ToLua_Booty);
   tolua_variable(tolua_S,"ColorLevel",tolua_get_tagMonsterDef_ToLua_ColorLevel,tolua_set_tagMonsterDef_ToLua_ColorLevel);
   tolua_variable(tolua_S,"Collect",tolua_get_tagMonsterDef_ToLua_Collect,tolua_set_tagMonsterDef_ToLua_Collect);
   tolua_variable(tolua_S,"RefreshRadius",tolua_get_tagMonsterDef_ToLua_unsigned_RefreshRadius,tolua_set_tagMonsterDef_ToLua_unsigned_RefreshRadius);
   tolua_variable(tolua_S,"MonAttrType",tolua_get_tagMonsterDef_ToLua_unsigned_MonAttrType,tolua_set_tagMonsterDef_ToLua_unsigned_MonAttrType);
   tolua_array(tolua_S,"Aberrants",tolua_get_GameEngineTolua_tagMonsterDef_ToLua_Aberrants,tolua_set_GameEngineTolua_tagMonsterDef_ToLua_Aberrants);
   tolua_variable(tolua_S,"RunAwayHP",tolua_get_tagMonsterDef_ToLua_RunAwayHP,tolua_set_tagMonsterDef_ToLua_RunAwayHP);
   tolua_variable(tolua_S,"RunAwayTime",tolua_get_tagMonsterDef_ToLua_unsigned_RunAwayTime,tolua_set_tagMonsterDef_ToLua_unsigned_RunAwayTime);
   tolua_variable(tolua_S,"CallHelpHP",tolua_get_tagMonsterDef_ToLua_CallHelpHP,tolua_set_tagMonsterDef_ToLua_CallHelpHP);
   tolua_variable(tolua_S,"CallHelpDist",tolua_get_tagMonsterDef_ToLua_CallHelpDist,tolua_set_tagMonsterDef_ToLua_CallHelpDist);
   tolua_array(tolua_S,"CallHelpMonsterID",tolua_get_GameEngineTolua_tagMonsterDef_ToLua_CallHelpMonsterID,tolua_set_GameEngineTolua_tagMonsterDef_ToLua_CallHelpMonsterID);
   tolua_variable(tolua_S,"HoldDistanceRandom",tolua_get_tagMonsterDef_ToLua_HoldDistanceRandom,tolua_set_tagMonsterDef_ToLua_HoldDistanceRandom);
   tolua_variable(tolua_S,"BootyXp",tolua_get_tagMonsterDef_ToLua_BootyXp,tolua_set_tagMonsterDef_ToLua_BootyXp);
   tolua_variable(tolua_S,"AtkMulByCaller",tolua_get_tagMonsterDef_ToLua_AtkMulByCaller,tolua_set_tagMonsterDef_ToLua_AtkMulByCaller);
   tolua_variable(tolua_S,"BootyDropType",tolua_get_tagMonsterDef_ToLua_BootyDropType,tolua_set_tagMonsterDef_ToLua_BootyDropType);
   tolua_variable(tolua_S,"AIRefreshedSkill",tolua_get_tagMonsterDef_ToLua_AIRefreshedSkill,tolua_set_tagMonsterDef_ToLua_AIRefreshedSkill);
   tolua_variable(tolua_S,"BootyViewType",tolua_get_tagMonsterDef_ToLua_unsigned_BootyViewType,tolua_set_tagMonsterDef_ToLua_unsigned_BootyViewType);
   tolua_variable(tolua_S,"MiscType",tolua_get_tagMonsterDef_ToLua_unsigned_MiscType,tolua_set_tagMonsterDef_ToLua_unsigned_MiscType);
   tolua_variable(tolua_S,"CollectActDesc",tolua_get_tagMonsterDef_ToLua_CollectActDesc,tolua_set_tagMonsterDef_ToLua_CollectActDesc);
   tolua_array(tolua_S,"BootyGroup",tolua_get_GameEngineTolua_tagMonsterDef_ToLua_BootyGroup,tolua_set_GameEngineTolua_tagMonsterDef_ToLua_BootyGroup);
   tolua_variable(tolua_S,"ShowType",tolua_get_tagMonsterDef_ToLua_ShowType,tolua_set_tagMonsterDef_ToLua_ShowType);
   tolua_variable(tolua_S,"BossType",tolua_get_tagMonsterDef_ToLua_BossType,tolua_set_tagMonsterDef_ToLua_BossType);
   tolua_variable(tolua_S,"Vig",tolua_get_tagMonsterDef_ToLua_Vig,tolua_set_tagMonsterDef_ToLua_Vig);
   tolua_variable(tolua_S,"DartCarType",tolua_get_tagMonsterDef_ToLua_unsigned_DartCarType,tolua_set_tagMonsterDef_ToLua_unsigned_DartCarType);
   tolua_variable(tolua_S,"GetRes",tolua_get_tagMonsterDef_ToLua_GetRes,tolua_set_tagMonsterDef_ToLua_GetRes);
   tolua_variable(tolua_S,"ClanBooty",tolua_get_tagMonsterDef_ToLua_ClanBooty,tolua_set_tagMonsterDef_ToLua_ClanBooty);
   tolua_variable(tolua_S,"Zhengyi",tolua_get_tagMonsterDef_ToLua_Zhengyi,tolua_set_tagMonsterDef_ToLua_Zhengyi);
   tolua_variable(tolua_S,"IsJicheng",tolua_get_tagMonsterDef_ToLua_IsJicheng,tolua_set_tagMonsterDef_ToLua_IsJicheng);
   tolua_variable(tolua_S,"ChengshuID",tolua_get_tagMonsterDef_ToLua_ChengshuID,tolua_set_tagMonsterDef_ToLua_ChengshuID);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagLevelFengExpDec_ToLua","tagLevelFengExpDec_ToLua","",tolua_collect_tagLevelFengExpDec_ToLua);
  #else
  tolua_cclass(tolua_S,"tagLevelFengExpDec_ToLua","tagLevelFengExpDec_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagLevelFengExpDec_ToLua");
   tolua_variable(tolua_S,"ExpCount",tolua_get_tagLevelFengExpDec_ToLua_ExpCount,tolua_set_tagLevelFengExpDec_ToLua_ExpCount);
   tolua_variable(tolua_S,"ExpRate",tolua_get_tagLevelFengExpDec_ToLua_ExpRate,tolua_set_tagLevelFengExpDec_ToLua_ExpRate);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagLevelFeng_ToLua","tagLevelFeng_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagLevelFeng_ToLua");
   tolua_variable(tolua_S,"Level",tolua_get_tagLevelFeng_ToLua_Level,tolua_set_tagLevelFeng_ToLua_Level);
   tolua_variable(tolua_S,"LevelFengMax",tolua_get_tagLevelFeng_ToLua_LevelFengMax,tolua_set_tagLevelFeng_ToLua_LevelFengMax);
   tolua_variable(tolua_S,"LevelFengMin",tolua_get_tagLevelFeng_ToLua_LevelFengMin,tolua_set_tagLevelFeng_ToLua_LevelFengMin);
   tolua_variable(tolua_S,"LevelFengTimeDec",tolua_get_tagLevelFeng_ToLua_LevelFengTimeDec,tolua_set_tagLevelFeng_ToLua_LevelFengTimeDec);
   tolua_array(tolua_S,"ExpRateDec",tolua_get_GameEngineTolua_tagLevelFeng_ToLua_ExpRateDec,tolua_set_GameEngineTolua_tagLevelFeng_ToLua_ExpRateDec);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"MAX_LEV_FENG_EXPDEC_TOLUA",MAX_LEV_FENG_EXPDEC_TOLUA);
  tolua_constant(tolua_S,"MAX_CATEGORY_ACHIEVEMENT_TOLUA",MAX_CATEGORY_ACHIEVEMENT_TOLUA);
  tolua_cclass(tolua_S,"tagAchievementCategoryDef_ToLua","tagAchievementCategoryDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagAchievementCategoryDef_ToLua");
   tolua_variable(tolua_S,"CategoryID",tolua_get_tagAchievementCategoryDef_ToLua_CategoryID,tolua_set_tagAchievementCategoryDef_ToLua_CategoryID);
   tolua_variable(tolua_S,"Icon",tolua_get_tagAchievementCategoryDef_ToLua_Icon,tolua_set_tagAchievementCategoryDef_ToLua_Icon);
   tolua_variable(tolua_S,"Name",tolua_get_tagAchievementCategoryDef_ToLua_Name,tolua_set_tagAchievementCategoryDef_ToLua_Name);
   tolua_variable(tolua_S,"Level",tolua_get_tagAchievementCategoryDef_ToLua_Level,tolua_set_tagAchievementCategoryDef_ToLua_Level);
   tolua_variable(tolua_S,"NextLevel",tolua_get_tagAchievementCategoryDef_ToLua_NextLevel,tolua_set_tagAchievementCategoryDef_ToLua_NextLevel);
   tolua_array(tolua_S,"AchievementID",tolua_get_GameEngineTolua_tagAchievementCategoryDef_ToLua_AchievementID,tolua_set_GameEngineTolua_tagAchievementCategoryDef_ToLua_AchievementID);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagAchievementCond_ToLua","tagAchievementCond_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagAchievementCond_ToLua");
   tolua_variable(tolua_S,"Des",tolua_get_tagAchievementCond_ToLua_Des,tolua_set_tagAchievementCond_ToLua_Des);
   tolua_variable(tolua_S,"Type",tolua_get_tagAchievementCond_ToLua_Type,tolua_set_tagAchievementCond_ToLua_Type);
   tolua_variable(tolua_S,"Val1",tolua_get_tagAchievementCond_ToLua_Val1,tolua_set_tagAchievementCond_ToLua_Val1);
   tolua_variable(tolua_S,"Val2",tolua_get_tagAchievementCond_ToLua_Val2,tolua_set_tagAchievementCond_ToLua_Val2);
   tolua_variable(tolua_S,"Val3",tolua_get_tagAchievementCond_ToLua_Val3,tolua_set_tagAchievementCond_ToLua_Val3);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagAchievementDef_ToLua","tagAchievementDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagAchievementDef_ToLua");
   tolua_variable(tolua_S,"AchievementID",tolua_get_tagAchievementDef_ToLua_AchievementID,tolua_set_tagAchievementDef_ToLua_AchievementID);
   tolua_variable(tolua_S,"CategoryID",tolua_get_tagAchievementDef_ToLua_CategoryID,tolua_set_tagAchievementDef_ToLua_CategoryID);
   tolua_variable(tolua_S,"Icon",tolua_get_tagAchievementDef_ToLua_Icon,tolua_set_tagAchievementDef_ToLua_Icon);
   tolua_variable(tolua_S,"IconRate",tolua_get_tagAchievementDef_ToLua_IconRate,tolua_set_tagAchievementDef_ToLua_IconRate);
   tolua_variable(tolua_S,"Name",tolua_get_tagAchievementDef_ToLua_Name,tolua_set_tagAchievementDef_ToLua_Name);
   tolua_variable(tolua_S,"Cond",tolua_get_tagAchievementDef_ToLua_Cond,tolua_set_tagAchievementDef_ToLua_Cond);
   tolua_variable(tolua_S,"Result",tolua_get_tagAchievementDef_ToLua_Result,tolua_set_tagAchievementDef_ToLua_Result);
   tolua_variable(tolua_S,"GuideDes",tolua_get_tagAchievementDef_ToLua_GuideDes,tolua_set_tagAchievementDef_ToLua_GuideDes);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"FLY_ANIM_START_INDEX",FLY_ANIM_START_INDEX);
  tolua_constant(tolua_S,"FLY_ANIM_PATH_INDEX",FLY_ANIM_PATH_INDEX);
  tolua_function(tolua_S,"GetNpcDisplayInfo",tolua_GameEngineTolua_GetNpcDisplayInfo00);
  tolua_function(tolua_S,"getLevelUP",tolua_GameEngineTolua_getLevelUP00);
  tolua_function(tolua_S,"getPlayerDisplayId",tolua_GameEngineTolua_getPlayerDisplayId00);
  tolua_function(tolua_S,"getLevelFeng",tolua_GameEngineTolua_getLevelFeng00);
  tolua_function(tolua_S,"getMonsterDef",tolua_GameEngineTolua_getMonsterDef00);
  tolua_cclass(tolua_S,"tagPlayerPosInfo","tagPlayerPosInfo","",NULL);
  tolua_beginmodule(tolua_S,"tagPlayerPosInfo");
   tolua_variable(tolua_S,"m_nPosX",tolua_get_tagPlayerPosInfo_m_nPosX,tolua_set_tagPlayerPosInfo_m_nPosX);
   tolua_variable(tolua_S,"m_nPosZ",tolua_get_tagPlayerPosInfo_m_nPosZ,tolua_set_tagPlayerPosInfo_m_nPosZ);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"GetModePathById",tolua_GameEngineTolua_GetModePathById00);
  tolua_function(tolua_S,"GetSocketPathById",tolua_GameEngineTolua_GetSocketPathById00);
  tolua_constant(tolua_S,"PET_FIGHT_ACTIVE",PET_FIGHT_ACTIVE);
  tolua_constant(tolua_S,"PET_FIGHT_PASSIVE",PET_FIGHT_PASSIVE);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagPetDiathesisData_ToTua","tagPetDiathesisData_ToTua","",tolua_collect_tagPetDiathesisData_ToTua);
  #else
  tolua_cclass(tolua_S,"tagPetDiathesisData_ToTua","tagPetDiathesisData_ToTua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagPetDiathesisData_ToTua");
   tolua_variable(tolua_S,"m_nID",tolua_get_tagPetDiathesisData_ToTua_m_nID,tolua_set_tagPetDiathesisData_ToTua_m_nID);
   tolua_variable(tolua_S,"m_nLevel",tolua_get_tagPetDiathesisData_ToTua_m_nLevel,tolua_set_tagPetDiathesisData_ToTua_m_nLevel);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagPetDiathesis_ToLua","tagPetDiathesis_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetDiathesis_ToLua");
   tolua_variable(tolua_S,"m_nFightMode",tolua_get_tagPetDiathesis_ToLua_m_nFightMode,tolua_set_tagPetDiathesis_ToLua_m_nFightMode);
   tolua_array(tolua_S,"m_diathesisData",tolua_get_GameEngineTolua_tagPetDiathesis_ToLua_m_diathesisData,tolua_set_GameEngineTolua_tagPetDiathesis_ToLua_m_diathesisData);
   tolua_variable(tolua_S,"m_nNum",tolua_get_tagPetDiathesis_ToLua_m_nNum,tolua_set_tagPetDiathesis_ToLua_m_nNum);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagNetBarInfo_ToLua","tagNetBarInfo_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagNetBarInfo_ToLua");
   tolua_variable(tolua_S,"DynValueNum",tolua_get_tagNetBarInfo_ToLua_DynValueNum,tolua_set_tagNetBarInfo_ToLua_DynValueNum);
   tolua_array(tolua_S,"DynValue",tolua_get_GameEngineTolua_tagNetBarInfo_ToLua_DynValue,tolua_set_GameEngineTolua_tagNetBarInfo_ToLua_DynValue);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"CLIENT_BASE_MSPD",CLIENT_BASE_MSPD);
  tolua_function(tolua_S,"logPrivateInfo",tolua_GameEngineTolua_logPrivateInfo00);
  tolua_cclass(tolua_S,"GameActor","GameActor","RoleAttr",NULL);
  tolua_beginmodule(tolua_S,"GameActor");
   tolua_function(tolua_S,"setType",tolua_GameEngineTolua_GameActor_setType00);
   tolua_function(tolua_S,"setSubType",tolua_GameEngineTolua_GameActor_setSubType00);
   tolua_function(tolua_S,"breakBTypePre",tolua_GameEngineTolua_GameActor_breakBTypePre00);
   tolua_function(tolua_S,"setTeamColor",tolua_GameEngineTolua_GameActor_setTeamColor00);
   tolua_function(tolua_S,"hasOtherBooty",tolua_GameEngineTolua_GameActor_hasOtherBooty00);
   tolua_function(tolua_S,"SetPosition",tolua_GameEngineTolua_GameActor_SetPosition00);
   tolua_function(tolua_S,"GetPosition",tolua_GameEngineTolua_GameActor_GetPosition00);
   tolua_function(tolua_S,"hide",tolua_GameEngineTolua_GameActor_hide00);
   tolua_function(tolua_S,"isShow",tolua_GameEngineTolua_GameActor_isShow00);
   tolua_function(tolua_S,"SetShow",tolua_GameEngineTolua_GameActor_SetShow00);
   tolua_function(tolua_S,"needAddButtonName",tolua_GameEngineTolua_GameActor_needAddButtonName00);
   tolua_function(tolua_S,"setCollectInfo",tolua_GameEngineTolua_GameActor_setCollectInfo00);
   tolua_function(tolua_S,"enableCollect",tolua_GameEngineTolua_GameActor_enableCollect00);
   tolua_function(tolua_S,"canCollect",tolua_GameEngineTolua_GameActor_canCollect00);
   tolua_function(tolua_S,"setPetFightMode",tolua_GameEngineTolua_GameActor_setPetFightMode00);
   tolua_function(tolua_S,"getPetFightMode",tolua_GameEngineTolua_GameActor_getPetFightMode00);
   tolua_function(tolua_S,"GetCatchPet",tolua_GameEngineTolua_GameActor_GetCatchPet00);
   tolua_function(tolua_S,"getPlayerX",tolua_GameEngineTolua_GameActor_getPlayerX00);
   tolua_function(tolua_S,"getPlayerZ",tolua_GameEngineTolua_GameActor_getPlayerZ00);
   tolua_function(tolua_S,"getMapId",tolua_GameEngineTolua_GameActor_getMapId00);
   tolua_function(tolua_S,"getMapRealId",tolua_GameEngineTolua_GameActor_getMapRealId00);
   tolua_function(tolua_S,"isDead",tolua_GameEngineTolua_GameActor_isDead00);
   tolua_function(tolua_S,"isInStall",tolua_GameEngineTolua_GameActor_isInStall00);
   tolua_function(tolua_S,"isInFly",tolua_GameEngineTolua_GameActor_isInFly00);
   tolua_function(tolua_S,"isInMove",tolua_GameEngineTolua_GameActor_isInMove00);
   tolua_function(tolua_S,"isInFight",tolua_GameEngineTolua_GameActor_isInFight00);
   tolua_function(tolua_S,"isInStand",tolua_GameEngineTolua_GameActor_isInStand00);
   tolua_function(tolua_S,"isInRide",tolua_GameEngineTolua_GameActor_isInRide00);
   tolua_function(tolua_S,"isInMorph",tolua_GameEngineTolua_GameActor_isInMorph00);
   tolua_function(tolua_S,"isInScene",tolua_GameEngineTolua_GameActor_isInScene00);
   tolua_function(tolua_S,"isInMap",tolua_GameEngineTolua_GameActor_isInMap00);
   tolua_function(tolua_S,"IsInSpecialPworldNotShowTitle",tolua_GameEngineTolua_GameActor_IsInSpecialPworldNotShowTitle00);
   tolua_function(tolua_S,"RawSetSelectTarget",tolua_GameEngineTolua_GameActor_RawSetSelectTarget00);
   tolua_function(tolua_S,"canSelectTarget",tolua_GameEngineTolua_GameActor_canSelectTarget00);
   tolua_function(tolua_S,"SetSelectTarget",tolua_GameEngineTolua_GameActor_SetSelectTarget00);
   tolua_function(tolua_S,"UpdateTargetDrawTitle",tolua_GameEngineTolua_GameActor_UpdateTargetDrawTitle00);
   tolua_function(tolua_S,"GetModePathById",tolua_GameEngineTolua_GameActor_GetModePathById00);
   tolua_function(tolua_S,"getIconId",tolua_GameEngineTolua_GameActor_getIconId00);
   tolua_function(tolua_S,"GetTargetID",tolua_GameEngineTolua_GameActor_GetTargetID00);
   tolua_function(tolua_S,"GetID",tolua_GameEngineTolua_GameActor_GetID00);
   tolua_function(tolua_S,"GetMorphResID",tolua_GameEngineTolua_GameActor_GetMorphResID00);
   tolua_function(tolua_S,"getAtkType",tolua_GameEngineTolua_GameActor_getAtkType00);
   tolua_function(tolua_S,"getSubType",tolua_GameEngineTolua_GameActor_getSubType00);
   tolua_function(tolua_S,"getResId",tolua_GameEngineTolua_GameActor_getResId00);
   tolua_function(tolua_S,"getRealId",tolua_GameEngineTolua_GameActor_getRealId00);
   tolua_function(tolua_S,"setRealId",tolua_GameEngineTolua_GameActor_setRealId00);
   tolua_function(tolua_S,"GetSelectTarget",tolua_GameEngineTolua_GameActor_GetSelectTarget00);
   tolua_function(tolua_S,"getAngle",tolua_GameEngineTolua_GameActor_getAngle00);
   tolua_function(tolua_S,"getSpeed",tolua_GameEngineTolua_GameActor_getSpeed00);
   tolua_function(tolua_S,"BuildTitle",tolua_GameEngineTolua_GameActor_BuildTitle00);
   tolua_function(tolua_S,"getBufStatus",tolua_GameEngineTolua_GameActor_getBufStatus00);
   tolua_function(tolua_S,"getRider",tolua_GameEngineTolua_GameActor_getRider00);
   tolua_function(tolua_S,"getSpecialMove",tolua_GameEngineTolua_GameActor_getSpecialMove00);
   tolua_function(tolua_S,"playMotion",tolua_GameEngineTolua_GameActor_playMotion00);
   tolua_function(tolua_S,"stopMotion",tolua_GameEngineTolua_GameActor_stopMotion00);
   tolua_function(tolua_S,"playMotion",tolua_GameEngineTolua_GameActor_playMotion01);
   tolua_function(tolua_S,"isMotionPlaying",tolua_GameEngineTolua_GameActor_isMotionPlaying00);
   tolua_function(tolua_S,"playAction",tolua_GameEngineTolua_GameActor_playAction00);
   tolua_function(tolua_S,"getNpcQuestShow",tolua_GameEngineTolua_GameActor_getNpcQuestShow00);
   tolua_function(tolua_S,"getPlayerPostion",tolua_GameEngineTolua_GameActor_getPlayerPostion00);
   tolua_function(tolua_S,"getPet",tolua_GameEngineTolua_GameActor_getPet00);
   tolua_function(tolua_S,"getQiYue",tolua_GameEngineTolua_GameActor_getQiYue00);
   tolua_function(tolua_S,"getTrump",tolua_GameEngineTolua_GameActor_getTrump00);
   tolua_function(tolua_S,"getCBTInfo",tolua_GameEngineTolua_GameActor_getCBTInfo00);
   tolua_function(tolua_S,"getPrepareSkill",tolua_GameEngineTolua_GameActor_getPrepareSkill00);
   tolua_function(tolua_S,"getPrepareTime",tolua_GameEngineTolua_GameActor_getPrepareTime00);
   tolua_function(tolua_S,"getTotalPrepareTime",tolua_GameEngineTolua_GameActor_getTotalPrepareTime00);
   tolua_function(tolua_S,"cancelWeiXing",tolua_GameEngineTolua_GameActor_cancelWeiXing00);
   tolua_function(tolua_S,"getPetDiathesis",tolua_GameEngineTolua_GameActor_getPetDiathesis00);
   tolua_function(tolua_S,"startGray",tolua_GameEngineTolua_GameActor_startGray00);
   tolua_function(tolua_S,"stopGray",tolua_GameEngineTolua_GameActor_stopGray00);
   tolua_function(tolua_S,"getCollectSlotMax",tolua_GameEngineTolua_GameActor_getCollectSlotMax00);
   tolua_function(tolua_S,"getCollectSlotCurr",tolua_GameEngineTolua_GameActor_getCollectSlotCurr00);
   tolua_function(tolua_S,"getCollectSlotType",tolua_GameEngineTolua_GameActor_getCollectSlotType00);
   tolua_function(tolua_S,"canPlayChatAction",tolua_GameEngineTolua_GameActor_canPlayChatAction00);
   tolua_function(tolua_S,"playChatAction",tolua_GameEngineTolua_GameActor_playChatAction00);
   tolua_function(tolua_S,"getMonsterMachine",tolua_GameEngineTolua_GameActor_getMonsterMachine00);
   tolua_function(tolua_S,"isOnMonsterMachine",tolua_GameEngineTolua_GameActor_isOnMonsterMachine00);
   tolua_function(tolua_S,"isInCarry",tolua_GameEngineTolua_GameActor_isInCarry00);
   tolua_function(tolua_S,"isInSafeOverlay",tolua_GameEngineTolua_GameActor_isInSafeOverlay00);
   tolua_function(tolua_S,"getPetGenius",tolua_GameEngineTolua_GameActor_getPetGenius00);
   tolua_function(tolua_S,"getPetGeniusId",tolua_GameEngineTolua_GameActor_getPetGeniusId00);
   tolua_function(tolua_S,"getPetGeniusLv",tolua_GameEngineTolua_GameActor_getPetGeniusLv00);
   tolua_function(tolua_S,"isRollItem",tolua_GameEngineTolua_GameActor_isRollItem00);
   tolua_function(tolua_S,"isNeedShowSafeAreaBuf",tolua_GameEngineTolua_GameActor_isNeedShowSafeAreaBuf00);
   tolua_function(tolua_S,"getCurActionId",tolua_GameEngineTolua_GameActor_getCurActionId00);
   tolua_function(tolua_S,"addPopWindow",tolua_GameEngineTolua_GameActor_addPopWindow00);
   tolua_function(tolua_S,"isAFK",tolua_GameEngineTolua_GameActor_isAFK00);
   tolua_function(tolua_S,"isShowHead",tolua_GameEngineTolua_GameActor_isShowHead00);
   tolua_function(tolua_S,"isShowFashion",tolua_GameEngineTolua_GameActor_isShowFashion00);
   tolua_function(tolua_S,"isShowBack",tolua_GameEngineTolua_GameActor_isShowBack00);
   tolua_function(tolua_S,"isShowFace",tolua_GameEngineTolua_GameActor_isShowFace00);
   tolua_function(tolua_S,"isShowLove",tolua_GameEngineTolua_GameActor_isShowLove00);
   tolua_function(tolua_S,"setHitTargetID",tolua_GameEngineTolua_GameActor_setHitTargetID00);
   tolua_function(tolua_S,"getHitTargetID",tolua_GameEngineTolua_GameActor_getHitTargetID00);
   tolua_function(tolua_S,"canPickUp",tolua_GameEngineTolua_GameActor_canPickUp00);
   tolua_function(tolua_S,"getServerId",tolua_GameEngineTolua_GameActor_getServerId00);
   tolua_function(tolua_S,"getNetBarInfo",tolua_GameEngineTolua_GameActor_getNetBarInfo00);
   tolua_function(tolua_S,"isPickItem",tolua_GameEngineTolua_GameActor_isPickItem00);
   tolua_function(tolua_S,"getAchievementDef",tolua_GameEngineTolua_GameActor_getAchievementDef00);
   tolua_function(tolua_S,"getAchievementCategoryDef",tolua_GameEngineTolua_GameActor_getAchievementCategoryDef00);
   tolua_function(tolua_S,"setTextureByID",tolua_GameEngineTolua_GameActor_setTextureByID00);
   tolua_function(tolua_S,"getWanMeiStarNum",tolua_GameEngineTolua_GameActor_getWanMeiStarNum00);
   tolua_function(tolua_S,"getMonsterPhysicType",tolua_GameEngineTolua_GameActor_getMonsterPhysicType00);
   tolua_function(tolua_S,"isCollectMachine",tolua_GameEngineTolua_GameActor_isCollectMachine00);
   tolua_function(tolua_S,"getActorWorldName",tolua_GameEngineTolua_GameActor_getActorWorldName00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GamePlayer","GamePlayer","GameActor",NULL);
  tolua_beginmodule(tolua_S,"GamePlayer");
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagBindSkill_ToLua","tagBindSkill_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagBindSkill_ToLua");
   tolua_variable(tolua_S,"SkillID",tolua_get_tagBindSkill_ToLua_unsigned_SkillID,tolua_set_tagBindSkill_ToLua_unsigned_SkillID);
   tolua_variable(tolua_S,"Level",tolua_get_tagBindSkill_ToLua_unsigned_Level,tolua_set_tagBindSkill_ToLua_unsigned_Level);
   tolua_variable(tolua_S,"Trig",tolua_get_tagBindSkill_ToLua_unsigned_Trig,tolua_set_tagBindSkill_ToLua_unsigned_Trig);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagStatusResult_ToLua","tagStatusResult_ToLua","",tolua_collect_tagStatusResult_ToLua);
  #else
  tolua_cclass(tolua_S,"tagStatusResult_ToLua","tagStatusResult_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagStatusResult_ToLua");
   tolua_variable(tolua_S,"ResultID",tolua_get_tagStatusResult_ToLua_unsigned_ResultID,tolua_set_tagStatusResult_ToLua_unsigned_ResultID);
   tolua_variable(tolua_S,"ResultVal1",tolua_get_tagStatusResult_ToLua_ResultVal1,tolua_set_tagStatusResult_ToLua_ResultVal1);
   tolua_variable(tolua_S,"ResultVal2",tolua_get_tagStatusResult_ToLua_ResultVal2,tolua_set_tagStatusResult_ToLua_ResultVal2);
   tolua_variable(tolua_S,"ResultVal3",tolua_get_tagStatusResult_ToLua_ResultVal3,tolua_set_tagStatusResult_ToLua_ResultVal3);
   tolua_variable(tolua_S,"ResultVal4",tolua_get_tagStatusResult_ToLua_ResultVal4,tolua_set_tagStatusResult_ToLua_ResultVal4);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagStatusDef_ToLua","tagStatusDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagStatusDef_ToLua");
   tolua_variable(tolua_S,"StatusID",tolua_get_tagStatusDef_ToLua_unsigned_StatusID,tolua_set_tagStatusDef_ToLua_unsigned_StatusID);
   tolua_variable(tolua_S,"Level",tolua_get_tagStatusDef_ToLua_unsigned_Level,tolua_set_tagStatusDef_ToLua_unsigned_Level);
   tolua_variable(tolua_S,"Name",tolua_get_tagStatusDef_ToLua_Name,tolua_set_tagStatusDef_ToLua_Name);
   tolua_variable(tolua_S,"IconID",tolua_get_tagStatusDef_ToLua_IconID,tolua_set_tagStatusDef_ToLua_IconID);
   tolua_variable(tolua_S,"ModeID",tolua_get_tagStatusDef_ToLua_ModeID,tolua_set_tagStatusDef_ToLua_ModeID);
   tolua_variable(tolua_S,"EffectID",tolua_get_tagStatusDef_ToLua_EffectID,tolua_set_tagStatusDef_ToLua_EffectID);
   tolua_variable(tolua_S,"BindPoint",tolua_get_tagStatusDef_ToLua_BindPoint,tolua_set_tagStatusDef_ToLua_BindPoint);
   tolua_variable(tolua_S,"Type",tolua_get_tagStatusDef_ToLua_unsigned_Type,tolua_set_tagStatusDef_ToLua_unsigned_Type);
   tolua_variable(tolua_S,"SubType",tolua_get_tagStatusDef_ToLua_unsigned_SubType,tolua_set_tagStatusDef_ToLua_unsigned_SubType);
   tolua_variable(tolua_S,"DeadClear",tolua_get_tagStatusDef_ToLua_unsigned_DeadClear,tolua_set_tagStatusDef_ToLua_unsigned_DeadClear);
   tolua_variable(tolua_S,"OverlayLimit",tolua_get_tagStatusDef_ToLua_unsigned_OverlayLimit,tolua_set_tagStatusDef_ToLua_unsigned_OverlayLimit);
   tolua_variable(tolua_S,"BindSkill",tolua_get_tagStatusDef_ToLua_BindSkill,tolua_set_tagStatusDef_ToLua_BindSkill);
   tolua_array(tolua_S,"Result",tolua_get_GameEngineTolua_tagStatusDef_ToLua_Result,tolua_set_GameEngineTolua_tagStatusDef_ToLua_Result);
   tolua_variable(tolua_S,"StatusDesc",tolua_get_tagStatusDef_ToLua_StatusDesc,tolua_set_tagStatusDef_ToLua_StatusDesc);
   tolua_variable(tolua_S,"EffectType",tolua_get_tagStatusDef_ToLua_EffectType,tolua_set_tagStatusDef_ToLua_EffectType);
   tolua_variable(tolua_S,"ZaRate",tolua_get_tagStatusDef_ToLua_unsigned_ZaRate,tolua_set_tagStatusDef_ToLua_unsigned_ZaRate);
   tolua_variable(tolua_S,"NormRate",tolua_get_tagStatusDef_ToLua_unsigned_NormRate,tolua_set_tagStatusDef_ToLua_unsigned_NormRate);
   tolua_variable(tolua_S,"JinYinRate",tolua_get_tagStatusDef_ToLua_unsigned_JinYinRate,tolua_set_tagStatusDef_ToLua_unsigned_JinYinRate);
   tolua_variable(tolua_S,"BossRate",tolua_get_tagStatusDef_ToLua_unsigned_BossRate,tolua_set_tagStatusDef_ToLua_unsigned_BossRate);
   tolua_variable(tolua_S,"PlayerRate",tolua_get_tagStatusDef_ToLua_unsigned_PlayerRate,tolua_set_tagStatusDef_ToLua_unsigned_PlayerRate);
   tolua_variable(tolua_S,"ConsumeStatusType",tolua_get_tagStatusDef_ToLua_unsigned_ConsumeStatusType,tolua_set_tagStatusDef_ToLua_unsigned_ConsumeStatusType);
   tolua_variable(tolua_S,"ConsumeStatusValue",tolua_get_tagStatusDef_ToLua_unsigned_ConsumeStatusValue,tolua_set_tagStatusDef_ToLua_unsigned_ConsumeStatusValue);
   tolua_variable(tolua_S,"IsWushuang",tolua_get_tagStatusDef_ToLua_unsigned_IsWushuang,tolua_set_tagStatusDef_ToLua_unsigned_IsWushuang);
   tolua_variable(tolua_S,"CanCancel",tolua_get_tagStatusDef_ToLua_unsigned_CanCancel,tolua_set_tagStatusDef_ToLua_unsigned_CanCancel);
   tolua_variable(tolua_S,"StatusFlag",tolua_get_tagStatusDef_ToLua_unsigned_StatusFlag,tolua_set_tagStatusDef_ToLua_unsigned_StatusFlag);
   tolua_variable(tolua_S,"OverlayType",tolua_get_tagStatusDef_ToLua_unsigned_OverlayType,tolua_set_tagStatusDef_ToLua_unsigned_OverlayType);
   tolua_variable(tolua_S,"IsCltShow",tolua_get_tagStatusDef_ToLua_IsCltShow,tolua_set_tagStatusDef_ToLua_IsCltShow);
   tolua_variable(tolua_S,"OutFightKeep",tolua_get_tagStatusDef_ToLua_OutFightKeep,tolua_set_tagStatusDef_ToLua_OutFightKeep);
   tolua_variable(tolua_S,"AddModelID",tolua_get_tagStatusDef_ToLua_AddModelID,tolua_set_tagStatusDef_ToLua_AddModelID);
   tolua_variable(tolua_S,"MachineRate",tolua_get_tagStatusDef_ToLua_unsigned_MachineRate,tolua_set_tagStatusDef_ToLua_unsigned_MachineRate);
   tolua_variable(tolua_S,"CltMiscFlag",tolua_get_tagStatusDef_ToLua_unsigned_CltMiscFlag,tolua_set_tagStatusDef_ToLua_unsigned_CltMiscFlag);
   tolua_variable(tolua_S,"StatusInterVal",tolua_get_tagStatusDef_ToLua_unsigned_StatusInterVal,tolua_set_tagStatusDef_ToLua_unsigned_StatusInterVal);
   tolua_variable(tolua_S,"ByAtkClear",tolua_get_tagStatusDef_ToLua_unsigned_ByAtkClear,tolua_set_tagStatusDef_ToLua_unsigned_ByAtkClear);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagStatusOverlayDef_ToLua","tagStatusOverlayDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagStatusOverlayDef_ToLua");
   tolua_variable(tolua_S,"StatusID",tolua_get_tagStatusOverlayDef_ToLua_unsigned_StatusID,tolua_set_tagStatusOverlayDef_ToLua_unsigned_StatusID);
   tolua_variable(tolua_S,"Level",tolua_get_tagStatusOverlayDef_ToLua_unsigned_Level,tolua_set_tagStatusOverlayDef_ToLua_unsigned_Level);
   tolua_variable(tolua_S,"Overlay",tolua_get_tagStatusOverlayDef_ToLua_unsigned_Overlay,tolua_set_tagStatusOverlayDef_ToLua_unsigned_Overlay);
   tolua_variable(tolua_S,"Mul",tolua_get_tagStatusOverlayDef_ToLua_Mul,tolua_set_tagStatusOverlayDef_ToLua_Mul);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"CLIENT_DIE_REMIT_BUFFID",CLIENT_DIE_REMIT_BUFFID);
  tolua_constant(tolua_S,"CLIENT_VIP_BAR_STATUS_ID",CLIENT_VIP_BAR_STATUS_ID);
  tolua_constant(tolua_S,"CLIENT_VIP_BAR_STATUS_LEVEL",CLIENT_VIP_BAR_STATUS_LEVEL);
  tolua_function(tolua_S,"getStatusDef",tolua_GameEngineTolua_getStatusDef00);
  tolua_function(tolua_S,"getStatusOverlayDef",tolua_GameEngineTolua_getStatusOverlayDef00);
  tolua_function(tolua_S,"isBuffCanCancel",tolua_GameEngineTolua_isBuffCanCancel00);
  tolua_function(tolua_S,"canShowBuff",tolua_GameEngineTolua_canShowBuff00);
  tolua_function(tolua_S,"isStatusShowAsDebuff",tolua_GameEngineTolua_isStatusShowAsDebuff00);
  tolua_function(tolua_S,"isCltShowBuff",tolua_GameEngineTolua_isCltShowBuff00);
  tolua_constant(tolua_S,"FOR_EVERY",FOR_EVERY);
  tolua_cclass(tolua_S,"GameBuf","GameBuf","",NULL);
  tolua_beginmodule(tolua_S,"GameBuf");
   tolua_function(tolua_S,"getIndex",tolua_GameEngineTolua_GameBuf_getIndex00);
   tolua_function(tolua_S,"getIconId",tolua_GameEngineTolua_GameBuf_getIconId00);
   tolua_function(tolua_S,"getBufId",tolua_GameEngineTolua_GameBuf_getBufId00);
   tolua_function(tolua_S,"getBufLv",tolua_GameEngineTolua_GameBuf_getBufLv00);
   tolua_function(tolua_S,"getLife",tolua_GameEngineTolua_GameBuf_getLife00);
   tolua_function(tolua_S,"isShow",tolua_GameEngineTolua_GameBuf_isShow00);
   tolua_function(tolua_S,"getOverlay",tolua_GameEngineTolua_GameBuf_getOverlay00);
   tolua_function(tolua_S,"getTotalLife",tolua_GameEngineTolua_GameBuf_getTotalLife00);
   tolua_function(tolua_S,"isSkillStop",tolua_GameEngineTolua_GameBuf_isSkillStop00);
   tolua_function(tolua_S,"isSkillStop",tolua_GameEngineTolua_GameBuf_isSkillStop01);
   tolua_function(tolua_S,"isMoveStop",tolua_GameEngineTolua_GameBuf_isMoveStop00);
   tolua_function(tolua_S,"isHasResult",tolua_GameEngineTolua_GameBuf_isHasResult00);
   tolua_function(tolua_S,"isEndure",tolua_GameEngineTolua_GameBuf_isEndure00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GameBufStatus","GameBufStatus","",NULL);
  tolua_beginmodule(tolua_S,"GameBufStatus");
   tolua_function(tolua_S,"cancelBuffer",tolua_GameEngineTolua_GameBufStatus_cancelBuffer00);
   tolua_function(tolua_S,"getGoodStatusCount",tolua_GameEngineTolua_GameBufStatus_getGoodStatusCount00);
   tolua_function(tolua_S,"getBadStatusCount",tolua_GameEngineTolua_GameBufStatus_getBadStatusCount00);
   tolua_function(tolua_S,"getNolimitStatusCount",tolua_GameEngineTolua_GameBufStatus_getNolimitStatusCount00);
   tolua_function(tolua_S,"getJiaStatusCount",tolua_GameEngineTolua_GameBufStatus_getJiaStatusCount00);
   tolua_function(tolua_S,"getGoodStatus",tolua_GameEngineTolua_GameBufStatus_getGoodStatus00);
   tolua_function(tolua_S,"getBadStatus",tolua_GameEngineTolua_GameBufStatus_getBadStatus00);
   tolua_function(tolua_S,"getNolimitStatus",tolua_GameEngineTolua_GameBufStatus_getNolimitStatus00);
   tolua_function(tolua_S,"getJiaStatus",tolua_GameEngineTolua_GameBufStatus_getJiaStatus00);
   tolua_function(tolua_S,"canUsedSpell",tolua_GameEngineTolua_GameBufStatus_canUsedSpell00);
   tolua_function(tolua_S,"canUsedSpell",tolua_GameEngineTolua_GameBufStatus_canUsedSpell01);
   tolua_function(tolua_S,"isInEndure",tolua_GameEngineTolua_GameBufStatus_isInEndure00);
   tolua_function(tolua_S,"isInNoSkill",tolua_GameEngineTolua_GameBufStatus_isInNoSkill00);
   tolua_function(tolua_S,"canMove",tolua_GameEngineTolua_GameBufStatus_canMove00);
   tolua_function(tolua_S,"checkBuf",tolua_GameEngineTolua_GameBufStatus_checkBuf00);
   tolua_function(tolua_S,"getBufStatus",tolua_GameEngineTolua_GameBufStatus_getBufStatus00);
   tolua_function(tolua_S,"getBufResult",tolua_GameEngineTolua_GameBufStatus_getBufResult00);
   tolua_function(tolua_S,"getStatusDef",tolua_GameEngineTolua_GameBufStatus_getStatusDef00);
   tolua_function(tolua_S,"StatusNoSkill",tolua_GameEngineTolua_GameBufStatus_StatusNoSkill00);
   tolua_function(tolua_S,"addJiaStatus",tolua_GameEngineTolua_GameBufStatus_addJiaStatus00);
   tolua_function(tolua_S,"delJiaStatus",tolua_GameEngineTolua_GameBufStatus_delJiaStatus00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagCDTime","tagCDTime","",tolua_collect_tagCDTime);
  #else
  tolua_cclass(tolua_S,"tagCDTime","tagCDTime","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagCDTime");
   tolua_variable(tolua_S,"LastTime",tolua_get_tagCDTime_unsigned_LastTime,tolua_set_tagCDTime_unsigned_LastTime);
   tolua_variable(tolua_S,"startTime",tolua_get_tagCDTime_unsigned_startTime,tolua_set_tagCDTime_unsigned_startTime);
   tolua_function(tolua_S,"new",tolua_GameEngineTolua_tagCDTime_new00);
   tolua_function(tolua_S,"new_local",tolua_GameEngineTolua_tagCDTime_new00_local);
   tolua_function(tolua_S,".call",tolua_GameEngineTolua_tagCDTime_new00_local);
   tolua_function(tolua_S,"past",tolua_GameEngineTolua_tagCDTime_past00);
   tolua_function(tolua_S,"remain",tolua_GameEngineTolua_tagCDTime_remain00);
   tolua_function(tolua_S,"total",tolua_GameEngineTolua_tagCDTime_total00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagSkillLearn_ToLua","tagSkillLearn_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagSkillLearn_ToLua");
   tolua_variable(tolua_S,"LevelMin",tolua_get_tagSkillLearn_ToLua_unsigned_LevelMin,tolua_set_tagSkillLearn_ToLua_unsigned_LevelMin);
   tolua_variable(tolua_S,"Career",tolua_get_tagSkillLearn_ToLua_unsigned_Career,tolua_set_tagSkillLearn_ToLua_unsigned_Career);
   tolua_variable(tolua_S,"PreDiathesisID",tolua_get_tagSkillLearn_ToLua_unsigned_PreDiathesisID,tolua_set_tagSkillLearn_ToLua_unsigned_PreDiathesisID);
   tolua_variable(tolua_S,"ItemID",tolua_get_tagSkillLearn_ToLua_unsigned_ItemID,tolua_set_tagSkillLearn_ToLua_unsigned_ItemID);
   tolua_variable(tolua_S,"TaskID",tolua_get_tagSkillLearn_ToLua_unsigned_TaskID,tolua_set_tagSkillLearn_ToLua_unsigned_TaskID);
   tolua_variable(tolua_S,"MoneyAttrID",tolua_get_tagSkillLearn_ToLua_unsigned_MoneyAttrID,tolua_set_tagSkillLearn_ToLua_unsigned_MoneyAttrID);
   tolua_variable(tolua_S,"MoneyVal",tolua_get_tagSkillLearn_ToLua_unsigned_MoneyVal,tolua_set_tagSkillLearn_ToLua_unsigned_MoneyVal);
   tolua_variable(tolua_S,"Mode",tolua_get_tagSkillLearn_ToLua_unsigned_Mode,tolua_set_tagSkillLearn_ToLua_unsigned_Mode);
   tolua_variable(tolua_S,"PreDiathesisLevel",tolua_get_tagSkillLearn_ToLua_unsigned_PreDiathesisLevel,tolua_set_tagSkillLearn_ToLua_unsigned_PreDiathesisLevel);
   tolua_variable(tolua_S,"Exp",tolua_get_tagSkillLearn_ToLua_unsigned_Exp,tolua_set_tagSkillLearn_ToLua_unsigned_Exp);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagFittingList_ToLua","tagFittingList_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagFittingList_ToLua");
   tolua_variable(tolua_S,"ID",tolua_get_tagFittingList_ToLua_unsigned_ID,tolua_set_tagFittingList_ToLua_unsigned_ID);
   tolua_variable(tolua_S,"Group",tolua_get_tagFittingList_ToLua_unsigned_Group,tolua_set_tagFittingList_ToLua_unsigned_Group);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagResRange_ToLua","tagResRange_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagResRange_ToLua");
   tolua_variable(tolua_S,"RangeType",tolua_get_tagResRange_ToLua_unsigned_RangeType,tolua_set_tagResRange_ToLua_unsigned_RangeType);
   tolua_variable(tolua_S,"RangeVal1",tolua_get_tagResRange_ToLua_unsigned_RangeVal1,tolua_set_tagResRange_ToLua_unsigned_RangeVal1);
   tolua_variable(tolua_S,"RangeVal2",tolua_get_tagResRange_ToLua_unsigned_RangeVal2,tolua_set_tagResRange_ToLua_unsigned_RangeVal2);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagSkillResult_ToLua","tagSkillResult_ToLua","",tolua_collect_tagSkillResult_ToLua);
  #else
  tolua_cclass(tolua_S,"tagSkillResult_ToLua","tagSkillResult_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagSkillResult_ToLua");
   tolua_variable(tolua_S,"SkillResultID",tolua_get_tagSkillResult_ToLua_unsigned_SkillResultID,tolua_set_tagSkillResult_ToLua_unsigned_SkillResultID);
   tolua_variable(tolua_S,"SkillResultVal1",tolua_get_tagSkillResult_ToLua_SkillResultVal1,tolua_set_tagSkillResult_ToLua_SkillResultVal1);
   tolua_variable(tolua_S,"SkillResultVal2",tolua_get_tagSkillResult_ToLua_SkillResultVal2,tolua_set_tagSkillResult_ToLua_SkillResultVal2);
   tolua_variable(tolua_S,"SkillResultVal3",tolua_get_tagSkillResult_ToLua_SkillResultVal3,tolua_set_tagSkillResult_ToLua_SkillResultVal3);
   tolua_variable(tolua_S,"SkillResultVal4",tolua_get_tagSkillResult_ToLua_SkillResultVal4,tolua_set_tagSkillResult_ToLua_SkillResultVal4);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagSkillDef_ToLua","tagSkillDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagSkillDef_ToLua");
   tolua_variable(tolua_S,"SkillID",tolua_get_tagSkillDef_ToLua_unsigned_SkillID,tolua_set_tagSkillDef_ToLua_unsigned_SkillID);
   tolua_variable(tolua_S,"Level",tolua_get_tagSkillDef_ToLua_unsigned_Level,tolua_set_tagSkillDef_ToLua_unsigned_Level);
   tolua_variable(tolua_S,"Name",tolua_get_tagSkillDef_ToLua_Name,tolua_set_tagSkillDef_ToLua_Name);
   tolua_variable(tolua_S,"IconID1",tolua_get_tagSkillDef_ToLua_IconID1,tolua_set_tagSkillDef_ToLua_IconID1);
   tolua_variable(tolua_S,"IconID2",tolua_get_tagSkillDef_ToLua_IconID2,tolua_set_tagSkillDef_ToLua_IconID2);
   tolua_variable(tolua_S,"IconID3",tolua_get_tagSkillDef_ToLua_IconID3,tolua_set_tagSkillDef_ToLua_IconID3);
   tolua_array(tolua_S,"ArmType",tolua_get_GameEngineTolua_tagSkillDef_ToLua_ArmType,tolua_set_GameEngineTolua_tagSkillDef_ToLua_ArmType);
   tolua_variable(tolua_S,"SelfSpeCoolType",tolua_get_tagSkillDef_ToLua_unsigned_SelfSpeCoolType,tolua_set_tagSkillDef_ToLua_unsigned_SelfSpeCoolType);
   tolua_variable(tolua_S,"SpeCoolType1",tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolType1,tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolType1);
   tolua_variable(tolua_S,"SpeCoolType2",tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolType2,tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolType2);
   tolua_variable(tolua_S,"SpeCoolType3",tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolType3,tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolType3);
   tolua_variable(tolua_S,"SpeCoolType4",tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolType4,tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolType4);
   tolua_variable(tolua_S,"SpeCoolVal1",tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolVal1,tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolVal1);
   tolua_variable(tolua_S,"SpeCoolVal2",tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolVal2,tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolVal2);
   tolua_variable(tolua_S,"SpeCoolVal3",tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolVal3,tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolVal3);
   tolua_variable(tolua_S,"SpeCoolVal4",tolua_get_tagSkillDef_ToLua_unsigned_SpeCoolVal4,tolua_set_tagSkillDef_ToLua_unsigned_SpeCoolVal4);
   tolua_variable(tolua_S,"CommCool",tolua_get_tagSkillDef_ToLua_unsigned_CommCool,tolua_set_tagSkillDef_ToLua_unsigned_CommCool);
   tolua_variable(tolua_S,"SelfCool",tolua_get_tagSkillDef_ToLua_unsigned_SelfCool,tolua_set_tagSkillDef_ToLua_unsigned_SelfCool);
   tolua_variable(tolua_S,"TargetType",tolua_get_tagSkillDef_ToLua_unsigned_TargetType,tolua_set_tagSkillDef_ToLua_unsigned_TargetType);
   tolua_variable(tolua_S,"HelpSkillID",tolua_get_tagSkillDef_ToLua_unsigned_HelpSkillID,tolua_set_tagSkillDef_ToLua_unsigned_HelpSkillID);
   tolua_variable(tolua_S,"HelpSkillLevel",tolua_get_tagSkillDef_ToLua_unsigned_HelpSkillLevel,tolua_set_tagSkillDef_ToLua_unsigned_HelpSkillLevel);
   tolua_variable(tolua_S,"MovePrepare",tolua_get_tagSkillDef_ToLua_unsigned_MovePrepare,tolua_set_tagSkillDef_ToLua_unsigned_MovePrepare);
   tolua_variable(tolua_S,"MoveAttack",tolua_get_tagSkillDef_ToLua_unsigned_MoveAttack,tolua_set_tagSkillDef_ToLua_unsigned_MoveAttack);
   tolua_variable(tolua_S,"MainAttr",tolua_get_tagSkillDef_ToLua_unsigned_MainAttr,tolua_set_tagSkillDef_ToLua_unsigned_MainAttr);
   tolua_variable(tolua_S,"IceHurtMax",tolua_get_tagSkillDef_ToLua_unsigned_IceHurtMax,tolua_set_tagSkillDef_ToLua_unsigned_IceHurtMax);
   tolua_variable(tolua_S,"IceHurtMin",tolua_get_tagSkillDef_ToLua_unsigned_IceHurtMin,tolua_set_tagSkillDef_ToLua_unsigned_IceHurtMin);
   tolua_variable(tolua_S,"IceHurtMul",tolua_get_tagSkillDef_ToLua_IceHurtMul,tolua_set_tagSkillDef_ToLua_IceHurtMul);
   tolua_variable(tolua_S,"IceHurtMulMax",tolua_get_tagSkillDef_ToLua_IceHurtMulMax,tolua_set_tagSkillDef_ToLua_IceHurtMulMax);
   tolua_variable(tolua_S,"FireHurtMax",tolua_get_tagSkillDef_ToLua_unsigned_FireHurtMax,tolua_set_tagSkillDef_ToLua_unsigned_FireHurtMax);
   tolua_variable(tolua_S,"FireHurtMin",tolua_get_tagSkillDef_ToLua_unsigned_FireHurtMin,tolua_set_tagSkillDef_ToLua_unsigned_FireHurtMin);
   tolua_variable(tolua_S,"FireHurtMul",tolua_get_tagSkillDef_ToLua_FireHurtMul,tolua_set_tagSkillDef_ToLua_FireHurtMul);
   tolua_variable(tolua_S,"FireHurtMulMax",tolua_get_tagSkillDef_ToLua_FireHurtMulMax,tolua_set_tagSkillDef_ToLua_FireHurtMulMax);
   tolua_variable(tolua_S,"ThunderHurtMax",tolua_get_tagSkillDef_ToLua_unsigned_ThunderHurtMax,tolua_set_tagSkillDef_ToLua_unsigned_ThunderHurtMax);
   tolua_variable(tolua_S,"ThunderHurtMin",tolua_get_tagSkillDef_ToLua_unsigned_ThunderHurtMin,tolua_set_tagSkillDef_ToLua_unsigned_ThunderHurtMin);
   tolua_variable(tolua_S,"ThunderHurtMul",tolua_get_tagSkillDef_ToLua_ThunderHurtMul,tolua_set_tagSkillDef_ToLua_ThunderHurtMul);
   tolua_variable(tolua_S,"ThunderHurtMulMax",tolua_get_tagSkillDef_ToLua_ThunderHurtMulMax,tolua_set_tagSkillDef_ToLua_ThunderHurtMulMax);
   tolua_variable(tolua_S,"LightHurtMax",tolua_get_tagSkillDef_ToLua_unsigned_LightHurtMax,tolua_set_tagSkillDef_ToLua_unsigned_LightHurtMax);
   tolua_variable(tolua_S,"LightHurtMin",tolua_get_tagSkillDef_ToLua_unsigned_LightHurtMin,tolua_set_tagSkillDef_ToLua_unsigned_LightHurtMin);
   tolua_variable(tolua_S,"LightHurtMul",tolua_get_tagSkillDef_ToLua_LightHurtMul,tolua_set_tagSkillDef_ToLua_LightHurtMul);
   tolua_variable(tolua_S,"LightHurtMulMax",tolua_get_tagSkillDef_ToLua_LightHurtMulMax,tolua_set_tagSkillDef_ToLua_LightHurtMulMax);
   tolua_variable(tolua_S,"NightHurtMax",tolua_get_tagSkillDef_ToLua_unsigned_NightHurtMax,tolua_set_tagSkillDef_ToLua_unsigned_NightHurtMax);
   tolua_variable(tolua_S,"NightHurtMin",tolua_get_tagSkillDef_ToLua_unsigned_NightHurtMin,tolua_set_tagSkillDef_ToLua_unsigned_NightHurtMin);
   tolua_variable(tolua_S,"NightHurtMul",tolua_get_tagSkillDef_ToLua_NightHurtMul,tolua_set_tagSkillDef_ToLua_NightHurtMul);
   tolua_variable(tolua_S,"NightHurtMulMax",tolua_get_tagSkillDef_ToLua_NightHurtMulMax,tolua_set_tagSkillDef_ToLua_NightHurtMulMax);
   tolua_variable(tolua_S,"PhsicHurtMax",tolua_get_tagSkillDef_ToLua_unsigned_PhsicHurtMax,tolua_set_tagSkillDef_ToLua_unsigned_PhsicHurtMax);
   tolua_variable(tolua_S,"PhsicHurtMin",tolua_get_tagSkillDef_ToLua_unsigned_PhsicHurtMin,tolua_set_tagSkillDef_ToLua_unsigned_PhsicHurtMin);
   tolua_variable(tolua_S,"PhsicHurtMul",tolua_get_tagSkillDef_ToLua_PhsicHurtMul,tolua_set_tagSkillDef_ToLua_PhsicHurtMul);
   tolua_variable(tolua_S,"PhsicHurtMulMax",tolua_get_tagSkillDef_ToLua_PhsicHurtMulMax,tolua_set_tagSkillDef_ToLua_PhsicHurtMulMax);
   tolua_variable(tolua_S,"WaterHurtMax",tolua_get_tagSkillDef_ToLua_unsigned_WaterHurtMax,tolua_set_tagSkillDef_ToLua_unsigned_WaterHurtMax);
   tolua_variable(tolua_S,"WaterHurtMin",tolua_get_tagSkillDef_ToLua_unsigned_WaterHurtMin,tolua_set_tagSkillDef_ToLua_unsigned_WaterHurtMin);
   tolua_variable(tolua_S,"WaterHurtMul",tolua_get_tagSkillDef_ToLua_WaterHurtMul,tolua_set_tagSkillDef_ToLua_WaterHurtMul);
   tolua_variable(tolua_S,"WaterHurtMulMax",tolua_get_tagSkillDef_ToLua_WaterHurtMulMax,tolua_set_tagSkillDef_ToLua_WaterHurtMulMax);
   tolua_variable(tolua_S,"SiegeHurtMax",tolua_get_tagSkillDef_ToLua_unsigned_SiegeHurtMax,tolua_set_tagSkillDef_ToLua_unsigned_SiegeHurtMax);
   tolua_variable(tolua_S,"SiegeHurtMin",tolua_get_tagSkillDef_ToLua_unsigned_SiegeHurtMin,tolua_set_tagSkillDef_ToLua_unsigned_SiegeHurtMin);
   tolua_variable(tolua_S,"SiegeHurtMul",tolua_get_tagSkillDef_ToLua_SiegeHurtMul,tolua_set_tagSkillDef_ToLua_SiegeHurtMul);
   tolua_variable(tolua_S,"SiegeHurtMulMax",tolua_get_tagSkillDef_ToLua_SiegeHurtMulMax,tolua_set_tagSkillDef_ToLua_SiegeHurtMulMax);
   tolua_variable(tolua_S,"HolyHurtMax",tolua_get_tagSkillDef_ToLua_unsigned_HolyHurtMax,tolua_set_tagSkillDef_ToLua_unsigned_HolyHurtMax);
   tolua_variable(tolua_S,"HolyHurtMin",tolua_get_tagSkillDef_ToLua_unsigned_HolyHurtMin,tolua_set_tagSkillDef_ToLua_unsigned_HolyHurtMin);
   tolua_variable(tolua_S,"HolyHurtMul",tolua_get_tagSkillDef_ToLua_HolyHurtMul,tolua_set_tagSkillDef_ToLua_HolyHurtMul);
   tolua_variable(tolua_S,"HolyHurtMulMax",tolua_get_tagSkillDef_ToLua_HolyHurtMulMax,tolua_set_tagSkillDef_ToLua_HolyHurtMulMax);
   tolua_variable(tolua_S,"MachineHurtMax",tolua_get_tagSkillDef_ToLua_unsigned_MachineHurtMax,tolua_set_tagSkillDef_ToLua_unsigned_MachineHurtMax);
   tolua_variable(tolua_S,"MachineHurtMin",tolua_get_tagSkillDef_ToLua_unsigned_MachineHurtMin,tolua_set_tagSkillDef_ToLua_unsigned_MachineHurtMin);
   tolua_variable(tolua_S,"MachineHurtMul",tolua_get_tagSkillDef_ToLua_MachineHurtMul,tolua_set_tagSkillDef_ToLua_MachineHurtMul);
   tolua_variable(tolua_S,"MachineHurtMulMax",tolua_get_tagSkillDef_ToLua_MachineHurtMulMax,tolua_set_tagSkillDef_ToLua_MachineHurtMulMax);
   tolua_variable(tolua_S,"AttackActTime",tolua_get_tagSkillDef_ToLua_unsigned_AttackActTime,tolua_set_tagSkillDef_ToLua_unsigned_AttackActTime);
   tolua_variable(tolua_S,"BindSkill",tolua_get_tagSkillDef_ToLua_unsigned_BindSkill,tolua_set_tagSkillDef_ToLua_unsigned_BindSkill);
   tolua_variable(tolua_S,"FightStat",tolua_get_tagSkillDef_ToLua_unsigned_FightStat,tolua_set_tagSkillDef_ToLua_unsigned_FightStat);
   tolua_variable(tolua_S,"MainRange",tolua_get_tagSkillDef_ToLua_MainRange,tolua_set_tagSkillDef_ToLua_MainRange);
   tolua_variable(tolua_S,"SecondRange",tolua_get_tagSkillDef_ToLua_SecondRange,tolua_set_tagSkillDef_ToLua_SecondRange);
   tolua_variable(tolua_S,"Distance",tolua_get_tagSkillDef_ToLua_Distance,tolua_set_tagSkillDef_ToLua_Distance);
   tolua_variable(tolua_S,"CollectNumMax",tolua_get_tagSkillDef_ToLua_CollectNumMax,tolua_set_tagSkillDef_ToLua_CollectNumMax);
   tolua_variable(tolua_S,"CollectNumUse",tolua_get_tagSkillDef_ToLua_CollectNumUse,tolua_set_tagSkillDef_ToLua_CollectNumUse);
   tolua_variable(tolua_S,"CollectSkillUse",tolua_get_tagSkillDef_ToLua_CollectSkillUse,tolua_set_tagSkillDef_ToLua_CollectSkillUse);
   tolua_variable(tolua_S,"SpdUse",tolua_get_tagSkillDef_ToLua_unsigned_SpdUse,tolua_set_tagSkillDef_ToLua_unsigned_SpdUse);
   tolua_variable(tolua_S,"MPUse",tolua_get_tagSkillDef_ToLua_unsigned_MPUse,tolua_set_tagSkillDef_ToLua_unsigned_MPUse);
   tolua_variable(tolua_S,"CollectNumAtkAdd",tolua_get_tagSkillDef_ToLua_unsigned_CollectNumAtkAdd,tolua_set_tagSkillDef_ToLua_unsigned_CollectNumAtkAdd);
   tolua_variable(tolua_S,"CollectNumDeadAdd",tolua_get_tagSkillDef_ToLua_unsigned_CollectNumDeadAdd,tolua_set_tagSkillDef_ToLua_unsigned_CollectNumDeadAdd);
   tolua_variable(tolua_S,"MPAtkAdd",tolua_get_tagSkillDef_ToLua_unsigned_MPAtkAdd,tolua_set_tagSkillDef_ToLua_unsigned_MPAtkAdd);
   tolua_variable(tolua_S,"MPDeadAdd",tolua_get_tagSkillDef_ToLua_unsigned_MPDeadAdd,tolua_set_tagSkillDef_ToLua_unsigned_MPDeadAdd);
   tolua_variable(tolua_S,"CollectNumAtkAddFlag",tolua_get_tagSkillDef_ToLua_unsigned_CollectNumAtkAddFlag,tolua_set_tagSkillDef_ToLua_unsigned_CollectNumAtkAddFlag);
   tolua_variable(tolua_S,"CollectNumDeadAddFlag",tolua_get_tagSkillDef_ToLua_unsigned_CollectNumDeadAddFlag,tolua_set_tagSkillDef_ToLua_unsigned_CollectNumDeadAddFlag);
   tolua_variable(tolua_S,"JiqiMul",tolua_get_tagSkillDef_ToLua_unsigned_JiqiMul,tolua_set_tagSkillDef_ToLua_unsigned_JiqiMul);
   tolua_variable(tolua_S,"JiqiTime",tolua_get_tagSkillDef_ToLua_unsigned_JiqiTime,tolua_set_tagSkillDef_ToLua_unsigned_JiqiTime);
   tolua_variable(tolua_S,"JiqiChgFlag",tolua_get_tagSkillDef_ToLua_unsigned_JiqiChgFlag,tolua_set_tagSkillDef_ToLua_unsigned_JiqiChgFlag);
   tolua_variable(tolua_S,"ContinueNum",tolua_get_tagSkillDef_ToLua_unsigned_ContinueNum,tolua_set_tagSkillDef_ToLua_unsigned_ContinueNum);
   tolua_variable(tolua_S,"HeavyHitRate",tolua_get_tagSkillDef_ToLua_unsigned_HeavyHitRate,tolua_set_tagSkillDef_ToLua_unsigned_HeavyHitRate);
   tolua_variable(tolua_S,"TargetNum",tolua_get_tagSkillDef_ToLua_unsigned_TargetNum,tolua_set_tagSkillDef_ToLua_unsigned_TargetNum);
   tolua_variable(tolua_S,"PrepareTime",tolua_get_tagSkillDef_ToLua_unsigned_PrepareTime,tolua_set_tagSkillDef_ToLua_unsigned_PrepareTime);
   tolua_variable(tolua_S,"PrepareType",tolua_get_tagSkillDef_ToLua_unsigned_PrepareType,tolua_set_tagSkillDef_ToLua_unsigned_PrepareType);
   tolua_variable(tolua_S,"DeadTarget",tolua_get_tagSkillDef_ToLua_unsigned_DeadTarget,tolua_set_tagSkillDef_ToLua_unsigned_DeadTarget);
   tolua_array(tolua_S,"SkillResult",tolua_get_GameEngineTolua_tagSkillDef_ToLua_SkillResult,tolua_set_GameEngineTolua_tagSkillDef_ToLua_SkillResult);
   tolua_variable(tolua_S,"HurtLimit",tolua_get_tagSkillDef_ToLua_unsigned_HurtLimit,tolua_set_tagSkillDef_ToLua_unsigned_HurtLimit);
   tolua_variable(tolua_S,"PilotTime",tolua_get_tagSkillDef_ToLua_unsigned_PilotTime,tolua_set_tagSkillDef_ToLua_unsigned_PilotTime);
   tolua_variable(tolua_S,"PilotNum",tolua_get_tagSkillDef_ToLua_unsigned_PilotNum,tolua_set_tagSkillDef_ToLua_unsigned_PilotNum);
   tolua_variable(tolua_S,"NoHurtSkill",tolua_get_tagSkillDef_ToLua_unsigned_NoHurtSkill,tolua_set_tagSkillDef_ToLua_unsigned_NoHurtSkill);
   tolua_variable(tolua_S,"NoSkillStop",tolua_get_tagSkillDef_ToLua_unsigned_NoSkillStop,tolua_set_tagSkillDef_ToLua_unsigned_NoSkillStop);
   tolua_variable(tolua_S,"TotemLimit",tolua_get_tagSkillDef_ToLua_unsigned_TotemLimit,tolua_set_tagSkillDef_ToLua_unsigned_TotemLimit);
   tolua_variable(tolua_S,"NoFightStatUse",tolua_get_tagSkillDef_ToLua_unsigned_NoFightStatUse,tolua_set_tagSkillDef_ToLua_unsigned_NoFightStatUse);
   tolua_variable(tolua_S,"PressRate",tolua_get_tagSkillDef_ToLua_PressRate,tolua_set_tagSkillDef_ToLua_PressRate);
   tolua_variable(tolua_S,"NextSkill",tolua_get_tagSkillDef_ToLua_unsigned_NextSkill,tolua_set_tagSkillDef_ToLua_unsigned_NextSkill);
   tolua_variable(tolua_S,"NextSkill2",tolua_get_tagSkillDef_ToLua_unsigned_NextSkill2,tolua_set_tagSkillDef_ToLua_unsigned_NextSkill2);
   tolua_variable(tolua_S,"NextSkill3",tolua_get_tagSkillDef_ToLua_unsigned_NextSkill3,tolua_set_tagSkillDef_ToLua_unsigned_NextSkill3);
   tolua_variable(tolua_S,"SkillDesc",tolua_get_tagSkillDef_ToLua_SkillDesc,tolua_set_tagSkillDef_ToLua_SkillDesc);
   tolua_array(tolua_S,"SkillArmChg",tolua_get_GameEngineTolua_tagSkillDef_ToLua_SkillArmChg,tolua_set_GameEngineTolua_tagSkillDef_ToLua_SkillArmChg);
   tolua_variable(tolua_S,"AmmUse",tolua_get_tagSkillDef_ToLua_AmmUse,tolua_set_tagSkillDef_ToLua_AmmUse);
   tolua_variable(tolua_S,"NotBootyFirstAtk",tolua_get_tagSkillDef_ToLua_unsigned_NotBootyFirstAtk,tolua_set_tagSkillDef_ToLua_unsigned_NotBootyFirstAtk);
   tolua_variable(tolua_S,"TargetRange",tolua_get_tagSkillDef_ToLua_unsigned_TargetRange,tolua_set_tagSkillDef_ToLua_unsigned_TargetRange);
   tolua_variable(tolua_S,"StatusChg",tolua_get_tagSkillDef_ToLua_StatusChg,tolua_set_tagSkillDef_ToLua_StatusChg);
   tolua_variable(tolua_S,"Learn",tolua_get_tagSkillDef_ToLua_Learn,tolua_set_tagSkillDef_ToLua_Learn);
   tolua_array(tolua_S,"FittingsDefault",tolua_get_GameEngineTolua_tagSkillDef_ToLua_FittingsDefault,tolua_set_GameEngineTolua_tagSkillDef_ToLua_FittingsDefault);
   tolua_variable(tolua_S,"TmpEnergeUse",tolua_get_tagSkillDef_ToLua_unsigned_TmpEnergeUse,tolua_set_tagSkillDef_ToLua_unsigned_TmpEnergeUse);
   tolua_variable(tolua_S,"PetAddAge",tolua_get_tagSkillDef_ToLua_unsigned_PetAddAge,tolua_set_tagSkillDef_ToLua_unsigned_PetAddAge);
   tolua_variable(tolua_S,"SkillSwitch",tolua_get_tagSkillDef_ToLua_unsigned_SkillSwitch,tolua_set_tagSkillDef_ToLua_unsigned_SkillSwitch);
   tolua_variable(tolua_S,"CollectNumAddNum",tolua_get_tagSkillDef_ToLua_unsigned_CollectNumAddNum,tolua_set_tagSkillDef_ToLua_unsigned_CollectNumAddNum);
   tolua_variable(tolua_S,"FightCollectNumAddNum",tolua_get_tagSkillDef_ToLua_unsigned_FightCollectNumAddNum,tolua_set_tagSkillDef_ToLua_unsigned_FightCollectNumAddNum);
   tolua_variable(tolua_S,"SkillType",tolua_get_tagSkillDef_ToLua_unsigned_SkillType,tolua_set_tagSkillDef_ToLua_unsigned_SkillType);
   tolua_variable(tolua_S,"MonMiniMul",tolua_get_tagSkillDef_ToLua_MonMiniMul,tolua_set_tagSkillDef_ToLua_MonMiniMul);
   tolua_variable(tolua_S,"MonWeakMul",tolua_get_tagSkillDef_ToLua_MonWeakMul,tolua_set_tagSkillDef_ToLua_MonWeakMul);
   tolua_variable(tolua_S,"MonSoftMul",tolua_get_tagSkillDef_ToLua_MonSoftMul,tolua_set_tagSkillDef_ToLua_MonSoftMul);
   tolua_variable(tolua_S,"MonNormalMul",tolua_get_tagSkillDef_ToLua_MonNormalMul,tolua_set_tagSkillDef_ToLua_MonNormalMul);
   tolua_variable(tolua_S,"MonHardMul",tolua_get_tagSkillDef_ToLua_MonHardMul,tolua_set_tagSkillDef_ToLua_MonHardMul);
   tolua_variable(tolua_S,"MonXiMul",tolua_get_tagSkillDef_ToLua_MonXiMul,tolua_set_tagSkillDef_ToLua_MonXiMul);
   tolua_variable(tolua_S,"MonJinMul",tolua_get_tagSkillDef_ToLua_MonJinMul,tolua_set_tagSkillDef_ToLua_MonJinMul);
   tolua_variable(tolua_S,"MonBossMul",tolua_get_tagSkillDef_ToLua_MonBossMul,tolua_set_tagSkillDef_ToLua_MonBossMul);
   tolua_variable(tolua_S,"MonJiMul",tolua_get_tagSkillDef_ToLua_MonJiMul,tolua_set_tagSkillDef_ToLua_MonJiMul);
   tolua_variable(tolua_S,"LearnLevelLimit",tolua_get_tagSkillDef_ToLua_unsigned_LearnLevelLimit,tolua_set_tagSkillDef_ToLua_unsigned_LearnLevelLimit);
   tolua_variable(tolua_S,"BeatBack",tolua_get_tagSkillDef_ToLua_unsigned_BeatBack,tolua_set_tagSkillDef_ToLua_unsigned_BeatBack);
   tolua_variable(tolua_S,"WushuangFlag",tolua_get_tagSkillDef_ToLua_unsigned_WushuangFlag,tolua_set_tagSkillDef_ToLua_unsigned_WushuangFlag);
   tolua_variable(tolua_S,"UseXp",tolua_get_tagSkillDef_ToLua_UseXp,tolua_set_tagSkillDef_ToLua_UseXp);
   tolua_variable(tolua_S,"IgnoreNoSkill",tolua_get_tagSkillDef_ToLua_unsigned_IgnoreNoSkill,tolua_set_tagSkillDef_ToLua_unsigned_IgnoreNoSkill);
   tolua_variable(tolua_S,"LightningLinkNum",tolua_get_tagSkillDef_ToLua_unsigned_LightningLinkNum,tolua_set_tagSkillDef_ToLua_unsigned_LightningLinkNum);
   tolua_array(tolua_S,"TargetStatus",tolua_get_GameEngineTolua_tagSkillDef_ToLua_TargetStatus,tolua_set_GameEngineTolua_tagSkillDef_ToLua_TargetStatus);
   tolua_variable(tolua_S,"NoHurtPress",tolua_get_tagSkillDef_ToLua_NoHurtPress,tolua_set_tagSkillDef_ToLua_NoHurtPress);
   tolua_variable(tolua_S,"FairySkill",tolua_get_tagSkillDef_ToLua_unsigned_FairySkill,tolua_set_tagSkillDef_ToLua_unsigned_FairySkill);
   tolua_variable(tolua_S,"AmmID",tolua_get_tagSkillDef_ToLua_AmmID,tolua_set_tagSkillDef_ToLua_AmmID);
   tolua_variable(tolua_S,"RedRuneTransferedID",tolua_get_tagSkillDef_ToLua_RedRuneTransferedID,tolua_set_tagSkillDef_ToLua_RedRuneTransferedID);
   tolua_variable(tolua_S,"BlueRuneTransferedID",tolua_get_tagSkillDef_ToLua_BlueRuneTransferedID,tolua_set_tagSkillDef_ToLua_BlueRuneTransferedID);
   tolua_variable(tolua_S,"YellowRuneTransferedID",tolua_get_tagSkillDef_ToLua_YellowRuneTransferedID,tolua_set_tagSkillDef_ToLua_YellowRuneTransferedID);
   tolua_variable(tolua_S,"RuneDesc",tolua_get_tagSkillDef_ToLua_RuneDesc,tolua_set_tagSkillDef_ToLua_RuneDesc);
   tolua_variable(tolua_S,"NextLevelDesc",tolua_get_tagSkillDef_ToLua_NextLevelDesc,tolua_set_tagSkillDef_ToLua_NextLevelDesc);
   tolua_variable(tolua_S,"EnergyUse",tolua_get_tagSkillDef_ToLua_EnergyUse,tolua_set_tagSkillDef_ToLua_EnergyUse);
   tolua_variable(tolua_S,"AtkType",tolua_get_tagSkillDef_ToLua_AtkType,tolua_set_tagSkillDef_ToLua_AtkType);
   tolua_variable(tolua_S,"UseItemID",tolua_get_tagSkillDef_ToLua_UseItemID,tolua_set_tagSkillDef_ToLua_UseItemID);
   tolua_variable(tolua_S,"Auto",tolua_get_tagSkillDef_ToLua_Auto,tolua_set_tagSkillDef_ToLua_Auto);
   tolua_variable(tolua_S,"CtrlFlag",tolua_get_tagSkillDef_ToLua_CtrlFlag,tolua_set_tagSkillDef_ToLua_CtrlFlag);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagSkillUpRate_ToLua","tagSkillUpRate_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagSkillUpRate_ToLua");
   tolua_variable(tolua_S,"Up",tolua_get_tagSkillUpRate_ToLua_unsigned_Up,tolua_set_tagSkillUpRate_ToLua_unsigned_Up);
   tolua_variable(tolua_S,"Down",tolua_get_tagSkillUpRate_ToLua_unsigned_Down,tolua_set_tagSkillUpRate_ToLua_unsigned_Down);
   tolua_variable(tolua_S,"NoChg",tolua_get_tagSkillUpRate_ToLua_unsigned_NoChg,tolua_set_tagSkillUpRate_ToLua_unsigned_NoChg);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagDiathesisDef_ToLua","tagDiathesisDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagDiathesisDef_ToLua");
   tolua_variable(tolua_S,"DiathesisID",tolua_get_tagDiathesisDef_ToLua_unsigned_DiathesisID,tolua_set_tagDiathesisDef_ToLua_unsigned_DiathesisID);
   tolua_variable(tolua_S,"Level",tolua_get_tagDiathesisDef_ToLua_unsigned_Level,tolua_set_tagDiathesisDef_ToLua_unsigned_Level);
   tolua_variable(tolua_S,"Name",tolua_get_tagDiathesisDef_ToLua_Name,tolua_set_tagDiathesisDef_ToLua_Name);
   tolua_variable(tolua_S,"IconID",tolua_get_tagDiathesisDef_ToLua_IconID,tolua_set_tagDiathesisDef_ToLua_IconID);
   tolua_array(tolua_S,"DiathesisResult",tolua_get_GameEngineTolua_tagDiathesisDef_ToLua_DiathesisResult,tolua_set_GameEngineTolua_tagDiathesisDef_ToLua_DiathesisResult);
   tolua_variable(tolua_S,"ArmType",tolua_get_tagDiathesisDef_ToLua_unsigned_ArmType,tolua_set_tagDiathesisDef_ToLua_unsigned_ArmType);
   tolua_variable(tolua_S,"DiathesisDesc",tolua_get_tagDiathesisDef_ToLua_DiathesisDesc,tolua_set_tagDiathesisDef_ToLua_DiathesisDesc);
   tolua_variable(tolua_S,"Learn",tolua_get_tagDiathesisDef_ToLua_Learn,tolua_set_tagDiathesisDef_ToLua_Learn);
   tolua_variable(tolua_S,"LearnLevelLimit",tolua_get_tagDiathesisDef_ToLua_unsigned_LearnLevelLimit,tolua_set_tagDiathesisDef_ToLua_unsigned_LearnLevelLimit);
   tolua_variable(tolua_S,"PreUsedGeniusPoint",tolua_get_tagDiathesisDef_ToLua_unsigned_PreUsedGeniusPoint,tolua_set_tagDiathesisDef_ToLua_unsigned_PreUsedGeniusPoint);
   tolua_variable(tolua_S,"UseGeniusPoint",tolua_get_tagDiathesisDef_ToLua_unsigned_UseGeniusPoint,tolua_set_tagDiathesisDef_ToLua_unsigned_UseGeniusPoint);
   tolua_variable(tolua_S,"GeniusType",tolua_get_tagDiathesisDef_ToLua_unsigned_GeniusType,tolua_set_tagDiathesisDef_ToLua_unsigned_GeniusType);
   tolua_variable(tolua_S,"PetDiathesisType",tolua_get_tagDiathesisDef_ToLua_unsigned_PetDiathesisType,tolua_set_tagDiathesisDef_ToLua_unsigned_PetDiathesisType);
   tolua_variable(tolua_S,"SelfCool",tolua_get_tagDiathesisDef_ToLua_unsigned_SelfCool,tolua_set_tagDiathesisDef_ToLua_unsigned_SelfCool);
   tolua_variable(tolua_S,"PetDiathesisGradeType",tolua_get_tagDiathesisDef_ToLua_unsigned_PetDiathesisGradeType,tolua_set_tagDiathesisDef_ToLua_unsigned_PetDiathesisGradeType);
   tolua_variable(tolua_S,"IconPosition",tolua_get_tagDiathesisDef_ToLua_IconPosition,tolua_set_tagDiathesisDef_ToLua_IconPosition);
   tolua_variable(tolua_S,"MutexDiathesisID",tolua_get_tagDiathesisDef_ToLua_unsigned_MutexDiathesisID,tolua_set_tagDiathesisDef_ToLua_unsigned_MutexDiathesisID);
   tolua_variable(tolua_S,"PetSkillType",tolua_get_tagDiathesisDef_ToLua_unsigned_PetSkillType,tolua_set_tagDiathesisDef_ToLua_unsigned_PetSkillType);
   tolua_variable(tolua_S,"GroupSkill",tolua_get_tagDiathesisDef_ToLua_unsigned_GroupSkill,tolua_set_tagDiathesisDef_ToLua_unsigned_GroupSkill);
   tolua_variable(tolua_S,"SkillUpRate",tolua_get_tagDiathesisDef_ToLua_SkillUpRate,tolua_set_tagDiathesisDef_ToLua_SkillUpRate);
   tolua_variable(tolua_S,"ResetRate",tolua_get_tagDiathesisDef_ToLua_ResetRate,tolua_set_tagDiathesisDef_ToLua_ResetRate);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagDiathesisData_toLua","tagDiathesisData_toLua","",tolua_collect_tagDiathesisData_toLua);
  #else
  tolua_cclass(tolua_S,"tagDiathesisData_toLua","tagDiathesisData_toLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagDiathesisData_toLua");
   tolua_variable(tolua_S,"DiathesisID",tolua_get_tagDiathesisData_toLua_unsigned_DiathesisID,tolua_set_tagDiathesisData_toLua_unsigned_DiathesisID);
   tolua_variable(tolua_S,"DiathesisLevel",tolua_get_tagDiathesisData_toLua_unsigned_DiathesisLevel,tolua_set_tagDiathesisData_toLua_unsigned_DiathesisLevel);
   tolua_variable(tolua_S,"GeniusFlag",tolua_get_tagDiathesisData_toLua_unsigned_GeniusFlag,tolua_set_tagDiathesisData_toLua_unsigned_GeniusFlag);
   tolua_variable(tolua_S,"Res",tolua_get_tagDiathesisData_toLua_unsigned_Res,tolua_set_tagDiathesisData_toLua_unsigned_Res);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagDiathesisInfo_toLua","tagDiathesisInfo_toLua","",NULL);
  tolua_beginmodule(tolua_S,"tagDiathesisInfo_toLua");
   tolua_variable(tolua_S,"DiathesisNum",tolua_get_tagDiathesisInfo_toLua_unsigned_DiathesisNum,tolua_set_tagDiathesisInfo_toLua_unsigned_DiathesisNum);
   tolua_array(tolua_S,"DiathesisList",tolua_get_GameEngineTolua_tagDiathesisInfo_toLua_DiathesisList,tolua_set_GameEngineTolua_tagDiathesisInfo_toLua_DiathesisList);
   tolua_variable(tolua_S,"UsedGeniusPoint",tolua_get_tagDiathesisInfo_toLua_unsigned_UsedGeniusPoint,tolua_set_tagDiathesisInfo_toLua_unsigned_UsedGeniusPoint);
   tolua_variable(tolua_S,"LearnGeniusPoint",tolua_get_tagDiathesisInfo_toLua_unsigned_LearnGeniusPoint,tolua_set_tagDiathesisInfo_toLua_unsigned_LearnGeniusPoint);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"getItemDisplayInfoHairStyle",tolua_GameEngineTolua_getItemDisplayInfoHairStyle00);
  tolua_cclass(tolua_S,"Equip","Equip","",NULL);
  tolua_beginmodule(tolua_S,"Equip");
   tolua_function(tolua_S,"getItem",tolua_GameEngineTolua_Equip_getItem00);
   tolua_function(tolua_S,"getItemLink",tolua_GameEngineTolua_Equip_getItemLink00);
   tolua_function(tolua_S,"getArmType",tolua_GameEngineTolua_Equip_getArmType00);
   tolua_function(tolua_S,"setTmpArm",tolua_GameEngineTolua_Equip_setTmpArm00);
   tolua_function(tolua_S,"bindTmpArm",tolua_GameEngineTolua_Equip_bindTmpArm00);
   tolua_function(tolua_S,"unBindTmpArm",tolua_GameEngineTolua_Equip_unBindTmpArm00);
   tolua_function(tolua_S,"isUsedTmp",tolua_GameEngineTolua_Equip_isUsedTmp00);
   tolua_function(tolua_S,"getTmpArm",tolua_GameEngineTolua_Equip_getTmpArm00);
   tolua_function(tolua_S,"getTmpMachin",tolua_GameEngineTolua_Equip_getTmpMachin00);
   tolua_function(tolua_S,"usedTmpArm",tolua_GameEngineTolua_Equip_usedTmpArm00);
   tolua_function(tolua_S,"unUsedTmpArm",tolua_GameEngineTolua_Equip_unUsedTmpArm00);
   tolua_function(tolua_S,"looseTmpArm",tolua_GameEngineTolua_Equip_looseTmpArm00);
   tolua_function(tolua_S,"hideWeapon",tolua_GameEngineTolua_Equip_hideWeapon00);
   tolua_function(tolua_S,"showWeapon",tolua_GameEngineTolua_Equip_showWeapon00);
   tolua_function(tolua_S,"send_Equip",tolua_GameEngineTolua_Equip_send_Equip00);
   tolua_function(tolua_S,"send_unEquip",tolua_GameEngineTolua_Equip_send_unEquip00);
   tolua_function(tolua_S,"send_EquipAmm",tolua_GameEngineTolua_Equip_send_EquipAmm00);
   tolua_function(tolua_S,"setAvatarAttrib",tolua_GameEngineTolua_Equip_setAvatarAttrib00);
   tolua_function(tolua_S,"getAvatarId",tolua_GameEngineTolua_Equip_getAvatarId00);
   tolua_function(tolua_S,"getPlayerSuitEquipNum",tolua_GameEngineTolua_Equip_getPlayerSuitEquipNum00);
   tolua_function(tolua_S,"getEquipItemID",tolua_GameEngineTolua_Equip_getEquipItemID00);
   tolua_function(tolua_S,"isTmpPatronid",tolua_GameEngineTolua_Equip_isTmpPatronid00);
   tolua_function(tolua_S,"getAvatarStarLv",tolua_GameEngineTolua_Equip_getAvatarStarLv00);
   tolua_function(tolua_S,"ShowShoulder",tolua_GameEngineTolua_Equip_ShowShoulder00);
   tolua_function(tolua_S,"send_SelectFashionSuit",tolua_GameEngineTolua_Equip_send_SelectFashionSuit00);
   tolua_function(tolua_S,"setSelectFashionBag",tolua_GameEngineTolua_Equip_setSelectFashionBag00);
   tolua_function(tolua_S,"getSelectFashionIndex",tolua_GameEngineTolua_Equip_getSelectFashionIndex00);
   tolua_function(tolua_S,"getSelectFashionNum",tolua_GameEngineTolua_Equip_getSelectFashionNum00);
   tolua_function(tolua_S,"isOnChairTmp",tolua_GameEngineTolua_Equip_isOnChairTmp00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagGemInfo_ToLua","tagGemInfo_ToLua","",tolua_collect_tagGemInfo_ToLua);
  #else
  tolua_cclass(tolua_S,"tagGemInfo_ToLua","tagGemInfo_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagGemInfo_ToLua");
   tolua_variable(tolua_S,"ItemID",tolua_get_tagGemInfo_ToLua_unsigned_ItemID,tolua_set_tagGemInfo_ToLua_unsigned_ItemID);
   tolua_variable(tolua_S,"Num",tolua_get_tagGemInfo_ToLua_Num,tolua_set_tagGemInfo_ToLua_Num);
   tolua_variable(tolua_S,"Bind",tolua_get_tagGemInfo_ToLua_Bind,tolua_set_tagGemInfo_ToLua_Bind);
   tolua_variable(tolua_S,"Desc",tolua_get_tagGemInfo_ToLua_Desc,tolua_set_tagGemInfo_ToLua_Desc);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagGemPagDef_ToLua","tagGemPagDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagGemPagDef_ToLua");
   tolua_variable(tolua_S,"Id",tolua_get_tagGemPagDef_ToLua_Id,tolua_set_tagGemPagDef_ToLua_Id);
   tolua_array(tolua_S,"GemInfo",tolua_get_GameEngineTolua_tagGemPagDef_ToLua_GemInfo,tolua_set_GameEngineTolua_tagGemPagDef_ToLua_GemInfo);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagArmTeshuDef_ToLua","tagArmTeshuDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagArmTeshuDef_ToLua");
   tolua_variable(tolua_S,"TeshuID",tolua_get_tagArmTeshuDef_ToLua_unsigned_TeshuID,tolua_set_tagArmTeshuDef_ToLua_unsigned_TeshuID);
   tolua_variable(tolua_S,"Rate",tolua_get_tagArmTeshuDef_ToLua_Rate,tolua_set_tagArmTeshuDef_ToLua_Rate);
   tolua_array(tolua_S,"Result",tolua_get_GameEngineTolua_tagArmTeshuDef_ToLua_Result,tolua_set_GameEngineTolua_tagArmTeshuDef_ToLua_Result);
   tolua_variable(tolua_S,"DefDesc",tolua_get_tagArmTeshuDef_ToLua_DefDesc,tolua_set_tagArmTeshuDef_ToLua_DefDesc);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"MAX_GEM_PAG_GEM_NUM_TOLUA",MAX_GEM_PAG_GEM_NUM_TOLUA);
  tolua_function(tolua_S,"getGemPagDef",tolua_GameEngineTolua_getGemPagDef00);
  tolua_function(tolua_S,"getArmTeshuDef",tolua_GameEngineTolua_getArmTeshuDef00);
  tolua_cclass(tolua_S,"Container","Container","",NULL);
  tolua_beginmodule(tolua_S,"Container");
   tolua_function(tolua_S,"getUnusedGridNum",tolua_GameEngineTolua_Container_getUnusedGridNum00);
   tolua_function(tolua_S,"getContainerMaxNum",tolua_GameEngineTolua_Container_getContainerMaxNum00);
   tolua_function(tolua_S,"getItem",tolua_GameEngineTolua_Container_getItem00);
   tolua_function(tolua_S,"getItemCount",tolua_GameEngineTolua_Container_getItemCount00);
   tolua_function(tolua_S,"getItemTotalNum",tolua_GameEngineTolua_Container_getItemTotalNum00);
   tolua_function(tolua_S,"getItem",tolua_GameEngineTolua_Container_getItem01);
   tolua_function(tolua_S,"getItem",tolua_GameEngineTolua_Container_getItem02);
   tolua_function(tolua_S,"getItemLink",tolua_GameEngineTolua_Container_getItemLink00);
   tolua_function(tolua_S,"getItemResultID",tolua_GameEngineTolua_Container_getItemResultID00);
   tolua_function(tolua_S,"canUseItemPre",tolua_GameEngineTolua_Container_canUseItemPre00);
   tolua_function(tolua_S,"isExpendableItemLimitdByScene",tolua_GameEngineTolua_Container_isExpendableItemLimitdByScene00);
   tolua_function(tolua_S,"canUseExpendableItem",tolua_GameEngineTolua_Container_canUseExpendableItem00);
   tolua_function(tolua_S,"usedItem",tolua_GameEngineTolua_Container_usedItem00);
   tolua_function(tolua_S,"usedItem",tolua_GameEngineTolua_Container_usedItem01);
   tolua_function(tolua_S,"getAmmCount",tolua_GameEngineTolua_Container_getAmmCount00);
   tolua_function(tolua_S,"getNoneGridIndex",tolua_GameEngineTolua_Container_getNoneGridIndex00);
   tolua_function(tolua_S,"getCurBootyId",tolua_GameEngineTolua_Container_getCurBootyId00);
   tolua_function(tolua_S,"getBootyCount",tolua_GameEngineTolua_Container_getBootyCount00);
   tolua_function(tolua_S,"getBootyItem",tolua_GameEngineTolua_Container_getBootyItem00);
   tolua_function(tolua_S,"closeBooty",tolua_GameEngineTolua_Container_closeBooty00);
   tolua_function(tolua_S,"send_GetInfo",tolua_GameEngineTolua_Container_send_GetInfo00);
   tolua_function(tolua_S,"send_MoveItem",tolua_GameEngineTolua_Container_send_MoveItem00);
   tolua_function(tolua_S,"send_Arranger",tolua_GameEngineTolua_Container_send_Arranger00);
   tolua_function(tolua_S,"send_MoveMoney",tolua_GameEngineTolua_Container_send_MoveMoney00);
   tolua_function(tolua_S,"send_CloseStash",tolua_GameEngineTolua_Container_send_CloseStash00);
   tolua_function(tolua_S,"send_PackageArrange",tolua_GameEngineTolua_Container_send_PackageArrange00);
   tolua_function(tolua_S,"send_PickItem",tolua_GameEngineTolua_Container_send_PickItem00);
   tolua_function(tolua_S,"send_PickAllItem",tolua_GameEngineTolua_Container_send_PickAllItem00);
   tolua_function(tolua_S,"send_SelectItem",tolua_GameEngineTolua_Container_send_SelectItem00);
   tolua_function(tolua_S,"send_UsedExpendableItem",tolua_GameEngineTolua_Container_send_UsedExpendableItem00);
   tolua_function(tolua_S,"send_PetUsedItem",tolua_GameEngineTolua_Container_send_PetUsedItem00);
   tolua_function(tolua_S,"passItemCD",tolua_GameEngineTolua_Container_passItemCD00);
   tolua_function(tolua_S,"getItemCD",tolua_GameEngineTolua_Container_getItemCD00);
   tolua_function(tolua_S,"isItemInCD",tolua_GameEngineTolua_Container_isItemInCD00);
   tolua_function(tolua_S,"getItemCDPassTime",tolua_GameEngineTolua_Container_getItemCDPassTime00);
   tolua_function(tolua_S,"setItemTypeCD",tolua_GameEngineTolua_Container_setItemTypeCD00);
   tolua_function(tolua_S,"canDragIn",tolua_GameEngineTolua_Container_canDragIn00);
   tolua_function(tolua_S,"send_ChangeCoin",tolua_GameEngineTolua_Container_send_ChangeCoin00);
   tolua_function(tolua_S,"requestSetContainerLock",tolua_GameEngineTolua_Container_requestSetContainerLock00);
   tolua_function(tolua_S,"requestChangeContainerPsd",tolua_GameEngineTolua_Container_requestChangeContainerPsd00);
   tolua_function(tolua_S,"requestCheckContainerPsd",tolua_GameEngineTolua_Container_requestCheckContainerPsd00);
   tolua_function(tolua_S,"requestCancelContainerLock",tolua_GameEngineTolua_Container_requestCancelContainerLock00);
   tolua_function(tolua_S,"requestLockContainer",tolua_GameEngineTolua_Container_requestLockContainer00);
   tolua_function(tolua_S,"getContainerLockState",tolua_GameEngineTolua_Container_getContainerLockState00);
   tolua_function(tolua_S,"getStuffNum",tolua_GameEngineTolua_Container_getStuffNum00);
   tolua_function(tolua_S,"getItemPos",tolua_GameEngineTolua_Container_getItemPos00);
   tolua_function(tolua_S,"isUseItemPre",tolua_GameEngineTolua_Container_isUseItemPre00);
   tolua_function(tolua_S,"getUnLockItemPos",tolua_GameEngineTolua_Container_getUnLockItemPos00);
   tolua_function(tolua_S,"requestAddStashGrid",tolua_GameEngineTolua_Container_requestAddStashGrid00);
   tolua_function(tolua_S,"getBindItemNum",tolua_GameEngineTolua_Container_getBindItemNum00);
   tolua_function(tolua_S,"getUnBindItemNum",tolua_GameEngineTolua_Container_getUnBindItemNum00);
   tolua_function(tolua_S,"getUnBindItemNumNotCheckLock",tolua_GameEngineTolua_Container_getUnBindItemNumNotCheckLock00);
   tolua_function(tolua_S,"getBindItemNumNotCheckLock",tolua_GameEngineTolua_Container_getBindItemNumNotCheckLock00);
   tolua_function(tolua_S,"canUseTaskItem",tolua_GameEngineTolua_Container_canUseTaskItem00);
   tolua_function(tolua_S,"onItemLockChange",tolua_GameEngineTolua_Container_onItemLockChange00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"ITEM_SLOTTYPE_NONE",ITEM_SLOTTYPE_NONE);
  tolua_constant(tolua_S,"ITEM_SLOTTYPE_DISABLE",ITEM_SLOTTYPE_DISABLE);
  tolua_constant(tolua_S,"ITEM_SLOTTYPE_ITEM",ITEM_SLOTTYPE_ITEM);
  tolua_constant(tolua_S,"ITEM_SLOTTYPE_AMM",ITEM_SLOTTYPE_AMM);
  tolua_constant(tolua_S,"ITEM_TYPE_TOOLS",ITEM_TYPE_TOOLS);
  tolua_constant(tolua_S,"UNUSED_AMM",UNUSED_AMM);
  tolua_constant(tolua_S,"AMM_ID",AMM_ID);
  tolua_constant(tolua_S,"AMM_ID_TEM",AMM_ID_TEM);
  tolua_constant(tolua_S,"ITEM_PILL_HP_ID",ITEM_PILL_HP_ID);
  tolua_constant(tolua_S,"ITEM_PILL_MP_ID",ITEM_PILL_MP_ID);
  tolua_constant(tolua_S,"ITEM_PILL_HPLONG_ID",ITEM_PILL_HPLONG_ID);
  tolua_constant(tolua_S,"ITEM_PILL_MPLONG_ID",ITEM_PILL_MPLONG_ID);
  tolua_constant(tolua_S,"ITEM_PILL_BUFF_ID",ITEM_PILL_BUFF_ID);
  tolua_constant(tolua_S,"ITEM_PILL_BUFFLONG_ID",ITEM_PILL_BUFFLONG_ID);
  tolua_constant(tolua_S,"ITEM_PILL_MORPH_ID",ITEM_PILL_MORPH_ID);
  tolua_constant(tolua_S,"ITEM_PILL_PET_ID",ITEM_PILL_PET_ID);
  tolua_constant(tolua_S,"ITEM_PILL_HPMP_ID",ITEM_PILL_HPMP_ID);
  tolua_constant(tolua_S,"ITEM_PILL_HPMPLONG_ID",ITEM_PILL_HPMPLONG_ID);
  tolua_constant(tolua_S,"ITEM_FOOD_HPLONG_ID",ITEM_FOOD_HPLONG_ID);
  tolua_constant(tolua_S,"ITEM_FOOD_MPLONG_ID",ITEM_FOOD_MPLONG_ID);
  tolua_constant(tolua_S,"ITEM_FOOD_BUFFLONG_ID",ITEM_FOOD_BUFFLONG_ID);
  tolua_constant(tolua_S,"ITEM_FOOD_BASEATTR_ID",ITEM_FOOD_BASEATTR_ID);
  tolua_constant(tolua_S,"ITEM_FOOD_RACEATTR_ID",ITEM_FOOD_RACEATTR_ID);
  tolua_constant(tolua_S,"ITEM_MAP_POSITION_ID",ITEM_MAP_POSITION_ID);
  tolua_constant(tolua_S,"ITEM_SCROLL_SKILL_ID",ITEM_SCROLL_SKILL_ID);
  tolua_constant(tolua_S,"ITEM_SCROLL_ID",ITEM_SCROLL_ID);
  tolua_constant(tolua_S,"ITEM_SCROLL_QIYUE_ID",ITEM_SCROLL_QIYUE_ID);
  tolua_constant(tolua_S,"ITEM_SCROLL_DESIGNATION_ID",ITEM_SCROLL_DESIGNATION_ID);
  tolua_constant(tolua_S,"ITEM_NO_DIE_PUNISH_ID",ITEM_NO_DIE_PUNISH_ID);
  tolua_constant(tolua_S,"ITEM_CLAN_ITEM",ITEM_CLAN_ITEM);
  tolua_constant(tolua_S,"ITEM_HELP_PRESENT_ID",ITEM_HELP_PRESENT_ID);
  tolua_constant(tolua_S,"ITEM_HELP_BOX_ID",ITEM_HELP_BOX_ID);
  tolua_constant(tolua_S,"ITEM_HELP_RAND_ID",ITEM_HELP_RAND_ID);
  tolua_constant(tolua_S,"ITEM_TRUST_ID",ITEM_TRUST_ID);
  tolua_constant(tolua_S,"ITEM_PROMOTION_ID",ITEM_PROMOTION_ID);
  tolua_constant(tolua_S,"ITEM_GEM_STAR_ID",ITEM_GEM_STAR_ID);
  tolua_constant(tolua_S,"ITEM_GEM_STRENGTH_ID",ITEM_GEM_STRENGTH_ID);
  tolua_constant(tolua_S,"ITEM_INLAYGEM_RED_ID",ITEM_INLAYGEM_RED_ID);
  tolua_constant(tolua_S,"ITEM_INLAYGEM_GREEN_ID",ITEM_INLAYGEM_GREEN_ID);
  tolua_constant(tolua_S,"ITEM_INLAYGEM_BLUE_ID",ITEM_INLAYGEM_BLUE_ID);
  tolua_constant(tolua_S,"ITEM_INLAYGEM_COLORFUL_ID",ITEM_INLAYGEM_COLORFUL_ID);
  tolua_constant(tolua_S,"ITEM_INLAYGEM_OTHER_ID",ITEM_INLAYGEM_OTHER_ID);
  tolua_constant(tolua_S,"ITEM_PET_EXP_ID",ITEM_PET_EXP_ID);
  tolua_constant(tolua_S,"ITEM_PETXUNFU_ID",ITEM_PETXUNFU_ID);
  tolua_constant(tolua_S,"ITEM_PETLEVELUP_ID",ITEM_PETLEVELUP_ID);
  tolua_constant(tolua_S,"ITEM_FIGHTTING_BOOK1_ID",ITEM_FIGHTTING_BOOK1_ID);
  tolua_constant(tolua_S,"ITEM_FIGHTTING_BOOK2_ID",ITEM_FIGHTTING_BOOK2_ID);
  tolua_constant(tolua_S,"ITEM_FIGHTTING_BOOK3_ID",ITEM_FIGHTTING_BOOK3_ID);
  tolua_constant(tolua_S,"ITEM_LVUP_ID",ITEM_LVUP_ID);
  tolua_constant(tolua_S,"ITEM_HELP_LVUP_ID",ITEM_HELP_LVUP_ID);
  tolua_constant(tolua_S,"ITEM_HELP_MAIL_ID",ITEM_HELP_MAIL_ID);
  tolua_constant(tolua_S,"ITEM_TASK_MAINLINE_ID",ITEM_TASK_MAINLINE_ID);
  tolua_constant(tolua_S,"ITEM_TASK_MAINLINE_ID_TASK",ITEM_TASK_MAINLINE_ID_TASK);
  tolua_constant(tolua_S,"ITEM_PET_ID",ITEM_PET_ID);
  tolua_constant(tolua_S,"ITEM_PETSHIEGG_ID",ITEM_PETSHIEGG_ID);
  tolua_constant(tolua_S,"ITEM_PETSHIEGG_ID2",ITEM_PETSHIEGG_ID2);
  tolua_constant(tolua_S,"ITEM_PETXIANEGG_ID",ITEM_PETXIANEGG_ID);
  tolua_constant(tolua_S,"ITEM_TRUMP_ID",ITEM_TRUMP_ID);
  tolua_constant(tolua_S,"ITEM_LEARN_SECONDARY_ID1",ITEM_LEARN_SECONDARY_ID1);
  tolua_constant(tolua_S,"ITEM_LEARN_SECONDARY_ID2",ITEM_LEARN_SECONDARY_ID2);
  tolua_constant(tolua_S,"ITEM_LEARN_SECONDARY_ID3",ITEM_LEARN_SECONDARY_ID3);
  tolua_constant(tolua_S,"EQUIP_NORMAL",EQUIP_NORMAL);
  tolua_constant(tolua_S,"EQUIP_ACTIVITY",EQUIP_ACTIVITY);
  tolua_constant(tolua_S,"EQUIP_PEI",EQUIP_PEI);
  tolua_constant(tolua_S,"EQUIP_MARKET",EQUIP_MARKET);
  tolua_constant(tolua_S,"EQUIP_SUIT",EQUIP_SUIT);
  tolua_constant(tolua_S,"EQUIP_NORMALSUIT",EQUIP_NORMALSUIT);
  tolua_constant(tolua_S,"ITEM_IMPORTANT_NORMAL",ITEM_IMPORTANT_NORMAL);
  tolua_constant(tolua_S,"ITEM_IMPORTANT_EXCELLENCE",ITEM_IMPORTANT_EXCELLENCE);
  tolua_constant(tolua_S,"ITEM_IMPORTANT_BEST",ITEM_IMPORTANT_BEST);
  tolua_constant(tolua_S,"ITEM_IMPORTANT_NONSUCH",ITEM_IMPORTANT_NONSUCH);
  tolua_constant(tolua_S,"ITEM_IMPORTANT_EPIC",ITEM_IMPORTANT_EPIC);
  tolua_constant(tolua_S,"ITEM_IMPORTANT_EPIC_A",ITEM_IMPORTANT_EPIC_A);
  tolua_constant(tolua_S,"ITEM_IMPORTANT_EPIC_S",ITEM_IMPORTANT_EPIC_S);
  tolua_constant(tolua_S,"ITEM_IMPORTANT_LEGEND",ITEM_IMPORTANT_LEGEND);
  tolua_constant(tolua_S,"ITEM_IMPORTANT_END",ITEM_IMPORTANT_END);
  tolua_constant(tolua_S,"ITEM_IDTYPE_NONE",ITEM_IDTYPE_NONE);
  tolua_constant(tolua_S,"ITEM_IDTYPE_ARM",ITEM_IDTYPE_ARM);
  tolua_constant(tolua_S,"ITEM_IDTYPE_EQUIP",ITEM_IDTYPE_EQUIP);
  tolua_constant(tolua_S,"ITEM_IDTYPE_BARDAIN",ITEM_IDTYPE_BARDAIN);
  tolua_constant(tolua_S,"ITEM_IDTYPE_ITEM",ITEM_IDTYPE_ITEM);
  tolua_constant(tolua_S,"ITEM_EXTENDED_TYPE_NONE",ITEM_EXTENDED_TYPE_NONE);
  tolua_constant(tolua_S,"ITEM_EXTENDED_TYPE_RESULT",ITEM_EXTENDED_TYPE_RESULT);
  tolua_constant(tolua_S,"ITEM_EXTENDED_TYPE_ATTR",ITEM_EXTENDED_TYPE_ATTR);
  tolua_constant(tolua_S,"ITEM_VALID_24H",ITEM_VALID_24H);
  tolua_constant(tolua_S,"ITEM_VALID_3H",ITEM_VALID_3H);
  tolua_constant(tolua_S,"ITEM_VALID_10M",ITEM_VALID_10M);
  tolua_constant(tolua_S,"ITEM_VALID_END",ITEM_VALID_END);
  tolua_constant(tolua_S,"ARM_NONE_PIN_ZHI",ARM_NONE_PIN_ZHI);
  tolua_constant(tolua_S,"ARM_GREEN_PIN_ZHI",ARM_GREEN_PIN_ZHI);
  tolua_constant(tolua_S,"ARM_BLUE_PIN_ZHI",ARM_BLUE_PIN_ZHI);
  tolua_constant(tolua_S,"ARM_PURPLE_PIN_ZHI",ARM_PURPLE_PIN_ZHI);
  tolua_constant(tolua_S,"ARM_ORANGE_PIN_ZHI",ARM_ORANGE_PIN_ZHI);
  tolua_constant(tolua_S,"MAX_ITEM_ADD_ATTR_TOLUA",MAX_ITEM_ADD_ATTR_TOLUA);
  tolua_constant(tolua_S,"ITEM_FIGHT_NO_USE_TOLUA",ITEM_FIGHT_NO_USE_TOLUA);
  tolua_constant(tolua_S,"ITEM_RIDE_MACHINE_USE_TOLUA",ITEM_RIDE_MACHINE_USE_TOLUA);
  tolua_constant(tolua_S,"ITEM_PRE_USE_TOLUA",ITEM_PRE_USE_TOLUA);
  tolua_constant(tolua_S,"ITEM_SHOW_LIGHT_TOLUA",ITEM_SHOW_LIGHT_TOLUA);
  tolua_constant(tolua_S,"ITEM_NO_LEVELLIMIT_TOLUA",ITEM_NO_LEVELLIMIT_TOLUA);
  tolua_constant(tolua_S,"ITEM_IMP_LOGTRACE_TOLUA",ITEM_IMP_LOGTRACE_TOLUA);
  tolua_constant(tolua_S,"ITEM_COLOR_GREEN_TOLUA",ITEM_COLOR_GREEN_TOLUA);
  tolua_constant(tolua_S,"ITEM_COLOR_BLUE_TOLUA",ITEM_COLOR_BLUE_TOLUA);
  tolua_constant(tolua_S,"ITEM_COLOR_PURPLE_TOLUA",ITEM_COLOR_PURPLE_TOLUA);
  tolua_constant(tolua_S,"ITEM_COLOR_PINK_TOLUA",ITEM_COLOR_PINK_TOLUA);
  tolua_constant(tolua_S,"ITEM_MO_SHI_NO_USE_ToLUA",ITEM_MO_SHI_NO_USE_ToLUA);
  tolua_constant(tolua_S,"ITEM_DROP_TIME_ToLUA",ITEM_DROP_TIME_ToLUA);
  tolua_constant(tolua_S,"ITEM_S_ToLUA",ITEM_S_ToLUA);
  tolua_constant(tolua_S,"ITEM_A_ToLUA",ITEM_A_ToLUA);
  tolua_constant(tolua_S,"ITEM_B_ToLUA",ITEM_B_ToLUA);
  tolua_constant(tolua_S,"ITEM_CAN_STEP_UP_BACK_TOLUA",ITEM_CAN_STEP_UP_BACK_TOLUA);
  tolua_constant(tolua_S,"ITEM_NO_SHOW_PREFIX_TOLUA",ITEM_NO_SHOW_PREFIX_TOLUA);
  tolua_constant(tolua_S,"ITEM_HAVE_FLOAT_ACT_TOLUA",ITEM_HAVE_FLOAT_ACT_TOLUA);
  tolua_function(tolua_S,"bitAnd",tolua_GameEngineTolua_bitAnd00);
  tolua_function(tolua_S,"bitAndOperation",tolua_GameEngineTolua_bitAndOperation00);
  tolua_function(tolua_S,"bitOr",tolua_GameEngineTolua_bitOr00);
  tolua_function(tolua_S,"bitNotAnd",tolua_GameEngineTolua_bitNotAnd00);
  tolua_function(tolua_S,"getItemType",tolua_GameEngineTolua_getItemType00);
  tolua_function(tolua_S,"getItemDef",tolua_GameEngineTolua_getItemDef00);
  tolua_function(tolua_S,"getArmAttrName",tolua_GameEngineTolua_getArmAttrName00);
  tolua_function(tolua_S,"getArmAttrValue",tolua_GameEngineTolua_getArmAttrValue00);
  tolua_function(tolua_S,"getAddAttrDef",tolua_GameEngineTolua_getAddAttrDef00);
  tolua_function(tolua_S,"getSuitSet",tolua_GameEngineTolua_getSuitSet00);
  tolua_function(tolua_S,"getArmGradeDef",tolua_GameEngineTolua_getArmGradeDef00);
  tolua_function(tolua_S,"getArmHideAttrDef",tolua_GameEngineTolua_getArmHideAttrDef00);
  tolua_function(tolua_S,"getArmStarDef",tolua_GameEngineTolua_getArmStarDef00);
  tolua_function(tolua_S,"getArmAddAttrDef",tolua_GameEngineTolua_getArmAddAttrDef00);
  tolua_function(tolua_S,"getAddAttrBaseDef",tolua_GameEngineTolua_getAddAttrBaseDef00);
  tolua_function(tolua_S,"getFixedAddAttr",tolua_GameEngineTolua_getFixedAddAttr00);
  tolua_function(tolua_S,"getNewAddAttrDef",tolua_GameEngineTolua_getNewAddAttrDef00);
  tolua_function(tolua_S,"getAddAttrRandDef",tolua_GameEngineTolua_getAddAttrRandDef00);
  tolua_function(tolua_S,"getItemResultDesc",tolua_GameEngineTolua_getItemResultDesc00);
  tolua_function(tolua_S,"getBaoXiangDef",tolua_GameEngineTolua_getBaoXiangDef00);
  tolua_function(tolua_S,"getItemColor",tolua_GameEngineTolua_getItemColor00);
  tolua_function(tolua_S,"getArmExtraDur",tolua_GameEngineTolua_getArmExtraDur00);
  tolua_function(tolua_S,"getDisplayName",tolua_GameEngineTolua_getDisplayName00);
  tolua_function(tolua_S,"itemid_num",tolua_GameEngineTolua_itemid_num00);
  tolua_function(tolua_S,"isSameWid",tolua_GameEngineTolua_isSameWid00);
  tolua_function(tolua_S,"isItemCanUsed",tolua_GameEngineTolua_isItemCanUsed00);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Item","Item","",tolua_collect_Item);
  #else
  tolua_cclass(tolua_S,"Item","Item","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Item");
   tolua_function(tolua_S,"getDisplayIndex",tolua_GameEngineTolua_Item_getDisplayIndex00);
   tolua_function(tolua_S,"setItemDate",tolua_GameEngineTolua_Item_setItemDate00);
   tolua_function(tolua_S,"getItemDef",tolua_GameEngineTolua_Item_getItemDef00);
   tolua_function(tolua_S,"getItemId",tolua_GameEngineTolua_Item_getItemId00);
   tolua_function(tolua_S,"getItemWId",tolua_GameEngineTolua_Item_getItemWId00);
   tolua_function(tolua_S,"canUsed",tolua_GameEngineTolua_Item_canUsed00);
   tolua_function(tolua_S,"canExchange",tolua_GameEngineTolua_Item_canExchange00);
   tolua_function(tolua_S,"getGridIdx",tolua_GameEngineTolua_Item_getGridIdx00);
   tolua_function(tolua_S,"getListType",tolua_GameEngineTolua_Item_getListType00);
   tolua_function(tolua_S,"getItemType",tolua_GameEngineTolua_Item_getItemType00);
   tolua_function(tolua_S,"getItemSubType",tolua_GameEngineTolua_Item_getItemSubType00);
   tolua_function(tolua_S,"getNum",tolua_GameEngineTolua_Item_getNum00);
   tolua_function(tolua_S,"setNum",tolua_GameEngineTolua_Item_setNum00);
   tolua_function(tolua_S,"getItemDur",tolua_GameEngineTolua_Item_getItemDur00);
   tolua_function(tolua_S,"getItemMaxDur",tolua_GameEngineTolua_Item_getItemMaxDur00);
   tolua_function(tolua_S,"getRepairPrice",tolua_GameEngineTolua_Item_getRepairPrice00);
   tolua_function(tolua_S,"getSellPrice",tolua_GameEngineTolua_Item_getSellPrice00);
   tolua_function(tolua_S,"getStart",tolua_GameEngineTolua_Item_getStart00);
   tolua_function(tolua_S,"getArmPefectStarNum",tolua_GameEngineTolua_Item_getArmPefectStarNum00);
   tolua_function(tolua_S,"getGemStart",tolua_GameEngineTolua_Item_getGemStart00);
   tolua_function(tolua_S,"getGemPower",tolua_GameEngineTolua_Item_getGemPower00);
   tolua_function(tolua_S,"getStallSellPrice",tolua_GameEngineTolua_Item_getStallSellPrice00);
   tolua_function(tolua_S,"getStallGridWID",tolua_GameEngineTolua_Item_getStallGridWID00);
   tolua_function(tolua_S,"getFight",tolua_GameEngineTolua_Item_getFight00);
   tolua_function(tolua_S,"getHoleNum",tolua_GameEngineTolua_Item_getHoleNum00);
   tolua_function(tolua_S,"getHoleGemResultIndex",tolua_GameEngineTolua_Item_getHoleGemResultIndex00);
   tolua_function(tolua_S,"getHoleGemAttrIdx",tolua_GameEngineTolua_Item_getHoleGemAttrIdx00);
   tolua_function(tolua_S,"getHoleGemId",tolua_GameEngineTolua_Item_getHoleGemId00);
   tolua_function(tolua_S,"getHoleGemColor",tolua_GameEngineTolua_Item_getHoleGemColor00);
   tolua_function(tolua_S,"getHoleGemStar",tolua_GameEngineTolua_Item_getHoleGemStar00);
   tolua_function(tolua_S,"getHoleGemPower",tolua_GameEngineTolua_Item_getHoleGemPower00);
   tolua_function(tolua_S,"getHoleGemMul",tolua_GameEngineTolua_Item_getHoleGemMul00);
   tolua_function(tolua_S,"getItemSurplus",tolua_GameEngineTolua_Item_getItemSurplus00);
   tolua_function(tolua_S,"getStrengthenCount",tolua_GameEngineTolua_Item_getStrengthenCount00);
   tolua_function(tolua_S,"needAmm",tolua_GameEngineTolua_Item_needAmm00);
   tolua_function(tolua_S,"isAmm",tolua_GameEngineTolua_Item_isAmm00);
   tolua_function(tolua_S,"isExpendable",tolua_GameEngineTolua_Item_isExpendable00);
   tolua_function(tolua_S,"isPetUsed",tolua_GameEngineTolua_Item_isPetUsed00);
   tolua_function(tolua_S,"isRing",tolua_GameEngineTolua_Item_isRing00);
   tolua_function(tolua_S,"isAmuleft",tolua_GameEngineTolua_Item_isAmuleft00);
   tolua_function(tolua_S,"isFashionSuit",tolua_GameEngineTolua_Item_isFashionSuit00);
   tolua_function(tolua_S,"isItemBind",tolua_GameEngineTolua_Item_isItemBind00);
   tolua_function(tolua_S,"isArmFengYin",tolua_GameEngineTolua_Item_isArmFengYin00);
   tolua_function(tolua_S,"isArmIdentity",tolua_GameEngineTolua_Item_isArmIdentity00);
   tolua_function(tolua_S,"getUnFengYinArmMoney",tolua_GameEngineTolua_Item_getUnFengYinArmMoney00);
   tolua_function(tolua_S,"reSetDur",tolua_GameEngineTolua_Item_reSetDur00);
   tolua_function(tolua_S,"updateItemData",tolua_GameEngineTolua_Item_updateItemData00);
   tolua_function(tolua_S,"getArmStarAddValue",tolua_GameEngineTolua_Item_getArmStarAddValue00);
   tolua_function(tolua_S,"getArmAddAttrNum",tolua_GameEngineTolua_Item_getArmAddAttrNum00);
   tolua_function(tolua_S,"getArmAddAttr",tolua_GameEngineTolua_Item_getArmAddAttr00);
   tolua_function(tolua_S,"releaseItem",tolua_GameEngineTolua_Item_releaseItem00);
   tolua_function(tolua_S,"getDisplayName",tolua_GameEngineTolua_Item_getDisplayName00);
   tolua_function(tolua_S,"getItemUsedMapId",tolua_GameEngineTolua_Item_getItemUsedMapId00);
   tolua_function(tolua_S,"getItemValidEndTime",tolua_GameEngineTolua_Item_getItemValidEndTime00);
   tolua_function(tolua_S,"isExtend",tolua_GameEngineTolua_Item_isExtend00);
   tolua_function(tolua_S,"isFairyKeyIn",tolua_GameEngineTolua_Item_isFairyKeyIn00);
   tolua_function(tolua_S,"getExtendedFromDefID",tolua_GameEngineTolua_Item_getExtendedFromDefID00);
   tolua_function(tolua_S,"getExtendedResult",tolua_GameEngineTolua_Item_getExtendedResult00);
   tolua_function(tolua_S,"isIdentity",tolua_GameEngineTolua_Item_isIdentity00);
   tolua_function(tolua_S,"getIdentityLevel",tolua_GameEngineTolua_Item_getIdentityLevel00);
   tolua_function(tolua_S,"isBackLevelUp",tolua_GameEngineTolua_Item_isBackLevelUp00);
   tolua_function(tolua_S,"isBackChange",tolua_GameEngineTolua_Item_isBackChange00);
   tolua_function(tolua_S,"canRepair",tolua_GameEngineTolua_Item_canRepair00);
   tolua_function(tolua_S,"isArmItem",tolua_GameEngineTolua_Item_isArmItem00);
   tolua_function(tolua_S,"getAddAttrInst",tolua_GameEngineTolua_Item_getAddAttrInst00);
   tolua_function(tolua_S,"getKeyEndTime",tolua_GameEngineTolua_Item_getKeyEndTime00);
   tolua_function(tolua_S,"isValidEnd",tolua_GameEngineTolua_Item_isValidEnd00);
   tolua_function(tolua_S,"getValidLeftTime",tolua_GameEngineTolua_Item_getValidLeftTime00);
   tolua_function(tolua_S,"setValidLeftTime",tolua_GameEngineTolua_Item_setValidLeftTime00);
   tolua_function(tolua_S,"getArmAddStarValIdx",tolua_GameEngineTolua_Item_getArmAddStarValIdx00);
   tolua_function(tolua_S,"getItemInstVal1",tolua_GameEngineTolua_Item_getItemInstVal100);
   tolua_function(tolua_S,"getItemInstVal2",tolua_GameEngineTolua_Item_getItemInstVal200);
   tolua_function(tolua_S,"getItemInstVal3",tolua_GameEngineTolua_Item_getItemInstVal300);
   tolua_function(tolua_S,"getItemFlag",tolua_GameEngineTolua_Item_getItemFlag00);
   tolua_function(tolua_S,"getItemMapNum",tolua_GameEngineTolua_Item_getItemMapNum00);
   tolua_function(tolua_S,"getItemMapInfo",tolua_GameEngineTolua_Item_getItemMapInfo00);
   tolua_function(tolua_S,"getItemMulVal",tolua_GameEngineTolua_Item_getItemMulVal00);
   tolua_function(tolua_S,"getArmWashAddAttrNum",tolua_GameEngineTolua_Item_getArmWashAddAttrNum00);
   tolua_function(tolua_S,"getArmWashAddAttrInst",tolua_GameEngineTolua_Item_getArmWashAddAttrInst00);
   tolua_function(tolua_S,"IsAttrFengYin",tolua_GameEngineTolua_Item_IsAttrFengYin00);
   tolua_function(tolua_S,"getLostTotemState",tolua_GameEngineTolua_Item_getLostTotemState00);
   tolua_function(tolua_S,"getStepLv",tolua_GameEngineTolua_Item_getStepLv00);
   tolua_function(tolua_S,"getStepUse",tolua_GameEngineTolua_Item_getStepUse00);
   tolua_function(tolua_S,"getArmSkillMax",tolua_GameEngineTolua_Item_getArmSkillMax00);
   tolua_function(tolua_S,"getArmSkillNum",tolua_GameEngineTolua_Item_getArmSkillNum00);
   tolua_function(tolua_S,"getArmSkillOne",tolua_GameEngineTolua_Item_getArmSkillOne00);
   tolua_function(tolua_S,"getUnRealBackID",tolua_GameEngineTolua_Item_getUnRealBackID00);
   tolua_function(tolua_S,"getUnRealBackTmEnd",tolua_GameEngineTolua_Item_getUnRealBackTmEnd00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"MAX_OTHER_MONEY_USE_CLIENT",MAX_OTHER_MONEY_USE_CLIENT);
  tolua_cclass(tolua_S,"tagItemData","tagItemData","",NULL);
  tolua_beginmodule(tolua_S,"tagItemData");
   tolua_variable(tolua_S,"m_Item",tolua_get_tagItemData_m_Item,tolua_set_tagItemData_m_Item);
   tolua_variable(tolua_S,"m_Arm",tolua_get_tagItemData_m_Arm,tolua_set_tagItemData_m_Arm);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagAddAttrInst_ToLua","tagAddAttrInst_ToLua","",tolua_collect_tagAddAttrInst_ToLua);
  #else
  tolua_cclass(tolua_S,"tagAddAttrInst_ToLua","tagAddAttrInst_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagAddAttrInst_ToLua");
   tolua_variable(tolua_S,"AddAttrID",tolua_get_tagAddAttrInst_ToLua_unsigned_AddAttrID,tolua_set_tagAddAttrInst_ToLua_unsigned_AddAttrID);
   tolua_variable(tolua_S,"Val",tolua_get_tagAddAttrInst_ToLua_unsigned_Val,tolua_set_tagAddAttrInst_ToLua_unsigned_Val);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagExtendedResult_ToLua","tagExtendedResult_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagExtendedResult_ToLua");
   tolua_variable(tolua_S,"ResultID",tolua_get_tagExtendedResult_ToLua_unsigned_ResultID,tolua_set_tagExtendedResult_ToLua_unsigned_ResultID);
   tolua_variable(tolua_S,"Res1",tolua_get_tagExtendedResult_ToLua_Res1,tolua_set_tagExtendedResult_ToLua_Res1);
   tolua_variable(tolua_S,"ResultVal1",tolua_get_tagExtendedResult_ToLua_ResultVal1,tolua_set_tagExtendedResult_ToLua_ResultVal1);
   tolua_variable(tolua_S,"Res2",tolua_get_tagExtendedResult_ToLua_Res2,tolua_set_tagExtendedResult_ToLua_Res2);
   tolua_variable(tolua_S,"ResultVal2",tolua_get_tagExtendedResult_ToLua_ResultVal2,tolua_set_tagExtendedResult_ToLua_ResultVal2);
   tolua_variable(tolua_S,"ResultVal3",tolua_get_tagExtendedResult_ToLua_ResultVal3,tolua_set_tagExtendedResult_ToLua_ResultVal3);
   tolua_variable(tolua_S,"ResultVal4",tolua_get_tagExtendedResult_ToLua_ResultVal4,tolua_set_tagExtendedResult_ToLua_ResultVal4);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagItemMapInfo_ToLua","tagItemMapInfo_ToLua","",tolua_collect_tagItemMapInfo_ToLua);
  #else
  tolua_cclass(tolua_S,"tagItemMapInfo_ToLua","tagItemMapInfo_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagItemMapInfo_ToLua");
   tolua_variable(tolua_S,"MapID",tolua_get_tagItemMapInfo_ToLua_MapID,tolua_set_tagItemMapInfo_ToLua_MapID);
   tolua_variable(tolua_S,"X",tolua_get_tagItemMapInfo_ToLua_X,tolua_set_tagItemMapInfo_ToLua_X);
   tolua_variable(tolua_S,"Y",tolua_get_tagItemMapInfo_ToLua_Y,tolua_set_tagItemMapInfo_ToLua_Y);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagRoleItem_ToLua","tagRoleItem_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagRoleItem_ToLua");
   tolua_variable(tolua_S,"DefID",tolua_get_tagRoleItem_ToLua_DefID,tolua_set_tagRoleItem_ToLua_DefID);
   tolua_variable(tolua_S,"DefPos",tolua_get_tagRoleItem_ToLua_DefPos,tolua_set_tagRoleItem_ToLua_DefPos);
   tolua_variable(tolua_S,"Num",tolua_get_tagRoleItem_ToLua_unsigned_Num,tolua_set_tagRoleItem_ToLua_unsigned_Num);
   tolua_variable(tolua_S,"GridIdx",tolua_get_tagRoleItem_ToLua_GridIdx,tolua_set_tagRoleItem_ToLua_GridIdx);
   tolua_variable(tolua_S,"InstFlag",tolua_get_tagRoleItem_ToLua_InstFlag,tolua_set_tagRoleItem_ToLua_InstFlag);
   tolua_variable(tolua_S,"ValidEnd",tolua_get_tagRoleItem_ToLua_ValidEnd,tolua_set_tagRoleItem_ToLua_ValidEnd);
   tolua_variable(tolua_S,"WID",tolua_get_tagRoleItem_ToLua_WID,tolua_set_tagRoleItem_ToLua_WID);
   tolua_variable(tolua_S,"Flag",tolua_get_tagRoleItem_ToLua_Flag,tolua_set_tagRoleItem_ToLua_Flag);
   tolua_variable(tolua_S,"InstVal1",tolua_get_tagRoleItem_ToLua_InstVal1,tolua_set_tagRoleItem_ToLua_InstVal1);
   tolua_variable(tolua_S,"InstVal2",tolua_get_tagRoleItem_ToLua_InstVal2,tolua_set_tagRoleItem_ToLua_InstVal2);
   tolua_variable(tolua_S,"InstVal3",tolua_get_tagRoleItem_ToLua_InstVal3,tolua_set_tagRoleItem_ToLua_InstVal3);
   tolua_variable(tolua_S,"ItemMapNum",tolua_get_tagRoleItem_ToLua_ItemMapNum,tolua_set_tagRoleItem_ToLua_ItemMapNum);
   tolua_array(tolua_S,"ItemMapInfo",tolua_get_GameEngineTolua_tagRoleItem_ToLua_ItemMapInfo,tolua_set_GameEngineTolua_tagRoleItem_ToLua_ItemMapInfo);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagBaseAttrInfo_ToLua","tagBaseAttrInfo_ToLua","",tolua_collect_tagBaseAttrInfo_ToLua);
  #else
  tolua_cclass(tolua_S,"tagBaseAttrInfo_ToLua","tagBaseAttrInfo_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagBaseAttrInfo_ToLua");
   tolua_variable(tolua_S,"ResultID",tolua_get_tagBaseAttrInfo_ToLua_unsigned_ResultID,tolua_set_tagBaseAttrInfo_ToLua_unsigned_ResultID);
   tolua_variable(tolua_S,"Mul",tolua_get_tagBaseAttrInfo_ToLua_Mul,tolua_set_tagBaseAttrInfo_ToLua_Mul);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagArmStarInfo_ToLua","tagArmStarInfo_ToLua","",tolua_collect_tagArmStarInfo_ToLua);
  #else
  tolua_cclass(tolua_S,"tagArmStarInfo_ToLua","tagArmStarInfo_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagArmStarInfo_ToLua");
   tolua_variable(tolua_S,"ValIdx",tolua_get_tagArmStarInfo_ToLua_unsigned_ValIdx,tolua_set_tagArmStarInfo_ToLua_unsigned_ValIdx);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagArmSkillOne_ToLua","tagArmSkillOne_ToLua","",tolua_collect_tagArmSkillOne_ToLua);
  #else
  tolua_cclass(tolua_S,"tagArmSkillOne_ToLua","tagArmSkillOne_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagArmSkillOne_ToLua");
   tolua_variable(tolua_S,"Idx",tolua_get_tagArmSkillOne_ToLua_Idx,tolua_set_tagArmSkillOne_ToLua_Idx);
   tolua_variable(tolua_S,"Lock",tolua_get_tagArmSkillOne_ToLua_unsigned_Lock,tolua_set_tagArmSkillOne_ToLua_unsigned_Lock);
   tolua_variable(tolua_S,"ID",tolua_get_tagArmSkillOne_ToLua_ID,tolua_set_tagArmSkillOne_ToLua_ID);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagArmSkillData_ToLua","tagArmSkillData_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagArmSkillData_ToLua");
   tolua_variable(tolua_S,"Max",tolua_get_tagArmSkillData_ToLua_unsigned_Max,tolua_set_tagArmSkillData_ToLua_unsigned_Max);
   tolua_variable(tolua_S,"Num",tolua_get_tagArmSkillData_ToLua_unsigned_Num,tolua_set_tagArmSkillData_ToLua_unsigned_Num);
   tolua_array(tolua_S,"One",tolua_get_GameEngineTolua_tagArmSkillData_ToLua_One,tolua_set_GameEngineTolua_tagArmSkillData_ToLua_One);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagRoleArm_ToLua","tagRoleArm_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagRoleArm_ToLua");
   tolua_variable(tolua_S,"DefID",tolua_get_tagRoleArm_ToLua_DefID,tolua_set_tagRoleArm_ToLua_DefID);
   tolua_variable(tolua_S,"DefPos",tolua_get_tagRoleArm_ToLua_DefPos,tolua_set_tagRoleArm_ToLua_DefPos);
   tolua_variable(tolua_S,"Num",tolua_get_tagRoleArm_ToLua_unsigned_Num,tolua_set_tagRoleArm_ToLua_unsigned_Num);
   tolua_variable(tolua_S,"GridIdx",tolua_get_tagRoleArm_ToLua_GridIdx,tolua_set_tagRoleArm_ToLua_GridIdx);
   tolua_variable(tolua_S,"InstFlag",tolua_get_tagRoleArm_ToLua_InstFlag,tolua_set_tagRoleArm_ToLua_InstFlag);
   tolua_variable(tolua_S,"ValidEnd",tolua_get_tagRoleArm_ToLua_ValidEnd,tolua_set_tagRoleArm_ToLua_ValidEnd);
   tolua_variable(tolua_S,"WID",tolua_get_tagRoleArm_ToLua_WID,tolua_set_tagRoleArm_ToLua_WID);
   tolua_variable(tolua_S,"Dur",tolua_get_tagRoleArm_ToLua_unsigned_Dur,tolua_set_tagRoleArm_ToLua_unsigned_Dur);
   tolua_variable(tolua_S,"StarLv",tolua_get_tagRoleArm_ToLua_unsigned_StarLv,tolua_set_tagRoleArm_ToLua_unsigned_StarLv);
   tolua_variable(tolua_S,"FightLv",tolua_get_tagRoleArm_ToLua_unsigned_FightLv,tolua_set_tagRoleArm_ToLua_unsigned_FightLv);
   tolua_variable(tolua_S,"HoleNum",tolua_get_tagRoleArm_ToLua_unsigned_HoleNum,tolua_set_tagRoleArm_ToLua_unsigned_HoleNum);
   tolua_array(tolua_S,"HoleGem",tolua_get_GameEngineTolua_tagRoleArm_ToLua_HoleGem,tolua_set_GameEngineTolua_tagRoleArm_ToLua_HoleGem);
   tolua_variable(tolua_S,"AddAttrNum",tolua_get_tagRoleArm_ToLua_unsigned_AddAttrNum,tolua_set_tagRoleArm_ToLua_unsigned_AddAttrNum);
   tolua_array(tolua_S,"AddAttr",tolua_get_GameEngineTolua_tagRoleArm_ToLua_AddAttr,tolua_set_GameEngineTolua_tagRoleArm_ToLua_AddAttr);
   tolua_variable(tolua_S,"ExtendedResult",tolua_get_tagRoleArm_ToLua_ExtendedResult,tolua_set_tagRoleArm_ToLua_ExtendedResult);
   tolua_variable(tolua_S,"ExtendedFromDefID",tolua_get_tagRoleArm_ToLua_ExtendedFromDefID,tolua_set_tagRoleArm_ToLua_ExtendedFromDefID);
   tolua_variable(tolua_S,"KeYinAddAttr",tolua_get_tagRoleArm_ToLua_KeYinAddAttr,tolua_set_tagRoleArm_ToLua_KeYinAddAttr);
   tolua_variable(tolua_S,"KeYinEnd",tolua_get_tagRoleArm_ToLua_KeYinEnd,tolua_set_tagRoleArm_ToLua_KeYinEnd);
   tolua_variable(tolua_S,"FengYinID",tolua_get_tagRoleArm_ToLua_FengYinID,tolua_set_tagRoleArm_ToLua_FengYinID);
   tolua_variable(tolua_S,"BaseAttrNum",tolua_get_tagRoleArm_ToLua_unsigned_BaseAttrNum,tolua_set_tagRoleArm_ToLua_unsigned_BaseAttrNum);
   tolua_array(tolua_S,"BaseAttr",tolua_get_GameEngineTolua_tagRoleArm_ToLua_BaseAttr,tolua_set_GameEngineTolua_tagRoleArm_ToLua_BaseAttr);
   tolua_array(tolua_S,"StarInfo",tolua_get_GameEngineTolua_tagRoleArm_ToLua_StarInfo,tolua_set_GameEngineTolua_tagRoleArm_ToLua_StarInfo);
   tolua_variable(tolua_S,"WashAttrNum",tolua_get_tagRoleArm_ToLua_unsigned_WashAttrNum,tolua_set_tagRoleArm_ToLua_unsigned_WashAttrNum);
   tolua_array(tolua_S,"WashAddAttr",tolua_get_GameEngineTolua_tagRoleArm_ToLua_WashAddAttr,tolua_set_GameEngineTolua_tagRoleArm_ToLua_WashAddAttr);
   tolua_variable(tolua_S,"StrengthenCount",tolua_get_tagRoleArm_ToLua_StrengthenCount,tolua_set_tagRoleArm_ToLua_StrengthenCount);
   tolua_variable(tolua_S,"FengyinFlag",tolua_get_tagRoleArm_ToLua_unsigned_FengyinFlag,tolua_set_tagRoleArm_ToLua_unsigned_FengyinFlag);
   tolua_variable(tolua_S,"WashNum",tolua_get_tagRoleArm_ToLua_unsigned_WashNum,tolua_set_tagRoleArm_ToLua_unsigned_WashNum);
   tolua_variable(tolua_S,"Step",tolua_get_tagRoleArm_ToLua_unsigned_Step,tolua_set_tagRoleArm_ToLua_unsigned_Step);
   tolua_variable(tolua_S,"ArmSkill",tolua_get_tagRoleArm_ToLua_ArmSkill,tolua_set_tagRoleArm_ToLua_ArmSkill);
   tolua_variable(tolua_S,"StepUse",tolua_get_tagRoleArm_ToLua_unsigned_StepUse,tolua_set_tagRoleArm_ToLua_unsigned_StepUse);
   tolua_variable(tolua_S,"UnrealBackID",tolua_get_tagRoleArm_ToLua_UnrealBackID,tolua_set_tagRoleArm_ToLua_UnrealBackID);
   tolua_variable(tolua_S,"UnrealBackTmEnd",tolua_get_tagRoleArm_ToLua_UnrealBackTmEnd,tolua_set_tagRoleArm_ToLua_UnrealBackTmEnd);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagWearPre_ToLua","tagWearPre_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagWearPre_ToLua");
   tolua_variable(tolua_S,"RoleLevelMin",tolua_get_tagWearPre_ToLua_unsigned_RoleLevelMin,tolua_set_tagWearPre_ToLua_unsigned_RoleLevelMin);
   tolua_variable(tolua_S,"RoleLevelMax",tolua_get_tagWearPre_ToLua_unsigned_RoleLevelMax,tolua_set_tagWearPre_ToLua_unsigned_RoleLevelMax);
   tolua_variable(tolua_S,"Career",tolua_get_tagWearPre_ToLua_unsigned_Career,tolua_set_tagWearPre_ToLua_unsigned_Career);
   tolua_variable(tolua_S,"DiathesisID",tolua_get_tagWearPre_ToLua_unsigned_DiathesisID,tolua_set_tagWearPre_ToLua_unsigned_DiathesisID);
   tolua_variable(tolua_S,"Gender",tolua_get_tagWearPre_ToLua_unsigned_Gender,tolua_set_tagWearPre_ToLua_unsigned_Gender);
   tolua_variable(tolua_S,"GemOpenHoleMoney",tolua_get_tagWearPre_ToLua_GemOpenHoleMoney,tolua_set_tagWearPre_ToLua_GemOpenHoleMoney);
   tolua_variable(tolua_S,"GemInlayMoney",tolua_get_tagWearPre_ToLua_GemInlayMoney,tolua_set_tagWearPre_ToLua_GemInlayMoney);
   tolua_variable(tolua_S,"PKVal",tolua_get_tagWearPre_ToLua_PKVal,tolua_set_tagWearPre_ToLua_PKVal);
   tolua_variable(tolua_S,"ClanLimit",tolua_get_tagWearPre_ToLua_ClanLimit,tolua_set_tagWearPre_ToLua_ClanLimit);
   tolua_variable(tolua_S,"GeniusLimit",tolua_get_tagWearPre_ToLua_unsigned_GeniusLimit,tolua_set_tagWearPre_ToLua_unsigned_GeniusLimit);
   tolua_variable(tolua_S,"SchoolValLimit",tolua_get_tagWearPre_ToLua_SchoolValLimit,tolua_set_tagWearPre_ToLua_SchoolValLimit);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagResult_ToLua","tagResult_ToLua","",tolua_collect_tagResult_ToLua);
  #else
  tolua_cclass(tolua_S,"tagResult_ToLua","tagResult_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagResult_ToLua");
   tolua_variable(tolua_S,"ResultID",tolua_get_tagResult_ToLua_unsigned_ResultID,tolua_set_tagResult_ToLua_unsigned_ResultID);
   tolua_variable(tolua_S,"ResultVal1",tolua_get_tagResult_ToLua_ResultVal1,tolua_set_tagResult_ToLua_ResultVal1);
   tolua_variable(tolua_S,"ResultVal2",tolua_get_tagResult_ToLua_ResultVal2,tolua_set_tagResult_ToLua_ResultVal2);
   tolua_variable(tolua_S,"ResultVal3",tolua_get_tagResult_ToLua_ResultVal3,tolua_set_tagResult_ToLua_ResultVal3);
   tolua_variable(tolua_S,"ResultVal4",tolua_get_tagResult_ToLua_ResultVal4,tolua_set_tagResult_ToLua_ResultVal4);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagArmDur_ToLua","tagArmDur_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagArmDur_ToLua");
   tolua_variable(tolua_S,"MaxDur",tolua_get_tagArmDur_ToLua_unsigned_MaxDur,tolua_set_tagArmDur_ToLua_unsigned_MaxDur);
   tolua_variable(tolua_S,"FightStatusDur",tolua_get_tagArmDur_ToLua_unsigned_FightStatusDur,tolua_set_tagArmDur_ToLua_unsigned_FightStatusDur);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagIdentifiableItem_ToLua","tagIdentifiableItem_ToLua","",tolua_collect_tagIdentifiableItem_ToLua);
  #else
  tolua_cclass(tolua_S,"tagIdentifiableItem_ToLua","tagIdentifiableItem_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagIdentifiableItem_ToLua");
   tolua_variable(tolua_S,"ItemID",tolua_get_tagIdentifiableItem_ToLua_unsigned_ItemID,tolua_set_tagIdentifiableItem_ToLua_unsigned_ItemID);
   tolua_variable(tolua_S,"ItemRate",tolua_get_tagIdentifiableItem_ToLua_unsigned_ItemRate,tolua_set_tagIdentifiableItem_ToLua_unsigned_ItemRate);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagAddAttrList_ToLua","tagAddAttrList_ToLua","",tolua_collect_tagAddAttrList_ToLua);
  #else
  tolua_cclass(tolua_S,"tagAddAttrList_ToLua","tagAddAttrList_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagAddAttrList_ToLua");
   tolua_variable(tolua_S,"ID",tolua_get_tagAddAttrList_ToLua_unsigned_ID,tolua_set_tagAddAttrList_ToLua_unsigned_ID);
   tolua_variable(tolua_S,"Idx",tolua_get_tagAddAttrList_ToLua_unsigned_Idx,tolua_set_tagAddAttrList_ToLua_unsigned_Idx);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagRespactEntry_ToLua","tagRespactEntry_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagRespactEntry_ToLua");
   tolua_variable(tolua_S,"ID",tolua_get_tagRespactEntry_ToLua_unsigned_ID,tolua_set_tagRespactEntry_ToLua_unsigned_ID);
   tolua_variable(tolua_S,"Value",tolua_get_tagRespactEntry_ToLua_unsigned_Value,tolua_set_tagRespactEntry_ToLua_unsigned_Value);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagRndHole_ToLua","tagRndHole_ToLua","",tolua_collect_tagRndHole_ToLua);
  #else
  tolua_cclass(tolua_S,"tagRndHole_ToLua","tagRndHole_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagRndHole_ToLua");
   tolua_variable(tolua_S,"RndRed",tolua_get_tagRndHole_ToLua_unsigned_RndRed,tolua_set_tagRndHole_ToLua_unsigned_RndRed);
   tolua_variable(tolua_S,"RndBlue",tolua_get_tagRndHole_ToLua_unsigned_RndBlue,tolua_set_tagRndHole_ToLua_unsigned_RndBlue);
   tolua_variable(tolua_S,"RndGreen",tolua_get_tagRndHole_ToLua_unsigned_RndGreen,tolua_set_tagRndHole_ToLua_unsigned_RndGreen);
   tolua_variable(tolua_S,"RndColor",tolua_get_tagRndHole_ToLua_unsigned_RndColor,tolua_set_tagRndHole_ToLua_unsigned_RndColor);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagItemTmp_ToLua","tagItemTmp_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagItemTmp_ToLua");
   tolua_variable(tolua_S,"Type",tolua_get_tagItemTmp_ToLua_unsigned_Type,tolua_set_tagItemTmp_ToLua_unsigned_Type);
   tolua_variable(tolua_S,"SkillLevel_1",tolua_get_tagItemTmp_ToLua_unsigned_SkillLevel_1,tolua_set_tagItemTmp_ToLua_unsigned_SkillLevel_1);
   tolua_variable(tolua_S,"SkillID_1",tolua_get_tagItemTmp_ToLua_unsigned_SkillID_1,tolua_set_tagItemTmp_ToLua_unsigned_SkillID_1);
   tolua_variable(tolua_S,"SkillLevel_2",tolua_get_tagItemTmp_ToLua_unsigned_SkillLevel_2,tolua_set_tagItemTmp_ToLua_unsigned_SkillLevel_2);
   tolua_variable(tolua_S,"SkillID_2",tolua_get_tagItemTmp_ToLua_unsigned_SkillID_2,tolua_set_tagItemTmp_ToLua_unsigned_SkillID_2);
   tolua_variable(tolua_S,"SkillDefaultCollectNum",tolua_get_tagItemTmp_ToLua_unsigned_SkillDefaultCollectNum,tolua_set_tagItemTmp_ToLua_unsigned_SkillDefaultCollectNum);
   tolua_variable(tolua_S,"SpeedMul",tolua_get_tagItemTmp_ToLua_SpeedMul,tolua_set_tagItemTmp_ToLua_SpeedMul);
   tolua_variable(tolua_S,"SpeedAdd",tolua_get_tagItemTmp_ToLua_SpeedAdd,tolua_set_tagItemTmp_ToLua_SpeedAdd);
   tolua_variable(tolua_S,"RefreshTime",tolua_get_tagItemTmp_ToLua_unsigned_RefreshTime,tolua_set_tagItemTmp_ToLua_unsigned_RefreshTime);
   tolua_variable(tolua_S,"StayTime",tolua_get_tagItemTmp_ToLua_unsigned_StayTime,tolua_set_tagItemTmp_ToLua_unsigned_StayTime);
   tolua_variable(tolua_S,"MachineEnerge",tolua_get_tagItemTmp_ToLua_unsigned_MachineEnerge,tolua_set_tagItemTmp_ToLua_unsigned_MachineEnerge);
   tolua_variable(tolua_S,"EnergeDec",tolua_get_tagItemTmp_ToLua_unsigned_EnergeDec,tolua_set_tagItemTmp_ToLua_unsigned_EnergeDec);
   tolua_variable(tolua_S,"HurtDefMul",tolua_get_tagItemTmp_ToLua_HurtDefMul,tolua_set_tagItemTmp_ToLua_HurtDefMul);
   tolua_variable(tolua_S,"HurtDefAdd",tolua_get_tagItemTmp_ToLua_HurtDefAdd,tolua_set_tagItemTmp_ToLua_HurtDefAdd);
   tolua_variable(tolua_S,"FleeAdd",tolua_get_tagItemTmp_ToLua_FleeAdd,tolua_set_tagItemTmp_ToLua_FleeAdd);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagMoneyUse_ToLua","tagMoneyUse_ToLua","",tolua_collect_tagMoneyUse_ToLua);
  #else
  tolua_cclass(tolua_S,"tagMoneyUse_ToLua","tagMoneyUse_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagMoneyUse_ToLua");
   tolua_variable(tolua_S,"ID",tolua_get_tagMoneyUse_ToLua_ID,tolua_set_tagMoneyUse_ToLua_ID);
   tolua_variable(tolua_S,"Val",tolua_get_tagMoneyUse_ToLua_Val,tolua_set_tagMoneyUse_ToLua_Val);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagItemDef_ToLua","tagItemDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagItemDef_ToLua");
   tolua_variable(tolua_S,"ItemID",tolua_get_tagItemDef_ToLua_unsigned_ItemID,tolua_set_tagItemDef_ToLua_unsigned_ItemID);
   tolua_variable(tolua_S,"Name",tolua_get_tagItemDef_ToLua_Name,tolua_set_tagItemDef_ToLua_Name);
   tolua_variable(tolua_S,"IconID",tolua_get_tagItemDef_ToLua_IconID,tolua_set_tagItemDef_ToLua_IconID);
   tolua_variable(tolua_S,"ModeID",tolua_get_tagItemDef_ToLua_ModeID,tolua_set_tagItemDef_ToLua_ModeID);
   tolua_variable(tolua_S,"ExchgItemID",tolua_get_tagItemDef_ToLua_ExchgItemID,tolua_set_tagItemDef_ToLua_ExchgItemID);
   tolua_variable(tolua_S,"SellPrice",tolua_get_tagItemDef_ToLua_unsigned_SellPrice,tolua_set_tagItemDef_ToLua_unsigned_SellPrice);
   tolua_variable(tolua_S,"BuyPrice",tolua_get_tagItemDef_ToLua_unsigned_BuyPrice,tolua_set_tagItemDef_ToLua_unsigned_BuyPrice);
   tolua_variable(tolua_S,"MoneyType",tolua_get_tagItemDef_ToLua_unsigned_MoneyType,tolua_set_tagItemDef_ToLua_unsigned_MoneyType);
   tolua_variable(tolua_S,"ItemType",tolua_get_tagItemDef_ToLua_unsigned_ItemType,tolua_set_tagItemDef_ToLua_unsigned_ItemType);
   tolua_variable(tolua_S,"MaxPile",tolua_get_tagItemDef_ToLua_unsigned_MaxPile,tolua_set_tagItemDef_ToLua_unsigned_MaxPile);
   tolua_array(tolua_S,"Result",tolua_get_GameEngineTolua_tagItemDef_ToLua_Result,tolua_set_GameEngineTolua_tagItemDef_ToLua_Result);
   tolua_variable(tolua_S,"ArmDur",tolua_get_tagItemDef_ToLua_ArmDur,tolua_set_tagItemDef_ToLua_ArmDur);
   tolua_variable(tolua_S,"ArmFight",tolua_get_tagItemDef_ToLua_unsigned_ArmFight,tolua_set_tagItemDef_ToLua_unsigned_ArmFight);
   tolua_variable(tolua_S,"SuitSetID",tolua_get_tagItemDef_ToLua_unsigned_SuitSetID,tolua_set_tagItemDef_ToLua_unsigned_SuitSetID);
   tolua_variable(tolua_S,"ValidTime",tolua_get_tagItemDef_ToLua_unsigned_ValidTime,tolua_set_tagItemDef_ToLua_unsigned_ValidTime);
   tolua_variable(tolua_S,"NumType",tolua_get_tagItemDef_ToLua_unsigned_NumType,tolua_set_tagItemDef_ToLua_unsigned_NumType);
   tolua_variable(tolua_S,"NoDrop",tolua_get_tagItemDef_ToLua_unsigned_NoDrop,tolua_set_tagItemDef_ToLua_unsigned_NoDrop);
   tolua_variable(tolua_S,"ArmBind",tolua_get_tagItemDef_ToLua_unsigned_ArmBind,tolua_set_tagItemDef_ToLua_unsigned_ArmBind);
   tolua_variable(tolua_S,"ExchgLevel",tolua_get_tagItemDef_ToLua_unsigned_ExchgLevel,tolua_set_tagItemDef_ToLua_unsigned_ExchgLevel);
   tolua_variable(tolua_S,"Important",tolua_get_tagItemDef_ToLua_unsigned_Important,tolua_set_tagItemDef_ToLua_unsigned_Important);
   tolua_variable(tolua_S,"AmmAtk",tolua_get_tagItemDef_ToLua_AmmAtk,tolua_set_tagItemDef_ToLua_AmmAtk);
   tolua_variable(tolua_S,"WeaponAmmNeed",tolua_get_tagItemDef_ToLua_unsigned_WeaponAmmNeed,tolua_set_tagItemDef_ToLua_unsigned_WeaponAmmNeed);
   tolua_variable(tolua_S,"WeaponAmmType",tolua_get_tagItemDef_ToLua_unsigned_WeaponAmmType,tolua_set_tagItemDef_ToLua_unsigned_WeaponAmmType);
   tolua_variable(tolua_S,"AmmType",tolua_get_tagItemDef_ToLua_unsigned_AmmType,tolua_set_tagItemDef_ToLua_unsigned_AmmType);
   tolua_variable(tolua_S,"WearPre",tolua_get_tagItemDef_ToLua_WearPre,tolua_set_tagItemDef_ToLua_WearPre);
   tolua_variable(tolua_S,"WearPosNum",tolua_get_tagItemDef_ToLua_unsigned_WearPosNum,tolua_set_tagItemDef_ToLua_unsigned_WearPosNum);
   tolua_variable(tolua_S,"WearPos1",tolua_get_tagItemDef_ToLua_unsigned_WearPos1,tolua_set_tagItemDef_ToLua_unsigned_WearPos1);
   tolua_variable(tolua_S,"WearPos2",tolua_get_tagItemDef_ToLua_unsigned_WearPos2,tolua_set_tagItemDef_ToLua_unsigned_WearPos2);
   tolua_variable(tolua_S,"WearPos3",tolua_get_tagItemDef_ToLua_unsigned_WearPos3,tolua_set_tagItemDef_ToLua_unsigned_WearPos3);
   tolua_variable(tolua_S,"ItemDesc",tolua_get_tagItemDef_ToLua_ItemDesc,tolua_set_tagItemDef_ToLua_ItemDesc);
   tolua_variable(tolua_S,"ItemTmp",tolua_get_tagItemDef_ToLua_ItemTmp,tolua_set_tagItemDef_ToLua_ItemTmp);
   tolua_variable(tolua_S,"RepairBull",tolua_get_tagItemDef_ToLua_unsigned_RepairBull,tolua_set_tagItemDef_ToLua_unsigned_RepairBull);
   tolua_variable(tolua_S,"DamageMul",tolua_get_tagItemDef_ToLua_DamageMul,tolua_set_tagItemDef_ToLua_DamageMul);
   tolua_variable(tolua_S,"DamageAdd",tolua_get_tagItemDef_ToLua_unsigned_DamageAdd,tolua_set_tagItemDef_ToLua_unsigned_DamageAdd);
   tolua_variable(tolua_S,"SelfCool",tolua_get_tagItemDef_ToLua_SelfCool,tolua_set_tagItemDef_ToLua_SelfCool);
   tolua_variable(tolua_S,"SpeCool",tolua_get_tagItemDef_ToLua_SpeCool,tolua_set_tagItemDef_ToLua_SpeCool);
   tolua_variable(tolua_S,"SelfSpeCoolType",tolua_get_tagItemDef_ToLua_unsigned_SelfSpeCoolType,tolua_set_tagItemDef_ToLua_unsigned_SelfSpeCoolType);
   tolua_variable(tolua_S,"SpeCoolType",tolua_get_tagItemDef_ToLua_unsigned_SpeCoolType,tolua_set_tagItemDef_ToLua_unsigned_SpeCoolType);
   tolua_variable(tolua_S,"NoNpcSell",tolua_get_tagItemDef_ToLua_unsigned_NoNpcSell,tolua_set_tagItemDef_ToLua_unsigned_NoNpcSell);
   tolua_variable(tolua_S,"NoDeal",tolua_get_tagItemDef_ToLua_unsigned_NoDeal,tolua_set_tagItemDef_ToLua_unsigned_NoDeal);
   tolua_variable(tolua_S,"ItemScript",tolua_get_tagItemDef_ToLua_unsigned_ItemScript,tolua_set_tagItemDef_ToLua_unsigned_ItemScript);
   tolua_variable(tolua_S,"MapItem",tolua_get_tagItemDef_ToLua_unsigned_MapItem,tolua_set_tagItemDef_ToLua_unsigned_MapItem);
   tolua_variable(tolua_S,"ArmType",tolua_get_tagItemDef_ToLua_unsigned_ArmType,tolua_set_tagItemDef_ToLua_unsigned_ArmType);
   tolua_variable(tolua_S,"UseTarget",tolua_get_tagItemDef_ToLua_unsigned_UseTarget,tolua_set_tagItemDef_ToLua_unsigned_UseTarget);
   tolua_variable(tolua_S,"TrustContributeVim",tolua_get_tagItemDef_ToLua_TrustContributeVim,tolua_set_tagItemDef_ToLua_TrustContributeVim);
   tolua_variable(tolua_S,"GainExp",tolua_get_tagItemDef_ToLua_unsigned_GainExp,tolua_set_tagItemDef_ToLua_unsigned_GainExp);
   tolua_variable(tolua_S,"TrustOrderVim",tolua_get_tagItemDef_ToLua_TrustOrderVim,tolua_set_tagItemDef_ToLua_TrustOrderVim);
   tolua_variable(tolua_S,"ContributeBuddyVal",tolua_get_tagItemDef_ToLua_unsigned_ContributeBuddyVal,tolua_set_tagItemDef_ToLua_unsigned_ContributeBuddyVal);
   tolua_variable(tolua_S,"NextItemID",tolua_get_tagItemDef_ToLua_unsigned_NextItemID,tolua_set_tagItemDef_ToLua_unsigned_NextItemID);
   tolua_variable(tolua_S,"NextItemMoney",tolua_get_tagItemDef_ToLua_unsigned_NextItemMoney,tolua_set_tagItemDef_ToLua_unsigned_NextItemMoney);
   tolua_variable(tolua_S,"NextItemLevel",tolua_get_tagItemDef_ToLua_unsigned_NextItemLevel,tolua_set_tagItemDef_ToLua_unsigned_NextItemLevel);
   tolua_variable(tolua_S,"IdentifiabilityType",tolua_get_tagItemDef_ToLua_unsigned_IdentifiabilityType,tolua_set_tagItemDef_ToLua_unsigned_IdentifiabilityType);
   tolua_variable(tolua_S,"IdentifiabilityMoney",tolua_get_tagItemDef_ToLua_unsigned_IdentifiabilityMoney,tolua_set_tagItemDef_ToLua_unsigned_IdentifiabilityMoney);
   tolua_array(tolua_S,"IdentifiabilityItems",tolua_get_GameEngineTolua_tagItemDef_ToLua_IdentifiabilityItems,tolua_set_GameEngineTolua_tagItemDef_ToLua_IdentifiabilityItems);
   tolua_variable(tolua_S,"StarLimit",tolua_get_tagItemDef_ToLua_unsigned_StarLimit,tolua_set_tagItemDef_ToLua_unsigned_StarLimit);
   tolua_array(tolua_S,"AddAttr",tolua_get_GameEngineTolua_tagItemDef_ToLua_AddAttr,tolua_set_GameEngineTolua_tagItemDef_ToLua_AddAttr);
   tolua_variable(tolua_S,"ItemLevel",tolua_get_tagItemDef_ToLua_ItemLevel,tolua_set_tagItemDef_ToLua_ItemLevel);
   tolua_variable(tolua_S,"ItemStar",tolua_get_tagItemDef_ToLua_unsigned_ItemStar,tolua_set_tagItemDef_ToLua_unsigned_ItemStar);
   tolua_variable(tolua_S,"ItemUsePre",tolua_get_tagItemDef_ToLua_unsigned_ItemUsePre,tolua_set_tagItemDef_ToLua_unsigned_ItemUsePre);
   tolua_variable(tolua_S,"NeedRespact",tolua_get_tagItemDef_ToLua_NeedRespact,tolua_set_tagItemDef_ToLua_NeedRespact);
   tolua_array(tolua_S,"Hole",tolua_get_GameEngineTolua_tagItemDef_ToLua_Hole,tolua_set_GameEngineTolua_tagItemDef_ToLua_Hole);
   tolua_variable(tolua_S,"RandAddAttr",tolua_get_tagItemDef_ToLua_unsigned_RandAddAttr,tolua_set_tagItemDef_ToLua_unsigned_RandAddAttr);
   tolua_variable(tolua_S,"UseMaxDur",tolua_get_tagItemDef_ToLua_unsigned_UseMaxDur,tolua_set_tagItemDef_ToLua_unsigned_UseMaxDur);
   tolua_variable(tolua_S,"MaxUseOneDay",tolua_get_tagItemDef_ToLua_unsigned_MaxUseOneDay,tolua_set_tagItemDef_ToLua_unsigned_MaxUseOneDay);
   tolua_variable(tolua_S,"UseTargetID",tolua_get_tagItemDef_ToLua_unsigned_UseTargetID,tolua_set_tagItemDef_ToLua_unsigned_UseTargetID);
   tolua_variable(tolua_S,"UseModel",tolua_get_tagItemDef_ToLua_UseModel,tolua_set_tagItemDef_ToLua_UseModel);
   tolua_variable(tolua_S,"UseActID",tolua_get_tagItemDef_ToLua_UseActID,tolua_set_tagItemDef_ToLua_UseActID);
   tolua_variable(tolua_S,"BattleNoUse",tolua_get_tagItemDef_ToLua_BattleNoUse,tolua_set_tagItemDef_ToLua_BattleNoUse);
   tolua_variable(tolua_S,"IsReStoreItem",tolua_get_tagItemDef_ToLua_IsReStoreItem,tolua_set_tagItemDef_ToLua_IsReStoreItem);
   tolua_variable(tolua_S,"ExtendedType",tolua_get_tagItemDef_ToLua_ExtendedType,tolua_set_tagItemDef_ToLua_ExtendedType);
   tolua_variable(tolua_S,"DropSelfView",tolua_get_tagItemDef_ToLua_DropSelfView,tolua_set_tagItemDef_ToLua_DropSelfView);
   tolua_variable(tolua_S,"ModelIndex",tolua_get_tagItemDef_ToLua_ModelIndex,tolua_set_tagItemDef_ToLua_ModelIndex);
   tolua_variable(tolua_S,"NoResolve",tolua_get_tagItemDef_ToLua_NoResolve,tolua_set_tagItemDef_ToLua_NoResolve);
   tolua_variable(tolua_S,"DieDropFlag",tolua_get_tagItemDef_ToLua_DieDropFlag,tolua_set_tagItemDef_ToLua_DieDropFlag);
   tolua_variable(tolua_S,"AddAttrGroupID",tolua_get_tagItemDef_ToLua_AddAttrGroupID,tolua_set_tagItemDef_ToLua_AddAttrGroupID);
   tolua_variable(tolua_S,"CtrlFlag",tolua_get_tagItemDef_ToLua_CtrlFlag,tolua_set_tagItemDef_ToLua_CtrlFlag);
   tolua_variable(tolua_S,"ClanContri",tolua_get_tagItemDef_ToLua_ClanContri,tolua_set_tagItemDef_ToLua_ClanContri);
   tolua_variable(tolua_S,"MaxUseDist",tolua_get_tagItemDef_ToLua_MaxUseDist,tolua_set_tagItemDef_ToLua_MaxUseDist);
   tolua_variable(tolua_S,"PoseID",tolua_get_tagItemDef_ToLua_unsigned_PoseID,tolua_set_tagItemDef_ToLua_unsigned_PoseID);
   tolua_variable(tolua_S,"BuyLimitFlag",tolua_get_tagItemDef_ToLua_unsigned_BuyLimitFlag,tolua_set_tagItemDef_ToLua_unsigned_BuyLimitFlag);
   tolua_array(tolua_S,"MoneyUses",tolua_get_GameEngineTolua_tagItemDef_ToLua_MoneyUses,tolua_set_GameEngineTolua_tagItemDef_ToLua_MoneyUses);
   tolua_variable(tolua_S,"NeedSpartaFight",tolua_get_tagItemDef_ToLua_NeedSpartaFight,tolua_set_tagItemDef_ToLua_NeedSpartaFight);
   tolua_variable(tolua_S,"SkillNum",tolua_get_tagItemDef_ToLua_SkillNum,tolua_set_tagItemDef_ToLua_SkillNum);
   tolua_variable(tolua_S,"TeshuID",tolua_get_tagItemDef_ToLua_unsigned_TeshuID,tolua_set_tagItemDef_ToLua_unsigned_TeshuID);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagSuitAttr_ToLua","tagSuitAttr_ToLua","",tolua_collect_tagSuitAttr_ToLua);
  #else
  tolua_cclass(tolua_S,"tagSuitAttr_ToLua","tagSuitAttr_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagSuitAttr_ToLua");
   tolua_variable(tolua_S,"SuitAttrID",tolua_get_tagSuitAttr_ToLua_unsigned_SuitAttrID,tolua_set_tagSuitAttr_ToLua_unsigned_SuitAttrID);
   tolua_variable(tolua_S,"MinSuitNum",tolua_get_tagSuitAttr_ToLua_unsigned_MinSuitNum,tolua_set_tagSuitAttr_ToLua_unsigned_MinSuitNum);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagSuitSet_ToLua","tagSuitSet_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagSuitSet_ToLua");
   tolua_variable(tolua_S,"SuitSetID",tolua_get_tagSuitSet_ToLua_unsigned_SuitSetID,tolua_set_tagSuitSet_ToLua_unsigned_SuitSetID);
   tolua_variable(tolua_S,"SuitSetType",tolua_get_tagSuitSet_ToLua_SuitSetType,tolua_set_tagSuitSet_ToLua_SuitSetType);
   tolua_variable(tolua_S,"Name",tolua_get_tagSuitSet_ToLua_Name,tolua_set_tagSuitSet_ToLua_Name);
   tolua_array(tolua_S,"SuitAttr",tolua_get_GameEngineTolua_tagSuitSet_ToLua_SuitAttr,tolua_set_GameEngineTolua_tagSuitSet_ToLua_SuitAttr);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagStarAttr_ToLua","tagStarAttr_ToLua","",tolua_collect_tagStarAttr_ToLua);
  #else
  tolua_cclass(tolua_S,"tagStarAttr_ToLua","tagStarAttr_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagStarAttr_ToLua");
   tolua_variable(tolua_S,"SuitAttrID",tolua_get_tagStarAttr_ToLua_unsigned_SuitAttrID,tolua_set_tagStarAttr_ToLua_unsigned_SuitAttrID);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagAddAttrBaseDef_ToLua","tagAddAttrBaseDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagAddAttrBaseDef_ToLua");
   tolua_variable(tolua_S,"Level",tolua_get_tagAddAttrBaseDef_ToLua_Level,tolua_set_tagAddAttrBaseDef_ToLua_Level);
   tolua_variable(tolua_S,"PhsicAtkBase",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_PhsicAtkBase,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_PhsicAtkBase);
   tolua_variable(tolua_S,"IceAtkBase",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_IceAtkBase,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_IceAtkBase);
   tolua_variable(tolua_S,"PhsicDefBase",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_PhsicDefBase,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_PhsicDefBase);
   tolua_variable(tolua_S,"IceDefBase",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_IceDefBase,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_IceDefBase);
   tolua_variable(tolua_S,"MaxHPBase",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_MaxHPBase,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_MaxHPBase);
   tolua_variable(tolua_S,"MaxMPBase",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_MaxMPBase,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_MaxMPBase);
   tolua_variable(tolua_S,"HitRateBase",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_HitRateBase,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_HitRateBase);
   tolua_variable(tolua_S,"FleeBase",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_FleeBase,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_FleeBase);
   tolua_variable(tolua_S,"DefPhsicHurtBase",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_DefPhsicHurtBase,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_DefPhsicHurtBase);
   tolua_variable(tolua_S,"DefIceHurtBase",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_DefIceHurtBase,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_DefIceHurtBase);
   tolua_variable(tolua_S,"LiLiang",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_LiLiang,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_LiLiang);
   tolua_variable(tolua_S,"Zhili",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_Zhili,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_Zhili);
   tolua_variable(tolua_S,"TiZhi",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_TiZhi,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_TiZhi);
   tolua_variable(tolua_S,"FangHu",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_FangHu,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_FangHu);
   tolua_variable(tolua_S,"JingShen",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_JingShen,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_JingShen);
   tolua_variable(tolua_S,"MinJie",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_MinJie,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_MinJie);
   tolua_variable(tolua_S,"HeavyHit",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_HeavyHit,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_HeavyHit);
   tolua_variable(tolua_S,"DefHeavyHit",tolua_get_tagAddAttrBaseDef_ToLua_unsigned_DefHeavyHit,tolua_set_tagAddAttrBaseDef_ToLua_unsigned_DefHeavyHit);
   tolua_variable(tolua_S,"WaterAtk",tolua_get_tagAddAttrBaseDef_ToLua_WaterAtk,tolua_set_tagAddAttrBaseDef_ToLua_WaterAtk);
   tolua_variable(tolua_S,"WaterDef",tolua_get_tagAddAttrBaseDef_ToLua_WaterDef,tolua_set_tagAddAttrBaseDef_ToLua_WaterDef);
   tolua_variable(tolua_S,"FireAtk",tolua_get_tagAddAttrBaseDef_ToLua_FireAtk,tolua_set_tagAddAttrBaseDef_ToLua_FireAtk);
   tolua_variable(tolua_S,"FireDef",tolua_get_tagAddAttrBaseDef_ToLua_FireDef,tolua_set_tagAddAttrBaseDef_ToLua_FireDef);
   tolua_variable(tolua_S,"ThunderAtk",tolua_get_tagAddAttrBaseDef_ToLua_ThunderAtk,tolua_set_tagAddAttrBaseDef_ToLua_ThunderAtk);
   tolua_variable(tolua_S,"ThunderDef",tolua_get_tagAddAttrBaseDef_ToLua_ThunderDef,tolua_set_tagAddAttrBaseDef_ToLua_ThunderDef);
   tolua_variable(tolua_S,"LightAtk",tolua_get_tagAddAttrBaseDef_ToLua_LightAtk,tolua_set_tagAddAttrBaseDef_ToLua_LightAtk);
   tolua_variable(tolua_S,"LightDef",tolua_get_tagAddAttrBaseDef_ToLua_LightDef,tolua_set_tagAddAttrBaseDef_ToLua_LightDef);
   tolua_variable(tolua_S,"NightAtk",tolua_get_tagAddAttrBaseDef_ToLua_NightAtk,tolua_set_tagAddAttrBaseDef_ToLua_NightAtk);
   tolua_variable(tolua_S,"NightDef",tolua_get_tagAddAttrBaseDef_ToLua_NightDef,tolua_set_tagAddAttrBaseDef_ToLua_NightDef);
   tolua_variable(tolua_S,"IgnoreDef",tolua_get_tagAddAttrBaseDef_ToLua_IgnoreDef,tolua_set_tagAddAttrBaseDef_ToLua_IgnoreDef);
   tolua_variable(tolua_S,"ReflectHP",tolua_get_tagAddAttrBaseDef_ToLua_ReflectHP,tolua_set_tagAddAttrBaseDef_ToLua_ReflectHP);
   tolua_variable(tolua_S,"DefHP",tolua_get_tagAddAttrBaseDef_ToLua_DefHP,tolua_set_tagAddAttrBaseDef_ToLua_DefHP);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagFixedAddAttr_ToLua","tagFixedAddAttr_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagFixedAddAttr_ToLua");
   tolua_variable(tolua_S,"ID",tolua_get_tagFixedAddAttr_ToLua_unsigned_ID,tolua_set_tagFixedAddAttr_ToLua_unsigned_ID);
   tolua_array(tolua_S,"AddAttrs",tolua_get_GameEngineTolua_tagFixedAddAttr_ToLua_AddAttrs,tolua_set_GameEngineTolua_tagFixedAddAttr_ToLua_AddAttrs);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagArmHideAttrDef_ToLua","tagArmHideAttrDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagArmHideAttrDef_ToLua");
   tolua_variable(tolua_S,"Career",tolua_get_tagArmHideAttrDef_ToLua_unsigned_Career,tolua_set_tagArmHideAttrDef_ToLua_unsigned_Career);
   tolua_variable(tolua_S,"ArmStarLevel",tolua_get_tagArmHideAttrDef_ToLua_unsigned_ArmStarLevel,tolua_set_tagArmHideAttrDef_ToLua_unsigned_ArmStarLevel);
   tolua_array(tolua_S,"Result",tolua_get_GameEngineTolua_tagArmHideAttrDef_ToLua_Result,tolua_set_GameEngineTolua_tagArmHideAttrDef_ToLua_Result);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagStarMulInfo_ToLua","tagStarMulInfo_ToLua","",tolua_collect_tagStarMulInfo_ToLua);
  #else
  tolua_cclass(tolua_S,"tagStarMulInfo_ToLua","tagStarMulInfo_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagStarMulInfo_ToLua");
   tolua_variable(tolua_S,"Mul",tolua_get_tagStarMulInfo_ToLua_Mul,tolua_set_tagStarMulInfo_ToLua_Mul);
   tolua_variable(tolua_S,"Rate",tolua_get_tagStarMulInfo_ToLua_Rate,tolua_set_tagStarMulInfo_ToLua_Rate);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagArmStarDef_ToLua","tagArmStarDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagArmStarDef_ToLua");
   tolua_variable(tolua_S,"Star",tolua_get_tagArmStarDef_ToLua_Star,tolua_set_tagArmStarDef_ToLua_Star);
   tolua_array(tolua_S,"StarInfo",tolua_get_GameEngineTolua_tagArmStarDef_ToLua_StarInfo,tolua_set_GameEngineTolua_tagArmStarDef_ToLua_StarInfo);
   tolua_variable(tolua_S,"PerfectRate",tolua_get_tagArmStarDef_ToLua_PerfectRate,tolua_set_tagArmStarDef_ToLua_PerfectRate);
   tolua_variable(tolua_S,"PerfectNum",tolua_get_tagArmStarDef_ToLua_PerfectNum,tolua_set_tagArmStarDef_ToLua_PerfectNum);
   tolua_variable(tolua_S,"MoveMoneyVal",tolua_get_tagArmStarDef_ToLua_MoveMoneyVal,tolua_set_tagArmStarDef_ToLua_MoveMoneyVal);
   tolua_variable(tolua_S,"MustItemID",tolua_get_tagArmStarDef_ToLua_MustItemID,tolua_set_tagArmStarDef_ToLua_MustItemID);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagArmGradeDef_ToLua","tagArmGradeDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagArmGradeDef_ToLua");
   tolua_variable(tolua_S,"ArmType",tolua_get_tagArmGradeDef_ToLua_ArmType,tolua_set_tagArmGradeDef_ToLua_ArmType);
   tolua_variable(tolua_S,"ArmLevel",tolua_get_tagArmGradeDef_ToLua_ArmLevel,tolua_set_tagArmGradeDef_ToLua_ArmLevel);
   tolua_array(tolua_S,"ArmStar",tolua_get_GameEngineTolua_tagArmGradeDef_ToLua_ArmStar,tolua_set_GameEngineTolua_tagArmGradeDef_ToLua_ArmStar);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagAttrResult_ToLua","tagAttrResult_ToLua","",tolua_collect_tagAttrResult_ToLua);
  #else
  tolua_cclass(tolua_S,"tagAttrResult_ToLua","tagAttrResult_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagAttrResult_ToLua");
   tolua_variable(tolua_S,"ResultID",tolua_get_tagAttrResult_ToLua_unsigned_ResultID,tolua_set_tagAttrResult_ToLua_unsigned_ResultID);
   tolua_variable(tolua_S,"ResultVal1",tolua_get_tagAttrResult_ToLua_ResultVal1,tolua_set_tagAttrResult_ToLua_ResultVal1);
   tolua_variable(tolua_S,"ResultVal2",tolua_get_tagAttrResult_ToLua_ResultVal2,tolua_set_tagAttrResult_ToLua_ResultVal2);
   tolua_variable(tolua_S,"ResultVal3",tolua_get_tagAttrResult_ToLua_ResultVal3,tolua_set_tagAttrResult_ToLua_ResultVal3);
   tolua_variable(tolua_S,"ResultVal4",tolua_get_tagAttrResult_ToLua_ResultVal4,tolua_set_tagAttrResult_ToLua_ResultVal4);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagAddAttrDef_ToLua","tagAddAttrDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagAddAttrDef_ToLua");
   tolua_variable(tolua_S,"AddAttrID",tolua_get_tagAddAttrDef_ToLua_unsigned_AddAttrID,tolua_set_tagAddAttrDef_ToLua_unsigned_AddAttrID);
   tolua_variable(tolua_S,"AddAttrDesc",tolua_get_tagAddAttrDef_ToLua_AddAttrDesc,tolua_set_tagAddAttrDef_ToLua_AddAttrDesc);
   tolua_array(tolua_S,"EffectSkillID",tolua_get_GameEngineTolua_tagAddAttrDef_ToLua_EffectSkillID,tolua_set_GameEngineTolua_tagAddAttrDef_ToLua_EffectSkillID);
   tolua_array(tolua_S,"Result",tolua_get_GameEngineTolua_tagAddAttrDef_ToLua_Result,tolua_set_GameEngineTolua_tagAddAttrDef_ToLua_Result);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagArmResult_ToLua","tagArmResult_ToLua","",tolua_collect_tagArmResult_ToLua);
  #else
  tolua_cclass(tolua_S,"tagArmResult_ToLua","tagArmResult_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagArmResult_ToLua");
   tolua_variable(tolua_S,"ResultVal1",tolua_get_tagArmResult_ToLua_ResultVal1,tolua_set_tagArmResult_ToLua_ResultVal1);
   tolua_variable(tolua_S,"ResultVal2",tolua_get_tagArmResult_ToLua_ResultVal2,tolua_set_tagArmResult_ToLua_ResultVal2);
   tolua_variable(tolua_S,"ResultVal3",tolua_get_tagArmResult_ToLua_ResultVal3,tolua_set_tagArmResult_ToLua_ResultVal3);
   tolua_variable(tolua_S,"ResultVal4",tolua_get_tagArmResult_ToLua_ResultVal4,tolua_set_tagArmResult_ToLua_ResultVal4);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagArmAddAttrDef_ToLua","tagArmAddAttrDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagArmAddAttrDef_ToLua");
   tolua_variable(tolua_S,"AddAttrID",tolua_get_tagArmAddAttrDef_ToLua_unsigned_AddAttrID,tolua_set_tagArmAddAttrDef_ToLua_unsigned_AddAttrID);
   tolua_variable(tolua_S,"AddAttrName",tolua_get_tagArmAddAttrDef_ToLua_AddAttrName,tolua_set_tagArmAddAttrDef_ToLua_AddAttrName);
   tolua_array(tolua_S,"Result",tolua_get_GameEngineTolua_tagArmAddAttrDef_ToLua_Result,tolua_set_GameEngineTolua_tagArmAddAttrDef_ToLua_Result);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagAddAttrRangeInfo_ToLua","tagAddAttrRangeInfo_ToLua","",tolua_collect_tagAddAttrRangeInfo_ToLua);
  #else
  tolua_cclass(tolua_S,"tagAddAttrRangeInfo_ToLua","tagAddAttrRangeInfo_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagAddAttrRangeInfo_ToLua");
   tolua_variable(tolua_S,"MinMul",tolua_get_tagAddAttrRangeInfo_ToLua_MinMul,tolua_set_tagAddAttrRangeInfo_ToLua_MinMul);
   tolua_variable(tolua_S,"MaxnMul",tolua_get_tagAddAttrRangeInfo_ToLua_MaxnMul,tolua_set_tagAddAttrRangeInfo_ToLua_MaxnMul);
   tolua_variable(tolua_S,"MidMul",tolua_get_tagAddAttrRangeInfo_ToLua_MidMul,tolua_set_tagAddAttrRangeInfo_ToLua_MidMul);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagAddAttrWearPosLimit_ToLua","tagAddAttrWearPosLimit_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagAddAttrWearPosLimit_ToLua");
   tolua_variable(tolua_S,"RightHand",tolua_get_tagAddAttrWearPosLimit_ToLua_RightHand,tolua_set_tagAddAttrWearPosLimit_ToLua_RightHand);
   tolua_variable(tolua_S,"Head",tolua_get_tagAddAttrWearPosLimit_ToLua_Head,tolua_set_tagAddAttrWearPosLimit_ToLua_Head);
   tolua_variable(tolua_S,"Body",tolua_get_tagAddAttrWearPosLimit_ToLua_Body,tolua_set_tagAddAttrWearPosLimit_ToLua_Body);
   tolua_variable(tolua_S,"LeftHand",tolua_get_tagAddAttrWearPosLimit_ToLua_LeftHand,tolua_set_tagAddAttrWearPosLimit_ToLua_LeftHand);
   tolua_variable(tolua_S,"Face",tolua_get_tagAddAttrWearPosLimit_ToLua_Face,tolua_set_tagAddAttrWearPosLimit_ToLua_Face);
   tolua_variable(tolua_S,"Shoulder",tolua_get_tagAddAttrWearPosLimit_ToLua_Shoulder,tolua_set_tagAddAttrWearPosLimit_ToLua_Shoulder);
   tolua_variable(tolua_S,"Shoe",tolua_get_tagAddAttrWearPosLimit_ToLua_Shoe,tolua_set_tagAddAttrWearPosLimit_ToLua_Shoe);
   tolua_variable(tolua_S,"Amulet",tolua_get_tagAddAttrWearPosLimit_ToLua_Amulet,tolua_set_tagAddAttrWearPosLimit_ToLua_Amulet);
   tolua_variable(tolua_S,"Ring",tolua_get_tagAddAttrWearPosLimit_ToLua_Ring,tolua_set_tagAddAttrWearPosLimit_ToLua_Ring);
   tolua_variable(tolua_S,"NeckLace",tolua_get_tagAddAttrWearPosLimit_ToLua_NeckLace,tolua_set_tagAddAttrWearPosLimit_ToLua_NeckLace);
   tolua_variable(tolua_S,"Back",tolua_get_tagAddAttrWearPosLimit_ToLua_Back,tolua_set_tagAddAttrWearPosLimit_ToLua_Back);
   tolua_variable(tolua_S,"Badge",tolua_get_tagAddAttrWearPosLimit_ToLua_Badge,tolua_set_tagAddAttrWearPosLimit_ToLua_Badge);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagAddAttrCareerLimit_ToLua","tagAddAttrCareerLimit_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagAddAttrCareerLimit_ToLua");
   tolua_variable(tolua_S,"None",tolua_get_tagAddAttrCareerLimit_ToLua_None,tolua_set_tagAddAttrCareerLimit_ToLua_None);
   tolua_variable(tolua_S,"Warrior",tolua_get_tagAddAttrCareerLimit_ToLua_Warrior,tolua_set_tagAddAttrCareerLimit_ToLua_Warrior);
   tolua_variable(tolua_S,"Magicor",tolua_get_tagAddAttrCareerLimit_ToLua_Magicor,tolua_set_tagAddAttrCareerLimit_ToLua_Magicor);
   tolua_variable(tolua_S,"Guner",tolua_get_tagAddAttrCareerLimit_ToLua_Guner,tolua_set_tagAddAttrCareerLimit_ToLua_Guner);
   tolua_variable(tolua_S,"Church",tolua_get_tagAddAttrCareerLimit_ToLua_Church,tolua_set_tagAddAttrCareerLimit_ToLua_Church);
   tolua_variable(tolua_S,"SingleHandWarrior",tolua_get_tagAddAttrCareerLimit_ToLua_SingleHandWarrior,tolua_set_tagAddAttrCareerLimit_ToLua_SingleHandWarrior);
   tolua_variable(tolua_S,"DoubleHandWarrior",tolua_get_tagAddAttrCareerLimit_ToLua_DoubleHandWarrior,tolua_set_tagAddAttrCareerLimit_ToLua_DoubleHandWarrior);
   tolua_variable(tolua_S,"SingleHandMagicor",tolua_get_tagAddAttrCareerLimit_ToLua_SingleHandMagicor,tolua_set_tagAddAttrCareerLimit_ToLua_SingleHandMagicor);
   tolua_variable(tolua_S,"DoubleHandMagicor",tolua_get_tagAddAttrCareerLimit_ToLua_DoubleHandMagicor,tolua_set_tagAddAttrCareerLimit_ToLua_DoubleHandMagicor);
   tolua_variable(tolua_S,"SingleHandGuner",tolua_get_tagAddAttrCareerLimit_ToLua_SingleHandGuner,tolua_set_tagAddAttrCareerLimit_ToLua_SingleHandGuner);
   tolua_variable(tolua_S,"DoubleHandGuner",tolua_get_tagAddAttrCareerLimit_ToLua_DoubleHandGuner,tolua_set_tagAddAttrCareerLimit_ToLua_DoubleHandGuner);
   tolua_variable(tolua_S,"SingleHandChurch",tolua_get_tagAddAttrCareerLimit_ToLua_SingleHandChurch,tolua_set_tagAddAttrCareerLimit_ToLua_SingleHandChurch);
   tolua_variable(tolua_S,"DoubleHandChurch",tolua_get_tagAddAttrCareerLimit_ToLua_DoubleHandChurch,tolua_set_tagAddAttrCareerLimit_ToLua_DoubleHandChurch);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagNewAddAttrDef_ToLua","tagNewAddAttrDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagNewAddAttrDef_ToLua");
   tolua_variable(tolua_S,"ID",tolua_get_tagNewAddAttrDef_ToLua_ID,tolua_set_tagNewAddAttrDef_ToLua_ID);
   tolua_variable(tolua_S,"AddAttrResultID",tolua_get_tagNewAddAttrDef_ToLua_AddAttrResultID,tolua_set_tagNewAddAttrDef_ToLua_AddAttrResultID);
   tolua_variable(tolua_S,"AddAttrDesc",tolua_get_tagNewAddAttrDef_ToLua_AddAttrDesc,tolua_set_tagNewAddAttrDef_ToLua_AddAttrDesc);
   tolua_array(tolua_S,"Val1",tolua_get_GameEngineTolua_tagNewAddAttrDef_ToLua_Val1,tolua_set_GameEngineTolua_tagNewAddAttrDef_ToLua_Val1);
   tolua_variable(tolua_S,"Val2",tolua_get_tagNewAddAttrDef_ToLua_Val2,tolua_set_tagNewAddAttrDef_ToLua_Val2);
   tolua_variable(tolua_S,"Val3",tolua_get_tagNewAddAttrDef_ToLua_Val3,tolua_set_tagNewAddAttrDef_ToLua_Val3);
   tolua_variable(tolua_S,"Val4",tolua_get_tagNewAddAttrDef_ToLua_Val4,tolua_set_tagNewAddAttrDef_ToLua_Val4);
   tolua_array(tolua_S,"RangeList",tolua_get_GameEngineTolua_tagNewAddAttrDef_ToLua_RangeList,tolua_set_GameEngineTolua_tagNewAddAttrDef_ToLua_RangeList);
   tolua_variable(tolua_S,"WearPosLimit",tolua_get_tagNewAddAttrDef_ToLua_WearPosLimit,tolua_set_tagNewAddAttrDef_ToLua_WearPosLimit);
   tolua_variable(tolua_S,"CareerLimit",tolua_get_tagNewAddAttrDef_ToLua_CareerLimit,tolua_set_tagNewAddAttrDef_ToLua_CareerLimit);
   tolua_variable(tolua_S,"MinLevel",tolua_get_tagNewAddAttrDef_ToLua_MinLevel,tolua_set_tagNewAddAttrDef_ToLua_MinLevel);
   tolua_variable(tolua_S,"MaxLevel",tolua_get_tagNewAddAttrDef_ToLua_MaxLevel,tolua_set_tagNewAddAttrDef_ToLua_MaxLevel);
   tolua_variable(tolua_S,"Important",tolua_get_tagNewAddAttrDef_ToLua_Important,tolua_set_tagNewAddAttrDef_ToLua_Important);
   tolua_variable(tolua_S,"Score",tolua_get_tagNewAddAttrDef_ToLua_Score,tolua_set_tagNewAddAttrDef_ToLua_Score);
   tolua_variable(tolua_S,"NotSpar",tolua_get_tagNewAddAttrDef_ToLua_NotSpar,tolua_set_tagNewAddAttrDef_ToLua_NotSpar);
   tolua_variable(tolua_S,"Main",tolua_get_tagNewAddAttrDef_ToLua_Main,tolua_set_tagNewAddAttrDef_ToLua_Main);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagAddAttrRandList_ToLua","tagAddAttrRandList_ToLua","",tolua_collect_tagAddAttrRandList_ToLua);
  #else
  tolua_cclass(tolua_S,"tagAddAttrRandList_ToLua","tagAddAttrRandList_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagAddAttrRandList_ToLua");
   tolua_variable(tolua_S,"AddAttrNum",tolua_get_tagAddAttrRandList_ToLua_AddAttrNum,tolua_set_tagAddAttrRandList_ToLua_AddAttrNum);
   tolua_variable(tolua_S,"Rate",tolua_get_tagAddAttrRandList_ToLua_Rate,tolua_set_tagAddAttrRandList_ToLua_Rate);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagAddAttrRandDef_ToLua","tagAddAttrRandDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagAddAttrRandDef_ToLua");
   tolua_variable(tolua_S,"ArmLevel",tolua_get_tagAddAttrRandDef_ToLua_ArmLevel,tolua_set_tagAddAttrRandDef_ToLua_ArmLevel);
   tolua_variable(tolua_S,"Important",tolua_get_tagAddAttrRandDef_ToLua_Important,tolua_set_tagAddAttrRandDef_ToLua_Important);
   tolua_array(tolua_S,"RandList",tolua_get_GameEngineTolua_tagAddAttrRandDef_ToLua_RandList,tolua_set_GameEngineTolua_tagAddAttrRandDef_ToLua_RandList);
   tolua_variable(tolua_S,"ValLevel",tolua_get_tagAddAttrRandDef_ToLua_ValLevel,tolua_set_tagAddAttrRandDef_ToLua_ValLevel);
   tolua_variable(tolua_S,"AddMulLevel",tolua_get_tagAddAttrRandDef_ToLua_AddMulLevel,tolua_set_tagAddAttrRandDef_ToLua_AddMulLevel);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagItemResultDesc_ToLua","tagItemResultDesc_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagItemResultDesc_ToLua");
   tolua_variable(tolua_S,"ResultID",tolua_get_tagItemResultDesc_ToLua_ResultID,tolua_set_tagItemResultDesc_ToLua_ResultID);
   tolua_variable(tolua_S,"ResultDesc",tolua_get_tagItemResultDesc_ToLua_ResultDesc,tolua_set_tagItemResultDesc_ToLua_ResultDesc);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagBaoXiangItem_ToLua","tagBaoXiangItem_ToLua","",tolua_collect_tagBaoXiangItem_ToLua);
  #else
  tolua_cclass(tolua_S,"tagBaoXiangItem_ToLua","tagBaoXiangItem_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagBaoXiangItem_ToLua");
   tolua_variable(tolua_S,"ItemID",tolua_get_tagBaoXiangItem_ToLua_ItemID,tolua_set_tagBaoXiangItem_ToLua_ItemID);
   tolua_variable(tolua_S,"Num",tolua_get_tagBaoXiangItem_ToLua_Num,tolua_set_tagBaoXiangItem_ToLua_Num);
   tolua_variable(tolua_S,"Rate",tolua_get_tagBaoXiangItem_ToLua_Rate,tolua_set_tagBaoXiangItem_ToLua_Rate);
   tolua_variable(tolua_S,"Bind",tolua_get_tagBaoXiangItem_ToLua_Bind,tolua_set_tagBaoXiangItem_ToLua_Bind);
   tolua_variable(tolua_S,"Broadcast",tolua_get_tagBaoXiangItem_ToLua_Broadcast,tolua_set_tagBaoXiangItem_ToLua_Broadcast);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"MAX_BAOXIANG_ITEM_TOLUA",MAX_BAOXIANG_ITEM_TOLUA);
  tolua_constant(tolua_S,"MAX_BAOXIANG_DISPLAY_ITEM_TOLUA",MAX_BAOXIANG_DISPLAY_ITEM_TOLUA);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagDisplayItem_ToLua","tagDisplayItem_ToLua","",tolua_collect_tagDisplayItem_ToLua);
  #else
  tolua_cclass(tolua_S,"tagDisplayItem_ToLua","tagDisplayItem_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagDisplayItem_ToLua");
   tolua_variable(tolua_S,"ItemID",tolua_get_tagDisplayItem_ToLua_ItemID,tolua_set_tagDisplayItem_ToLua_ItemID);
   tolua_variable(tolua_S,"Num",tolua_get_tagDisplayItem_ToLua_Num,tolua_set_tagDisplayItem_ToLua_Num);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagBaoXiangDef_ToLua","tagBaoXiangDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagBaoXiangDef_ToLua");
   tolua_variable(tolua_S,"ID",tolua_get_tagBaoXiangDef_ToLua_ID,tolua_set_tagBaoXiangDef_ToLua_ID);
   tolua_array(tolua_S,"Items",tolua_get_GameEngineTolua_tagBaoXiangDef_ToLua_Items,tolua_set_GameEngineTolua_tagBaoXiangDef_ToLua_Items);
   tolua_variable(tolua_S,"HideItemID",tolua_get_tagBaoXiangDef_ToLua_HideItemID,tolua_set_tagBaoXiangDef_ToLua_HideItemID);
   tolua_variable(tolua_S,"HideItemNum",tolua_get_tagBaoXiangDef_ToLua_HideItemNum,tolua_set_tagBaoXiangDef_ToLua_HideItemNum);
   tolua_variable(tolua_S,"HideCount",tolua_get_tagBaoXiangDef_ToLua_HideCount,tolua_set_tagBaoXiangDef_ToLua_HideCount);
   tolua_variable(tolua_S,"NeedItemID",tolua_get_tagBaoXiangDef_ToLua_NeedItemID,tolua_set_tagBaoXiangDef_ToLua_NeedItemID);
   tolua_variable(tolua_S,"ErrorTip",tolua_get_tagBaoXiangDef_ToLua_ErrorTip,tolua_set_tagBaoXiangDef_ToLua_ErrorTip);
   tolua_array(tolua_S,"ShowItems",tolua_get_GameEngineTolua_tagBaoXiangDef_ToLua_ShowItems,tolua_set_GameEngineTolua_tagBaoXiangDef_ToLua_ShowItems);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"CONTAINER_LOCK_STATE_NO",CONTAINER_LOCK_STATE_NO);
  tolua_constant(tolua_S,"CONTAINER_LOCK_STATE_LOCK",CONTAINER_LOCK_STATE_LOCK);
  tolua_constant(tolua_S,"CONTAINER_LOCK_STATE_OPEN",CONTAINER_LOCK_STATE_OPEN);
  tolua_constant(tolua_S,"EQUIP_POS_NO",EQUIP_POS_NO);
  tolua_constant(tolua_S,"EQUIP_POS_RIGHTHAND",EQUIP_POS_RIGHTHAND);
  tolua_constant(tolua_S,"EQUIP_POS_HEAD",EQUIP_POS_HEAD);
  tolua_constant(tolua_S,"EQUIP_POS_BODY",EQUIP_POS_BODY);
  tolua_constant(tolua_S,"EQUIP_POS_BACK",EQUIP_POS_BACK);
  tolua_constant(tolua_S,"EQUIP_POS_LEFT",EQUIP_POS_LEFT);
  tolua_constant(tolua_S,"EQUIP_POS_FACE",EQUIP_POS_FACE);
  tolua_constant(tolua_S,"EQUIP_POS_SHOULDER",EQUIP_POS_SHOULDER);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_BODY",EQUIP_POS_FASHION_BODY);
  tolua_constant(tolua_S,"EQUIP_POS_BADGE",EQUIP_POS_BADGE);
  tolua_constant(tolua_S,"EQUIP_POS_AMULET",EQUIP_POS_AMULET);
  tolua_constant(tolua_S,"EQUIP_POS_RING",EQUIP_POS_RING);
  tolua_constant(tolua_S,"EQUIP_POS_RING1",EQUIP_POS_RING1);
  tolua_constant(tolua_S,"EQUIP_POS_RING2",EQUIP_POS_RING2);
  tolua_constant(tolua_S,"EQUIP_POS_RING3",EQUIP_POS_RING3);
  tolua_constant(tolua_S,"EQUIP_POS_SHOE",EQUIP_POS_SHOE);
  tolua_constant(tolua_S,"EQUIP_POS_QIYUE",EQUIP_POS_QIYUE);
  tolua_constant(tolua_S,"EQUIP_POS_NECKLACE",EQUIP_POS_NECKLACE);
  tolua_constant(tolua_S,"EQUIP_POS_SACHET",EQUIP_POS_SACHET);
  tolua_constant(tolua_S,"EQUIP_POS_GRAIL",EQUIP_POS_GRAIL);
  tolua_constant(tolua_S,"EQUIP_POS_AMULET1",EQUIP_POS_AMULET1);
  tolua_constant(tolua_S,"EQUIP_POS_AMULET2",EQUIP_POS_AMULET2);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_HEAD",EQUIP_POS_FASHION_HEAD);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_HAIR",EQUIP_POS_FASHION_HAIR);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_BACK",EQUIP_POS_FASHION_BACK);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_SHOES",EQUIP_POS_FASHION_SHOES);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_HAND",EQUIP_POS_FASHION_HAND);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_LEG",EQUIP_POS_FASHION_LEG);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_BODY2",EQUIP_POS_FASHION_BODY2);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_HEAD2",EQUIP_POS_FASHION_HEAD2);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_HAIR2",EQUIP_POS_FASHION_HAIR2);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_BACK2",EQUIP_POS_FASHION_BACK2);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_SHOES2",EQUIP_POS_FASHION_SHOES2);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_HAND2",EQUIP_POS_FASHION_HAND2);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_LEG2",EQUIP_POS_FASHION_LEG2);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_BODY3",EQUIP_POS_FASHION_BODY3);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_HEAD3",EQUIP_POS_FASHION_HEAD3);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_HAIR3",EQUIP_POS_FASHION_HAIR3);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_BACK3",EQUIP_POS_FASHION_BACK3);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_SHOES3",EQUIP_POS_FASHION_SHOES3);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_HAND3",EQUIP_POS_FASHION_HAND3);
  tolua_constant(tolua_S,"EQUIP_POS_FASHION_LEG3",EQUIP_POS_FASHION_LEG3);
  tolua_constant(tolua_S,"EQUIP_POS_END",EQUIP_POS_END);
  tolua_constant(tolua_S,"POS_ID_HAIR",POS_ID_HAIR);
  tolua_constant(tolua_S,"POS_ID_FACE",POS_ID_FACE);
  tolua_constant(tolua_S,"POS_ID_CLOSES",POS_ID_CLOSES);
  tolua_constant(tolua_S,"POS_ID_LEFTHAND",POS_ID_LEFTHAND);
  tolua_constant(tolua_S,"POS_ID_RIGHTHAND",POS_ID_RIGHTHAND);
  tolua_constant(tolua_S,"POS_ID_HAT",POS_ID_HAT);
  tolua_constant(tolua_S,"POS_ID_SHOULD",POS_ID_SHOULD);
  tolua_constant(tolua_S,"POS_ID_BACK",POS_ID_BACK);
  tolua_constant(tolua_S,"POS_ID_SUIT",POS_ID_SUIT);
  tolua_constant(tolua_S,"POS_ID_FASHION_BODY",POS_ID_FASHION_BODY);
  tolua_constant(tolua_S,"POS_ID_MASK",POS_ID_MASK);
  tolua_constant(tolua_S,"POS_ID_HEAD",POS_ID_HEAD);
  tolua_constant(tolua_S,"POS_ID_FASHION_HAIR",POS_ID_FASHION_HAIR);
  tolua_constant(tolua_S,"POS_ID_FASHION_HEAD",POS_ID_FASHION_HEAD);
  tolua_constant(tolua_S,"POS_ID_FASHION_BACK",POS_ID_FASHION_BACK);
  tolua_constant(tolua_S,"POS_ID_FASHION_SHOES",POS_ID_FASHION_SHOES);
  tolua_constant(tolua_S,"POS_ID_FASHION_HAND",POS_ID_FASHION_HAND);
  tolua_constant(tolua_S,"POS_ID_FASHION_LEG",POS_ID_FASHION_LEG);
  tolua_constant(tolua_S,"AMM_POS_LEFT",AMM_POS_LEFT);
  tolua_constant(tolua_S,"AMM_POS_RIGHT",AMM_POS_RIGHT);
  tolua_constant(tolua_S,"AMM_POS_SHOULDER",AMM_POS_SHOULDER);
  tolua_constant(tolua_S,"AMM_POS_END",AMM_POS_END);
  tolua_constant(tolua_S,"CLIENT_MAX_AVATAR_ATTRIB",CLIENT_MAX_AVATAR_ATTRIB);
  tolua_array(tolua_S,"g_ArmEquipId_List",tolua_get_GameEngineTolua_g_ArmEquipId_List,tolua_set_GameEngineTolua_g_ArmEquipId_List);
  tolua_array(tolua_S,"g_ArmStarLv_List",tolua_get_GameEngineTolua_g_ArmStarLv_List,tolua_set_GameEngineTolua_g_ArmStarLv_List);
  tolua_array(tolua_S,"g_AvatarAttrib",tolua_get_GameEngineTolua_g_AvatarAttrib,tolua_set_GameEngineTolua_g_AvatarAttrib);
  tolua_array(tolua_S,"g_AvatarStar",tolua_get_GameEngineTolua_g_AvatarStar,tolua_set_GameEngineTolua_g_AvatarStar);
  tolua_variable(tolua_S,"g_AvatarSelect",tolua_get_g_AvatarSelect,tolua_set_g_AvatarSelect);
  tolua_function(tolua_S,"g_checkSuit",tolua_GameEngineTolua_g_checkSuit00);
  tolua_function(tolua_S,"g_AvatarChange",tolua_GameEngineTolua_g_AvatarChange00);
  tolua_function(tolua_S,"getArmEquip",tolua_GameEngineTolua_getArmEquip00);
  tolua_function(tolua_S,"setArmEquipIdList",tolua_GameEngineTolua_setArmEquipIdList00);
  tolua_function(tolua_S,"clearEquipIdList",tolua_GameEngineTolua_clearEquipIdList00);
  tolua_function(tolua_S,"getAvatarAttrib",tolua_GameEngineTolua_getAvatarAttrib00);
  tolua_function(tolua_S,"setAvatarAttrib",tolua_GameEngineTolua_setAvatarAttrib00);
  tolua_function(tolua_S,"getAvatarStarLv",tolua_GameEngineTolua_getAvatarStarLv00);
  tolua_function(tolua_S,"setAvatarStarLv",tolua_GameEngineTolua_setAvatarStarLv00);
  tolua_function(tolua_S,"getSuitSetId",tolua_GameEngineTolua_getSuitSetId00);
  tolua_function(tolua_S,"getSuitEquipNum",tolua_GameEngineTolua_getSuitEquipNum00);
  tolua_function(tolua_S,"setAvatarSelectSuit",tolua_GameEngineTolua_setAvatarSelectSuit00);
  tolua_function(tolua_S,"g_ConfigFashionFair",tolua_GameEngineTolua_g_ConfigFashionFair00);
  tolua_function(tolua_S,"convertEquipPos2PosId",tolua_GameEngineTolua_convertEquipPos2PosId00);
  tolua_constant(tolua_S,"MID_NPCSHOP_MONEYNOTENOUGH_SELLFAIL",MID_NPCSHOP_MONEYNOTENOUGH_SELLFAIL);
  tolua_constant(tolua_S,"MID_NPCSHOP_BULLNOTENOUGH_SELLFAIL",MID_NPCSHOP_BULLNOTENOUGH_SELLFAIL);
  tolua_constant(tolua_S,"MID_NPCSHOP_EXCHANGEITEMNOTENOUGH_SELLFAIL",MID_NPCSHOP_EXCHANGEITEMNOTENOUGH_SELLFAIL);
  tolua_constant(tolua_S,"MID_NPCSHOP_MONEYNOTENOUGH_BUYSAVEFAIL",MID_NPCSHOP_MONEYNOTENOUGH_BUYSAVEFAIL);
  tolua_constant(tolua_S,"MID_NPCSHOP_BULLNOTENOUGH_BUYSAVEFAIL",MID_NPCSHOP_BULLNOTENOUGH_BUYSAVEFAIL);
  tolua_constant(tolua_S,"MID_NPCSHOP_BULLNOTENOUGH_REPAIRFAIL",MID_NPCSHOP_BULLNOTENOUGH_REPAIRFAIL);
  tolua_constant(tolua_S,"MID_NPCSHOP_NOTNEEDREPAIR",MID_NPCSHOP_NOTNEEDREPAIR);
  tolua_constant(tolua_S,"MID_ARMPROCE_ARMSTAR",MID_ARMPROCE_ARMSTAR);
  tolua_constant(tolua_S,"MID_ARMPROCE_LEVEL",MID_ARMPROCE_LEVEL);
  tolua_constant(tolua_S,"MID_ARMPROCE_FIGHT",MID_ARMPROCE_FIGHT);
  tolua_constant(tolua_S,"MID_ARMPROCE_IDENTIFIABILITY",MID_ARMPROCE_IDENTIFIABILITY);
  tolua_constant(tolua_S,"MID_ARMPROCE_GEMLEVELUP",MID_ARMPROCE_GEMLEVELUP);
  tolua_constant(tolua_S,"MID_ARMPROCE_GEMINLAY",MID_ARMPROCE_GEMINLAY);
  tolua_constant(tolua_S,"MID_ARMPROCE_GEMPICK",MID_ARMPROCE_GEMPICK);
  tolua_constant(tolua_S,"MID_ARMPROCE_GEMPICK_FAIL",MID_ARMPROCE_GEMPICK_FAIL);
  tolua_constant(tolua_S,"MID_ARMPROCE_GEMINLAY_FAIL",MID_ARMPROCE_GEMINLAY_FAIL);
  tolua_constant(tolua_S,"MID_ARMPROCE_GEMLEVELUP_FAIL",MID_ARMPROCE_GEMLEVELUP_FAIL);
  tolua_constant(tolua_S,"MID_ARMPROCE_IDENTIFIABILITY_FAIL",MID_ARMPROCE_IDENTIFIABILITY_FAIL);
  tolua_constant(tolua_S,"MID_ARMPROCE_ARMSTAR_FAIL",MID_ARMPROCE_ARMSTAR_FAIL);
  tolua_constant(tolua_S,"MID_ARMPROCE_LEVEL_FAIL",MID_ARMPROCE_LEVEL_FAIL);
  tolua_constant(tolua_S,"MID_ARMPROCE_FIGHT_FAIL",MID_ARMPROCE_FIGHT_FAIL);
  tolua_constant(tolua_S,"MID_ARMPROCE_NOTGEMEFFECTINLAY",MID_ARMPROCE_NOTGEMEFFECTINLAY);
  tolua_constant(tolua_S,"MID_ARMPROCE_NOTSAMEGEMTYPE",MID_ARMPROCE_NOTSAMEGEMTYPE);
  tolua_constant(tolua_S,"MID_ARMPROCE_NOTSAMELEVEL",MID_ARMPROCE_NOTSAMELEVEL);
  tolua_constant(tolua_S,"MID_ARMPROCE_NOTGEM",MID_ARMPROCE_NOTGEM);
  tolua_constant(tolua_S,"MID_ARMPROCE_NOTINLAYGEM",MID_ARMPROCE_NOTINLAYGEM);
  tolua_constant(tolua_S,"MID_ARMPROCE_NOTEQUIP",MID_ARMPROCE_NOTEQUIP);
  tolua_constant(tolua_S,"MID_ARMPROCE_SAMEGEMTYPEINLAY",MID_ARMPROCE_SAMEGEMTYPEINLAY);
  tolua_constant(tolua_S,"MID_ARMPROCE_NOTGEMPICKITEM",MID_ARMPROCE_NOTGEMPICKITEM);
  tolua_constant(tolua_S,"MID_ARMPROCE_NOUPDATEGEM",MID_ARMPROCE_NOUPDATEGEM);
  tolua_constant(tolua_S,"MID_ARMPROCE_NOGEMUPDATEITEM",MID_ARMPROCE_NOGEMUPDATEITEM);
  tolua_constant(tolua_S,"MID_ARMPROCE_NOTEQUIPITEM",MID_ARMPROCE_NOTEQUIPITEM);
  tolua_constant(tolua_S,"MID_ARMPROCE_NOTHOLDEQUIP",MID_ARMPROCE_NOTHOLDEQUIP);
  tolua_constant(tolua_S,"MID_ARMPROCET_NOTARMSAFEITEM",MID_ARMPROCET_NOTARMSAFEITEM);
  tolua_constant(tolua_S,"MID_ARMPROCET_FIGHTSAFEITEM",MID_ARMPROCET_FIGHTSAFEITEM);
  tolua_constant(tolua_S,"MID_ARMPROCET_GEMSAFEITEM",MID_ARMPROCET_GEMSAFEITEM);
  tolua_constant(tolua_S,"MID_ARMPROCET_FIGHTLIMIT",MID_ARMPROCET_FIGHTLIMIT);
  tolua_constant(tolua_S,"MID_ARMPROCET_NOTGEMPICK",MID_ARMPROCET_NOTGEMPICK);
  tolua_constant(tolua_S,"MID_ARMPROCET_NOTSTARSTUFF",MID_ARMPROCET_NOTSTARSTUFF);
  tolua_constant(tolua_S,"MID_ARMPROCET_NOTFIGHTSTUFF",MID_ARMPROCET_NOTFIGHTSTUFF);
  tolua_constant(tolua_S,"MID_ARMPROCET_NOTEQUIPLEVELSTUFF",MID_ARMPROCET_NOTEQUIPLEVELSTUFF);
  tolua_constant(tolua_S,"MID_ARMPROCET_NOTHOLEINLAY",MID_ARMPROCET_NOTHOLEINLAY);
  tolua_constant(tolua_S,"MID_ARMPROCET_NOTHOLEEQUIP",MID_ARMPROCET_NOTHOLEEQUIP);
  tolua_constant(tolua_S,"MID_ARMPROCET_HOLEHASGEM",MID_ARMPROCET_HOLEHASGEM);
  tolua_constant(tolua_S,"MID_ARMPROCET_HOLECOLORDIFWITHGEM",MID_ARMPROCET_HOLECOLORDIFWITHGEM);
  tolua_constant(tolua_S,"MID_ARMPROCET_INLAY_LEVELLIMIT",MID_ARMPROCET_INLAY_LEVELLIMIT);
  tolua_constant(tolua_S,"MID_ARMPROCET_HOLEHASSAMEGEM",MID_ARMPROCET_HOLEHASSAMEGEM);
  tolua_constant(tolua_S,"MID_ARMPROCET_NOTINLAYGEM",MID_ARMPROCET_NOTINLAYGEM);
  tolua_constant(tolua_S,"MID_ARMPROCET_NOTEQUIPASKLEVELITEM",MID_ARMPROCET_NOTEQUIPASKLEVELITEM);
  tolua_constant(tolua_S,"MID_ARMPROCET_NOTEQUIPASKPICKITEM",MID_ARMPROCET_NOTEQUIPASKPICKITEM);
  tolua_constant(tolua_S,"MID_ARMPROCET_NOTCHOICEPICKGEM",MID_ARMPROCET_NOTCHOICEPICKGEM);
  tolua_constant(tolua_S,"MID_ARMPROCET_CANNOTINDENTITY",MID_ARMPROCET_CANNOTINDENTITY);
  tolua_constant(tolua_S,"MID_ARMPROCET_NOTINDENTITYEQUIP",MID_ARMPROCET_NOTINDENTITYEQUIP);
  tolua_constant(tolua_S,"MID_ARMPROCET_NOTENOUGHBULL",MID_ARMPROCET_NOTENOUGHBULL);
  tolua_constant(tolua_S,"MID_ARMPROCET_NOTNEXTITEMLEVEL",MID_ARMPROCET_NOTNEXTITEMLEVEL);
  tolua_constant(tolua_S,"MID_EXCHANGE_ACTIONFORBID",MID_EXCHANGE_ACTIONFORBID);
  tolua_constant(tolua_S,"MID_EQUIP_NOTENOUGHEXP",MID_EQUIP_NOTENOUGHEXP);
  tolua_constant(tolua_S,"MID_TRUST_NOTENOUGHLV",MID_TRUST_NOTENOUGHLV);
  tolua_constant(tolua_S,"MID_TRUST_NOTENOUGHLVORITEM",MID_TRUST_NOTENOUGHLVORITEM);
  tolua_constant(tolua_S,"MID_TRUST_HASTODAYLIMITFINISH",MID_TRUST_HASTODAYLIMITFINISH);
  tolua_constant(tolua_S,"MID_TRUST_MAX_ONETIME",MID_TRUST_MAX_ONETIME);
  tolua_constant(tolua_S,"MID_NPCSHOP_TRADENUMCANNOTNULL",MID_NPCSHOP_TRADENUMCANNOTNULL);
  tolua_constant(tolua_S,"MID_NPCSHOP_TRADEPRICECANNOTNULL",MID_NPCSHOP_TRADEPRICECANNOTNULL);
  tolua_constant(tolua_S,"MID_NPCSHOP_TRADEBUYNUMCANNULL",MID_NPCSHOP_TRADEBUYNUMCANNULL);
  tolua_constant(tolua_S,"MID_NPCSHOP_NOTCHOICEITEM",MID_NPCSHOP_NOTCHOICEITEM);
  tolua_constant(tolua_S,"MID_NPCSHOP_NONEEDREPAIR",MID_NPCSHOP_NONEEDREPAIR);
  tolua_constant(tolua_S,"MID_STALL_CANSTALLSTATE",MID_STALL_CANSTALLSTATE);
  tolua_constant(tolua_S,"MID_MAIL_NOTENOUGHLV",MID_MAIL_NOTENOUGHLV);
  tolua_constant(tolua_S,"MID_MAIL_HASINMAILSENDITEM",MID_MAIL_HASINMAILSENDITEM);
  tolua_constant(tolua_S,"MID_FIGHT_IN",MID_FIGHT_IN);
  tolua_constant(tolua_S,"MID_FIGHT_OUT",MID_FIGHT_OUT);
  tolua_constant(tolua_S,"MID_SHORTCUT_MPNOTENOUGH",MID_SHORTCUT_MPNOTENOUGH);
  tolua_constant(tolua_S,"MID_SHORTCUT_ENERGENOTENOUGH",MID_SHORTCUT_ENERGENOTENOUGH);
  tolua_constant(tolua_S,"MID_SHORTCUT_NOTITEM",MID_SHORTCUT_NOTITEM);
  tolua_constant(tolua_S,"MID_SHORTCUT_CANNOTUSESPELL_BUF",MID_SHORTCUT_CANNOTUSESPELL_BUF);
  tolua_constant(tolua_S,"MID_SHORTCUT_CANNOTUSESPELL_MOVE",MID_SHORTCUT_CANNOTUSESPELL_MOVE);
  tolua_constant(tolua_S,"MID_SHORTCUT_CANNOTUSESPELL_INMORPH",MID_SHORTCUT_CANNOTUSESPELL_INMORPH);
  tolua_constant(tolua_S,"MID_SHORTCUT_CANNOTUSESPELL_XPLIMIT",MID_SHORTCUT_CANNOTUSESPELL_XPLIMIT);
  tolua_constant(tolua_S,"MID_SHORTCUT_CANNOTUSESPELL_INSTALL",MID_SHORTCUT_CANNOTUSESPELL_INSTALL);
  tolua_constant(tolua_S,"MID_PATH_FINDNONPC",MID_PATH_FINDNONPC);
  tolua_constant(tolua_S,"MID_XP_COOLDOWNTIME",MID_XP_COOLDOWNTIME);
  tolua_constant(tolua_S,"MID_XP_NOENOUGHMP",MID_XP_NOENOUGHMP);
  tolua_constant(tolua_S,"MID_XP_NOENOUGHXP",MID_XP_NOENOUGHXP);
  tolua_constant(tolua_S,"MID_XP_NOENOUGHCOLLECT",MID_XP_NOENOUGHCOLLECT);
  tolua_constant(tolua_S,"MID_XP_NOINMAP",MID_XP_NOINMAP);
  tolua_constant(tolua_S,"MID_XP_NOCAMPTRUMP",MID_XP_NOCAMPTRUMP);
  tolua_constant(tolua_S,"MID_MAIL_SENDER_NAME_NULL",MID_MAIL_SENDER_NAME_NULL);
  tolua_constant(tolua_S,"MID_MAIL_TITLE_NULL",MID_MAIL_TITLE_NULL);
  tolua_constant(tolua_S,"MID_MAIL_NO_MONEY",MID_MAIL_NO_MONEY);
  tolua_constant(tolua_S,"MID_TRADE_SELF_FIGHT",MID_TRADE_SELF_FIGHT);
  tolua_constant(tolua_S,"MID_TRADE_SELF_STALL",MID_TRADE_SELF_STALL);
  tolua_constant(tolua_S,"MID_TRADE_SELF_FLY",MID_TRADE_SELF_FLY);
  tolua_constant(tolua_S,"MID_TRADE_SELF_DEAD",MID_TRADE_SELF_DEAD);
  tolua_constant(tolua_S,"MID_TRADE_SELF_MORPH",MID_TRADE_SELF_MORPH);
  tolua_constant(tolua_S,"MID_TRADE_SELF_TRUMP_PRE",MID_TRADE_SELF_TRUMP_PRE);
  tolua_constant(tolua_S,"MID_TRADE_CANNOT_REPEAT_CONFIRM_TRADE_",MID_TRADE_CANNOT_REPEAT_CONFIRM_TRADE_);
  tolua_constant(tolua_S,"MID_TRADE_CANNOT_DIST_TOO_LONG",MID_TRADE_CANNOT_DIST_TOO_LONG);
  tolua_constant(tolua_S,"MID_TRADE_CANNOT_NOT_CAN_TRADE_OBJECT",MID_TRADE_CANNOT_NOT_CAN_TRADE_OBJECT);
  tolua_constant(tolua_S,"MID_TRADE_ACTOR_FIGHT",MID_TRADE_ACTOR_FIGHT);
  tolua_constant(tolua_S,"MID_TRADE_ACTOR_STALL",MID_TRADE_ACTOR_STALL);
  tolua_constant(tolua_S,"MID_TRADE_ACTOR_FLY",MID_TRADE_ACTOR_FLY);
  tolua_constant(tolua_S,"MID_TRADE_ACTOR_DEAD",MID_TRADE_ACTOR_DEAD);
  tolua_constant(tolua_S,"MID_TRADE_DISTANCE_LONG",MID_TRADE_DISTANCE_LONG);
  tolua_constant(tolua_S,"MID_TRADE_INVITE_TIME_OUT",MID_TRADE_INVITE_TIME_OUT);
  tolua_constant(tolua_S,"MID_TRADE_RELATION_XIONGSHOU",MID_TRADE_RELATION_XIONGSHOU);
  tolua_constant(tolua_S,"MID_TRADE_RELATION_SUDI",MID_TRADE_RELATION_SUDI);
  tolua_constant(tolua_S,"MID_TRADE_RELATION_BLACK",MID_TRADE_RELATION_BLACK);
  tolua_constant(tolua_S,"MID_STALL_DISTANCE_LONG",MID_STALL_DISTANCE_LONG);
  tolua_constant(tolua_S,"MID_STALL_SELF_EMPTY",MID_STALL_SELF_EMPTY);
  tolua_constant(tolua_S,"MID_STALL_SELF_FIGHT",MID_STALL_SELF_FIGHT);
  tolua_constant(tolua_S,"MID_STALL_SELF_PK",MID_STALL_SELF_PK);
  tolua_constant(tolua_S,"MID_STALL_SELF_RIDE",MID_STALL_SELF_RIDE);
  tolua_constant(tolua_S,"MID_STALL_SELF_MORPH",MID_STALL_SELF_MORPH);
  tolua_constant(tolua_S,"MID_STALL_SEE_FIGHT",MID_STALL_SEE_FIGHT);
  tolua_constant(tolua_S,"MID_MULTIMAP_AUTOFIND_FAIL",MID_MULTIMAP_AUTOFIND_FAIL);
  tolua_constant(tolua_S,"MID_USESKILL_INCOLLECT_FAIL",MID_USESKILL_INCOLLECT_FAIL);
  tolua_constant(tolua_S,"MID_USEITEM_INCOLLECT_FAIL",MID_USEITEM_INCOLLECT_FAIL);
  tolua_constant(tolua_S,"MID_STALL_SELF_TRUMP_PRE",MID_STALL_SELF_TRUMP_PRE);
  tolua_constant(tolua_S,"MID_STALL_SELF_NEAR_NPC",MID_STALL_SELF_NEAR_NPC);
  tolua_constant(tolua_S,"MID_STALL_SELF_NEAR_OTHER_STALL",MID_STALL_SELF_NEAR_OTHER_STALL);
  tolua_constant(tolua_S,"MID_STALL_SELF_DEAD",MID_STALL_SELF_DEAD);
  tolua_constant(tolua_S,"MID_STALL_NOTENOUGHLV",MID_STALL_NOTENOUGHLV);
  tolua_constant(tolua_S,"MID_STALL_SEE_PK",MID_STALL_SEE_PK);
  tolua_constant(tolua_S,"MID_STALL_CANNOT_EMPTY",MID_STALL_CANNOT_EMPTY);
  tolua_constant(tolua_S,"MID_STALL_SEE_DEAD",MID_STALL_SEE_DEAD);
  tolua_constant(tolua_S,"MID_STALL_TOOMUCH_MONEY",MID_STALL_TOOMUCH_MONEY);
  tolua_constant(tolua_S,"MID_FOLLOW_START_FAIL",MID_FOLLOW_START_FAIL);
  tolua_constant(tolua_S,"MID_ITEM_USE_FAIL_INPRE",MID_ITEM_USE_FAIL_INPRE);
  tolua_constant(tolua_S,"MID_ITEM_USE_FAIL_NOTINAREA",MID_ITEM_USE_FAIL_NOTINAREA);
  tolua_constant(tolua_S,"MID_ITEM_USE_FAIL_IN_STALL",MID_ITEM_USE_FAIL_IN_STALL);
  tolua_constant(tolua_S,"MID_FRIEND_REPEAT_REQ",MID_FRIEND_REPEAT_REQ);
  tolua_constant(tolua_S,"MID_FRIEND_IS_ENEMY",MID_FRIEND_IS_ENEMY);
  tolua_constant(tolua_S,"MID_FRIEND_IS_SU_DI",MID_FRIEND_IS_SU_DI);
  tolua_constant(tolua_S,"MID_FRIEND_IS_BLACK",MID_FRIEND_IS_BLACK);
  tolua_constant(tolua_S,"MID_FITTINGMGR_NOFITSTUFF",MID_FITTINGMGR_NOFITSTUFF);
  tolua_constant(tolua_S,"MID_FITTINGMGR_NOTFITGROUP",MID_FITTINGMGR_NOTFITGROUP);
  tolua_constant(tolua_S,"MID_FITTINGMGR_CAREEALIMIT",MID_FITTINGMGR_CAREEALIMIT);
  tolua_constant(tolua_S,"MID_FITTINGMGR_INLAYSPECIALLIMIT",MID_FITTINGMGR_INLAYSPECIALLIMIT);
  tolua_constant(tolua_S,"MID_FITTINGMGR_INLAYNORMALLIMIT",MID_FITTINGMGR_INLAYNORMALLIMIT);
  tolua_constant(tolua_S,"MID_FITTINGMGR_SAMEIDLIMIT",MID_FITTINGMGR_SAMEIDLIMIT);
  tolua_constant(tolua_S,"MID_FITTINGMGR_SAMETYPELIMIT",MID_FITTINGMGR_SAMETYPELIMIT);
  tolua_constant(tolua_S,"MID_FITTINGMGR_NEEDBULLLIMIT",MID_FITTINGMGR_NEEDBULLLIMIT);
  tolua_constant(tolua_S,"MID_TRUMP_PER_FAIL_INFIGHT",MID_TRUMP_PER_FAIL_INFIGHT);
  tolua_constant(tolua_S,"MID_TRUMP_PER_FAIL_INDEAD",MID_TRUMP_PER_FAIL_INDEAD);
  tolua_constant(tolua_S,"MID_TRUMP_ISPRE",MID_TRUMP_ISPRE);
  tolua_constant(tolua_S,"MID_TRUMP_BACK_FAIL",MID_TRUMP_BACK_FAIL);
  tolua_constant(tolua_S,"MID_SPELL_UNUSED_NOAMM",MID_SPELL_UNUSED_NOAMM);
  tolua_constant(tolua_S,"MID_SPELL_UNUSED_RIGHTARM",MID_SPELL_UNUSED_RIGHTARM);
  tolua_constant(tolua_S,"MID_SPELL_UNUSED_LEFTARM",MID_SPELL_UNUSED_LEFTARM);
  tolua_constant(tolua_S,"MID_SPELL_UNUSED_SHOULDER",MID_SPELL_UNUSED_SHOULDER);
  tolua_constant(tolua_S,"MID_SPELL_UNUSED_BACK",MID_SPELL_UNUSED_BACK);
  tolua_constant(tolua_S,"MID_SPELL_UNUSED_NONEEQUIP",MID_SPELL_UNUSED_NONEEQUIP);
  tolua_constant(tolua_S,"MID_SPELL_UNUSED_CAMP",MID_SPELL_UNUSED_CAMP);
  tolua_constant(tolua_S,"MID_SPELL_UNUSED_OBJ",MID_SPELL_UNUSED_OBJ);
  tolua_constant(tolua_S,"MID_SPELL_UNUSED_DEAD",MID_SPELL_UNUSED_DEAD);
  tolua_constant(tolua_S,"MID_SPELL_UNUSED_MASK_TARGET",MID_SPELL_UNUSED_MASK_TARGET);
  tolua_constant(tolua_S,"MID_SPELL_UNUSED_MASK_POINT",MID_SPELL_UNUSED_MASK_POINT);
  tolua_constant(tolua_S,"MID_SPELL_UNUSED_INCOLLECT",MID_SPELL_UNUSED_INCOLLECT);
  tolua_constant(tolua_S,"MID_SPELL_NOTARGET",MID_SPELL_NOTARGET);
  tolua_constant(tolua_S,"MID_AUTOFIND_SELF_LIMIT",MID_AUTOFIND_SELF_LIMIT);
  tolua_constant(tolua_S,"MID_TRUST_ALREADY_ORDER",MID_TRUST_ALREADY_ORDER);
  tolua_constant(tolua_S,"MID_FIND_PATH_FAIL",MID_FIND_PATH_FAIL);
  tolua_constant(tolua_S,"MID_MARKET_NOT_ENOUGH_GOLD",MID_MARKET_NOT_ENOUGH_GOLD);
  tolua_constant(tolua_S,"MID_MARKET_NOT_ENOUGH_BIND_GOLD",MID_MARKET_NOT_ENOUGH_BIND_GOLD);
  tolua_constant(tolua_S,"MID_MARKET_NOT_FRIEND",MID_MARKET_NOT_FRIEND);
  tolua_constant(tolua_S,"MID_MARKET_SEND_TRADE_SUCESS",MID_MARKET_SEND_TRADE_SUCESS);
  tolua_constant(tolua_S,"MID_MARKET_TRADE_SUCESS",MID_MARKET_TRADE_SUCESS);
  tolua_constant(tolua_S,"MID_MARKET_DESTROY_SUCESS",MID_MARKET_DESTROY_SUCESS);
  tolua_constant(tolua_S,"MID_MARKET_PACKAGE_PRESENT_SUCESS",MID_MARKET_PACKAGE_PRESENT_SUCESS);
  tolua_constant(tolua_S,"MID_MARKET_BUY_TIME_OUT",MID_MARKET_BUY_TIME_OUT);
  tolua_constant(tolua_S,"MID_PET_PRE_FAIL_TRUMP",MID_PET_PRE_FAIL_TRUMP);
  tolua_constant(tolua_S,"MID_PET_PRE_FAIL_USEITEM",MID_PET_PRE_FAIL_USEITEM);
  tolua_constant(tolua_S,"MID_PET_PRE_FAIL_SKILLPRE",MID_PET_PRE_FAIL_SKILLPRE);
  tolua_constant(tolua_S,"MID_PET_PRE_FAIL_RIDEPRE",MID_PET_PRE_FAIL_RIDEPRE);
  tolua_constant(tolua_S,"MID_PET_PRE_FAIL_COLLECT",MID_PET_PRE_FAIL_COLLECT);
  tolua_constant(tolua_S,"MID_PET_PRE_FAIL_FIGHT",MID_PET_PRE_FAIL_FIGHT);
  tolua_constant(tolua_S,"MID_PET_PRE_FAIL_STALL",MID_PET_PRE_FAIL_STALL);
  tolua_constant(tolua_S,"MID_PET_PRE_FAIL_IN_OTHER_RIDE",MID_PET_PRE_FAIL_IN_OTHER_RIDE);
  tolua_constant(tolua_S,"MID_PET_PRE_FAIL_IN_RIDE_MACHINE",MID_PET_PRE_FAIL_IN_RIDE_MACHINE);
  tolua_constant(tolua_S,"MID_PET_FAIL_IN_FREEDOM_ANIL",MID_PET_FAIL_IN_FREEDOM_ANIL);
  tolua_constant(tolua_S,"MID_PET_FAIL_FREEDOM_IN_FIGHT",MID_PET_FAIL_FREEDOM_IN_FIGHT);
  tolua_constant(tolua_S,"MID_PET_PRE_FAIL_SOME_STATE",MID_PET_PRE_FAIL_SOME_STATE);
  tolua_constant(tolua_S,"MID_TRUMP_PRE_FAIL_PET",MID_TRUMP_PRE_FAIL_PET);
  tolua_constant(tolua_S,"MID_TRUMP_PRE_FAIL_USEITEM",MID_TRUMP_PRE_FAIL_USEITEM);
  tolua_constant(tolua_S,"MID_TRUMP_PRE_FAIL_SKILLPRE",MID_TRUMP_PRE_FAIL_SKILLPRE);
  tolua_constant(tolua_S,"MID_TRUMP_PRE_FAIL_COLLECT",MID_TRUMP_PRE_FAIL_COLLECT);
  tolua_constant(tolua_S,"MID_TRUMP_PRE_FAIL_RIDEPRE",MID_TRUMP_PRE_FAIL_RIDEPRE);
  tolua_constant(tolua_S,"MID_RIDE_PRE_FAIL_TRUMP",MID_RIDE_PRE_FAIL_TRUMP);
  tolua_constant(tolua_S,"MID_RIDE_PRE_FAIL_USEITEM",MID_RIDE_PRE_FAIL_USEITEM);
  tolua_constant(tolua_S,"MID_RIDE_PRE_FAIL_SKILLPRE",MID_RIDE_PRE_FAIL_SKILLPRE);
  tolua_constant(tolua_S,"MID_RIDE_PRE_FAIL_COLLECT",MID_RIDE_PRE_FAIL_COLLECT);
  tolua_constant(tolua_S,"MID_RIDE_PRE_FAIL_PET",MID_RIDE_PRE_FAIL_PET);
  tolua_constant(tolua_S,"MID_RIDE_PRE_FAIL_NO_RIDE",MID_RIDE_PRE_FAIL_NO_RIDE);
  tolua_constant(tolua_S,"MID_RIDE_PRE_FAIL_SOME_STATE",MID_RIDE_PRE_FAIL_SOME_STATE);
  tolua_constant(tolua_S,"MID_INFIGHT",MID_INFIGHT);
  tolua_constant(tolua_S,"MID_NOINFIGHT",MID_NOINFIGHT);
  tolua_constant(tolua_S,"MID_NEED_TARGET",MID_NEED_TARGET);
  tolua_constant(tolua_S,"MID_NEED_MONSTER_TARGET",MID_NEED_MONSTER_TARGET);
  tolua_constant(tolua_S,"MID_NEED_NPC_TARGET",MID_NEED_NPC_TARGET);
  tolua_constant(tolua_S,"MID_NEED_NPC_PLAYER",MID_NEED_NPC_PLAYER);
  tolua_constant(tolua_S,"MID_APPLY_TEAM_PLAYER_IS_ENEMY",MID_APPLY_TEAM_PLAYER_IS_ENEMY);
  tolua_constant(tolua_S,"MID_APPLY_TEAM_PLAYER_IS_TMPENEMY",MID_APPLY_TEAM_PLAYER_IS_TMPENEMY);
  tolua_constant(tolua_S,"MID_INVITE_TEAM_PLAYER_IS_TMPENEMY",MID_INVITE_TEAM_PLAYER_IS_TMPENEMY);
  tolua_constant(tolua_S,"MID_APPLY_TEAM_SELF_DEAD",MID_APPLY_TEAM_SELF_DEAD);
  tolua_constant(tolua_S,"MID_APPLY_TEAM_OTHER_DEAD",MID_APPLY_TEAM_OTHER_DEAD);
  tolua_constant(tolua_S,"MID_APPLY_TEAM_OTHER_IN_BLACK",MID_APPLY_TEAM_OTHER_IN_BLACK);
  tolua_constant(tolua_S,"MID_APPLY_TEAM_OTHER_IN_ZHUISHA",MID_APPLY_TEAM_OTHER_IN_ZHUISHA);
  tolua_constant(tolua_S,"MID_APPLY_TEAM_OTHER_IN_XIONGSHOU",MID_APPLY_TEAM_OTHER_IN_XIONGSHOU);
  tolua_constant(tolua_S,"MID_APPLY_TEAM_OTHER_IN_TEAM",MID_APPLY_TEAM_OTHER_IN_TEAM);
  tolua_constant(tolua_S,"MID_USE_ITEM_FAILE_HPENOUGH",MID_USE_ITEM_FAILE_HPENOUGH);
  tolua_constant(tolua_S,"MID_USE_ITEM_FAILE_MPENOUGH",MID_USE_ITEM_FAILE_MPENOUGH);
  tolua_constant(tolua_S,"MID_USE_ITEM_FAILE_LVENOUGH",MID_USE_ITEM_FAILE_LVENOUGH);
  tolua_constant(tolua_S,"MID_AUTO_TEAM_FAIL_AGREE_READY",MID_AUTO_TEAM_FAIL_AGREE_READY);
  tolua_constant(tolua_S,"MID_MARKET_NO_SEARCH",MID_MARKET_NO_SEARCH);
  tolua_constant(tolua_S,"MID_AUTO_TEAM_FAIL_TRAN_BY_EXCHANGE",MID_AUTO_TEAM_FAIL_TRAN_BY_EXCHANGE);
  tolua_constant(tolua_S,"MID_AUTO_TEAM_FAIL_TRAN_BY_STALL",MID_AUTO_TEAM_FAIL_TRAN_BY_STALL);
  tolua_constant(tolua_S,"MID_AUTO_TEAM_FAIL_TRAN_BY_DEAD",MID_AUTO_TEAM_FAIL_TRAN_BY_DEAD);
  tolua_constant(tolua_S,"MID_AUTO_TEAM_FAIL_TIME_OUT",MID_AUTO_TEAM_FAIL_TIME_OUT);
  tolua_constant(tolua_S,"MID_SECONDARYSKILL_WRONG_STATE",MID_SECONDARYSKILL_WRONG_STATE);
  tolua_constant(tolua_S,"MID_USEITEMPRE_WRONG_STATE",MID_USEITEMPRE_WRONG_STATE);
  tolua_constant(tolua_S,"MID_USEITEM_IN_FLY_STATE",MID_USEITEM_IN_FLY_STATE);
  tolua_constant(tolua_S,"MID_AUTOFIND_IN_FLY_STATE",MID_AUTOFIND_IN_FLY_STATE);
  tolua_constant(tolua_S,"MID_SHORTCUT_IN_FLY_STATE",MID_SHORTCUT_IN_FLY_STATE);
  tolua_constant(tolua_S,"MID_PWORLD_RESTOREITEM",MID_PWORLD_RESTOREITEM);
  tolua_constant(tolua_S,"MID_MAP_NOSKILL",MID_MAP_NOSKILL);
  tolua_constant(tolua_S,"MID_SAFE_ENV_NOSKILL",MID_SAFE_ENV_NOSKILL);
  tolua_constant(tolua_S,"MID_SELF_BUSY",MID_SELF_BUSY);
  tolua_constant(tolua_S,"MID_SELF_DEAD",MID_SELF_DEAD);
  tolua_constant(tolua_S,"MID_SELF_SPELLPRE",MID_SELF_SPELLPRE);
  tolua_constant(tolua_S,"MID_CANNT_USE_INPK",MID_CANNT_USE_INPK);
  tolua_constant(tolua_S,"MID_NOT_ENOUGH_ENERGY",MID_NOT_ENOUGH_ENERGY);
  tolua_constant(tolua_S,"MID_TARGET_TO_FAR",MID_TARGET_TO_FAR);
  tolua_constant(tolua_S,"MID_TRUMP_PER_FAIL_MOVE",MID_TRUMP_PER_FAIL_MOVE);
  tolua_constant(tolua_S,"MID_MOVE_FAIL_STALL",MID_MOVE_FAIL_STALL);
  tolua_constant(tolua_S,"MID_PICK_ITEM_TOO_FAR",MID_PICK_ITEM_TOO_FAR);
  tolua_constant(tolua_S,"MID_SECONDARYSKILL_FAILED_INRIDE",MID_SECONDARYSKILL_FAILED_INRIDE);
  tolua_constant(tolua_S,"MID_SECONDARYSKILL_FAILED_INFIGHT",MID_SECONDARYSKILL_FAILED_INFIGHT);
  tolua_constant(tolua_S,"MID_SECONDARYSKILL_FAILED_INCASTING",MID_SECONDARYSKILL_FAILED_INCASTING);
  tolua_constant(tolua_S,"MID_SECONDARYSKILL_FAILED_CANNTCONTROL",MID_SECONDARYSKILL_FAILED_CANNTCONTROL);
  tolua_constant(tolua_S,"MID_SECONDARYSKILL_FAILED_COLDDOWN",MID_SECONDARYSKILL_FAILED_COLDDOWN);
  tolua_constant(tolua_S,"MID_CANNOT_CATCH_PET",MID_CANNOT_CATCH_PET);
  tolua_constant(tolua_S,"MID_CATCH_PET_DEAD",MID_CATCH_PET_DEAD);
  tolua_constant(tolua_S,"MID_FAIL_WEI_XING",MID_FAIL_WEI_XING);
  tolua_constant(tolua_S,"MID_NPCSHOP_BATTLE_GLORY_SELLFAIL",MID_NPCSHOP_BATTLE_GLORY_SELLFAIL);
  tolua_constant(tolua_S,"MID_NPCSHOP_AOSHAN_BRAND_SELLFAIL",MID_NPCSHOP_AOSHAN_BRAND_SELLFAIL);
  tolua_constant(tolua_S,"MID_NPCSHOP_LIFT_BRAND_SELLFAIL",MID_NPCSHOP_LIFT_BRAND_SELLFAIL);
  tolua_constant(tolua_S,"MID_TRUMP_PER_FAIL_BADSTATUS",MID_TRUMP_PER_FAIL_BADSTATUS);
  tolua_constant(tolua_S,"MID_RESOLVE_WRONG_STATE",MID_RESOLVE_WRONG_STATE);
  tolua_constant(tolua_S,"MID_RESOLVE_FAILED_INCASTING",MID_RESOLVE_FAILED_INCASTING);
  tolua_constant(tolua_S,"MID_RESOLVE_CONTAINER_LOCK",MID_RESOLVE_CONTAINER_LOCK);
  tolua_constant(tolua_S,"MID_RESOLVE_FAILED_CANNTCONTROL",MID_RESOLVE_FAILED_CANNTCONTROL);
  tolua_constant(tolua_S,"MID_RIDE_PRE_FAILED_CLAN_LIMIT_CAPTION",MID_RIDE_PRE_FAILED_CLAN_LIMIT_CAPTION);
  tolua_constant(tolua_S,"MID_RIDE_PRE_FAILED_CLAN_LIMIT_MEMBER",MID_RIDE_PRE_FAILED_CLAN_LIMIT_MEMBER);
  tolua_constant(tolua_S,"MID_USE_ITEM_FAILED_CLAN_LIMIT_CAPTION",MID_USE_ITEM_FAILED_CLAN_LIMIT_CAPTION);
  tolua_constant(tolua_S,"MID_USE_ITEM_FAILED_CLAN_LIMIT_MEMBER",MID_USE_ITEM_FAILED_CLAN_LIMIT_MEMBER);
  tolua_constant(tolua_S,"MID_USE_BACK_CLAN_ITEM_FAILED_INFIGHT",MID_USE_BACK_CLAN_ITEM_FAILED_INFIGHT);
  tolua_constant(tolua_S,"MID_USE_PET_EGG_PET_FULL",MID_USE_PET_EGG_PET_FULL);
  tolua_constant(tolua_S,"MID_PET_MAP_NO_PET_FIGHT",MID_PET_MAP_NO_PET_FIGHT);
  tolua_constant(tolua_S,"MID_PET_MAP_NO_FAIRY_FIGHT",MID_PET_MAP_NO_FAIRY_FIGHT);
  tolua_constant(tolua_S,"MID_MUST_MACHINE_COLLECT",MID_MUST_MACHINE_COLLECT);
  tolua_constant(tolua_S,"MID_MACHINE_UNMATCH_COLLECT",MID_MACHINE_UNMATCH_COLLECT);
  tolua_constant(tolua_S,"MID_MACHINE_UNMATCH_COLLECT_MORMAL",MID_MACHINE_UNMATCH_COLLECT_MORMAL);
  tolua_constant(tolua_S,"MID_USE_MACHINE_ITEM_IN_MORPH",MID_USE_MACHINE_ITEM_IN_MORPH);
  tolua_constant(tolua_S,"MID_USE_MORPH_ITEM_IN_MACHINE",MID_USE_MORPH_ITEM_IN_MACHINE);
  tolua_constant(tolua_S,"MID_ENTER_CLANISLAND_IN_FIGHT",MID_ENTER_CLANISLAND_IN_FIGHT);
  tolua_constant(tolua_S,"MID_ENTER_CLANISLAND_IN_MACHINE",MID_ENTER_CLANISLAND_IN_MACHINE);
  tolua_constant(tolua_S,"MID_SUMMON_MUST_BE_CAPTAIN",MID_SUMMON_MUST_BE_CAPTAIN);
  tolua_constant(tolua_S,"MID_SUMMON_MUST_BE_PRESIDENT",MID_SUMMON_MUST_BE_PRESIDENT);
  tolua_constant(tolua_S,"MID_NOTENOUGH_COST_ITEM",MID_NOTENOUGH_COST_ITEM);
  tolua_constant(tolua_S,"MID_CHATLINK_MAX_NUM",MID_CHATLINK_MAX_NUM);
  tolua_constant(tolua_S,"MID_CHATLINK_SAME_EXIST",MID_CHATLINK_SAME_EXIST);
  tolua_constant(tolua_S,"MID_NO_ATTACK_WORLD_CITY_CONTROL",MID_NO_ATTACK_WORLD_CITY_CONTROL);
  tolua_constant(tolua_S,"MID_NO_ITEM_USE_IN_THIS_MAP",MID_NO_ITEM_USE_IN_THIS_MAP);
  tolua_constant(tolua_S,"MID_NPCSHOP_SPARTA_GLORY_SELLFAIL",MID_NPCSHOP_SPARTA_GLORY_SELLFAIL);
  tolua_constant(tolua_S,"MID_NO_CHANGE_STALL_MODEL",MID_NO_CHANGE_STALL_MODEL);
  tolua_constant(tolua_S,"CONTAINER_TYPE_AMM",CONTAINER_TYPE_AMM);
  tolua_constant(tolua_S,"CONTAINER_TYPE_STUFF",CONTAINER_TYPE_STUFF);
  tolua_constant(tolua_S,"CONTAINER_TYPE_TASK",CONTAINER_TYPE_TASK);
  tolua_constant(tolua_S,"CONTAINER_TYPE_SUNDRIES",CONTAINER_TYPE_SUNDRIES);
  tolua_constant(tolua_S,"CONTAINER_TYPE_TMP",CONTAINER_TYPE_TMP);
  tolua_constant(tolua_S,"CONTAINER_TYPE_STASH",CONTAINER_TYPE_STASH);
  tolua_constant(tolua_S,"CONTAINER_TYPE_WEAR",CONTAINER_TYPE_WEAR);
  tolua_constant(tolua_S,"CONTAINER_TYPE_MARKET",CONTAINER_TYPE_MARKET);
  tolua_constant(tolua_S,"CONTAINER_TYPE_EXTEND_STASH",CONTAINER_TYPE_EXTEND_STASH);
  tolua_constant(tolua_S,"CONTAINER_TYPE_EXTEND",CONTAINER_TYPE_EXTEND);
  tolua_constant(tolua_S,"CONTAINER_TYPE_SPAR",CONTAINER_TYPE_SPAR);
  tolua_constant(tolua_S,"CONTAINER_TYPE_DROP",CONTAINER_TYPE_DROP);
  tolua_constant(tolua_S,"CONTAINER_TYPE_END",CONTAINER_TYPE_END);
  tolua_constant(tolua_S,"MAX_SPAR_PKG_TOLUA",MAX_SPAR_PKG_TOLUA);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagAmmContainer","tagAmmContainer","",tolua_collect_tagAmmContainer);
  #else
  tolua_cclass(tolua_S,"tagAmmContainer","tagAmmContainer","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagAmmContainer");
   tolua_variable(tolua_S,"m_nMaxNum",tolua_get_tagAmmContainer_m_nMaxNum,tolua_set_tagAmmContainer_m_nMaxNum);
   tolua_variable(tolua_S,"m_nNum",tolua_get_tagAmmContainer_m_nNum,tolua_set_tagAmmContainer_m_nNum);
   tolua_array(tolua_S,"m_ItemData",tolua_get_GameEngineTolua_tagAmmContainer_m_ItemData,tolua_set_GameEngineTolua_tagAmmContainer_m_ItemData);
   tolua_function(tolua_S,"new",tolua_GameEngineTolua_tagAmmContainer_new00);
   tolua_function(tolua_S,"new_local",tolua_GameEngineTolua_tagAmmContainer_new00_local);
   tolua_function(tolua_S,".call",tolua_GameEngineTolua_tagAmmContainer_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagStuffContainer","tagStuffContainer","",tolua_collect_tagStuffContainer);
  #else
  tolua_cclass(tolua_S,"tagStuffContainer","tagStuffContainer","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagStuffContainer");
   tolua_variable(tolua_S,"m_nMaxNum",tolua_get_tagStuffContainer_m_nMaxNum,tolua_set_tagStuffContainer_m_nMaxNum);
   tolua_variable(tolua_S,"m_nNum",tolua_get_tagStuffContainer_m_nNum,tolua_set_tagStuffContainer_m_nNum);
   tolua_array(tolua_S,"m_ItemData",tolua_get_GameEngineTolua_tagStuffContainer_m_ItemData,tolua_set_GameEngineTolua_tagStuffContainer_m_ItemData);
   tolua_function(tolua_S,"new",tolua_GameEngineTolua_tagStuffContainer_new00);
   tolua_function(tolua_S,"new_local",tolua_GameEngineTolua_tagStuffContainer_new00_local);
   tolua_function(tolua_S,".call",tolua_GameEngineTolua_tagStuffContainer_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagTaskContainer","tagTaskContainer","",tolua_collect_tagTaskContainer);
  #else
  tolua_cclass(tolua_S,"tagTaskContainer","tagTaskContainer","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagTaskContainer");
   tolua_variable(tolua_S,"m_nMaxNum",tolua_get_tagTaskContainer_m_nMaxNum,tolua_set_tagTaskContainer_m_nMaxNum);
   tolua_variable(tolua_S,"m_nNum",tolua_get_tagTaskContainer_m_nNum,tolua_set_tagTaskContainer_m_nNum);
   tolua_array(tolua_S,"m_ItemData",tolua_get_GameEngineTolua_tagTaskContainer_m_ItemData,tolua_set_GameEngineTolua_tagTaskContainer_m_ItemData);
   tolua_function(tolua_S,"new",tolua_GameEngineTolua_tagTaskContainer_new00);
   tolua_function(tolua_S,"new_local",tolua_GameEngineTolua_tagTaskContainer_new00_local);
   tolua_function(tolua_S,".call",tolua_GameEngineTolua_tagTaskContainer_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagSundriesContainer","tagSundriesContainer","",tolua_collect_tagSundriesContainer);
  #else
  tolua_cclass(tolua_S,"tagSundriesContainer","tagSundriesContainer","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagSundriesContainer");
   tolua_variable(tolua_S,"m_nMaxNum",tolua_get_tagSundriesContainer_m_nMaxNum,tolua_set_tagSundriesContainer_m_nMaxNum);
   tolua_variable(tolua_S,"m_nNum",tolua_get_tagSundriesContainer_m_nNum,tolua_set_tagSundriesContainer_m_nNum);
   tolua_array(tolua_S,"m_ItemData",tolua_get_GameEngineTolua_tagSundriesContainer_m_ItemData,tolua_set_GameEngineTolua_tagSundriesContainer_m_ItemData);
   tolua_function(tolua_S,"new",tolua_GameEngineTolua_tagSundriesContainer_new00);
   tolua_function(tolua_S,"new_local",tolua_GameEngineTolua_tagSundriesContainer_new00_local);
   tolua_function(tolua_S,".call",tolua_GameEngineTolua_tagSundriesContainer_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagTemContainer","tagTemContainer","",tolua_collect_tagTemContainer);
  #else
  tolua_cclass(tolua_S,"tagTemContainer","tagTemContainer","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagTemContainer");
   tolua_variable(tolua_S,"m_nMaxNum",tolua_get_tagTemContainer_m_nMaxNum,tolua_set_tagTemContainer_m_nMaxNum);
   tolua_variable(tolua_S,"m_nNum",tolua_get_tagTemContainer_m_nNum,tolua_set_tagTemContainer_m_nNum);
   tolua_variable(tolua_S,"m_nTimeEnd",tolua_get_tagTemContainer_m_nTimeEnd,tolua_set_tagTemContainer_m_nTimeEnd);
   tolua_array(tolua_S,"m_ItemData",tolua_get_GameEngineTolua_tagTemContainer_m_ItemData,tolua_set_GameEngineTolua_tagTemContainer_m_ItemData);
   tolua_function(tolua_S,"new",tolua_GameEngineTolua_tagTemContainer_new00);
   tolua_function(tolua_S,"new_local",tolua_GameEngineTolua_tagTemContainer_new00_local);
   tolua_function(tolua_S,".call",tolua_GameEngineTolua_tagTemContainer_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagStashContainer","tagStashContainer","",tolua_collect_tagStashContainer);
  #else
  tolua_cclass(tolua_S,"tagStashContainer","tagStashContainer","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagStashContainer");
   tolua_variable(tolua_S,"m_nMaxNum",tolua_get_tagStashContainer_m_nMaxNum,tolua_set_tagStashContainer_m_nMaxNum);
   tolua_variable(tolua_S,"m_nNum",tolua_get_tagStashContainer_m_nNum,tolua_set_tagStashContainer_m_nNum);
   tolua_variable(tolua_S,"m_nMoney",tolua_get_tagStashContainer_m_nMoney,tolua_set_tagStashContainer_m_nMoney);
   tolua_array(tolua_S,"m_ItemData",tolua_get_GameEngineTolua_tagStashContainer_m_ItemData,tolua_set_GameEngineTolua_tagStashContainer_m_ItemData);
   tolua_function(tolua_S,"new",tolua_GameEngineTolua_tagStashContainer_new00);
   tolua_function(tolua_S,"new_local",tolua_GameEngineTolua_tagStashContainer_new00_local);
   tolua_function(tolua_S,".call",tolua_GameEngineTolua_tagStashContainer_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagMarketContainer","tagMarketContainer","",tolua_collect_tagMarketContainer);
  #else
  tolua_cclass(tolua_S,"tagMarketContainer","tagMarketContainer","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagMarketContainer");
   tolua_variable(tolua_S,"m_nMaxNum",tolua_get_tagMarketContainer_m_nMaxNum,tolua_set_tagMarketContainer_m_nMaxNum);
   tolua_variable(tolua_S,"m_nNum",tolua_get_tagMarketContainer_m_nNum,tolua_set_tagMarketContainer_m_nNum);
   tolua_array(tolua_S,"m_ItemData",tolua_get_GameEngineTolua_tagMarketContainer_m_ItemData,tolua_set_GameEngineTolua_tagMarketContainer_m_ItemData);
   tolua_function(tolua_S,"new",tolua_GameEngineTolua_tagMarketContainer_new00);
   tolua_function(tolua_S,"new_local",tolua_GameEngineTolua_tagMarketContainer_new00_local);
   tolua_function(tolua_S,".call",tolua_GameEngineTolua_tagMarketContainer_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagExtendContainer","tagExtendContainer","",tolua_collect_tagExtendContainer);
  #else
  tolua_cclass(tolua_S,"tagExtendContainer","tagExtendContainer","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagExtendContainer");
   tolua_variable(tolua_S,"m_nMaxNum",tolua_get_tagExtendContainer_m_nMaxNum,tolua_set_tagExtendContainer_m_nMaxNum);
   tolua_variable(tolua_S,"m_nNum",tolua_get_tagExtendContainer_m_nNum,tolua_set_tagExtendContainer_m_nNum);
   tolua_array(tolua_S,"m_ItemData",tolua_get_GameEngineTolua_tagExtendContainer_m_ItemData,tolua_set_GameEngineTolua_tagExtendContainer_m_ItemData);
   tolua_variable(tolua_S,"m_nStuffNum",tolua_get_tagExtendContainer_m_nStuffNum,tolua_set_tagExtendContainer_m_nStuffNum);
   tolua_function(tolua_S,"new",tolua_GameEngineTolua_tagExtendContainer_new00);
   tolua_function(tolua_S,"new_local",tolua_GameEngineTolua_tagExtendContainer_new00_local);
   tolua_function(tolua_S,".call",tolua_GameEngineTolua_tagExtendContainer_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagBootyInfo","tagBootyInfo","",NULL);
  tolua_beginmodule(tolua_S,"tagBootyInfo");
   tolua_variable(tolua_S,"id",tolua_get_tagBootyInfo_id,tolua_set_tagBootyInfo_id);
   tolua_variable(tolua_S,"m_nNum",tolua_get_tagBootyInfo_m_nNum,tolua_set_tagBootyInfo_m_nNum);
   tolua_array(tolua_S,"m_ItemData",tolua_get_GameEngineTolua_tagBootyInfo_m_ItemData,tolua_set_GameEngineTolua_tagBootyInfo_m_ItemData);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagMarketInfo","tagMarketInfo","",NULL);
  tolua_beginmodule(tolua_S,"tagMarketInfo");
   tolua_variable(tolua_S,"id",tolua_get_tagMarketInfo_id,tolua_set_tagMarketInfo_id);
   tolua_variable(tolua_S,"m_nNum",tolua_get_tagMarketInfo_m_nNum,tolua_set_tagMarketInfo_m_nNum);
   tolua_array(tolua_S,"m_ItemData",tolua_get_GameEngineTolua_tagMarketInfo_m_ItemData,tolua_set_GameEngineTolua_tagMarketInfo_m_ItemData);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagSparContainer","tagSparContainer","",tolua_collect_tagSparContainer);
  #else
  tolua_cclass(tolua_S,"tagSparContainer","tagSparContainer","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagSparContainer");
   tolua_variable(tolua_S,"id",tolua_get_tagSparContainer_id,tolua_set_tagSparContainer_id);
   tolua_variable(tolua_S,"m_nNum",tolua_get_tagSparContainer_m_nNum,tolua_set_tagSparContainer_m_nNum);
   tolua_variable(tolua_S,"m_nMaxNum",tolua_get_tagSparContainer_m_nMaxNum,tolua_set_tagSparContainer_m_nMaxNum);
   tolua_array(tolua_S,"m_ItemData",tolua_get_GameEngineTolua_tagSparContainer_m_ItemData,tolua_set_GameEngineTolua_tagSparContainer_m_ItemData);
   tolua_function(tolua_S,"new",tolua_GameEngineTolua_tagSparContainer_new00);
   tolua_function(tolua_S,"new_local",tolua_GameEngineTolua_tagSparContainer_new00_local);
   tolua_function(tolua_S,".call",tolua_GameEngineTolua_tagSparContainer_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagSkillDyAttrib","tagSkillDyAttrib","",NULL);
  tolua_beginmodule(tolua_S,"tagSkillDyAttrib");
   tolua_variable(tolua_S,"SkillLevel",tolua_get_tagSkillDyAttrib_SkillLevel,tolua_set_tagSkillDyAttrib_SkillLevel);
   tolua_variable(tolua_S,"CollectNum",tolua_get_tagSkillDyAttrib_CollectNum,tolua_set_tagSkillDyAttrib_CollectNum);
   tolua_variable(tolua_S,"CollectNumMax",tolua_get_tagSkillDyAttrib_CollectNumMax,tolua_set_tagSkillDyAttrib_CollectNumMax);
   tolua_variable(tolua_S,"RuneSlotEnabled",tolua_get_tagSkillDyAttrib_RuneSlotEnabled,tolua_set_tagSkillDyAttrib_RuneSlotEnabled);
   tolua_variable(tolua_S,"RuneSlot",tolua_get_tagSkillDyAttrib_RuneSlot,tolua_set_tagSkillDyAttrib_RuneSlot);
   tolua_variable(tolua_S,"RuneItemID",tolua_get_tagSkillDyAttrib_RuneItemID,tolua_set_tagSkillDyAttrib_RuneItemID);
   tolua_variable(tolua_S,"RuneItemIDs",tolua_get_tagSkillDyAttrib_RuneItemIDs,tolua_set_tagSkillDyAttrib_RuneItemIDs);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagSkillAttrib","tagSkillAttrib","",NULL);
  tolua_beginmodule(tolua_S,"tagSkillAttrib");
   tolua_variable(tolua_S,"m_nSkillId",tolua_get_tagSkillAttrib_m_nSkillId,tolua_set_tagSkillAttrib_m_nSkillId);
   tolua_variable(tolua_S,"m_nBuffId",tolua_get_tagSkillAttrib_m_nBuffId,tolua_set_tagSkillAttrib_m_nBuffId);
   tolua_variable(tolua_S,"m_nFittingId",tolua_get_tagSkillAttrib_m_nFittingId,tolua_set_tagSkillAttrib_m_nFittingId);
   tolua_variable(tolua_S,"m_nBehitDelay",tolua_get_tagSkillAttrib_m_nBehitDelay,tolua_set_tagSkillAttrib_m_nBehitDelay);
   tolua_variable(tolua_S,"m_BehitId",tolua_get_tagSkillAttrib_m_BehitId,tolua_set_tagSkillAttrib_m_BehitId);
   tolua_variable(tolua_S,"m_CollectActId",tolua_get_tagSkillAttrib_m_CollectActId,tolua_set_tagSkillAttrib_m_CollectActId);
   tolua_array(tolua_S,"m_ActId",tolua_get_GameEngineTolua_tagSkillAttrib_m_ActId,tolua_set_GameEngineTolua_tagSkillAttrib_m_ActId);
   tolua_variable(tolua_S,"m_PreActId",tolua_get_tagSkillAttrib_m_PreActId,tolua_set_tagSkillAttrib_m_PreActId);
   tolua_variable(tolua_S,"m_nHitBackType",tolua_get_tagSkillAttrib_m_nHitBackType,tolua_set_tagSkillAttrib_m_nHitBackType);
   tolua_variable(tolua_S,"m_nHitBackSpeed",tolua_get_tagSkillAttrib_m_nHitBackSpeed,tolua_set_tagSkillAttrib_m_nHitBackSpeed);
   tolua_variable(tolua_S,"m_nHitBackHight",tolua_get_tagSkillAttrib_m_nHitBackHight,tolua_set_tagSkillAttrib_m_nHitBackHight);
   tolua_variable(tolua_S,"m_nHitBackTime",tolua_get_tagSkillAttrib_m_nHitBackTime,tolua_set_tagSkillAttrib_m_nHitBackTime);
   tolua_variable(tolua_S,"m_strHitBackExtraInfo",tolua_get_tagSkillAttrib_m_strHitBackExtraInfo,tolua_set_tagSkillAttrib_m_strHitBackExtraInfo);
   tolua_variable(tolua_S,"m_nMoveTime",tolua_get_tagSkillAttrib_m_nMoveTime,tolua_set_tagSkillAttrib_m_nMoveTime);
   tolua_variable(tolua_S,"m_nHideWeapon",tolua_get_tagSkillAttrib_m_nHideWeapon,tolua_set_tagSkillAttrib_m_nHideWeapon);
   tolua_variable(tolua_S,"m_isPreHideWeapon",tolua_get_tagSkillAttrib_m_isPreHideWeapon,tolua_set_tagSkillAttrib_m_isPreHideWeapon);
   tolua_variable(tolua_S,"m_isNoBreak",tolua_get_tagSkillAttrib_m_isNoBreak,tolua_set_tagSkillAttrib_m_isNoBreak);
   tolua_variable(tolua_S,"m_strPreEffName",tolua_get_tagSkillAttrib_m_strPreEffName,tolua_set_tagSkillAttrib_m_strPreEffName);
   tolua_variable(tolua_S,"m_ActEffName",tolua_get_tagSkillAttrib_m_ActEffName,tolua_set_tagSkillAttrib_m_ActEffName);
   tolua_variable(tolua_S,"m_HitEffName",tolua_get_tagSkillAttrib_m_HitEffName,tolua_set_tagSkillAttrib_m_HitEffName);
   tolua_variable(tolua_S,"m_CollectEffectName",tolua_get_tagSkillAttrib_m_CollectEffectName,tolua_set_tagSkillAttrib_m_CollectEffectName);
   tolua_variable(tolua_S,"m_CollectBlastEffectName",tolua_get_tagSkillAttrib_m_CollectBlastEffectName,tolua_set_tagSkillAttrib_m_CollectBlastEffectName);
   tolua_array(tolua_S,"m_CollectPower",tolua_get_GameEngineTolua_tagSkillAttrib_m_CollectPower,tolua_set_GameEngineTolua_tagSkillAttrib_m_CollectPower);
   tolua_variable(tolua_S,"m_strTraceEff",tolua_get_tagSkillAttrib_m_strTraceEff,tolua_set_tagSkillAttrib_m_strTraceEff);
   tolua_variable(tolua_S,"m_nTraceFadeTime",tolua_get_tagSkillAttrib_m_nTraceFadeTime,tolua_set_tagSkillAttrib_m_nTraceFadeTime);
   tolua_variable(tolua_S,"m_nTraceTotalTime",tolua_get_tagSkillAttrib_m_nTraceTotalTime,tolua_set_tagSkillAttrib_m_nTraceTotalTime);
   tolua_variable(tolua_S,"m_nTraceSpeed",tolua_get_tagSkillAttrib_m_nTraceSpeed,tolua_set_tagSkillAttrib_m_nTraceSpeed);
   tolua_variable(tolua_S,"m_Name",tolua_get_tagSkillAttrib_m_Name,tolua_set_tagSkillAttrib_m_Name);
   tolua_variable(tolua_S,"m_Title",tolua_get_tagSkillAttrib_m_Title,tolua_set_tagSkillAttrib_m_Title);
   tolua_variable(tolua_S,"m_strType",tolua_get_tagSkillAttrib_m_strType,tolua_set_tagSkillAttrib_m_strType);
   tolua_variable(tolua_S,"m_strScript",tolua_get_tagSkillAttrib_m_strScript,tolua_set_tagSkillAttrib_m_strScript);
   tolua_variable(tolua_S,"m_strThrowtype",tolua_get_tagSkillAttrib_m_strThrowtype,tolua_set_tagSkillAttrib_m_strThrowtype);
   tolua_variable(tolua_S,"m_strFlyActorName",tolua_get_tagSkillAttrib_m_strFlyActorName,tolua_set_tagSkillAttrib_m_strFlyActorName);
   tolua_variable(tolua_S,"m_flySpeed",tolua_get_tagSkillAttrib_m_flySpeed,tolua_set_tagSkillAttrib_m_flySpeed);
   tolua_variable(tolua_S,"m_nFlyDesAnchorId",tolua_get_tagSkillAttrib_m_nFlyDesAnchorId,tolua_set_tagSkillAttrib_m_nFlyDesAnchorId);
   tolua_variable(tolua_S,"m_nFlySrcAnchorId",tolua_get_tagSkillAttrib_m_nFlySrcAnchorId,tolua_set_tagSkillAttrib_m_nFlySrcAnchorId);
   tolua_variable(tolua_S,"m_nFlyHeightRadio",tolua_get_tagSkillAttrib_m_nFlyHeightRadio,tolua_set_tagSkillAttrib_m_nFlyHeightRadio);
   tolua_variable(tolua_S,"m_nFlyActorNum",tolua_get_tagSkillAttrib_m_nFlyActorNum,tolua_set_tagSkillAttrib_m_nFlyActorNum);
   tolua_variable(tolua_S,"m_nFlyActorDelay",tolua_get_tagSkillAttrib_m_nFlyActorDelay,tolua_set_tagSkillAttrib_m_nFlyActorDelay);
   tolua_variable(tolua_S,"m_bFlyMulti",tolua_get_tagSkillAttrib_m_bFlyMulti,tolua_set_tagSkillAttrib_m_bFlyMulti);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"ISpellControler","ISpellControler","",NULL);
  tolua_beginmodule(tolua_S,"ISpellControler");
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GameSpell","GameSpell","",NULL);
  tolua_beginmodule(tolua_S,"GameSpell");
   tolua_function(tolua_S,"getAttackDist",tolua_GameEngineTolua_GameSpell_getAttackDist00);
   tolua_function(tolua_S,"playAction",tolua_GameEngineTolua_GameSpell_playAction00);
   tolua_function(tolua_S,"update",tolua_GameEngineTolua_GameSpell_update00);
   tolua_function(tolua_S,"onUpdate",tolua_GameEngineTolua_GameSpell_onUpdate00);
   tolua_function(tolua_S,"setSingleTarget",tolua_GameEngineTolua_GameSpell_setSingleTarget00);
   tolua_function(tolua_S,"setTargets",tolua_GameEngineTolua_GameSpell_setTargets00);
   tolua_function(tolua_S,"setSkillMsgPackage",tolua_GameEngineTolua_GameSpell_setSkillMsgPackage00);
   tolua_function(tolua_S,"start",tolua_GameEngineTolua_GameSpell_start00);
   tolua_function(tolua_S,"Break",tolua_GameEngineTolua_GameSpell_Break00);
   tolua_function(tolua_S,"prepare",tolua_GameEngineTolua_GameSpell_prepare00);
   tolua_function(tolua_S,"collect",tolua_GameEngineTolua_GameSpell_collect00);
   tolua_function(tolua_S,"endCollect",tolua_GameEngineTolua_GameSpell_endCollect00);
   tolua_function(tolua_S,"Attack",tolua_GameEngineTolua_GameSpell_Attack00);
   tolua_function(tolua_S,"Hit",tolua_GameEngineTolua_GameSpell_Hit00);
   tolua_function(tolua_S,"attackTime",tolua_GameEngineTolua_GameSpell_attackTime00);
   tolua_function(tolua_S,"onPrepare",tolua_GameEngineTolua_GameSpell_onPrepare00);
   tolua_function(tolua_S,"onCollect",tolua_GameEngineTolua_GameSpell_onCollect00);
   tolua_function(tolua_S,"onCollectTime",tolua_GameEngineTolua_GameSpell_onCollectTime00);
   tolua_function(tolua_S,"onCollectFull",tolua_GameEngineTolua_GameSpell_onCollectFull00);
   tolua_function(tolua_S,"onAttack",tolua_GameEngineTolua_GameSpell_onAttack00);
   tolua_function(tolua_S,"onChannel",tolua_GameEngineTolua_GameSpell_onChannel00);
   tolua_function(tolua_S,"onHit",tolua_GameEngineTolua_GameSpell_onHit00);
   tolua_function(tolua_S,"onHit",tolua_GameEngineTolua_GameSpell_onHit01);
   tolua_function(tolua_S,"onBreak",tolua_GameEngineTolua_GameSpell_onBreak00);
   tolua_function(tolua_S,"onStop",tolua_GameEngineTolua_GameSpell_onStop00);
   tolua_function(tolua_S,"onAttack",tolua_GameEngineTolua_GameSpell_onAttack01);
   tolua_function(tolua_S,"getAttackEffectName",tolua_GameEngineTolua_GameSpell_getAttackEffectName00);
   tolua_function(tolua_S,"getHitEffectName",tolua_GameEngineTolua_GameSpell_getHitEffectName00);
   tolua_function(tolua_S,"check",tolua_GameEngineTolua_GameSpell_check00);
   tolua_function(tolua_S,"inspect",tolua_GameEngineTolua_GameSpell_inspect00);
   tolua_function(tolua_S,"inspect",tolua_GameEngineTolua_GameSpell_inspect01);
   tolua_function(tolua_S,"inspect",tolua_GameEngineTolua_GameSpell_inspect02);
   tolua_function(tolua_S,"inspect",tolua_GameEngineTolua_GameSpell_inspect03);
   tolua_function(tolua_S,"setSpellId",tolua_GameEngineTolua_GameSpell_setSpellId00);
   tolua_function(tolua_S,"getSpellId",tolua_GameEngineTolua_GameSpell_getSpellId00);
   tolua_function(tolua_S,"setSpellLv",tolua_GameEngineTolua_GameSpell_setSpellLv00);
   tolua_function(tolua_S,"getSpellLv",tolua_GameEngineTolua_GameSpell_getSpellLv00);
   tolua_function(tolua_S,"setSpellReq",tolua_GameEngineTolua_GameSpell_setSpellReq00);
   tolua_function(tolua_S,"getSpellReq",tolua_GameEngineTolua_GameSpell_getSpellReq00);
   tolua_function(tolua_S,"getFittingIndex",tolua_GameEngineTolua_GameSpell_getFittingIndex00);
   tolua_function(tolua_S,"setSpellController",tolua_GameEngineTolua_GameSpell_setSpellController00);
   tolua_function(tolua_S,"getState",tolua_GameEngineTolua_GameSpell_getState00);
   tolua_function(tolua_S,"getSingleTarget",tolua_GameEngineTolua_GameSpell_getSingleTarget00);
   tolua_function(tolua_S,"getOwner",tolua_GameEngineTolua_GameSpell_getOwner00);
   tolua_function(tolua_S,"setSelfPoint",tolua_GameEngineTolua_GameSpell_setSelfPoint00);
   tolua_function(tolua_S,"setSelfPoint",tolua_GameEngineTolua_GameSpell_setSelfPoint01);
   tolua_function(tolua_S,"getSelfPoint",tolua_GameEngineTolua_GameSpell_getSelfPoint00);
   tolua_function(tolua_S,"setTargetPoint",tolua_GameEngineTolua_GameSpell_setTargetPoint00);
   tolua_function(tolua_S,"getTargetPoint",tolua_GameEngineTolua_GameSpell_getTargetPoint00);
   tolua_function(tolua_S,"setHitDelay",tolua_GameEngineTolua_GameSpell_setHitDelay00);
   tolua_function(tolua_S,"getHitDelay",tolua_GameEngineTolua_GameSpell_getHitDelay00);
   tolua_function(tolua_S,"setOwner",tolua_GameEngineTolua_GameSpell_setOwner00);
   tolua_function(tolua_S,"canAttackSelf",tolua_GameEngineTolua_GameSpell_canAttackSelf00);
   tolua_function(tolua_S,"setSelfPosChange",tolua_GameEngineTolua_GameSpell_setSelfPosChange00);
   tolua_function(tolua_S,"circualMovePoint",tolua_GameEngineTolua_GameSpell_circualMovePoint00);
   tolua_function(tolua_S,"getTarget",tolua_GameEngineTolua_GameSpell_getTarget00);
   tolua_function(tolua_S,"getTargetNum",tolua_GameEngineTolua_GameSpell_getTargetNum00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"SpecialMove","SpecialMove","",NULL);
  tolua_beginmodule(tolua_S,"SpecialMove");
   tolua_function(tolua_S,"addFlyPath",tolua_GameEngineTolua_SpecialMove_addFlyPath00);
   tolua_function(tolua_S,"playAnimFly",tolua_GameEngineTolua_SpecialMove_playAnimFly00);
   tolua_function(tolua_S,"continueAnimFly",tolua_GameEngineTolua_SpecialMove_continueAnimFly00);
   tolua_function(tolua_S,"InsertAnimPath",tolua_GameEngineTolua_SpecialMove_InsertAnimPath00);
   tolua_function(tolua_S,"checkCancelFirstAnimFly",tolua_GameEngineTolua_SpecialMove_checkCancelFirstAnimFly00);
   tolua_function(tolua_S,"canShowUI",tolua_GameEngineTolua_SpecialMove_canShowUI00);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"clearNpcQuestList",tolua_GameEngineTolua_clearNpcQuestList00);
  tolua_constant(tolua_S,"MONSTER_ORANGE",MONSTER_ORANGE);
  tolua_constant(tolua_S,"MONSTER_RED",MONSTER_RED);
  tolua_constant(tolua_S,"MONSTER_WHITE",MONSTER_WHITE);
  tolua_constant(tolua_S,"MONSTER_GREEN",MONSTER_GREEN);
  tolua_constant(tolua_S,"MONSTER_YELLOW",MONSTER_YELLOW);
  tolua_function(tolua_S,"getNpcQuestShow",tolua_GameEngineTolua_getNpcQuestShow00);
  tolua_function(tolua_S,"getMonsterRadius",tolua_GameEngineTolua_getMonsterRadius00);
  tolua_function(tolua_S,"getMonsterSubtype",tolua_GameEngineTolua_getMonsterSubtype00);
  tolua_function(tolua_S,"getMonsterLevel",tolua_GameEngineTolua_getMonsterLevel00);
  tolua_function(tolua_S,"getMonsterNameColor",tolua_GameEngineTolua_getMonsterNameColor00);
  tolua_function(tolua_S,"getMonsterName",tolua_GameEngineTolua_getMonsterName00);
  tolua_function(tolua_S,"getMonsterIcon",tolua_GameEngineTolua_getMonsterIcon00);
  tolua_function(tolua_S,"getMonsterMaxHP",tolua_GameEngineTolua_getMonsterMaxHP00);
  tolua_function(tolua_S,"getNpcDesc",tolua_GameEngineTolua_getNpcDesc00);
  tolua_function(tolua_S,"GetNpcName",tolua_GameEngineTolua_GetNpcName00);
  tolua_function(tolua_S,"getMonMachineMaxEnergy",tolua_GameEngineTolua_getMonMachineMaxEnergy00);
  tolua_cclass(tolua_S,"GameNPC","GameNPC","GameActor",NULL);
  tolua_beginmodule(tolua_S,"GameNPC");
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagRideRoleInfo","tagRideRoleInfo","",NULL);
  tolua_beginmodule(tolua_S,"tagRideRoleInfo");
   tolua_variable(tolua_S,"m_nMemID",tolua_get_tagRideRoleInfo_m_nMemID,tolua_set_tagRideRoleInfo_m_nMemID);
   tolua_variable(tolua_S,"m_szRoleName",tolua_get_tagRideRoleInfo_m_szRoleName,tolua_set_tagRideRoleInfo_m_szRoleName);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagRideStuff_ToLua","tagRideStuff_ToLua","",tolua_collect_tagRideStuff_ToLua);
  #else
  tolua_cclass(tolua_S,"tagRideStuff_ToLua","tagRideStuff_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagRideStuff_ToLua");
   tolua_variable(tolua_S,"ItemID",tolua_get_tagRideStuff_ToLua_unsigned_ItemID,tolua_set_tagRideStuff_ToLua_unsigned_ItemID);
   tolua_variable(tolua_S,"ItemNum",tolua_get_tagRideStuff_ToLua_unsigned_ItemNum,tolua_set_tagRideStuff_ToLua_unsigned_ItemNum);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagRideNpcSelect_ToLua","tagRideNpcSelect_ToLua","",tolua_collect_tagRideNpcSelect_ToLua);
  #else
  tolua_cclass(tolua_S,"tagRideNpcSelect_ToLua","tagRideNpcSelect_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagRideNpcSelect_ToLua");
   tolua_variable(tolua_S,"SelectType",tolua_get_tagRideNpcSelect_ToLua_unsigned_SelectType,tolua_set_tagRideNpcSelect_ToLua_unsigned_SelectType);
   tolua_variable(tolua_S,"SelectVal",tolua_get_tagRideNpcSelect_ToLua_unsigned_SelectVal,tolua_set_tagRideNpcSelect_ToLua_unsigned_SelectVal);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagRideDef_ToLua","tagRideDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagRideDef_ToLua");
   tolua_variable(tolua_S,"RideID",tolua_get_tagRideDef_ToLua_unsigned_RideID,tolua_set_tagRideDef_ToLua_unsigned_RideID);
   tolua_variable(tolua_S,"Level",tolua_get_tagRideDef_ToLua_unsigned_Level,tolua_set_tagRideDef_ToLua_unsigned_Level);
   tolua_variable(tolua_S,"RideType",tolua_get_tagRideDef_ToLua_unsigned_RideType,tolua_set_tagRideDef_ToLua_unsigned_RideType);
   tolua_variable(tolua_S,"RideName",tolua_get_tagRideDef_ToLua_RideName,tolua_set_tagRideDef_ToLua_RideName);
   tolua_variable(tolua_S,"RideDesc",tolua_get_tagRideDef_ToLua_RideDesc,tolua_set_tagRideDef_ToLua_RideDesc);
   tolua_variable(tolua_S,"RideSpd",tolua_get_tagRideDef_ToLua_unsigned_RideSpd,tolua_set_tagRideDef_ToLua_unsigned_RideSpd);
   tolua_variable(tolua_S,"ModelID",tolua_get_tagRideDef_ToLua_ModelID,tolua_set_tagRideDef_ToLua_ModelID);
   tolua_variable(tolua_S,"IconID",tolua_get_tagRideDef_ToLua_IconID,tolua_set_tagRideDef_ToLua_IconID);
   tolua_variable(tolua_S,"LevelUpRate",tolua_get_tagRideDef_ToLua_unsigned_LevelUpRate,tolua_set_tagRideDef_ToLua_unsigned_LevelUpRate);
   tolua_variable(tolua_S,"AmerceRate",tolua_get_tagRideDef_ToLua_unsigned_AmerceRate,tolua_set_tagRideDef_ToLua_unsigned_AmerceRate);
   tolua_array(tolua_S,"LevelUpStuff",tolua_get_GameEngineTolua_tagRideDef_ToLua_LevelUpStuff,tolua_set_GameEngineTolua_tagRideDef_ToLua_LevelUpStuff);
   tolua_variable(tolua_S,"RideOnNum",tolua_get_tagRideDef_ToLua_unsigned_RideOnNum,tolua_set_tagRideDef_ToLua_unsigned_RideOnNum);
   tolua_variable(tolua_S,"NpcModelID",tolua_get_tagRideDef_ToLua_unsigned_NpcModelID,tolua_set_tagRideDef_ToLua_unsigned_NpcModelID);
   tolua_array(tolua_S,"NpcSelect",tolua_get_GameEngineTolua_tagRideDef_ToLua_NpcSelect,tolua_set_GameEngineTolua_tagRideDef_ToLua_NpcSelect);
   tolua_variable(tolua_S,"PinZhi",tolua_get_tagRideDef_ToLua_unsigned_PinZhi,tolua_set_tagRideDef_ToLua_unsigned_PinZhi);
   tolua_array(tolua_S,"Result",tolua_get_GameEngineTolua_tagRideDef_ToLua_Result,tolua_set_GameEngineTolua_tagRideDef_ToLua_Result);
   tolua_variable(tolua_S,"ClanLimit",tolua_get_tagRideDef_ToLua_ClanLimit,tolua_set_tagRideDef_ToLua_ClanLimit);
   tolua_variable(tolua_S,"MoneyType",tolua_get_tagRideDef_ToLua_MoneyType,tolua_set_tagRideDef_ToLua_MoneyType);
   tolua_variable(tolua_S,"MoneyVal",tolua_get_tagRideDef_ToLua_MoneyVal,tolua_set_tagRideDef_ToLua_MoneyVal);
   tolua_variable(tolua_S,"MoveLevelMoneyType",tolua_get_tagRideDef_ToLua_MoveLevelMoneyType,tolua_set_tagRideDef_ToLua_MoveLevelMoneyType);
   tolua_variable(tolua_S,"MoveLevelMoneyVal",tolua_get_tagRideDef_ToLua_MoveLevelMoneyVal,tolua_set_tagRideDef_ToLua_MoveLevelMoneyVal);
   tolua_variable(tolua_S,"HopeNum",tolua_get_tagRideDef_ToLua_HopeNum,tolua_set_tagRideDef_ToLua_HopeNum);
   tolua_variable(tolua_S,"RideMapFlag",tolua_get_tagRideDef_ToLua_RideMapFlag,tolua_set_tagRideDef_ToLua_RideMapFlag);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagRidePinZhiDef_ToLua","tagRidePinZhiDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagRidePinZhiDef_ToLua");
   tolua_variable(tolua_S,"PinZhi",tolua_get_tagRidePinZhiDef_ToLua_PinZhi,tolua_set_tagRidePinZhiDef_ToLua_PinZhi);
   tolua_variable(tolua_S,"PinZhiName",tolua_get_tagRidePinZhiDef_ToLua_PinZhiName,tolua_set_tagRidePinZhiDef_ToLua_PinZhiName);
   tolua_variable(tolua_S,"MaxLevel",tolua_get_tagRidePinZhiDef_ToLua_MaxLevel,tolua_set_tagRidePinZhiDef_ToLua_MaxLevel);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"getRideDef",tolua_GameEngineTolua_getRideDef00);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagRideInfo","tagRideInfo","",tolua_collect_tagRideInfo);
  #else
  tolua_cclass(tolua_S,"tagRideInfo","tagRideInfo","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagRideInfo");
   tolua_function(tolua_S,"new",tolua_GameEngineTolua_tagRideInfo_new00);
   tolua_function(tolua_S,"new_local",tolua_GameEngineTolua_tagRideInfo_new00_local);
   tolua_function(tolua_S,".call",tolua_GameEngineTolua_tagRideInfo_new00_local);
   tolua_function(tolua_S,"isValidEnd",tolua_GameEngineTolua_tagRideInfo_isValidEnd00);
   tolua_variable(tolua_S,"RideID",tolua_get_tagRideInfo_unsigned_RideID,tolua_set_tagRideInfo_unsigned_RideID);
   tolua_variable(tolua_S,"Endtime",tolua_get_tagRideInfo_Endtime,tolua_set_tagRideInfo_Endtime);
   tolua_variable(tolua_S,"nLevel",tolua_get_tagRideInfo_nLevel,tolua_set_tagRideInfo_nLevel);
   tolua_variable(tolua_S,"m_nOwnerID",tolua_get_tagRideInfo_unsigned_m_nOwnerID,tolua_set_tagRideInfo_unsigned_m_nOwnerID);
   tolua_variable(tolua_S,"m_nPassengerNum",tolua_get_tagRideInfo_unsigned_m_nPassengerNum,tolua_set_tagRideInfo_unsigned_m_nPassengerNum);
   tolua_array(tolua_S,"m_nPassengerID",tolua_get_GameEngineTolua_tagRideInfo_m_nPassengerID,tolua_set_GameEngineTolua_tagRideInfo_m_nPassengerID);
   tolua_variable(tolua_S,"m_szFormatEndTime",tolua_get_tagRideInfo_m_szFormatEndTime,tolua_set_tagRideInfo_m_szFormatEndTime);
   tolua_variable(tolua_S,"m_nEndLeft",tolua_get_tagRideInfo_m_nEndLeft,tolua_set_tagRideInfo_m_nEndLeft);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Rider","Rider","",NULL);
  tolua_beginmodule(tolua_S,"Rider");
   tolua_function(tolua_S,"MainPlayerRidePre",tolua_GameEngineTolua_Rider_MainPlayerRidePre00);
   tolua_function(tolua_S,"checkWaiter",tolua_GameEngineTolua_Rider_checkWaiter00);
   tolua_function(tolua_S,"rideOn",tolua_GameEngineTolua_Rider_rideOn00);
   tolua_function(tolua_S,"rideOnSide",tolua_GameEngineTolua_Rider_rideOnSide00);
   tolua_function(tolua_S,"kickOffAllPassenger",tolua_GameEngineTolua_Rider_kickOffAllPassenger00);
   tolua_function(tolua_S,"requestRideDown",tolua_GameEngineTolua_Rider_requestRideDown00);
   tolua_function(tolua_S,"isPre",tolua_GameEngineTolua_Rider_isPre00);
   tolua_function(tolua_S,"isOnHorse",tolua_GameEngineTolua_Rider_isOnHorse00);
   tolua_function(tolua_S,"isOnFly",tolua_GameEngineTolua_Rider_isOnFly00);
   tolua_function(tolua_S,"isContinueAutoFind",tolua_GameEngineTolua_Rider_isContinueAutoFind00);
   tolua_function(tolua_S,"getRideItem",tolua_GameEngineTolua_Rider_getRideItem00);
   tolua_function(tolua_S,"getMaxRideNum",tolua_GameEngineTolua_Rider_getMaxRideNum00);
   tolua_function(tolua_S,"getRidNum",tolua_GameEngineTolua_Rider_getRidNum00);
   tolua_function(tolua_S,"getRideGridInfo",tolua_GameEngineTolua_Rider_getRideGridInfo00);
   tolua_function(tolua_S,"isHaveRide",tolua_GameEngineTolua_Rider_isHaveRide00);
   tolua_function(tolua_S,"getHorseId",tolua_GameEngineTolua_Rider_getHorseId00);
   tolua_function(tolua_S,"dropRide",tolua_GameEngineTolua_Rider_dropRide00);
   tolua_function(tolua_S,"levelUpRide",tolua_GameEngineTolua_Rider_levelUpRide00);
   tolua_function(tolua_S,"applyRide",tolua_GameEngineTolua_Rider_applyRide00);
   tolua_function(tolua_S,"acceptApplyRide",tolua_GameEngineTolua_Rider_acceptApplyRide00);
   tolua_function(tolua_S,"refuseApplyRide",tolua_GameEngineTolua_Rider_refuseApplyRide00);
   tolua_function(tolua_S,"inviteRide",tolua_GameEngineTolua_Rider_inviteRide00);
   tolua_function(tolua_S,"acceptInviteRide",tolua_GameEngineTolua_Rider_acceptInviteRide00);
   tolua_function(tolua_S,"kickOffPassenger",tolua_GameEngineTolua_Rider_kickOffPassenger00);
   tolua_function(tolua_S,"rideMoveLevel",tolua_GameEngineTolua_Rider_rideMoveLevel00);
   tolua_function(tolua_S,"refuseInviteRide",tolua_GameEngineTolua_Rider_refuseInviteRide00);
   tolua_function(tolua_S,"selectRideNpcOpton",tolua_GameEngineTolua_Rider_selectRideNpcOpton00);
   tolua_function(tolua_S,"getInviteRoleInfo",tolua_GameEngineTolua_Rider_getInviteRoleInfo00);
   tolua_function(tolua_S,"getApplyRoleInfo",tolua_GameEngineTolua_Rider_getApplyRoleInfo00);
   tolua_function(tolua_S,"isOwnRide",tolua_GameEngineTolua_Rider_isOwnRide00);
   tolua_function(tolua_S,"canRidePre",tolua_GameEngineTolua_Rider_canRidePre00);
   tolua_function(tolua_S,"getRideInfoById",tolua_GameEngineTolua_Rider_getRideInfoById00);
   tolua_function(tolua_S,"getRideInfoByRideId",tolua_GameEngineTolua_Rider_getRideInfoByRideId00);
   tolua_function(tolua_S,"getRidePinZhiDef",tolua_GameEngineTolua_Rider_getRidePinZhiDef00);
   tolua_function(tolua_S,"getPassengerNum",tolua_GameEngineTolua_Rider_getPassengerNum00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"CLIENT_PET_STAT_FIGHT",CLIENT_PET_STAT_FIGHT);
  tolua_constant(tolua_S,"CLIENT_PET_STAT_SEEFIGHT",CLIENT_PET_STAT_SEEFIGHT);
  tolua_constant(tolua_S,"CLIENT_PET_STAT_DEAD",CLIENT_PET_STAT_DEAD);
  tolua_constant(tolua_S,"CLIENT_PET_STAT_TEMP",CLIENT_PET_STAT_TEMP);
  tolua_constant(tolua_S,"CLIENT_MAX_PET_GENIUS",CLIENT_MAX_PET_GENIUS);
  tolua_constant(tolua_S,"MAX_PET_SKILLS",MAX_PET_SKILLS);
  tolua_constant(tolua_S,"PET_SKILL_RESET_ITEM",PET_SKILL_RESET_ITEM);
  tolua_constant(tolua_S,"PET_SKILL_LEVELUP_ITEM",PET_SKILL_LEVELUP_ITEM);
  tolua_constant(tolua_S,"PET_GROW_RESET_ITEM",PET_GROW_RESET_ITEM);
  tolua_constant(tolua_S,"PET_UNBIND_ITEM_ID_TOLUA",PET_UNBIND_ITEM_ID_TOLUA);
  tolua_constant(tolua_S,"PET_RESET_LOCK_GENIUS",PET_RESET_LOCK_GENIUS);
  tolua_constant(tolua_S,"PET_RESET_LOCK_ATK_GENIUS",PET_RESET_LOCK_ATK_GENIUS);
  tolua_constant(tolua_S,"PET_RESET_LOCK_PHSIC_DEF_GENIUS",PET_RESET_LOCK_PHSIC_DEF_GENIUS);
  tolua_constant(tolua_S,"PET_RESET_LOCK_ICE_DEF_GENIUS",PET_RESET_LOCK_ICE_DEF_GENIUS);
  tolua_constant(tolua_S,"PET_RESET_LOCK_HP_GENIUS",PET_RESET_LOCK_HP_GENIUS);
  tolua_constant(tolua_S,"PET_RESET_LOCK_HITRATE_GENIUS",PET_RESET_LOCK_HITRATE_GENIUS);
  tolua_constant(tolua_S,"PET_RESET_LOCK_FLEE_GENIUS",PET_RESET_LOCK_FLEE_GENIUS);
  tolua_constant(tolua_S,"PET_OP_FIGHT",PET_OP_FIGHT);
  tolua_constant(tolua_S,"PET_OP_BACK",PET_OP_BACK);
  tolua_constant(tolua_S,"PET_HETI_SKILL_ID",PET_HETI_SKILL_ID);
  tolua_constant(tolua_S,"PET_STEP_UP_USE_ID_TOLUA",PET_STEP_UP_USE_ID_TOLUA);
  tolua_constant(tolua_S,"USE_ID_PET_STEP_UP_TOLUA",USE_ID_PET_STEP_UP_TOLUA);
  tolua_constant(tolua_S,"USE_ID_PET_STEP_UP_TOLUA",USE_ID_PET_STEP_UP_TOLUA);
  tolua_cclass(tolua_S,"tagPetNativeSkill_ToLua","tagPetNativeSkill_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetNativeSkill_ToLua");
   tolua_variable(tolua_S,"SkillID",tolua_get_tagPetNativeSkill_ToLua_unsigned_SkillID,tolua_set_tagPetNativeSkill_ToLua_unsigned_SkillID);
   tolua_variable(tolua_S,"Rate",tolua_get_tagPetNativeSkill_ToLua_unsigned_Rate,tolua_set_tagPetNativeSkill_ToLua_unsigned_Rate);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagPetGenius_ToLua","tagPetGenius_ToLua","",tolua_collect_tagPetGenius_ToLua);
  #else
  tolua_cclass(tolua_S,"tagPetGenius_ToLua","tagPetGenius_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagPetGenius_ToLua");
   tolua_variable(tolua_S,"PhsicAtkGenius",tolua_get_tagPetGenius_ToLua_unsigned_PhsicAtkGenius,tolua_set_tagPetGenius_ToLua_unsigned_PhsicAtkGenius);
   tolua_variable(tolua_S,"IceAtkGenius",tolua_get_tagPetGenius_ToLua_unsigned_IceAtkGenius,tolua_set_tagPetGenius_ToLua_unsigned_IceAtkGenius);
   tolua_variable(tolua_S,"HPGenius",tolua_get_tagPetGenius_ToLua_unsigned_HPGenius,tolua_set_tagPetGenius_ToLua_unsigned_HPGenius);
   tolua_variable(tolua_S,"DefGenius",tolua_get_tagPetGenius_ToLua_unsigned_DefGenius,tolua_set_tagPetGenius_ToLua_unsigned_DefGenius);
   tolua_variable(tolua_S,"HitRateGenius",tolua_get_tagPetGenius_ToLua_unsigned_HitRateGenius,tolua_set_tagPetGenius_ToLua_unsigned_HitRateGenius);
   tolua_variable(tolua_S,"FleeGenius",tolua_get_tagPetGenius_ToLua_unsigned_FleeGenius,tolua_set_tagPetGenius_ToLua_unsigned_FleeGenius);
   tolua_variable(tolua_S,"IceDefGenius",tolua_get_tagPetGenius_ToLua_unsigned_IceDefGenius,tolua_set_tagPetGenius_ToLua_unsigned_IceDefGenius);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagPetHeti_ToLua","tagPetHeti_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetHeti_ToLua");
   tolua_variable(tolua_S,"UseLoyalty",tolua_get_tagPetHeti_ToLua_UseLoyalty,tolua_set_tagPetHeti_ToLua_UseLoyalty);
   tolua_variable(tolua_S,"MinLoyalty",tolua_get_tagPetHeti_ToLua_MinLoyalty,tolua_set_tagPetHeti_ToLua_MinLoyalty);
   tolua_variable(tolua_S,"MinLevel",tolua_get_tagPetHeti_ToLua_MinLevel,tolua_set_tagPetHeti_ToLua_MinLevel);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagPetDef_ToLua","tagPetDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetDef_ToLua");
   tolua_variable(tolua_S,"PetID",tolua_get_tagPetDef_ToLua_unsigned_PetID,tolua_set_tagPetDef_ToLua_unsigned_PetID);
   tolua_variable(tolua_S,"Name",tolua_get_tagPetDef_ToLua_Name,tolua_set_tagPetDef_ToLua_Name);
   tolua_variable(tolua_S,"IconID",tolua_get_tagPetDef_ToLua_unsigned_IconID,tolua_set_tagPetDef_ToLua_unsigned_IconID);
   tolua_variable(tolua_S,"MouldID",tolua_get_tagPetDef_ToLua_unsigned_MouldID,tolua_set_tagPetDef_ToLua_unsigned_MouldID);
   tolua_variable(tolua_S,"PetDesc",tolua_get_tagPetDef_ToLua_PetDesc,tolua_set_tagPetDef_ToLua_PetDesc);
   tolua_variable(tolua_S,"Type",tolua_get_tagPetDef_ToLua_unsigned_Type,tolua_set_tagPetDef_ToLua_unsigned_Type);
   tolua_variable(tolua_S,"PetAttrType",tolua_get_tagPetDef_ToLua_unsigned_PetAttrType,tolua_set_tagPetDef_ToLua_unsigned_PetAttrType);
   tolua_variable(tolua_S,"Breed",tolua_get_tagPetDef_ToLua_unsigned_Breed,tolua_set_tagPetDef_ToLua_unsigned_Breed);
   tolua_variable(tolua_S,"BornSkillGrid",tolua_get_tagPetDef_ToLua_unsigned_BornSkillGrid,tolua_set_tagPetDef_ToLua_unsigned_BornSkillGrid);
   tolua_variable(tolua_S,"FightLevel",tolua_get_tagPetDef_ToLua_unsigned_FightLevel,tolua_set_tagPetDef_ToLua_unsigned_FightLevel);
   tolua_variable(tolua_S,"TiShen",tolua_get_tagPetDef_ToLua_unsigned_TiShen,tolua_set_tagPetDef_ToLua_unsigned_TiShen);
   tolua_variable(tolua_S,"NormalSkill",tolua_get_tagPetDef_ToLua_unsigned_NormalSkill,tolua_set_tagPetDef_ToLua_unsigned_NormalSkill);
   tolua_variable(tolua_S,"NativeSkill",tolua_get_tagPetDef_ToLua_NativeSkill,tolua_set_tagPetDef_ToLua_NativeSkill);
   tolua_array(tolua_S,"Genius",tolua_get_GameEngineTolua_tagPetDef_ToLua_Genius,tolua_set_GameEngineTolua_tagPetDef_ToLua_Genius);
   tolua_array(tolua_S,"NormalWashGenius",tolua_get_GameEngineTolua_tagPetDef_ToLua_NormalWashGenius,tolua_set_GameEngineTolua_tagPetDef_ToLua_NormalWashGenius);
   tolua_array(tolua_S,"HighWashGenius",tolua_get_GameEngineTolua_tagPetDef_ToLua_HighWashGenius,tolua_set_GameEngineTolua_tagPetDef_ToLua_HighWashGenius);
   tolua_variable(tolua_S,"MaxFleeMul",tolua_get_tagPetDef_ToLua_MaxFleeMul,tolua_set_tagPetDef_ToLua_MaxFleeMul);
   tolua_variable(tolua_S,"MaxPhsicAtkMul",tolua_get_tagPetDef_ToLua_MaxPhsicAtkMul,tolua_set_tagPetDef_ToLua_MaxPhsicAtkMul);
   tolua_variable(tolua_S,"MaxIceAtkMul",tolua_get_tagPetDef_ToLua_MaxIceAtkMul,tolua_set_tagPetDef_ToLua_MaxIceAtkMul);
   tolua_variable(tolua_S,"MaxHPMul",tolua_get_tagPetDef_ToLua_MaxHPMul,tolua_set_tagPetDef_ToLua_MaxHPMul);
   tolua_variable(tolua_S,"MaxPhsicDefMul",tolua_get_tagPetDef_ToLua_MaxPhsicDefMul,tolua_set_tagPetDef_ToLua_MaxPhsicDefMul);
   tolua_variable(tolua_S,"MaxIceDefMul",tolua_get_tagPetDef_ToLua_MaxIceDefMul,tolua_set_tagPetDef_ToLua_MaxIceDefMul);
   tolua_variable(tolua_S,"MaxHitRateMul",tolua_get_tagPetDef_ToLua_MaxHitRateMul,tolua_set_tagPetDef_ToLua_MaxHitRateMul);
   tolua_variable(tolua_S,"HeavyHitRate",tolua_get_tagPetDef_ToLua_unsigned_HeavyHitRate,tolua_set_tagPetDef_ToLua_unsigned_HeavyHitRate);
   tolua_variable(tolua_S,"MaxHeavyHitRateMul",tolua_get_tagPetDef_ToLua_MaxHeavyHitRateMul,tolua_set_tagPetDef_ToLua_MaxHeavyHitRateMul);
   tolua_variable(tolua_S,"BornTrait",tolua_get_tagPetDef_ToLua_unsigned_BornTrait,tolua_set_tagPetDef_ToLua_unsigned_BornTrait);
   tolua_variable(tolua_S,"BabyPetID",tolua_get_tagPetDef_ToLua_unsigned_BabyPetID,tolua_set_tagPetDef_ToLua_unsigned_BabyPetID);
   tolua_variable(tolua_S,"Heti",tolua_get_tagPetDef_ToLua_Heti,tolua_set_tagPetDef_ToLua_Heti);
   tolua_variable(tolua_S,"TejiID",tolua_get_tagPetDef_ToLua_TejiID,tolua_set_tagPetDef_ToLua_TejiID);
   tolua_variable(tolua_S,"Important",tolua_get_tagPetDef_ToLua_Important,tolua_set_tagPetDef_ToLua_Important);
   tolua_variable(tolua_S,"FailRate",tolua_get_tagPetDef_ToLua_FailRate,tolua_set_tagPetDef_ToLua_FailRate);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagPetTraitDef_ToLua","tagPetTraitDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetTraitDef_ToLua");
   tolua_variable(tolua_S,"TraitID",tolua_get_tagPetTraitDef_ToLua_unsigned_TraitID,tolua_set_tagPetTraitDef_ToLua_unsigned_TraitID);
   tolua_variable(tolua_S,"TraitType",tolua_get_tagPetTraitDef_ToLua_unsigned_TraitType,tolua_set_tagPetTraitDef_ToLua_unsigned_TraitType);
   tolua_variable(tolua_S,"Name",tolua_get_tagPetTraitDef_ToLua_Name,tolua_set_tagPetTraitDef_ToLua_Name);
   tolua_variable(tolua_S,"PhsicAtkMul",tolua_get_tagPetTraitDef_ToLua_PhsicAtkMul,tolua_set_tagPetTraitDef_ToLua_PhsicAtkMul);
   tolua_variable(tolua_S,"IceAtkMul",tolua_get_tagPetTraitDef_ToLua_IceAtkMul,tolua_set_tagPetTraitDef_ToLua_IceAtkMul);
   tolua_variable(tolua_S,"HPMul",tolua_get_tagPetTraitDef_ToLua_HPMul,tolua_set_tagPetTraitDef_ToLua_HPMul);
   tolua_variable(tolua_S,"PhsicDefMul",tolua_get_tagPetTraitDef_ToLua_PhsicDefMul,tolua_set_tagPetTraitDef_ToLua_PhsicDefMul);
   tolua_variable(tolua_S,"IceDefMul",tolua_get_tagPetTraitDef_ToLua_IceDefMul,tolua_set_tagPetTraitDef_ToLua_IceDefMul);
   tolua_variable(tolua_S,"HitRateMul",tolua_get_tagPetTraitDef_ToLua_HitRateMul,tolua_set_tagPetTraitDef_ToLua_HitRateMul);
   tolua_variable(tolua_S,"FleeMul",tolua_get_tagPetTraitDef_ToLua_FleeMul,tolua_set_tagPetTraitDef_ToLua_FleeMul);
   tolua_variable(tolua_S,"HeavyHitRateMul",tolua_get_tagPetTraitDef_ToLua_HeavyHitRateMul,tolua_set_tagPetTraitDef_ToLua_HeavyHitRateMul);
   tolua_variable(tolua_S,"PetTraitDesc",tolua_get_tagPetTraitDef_ToLua_PetTraitDesc,tolua_set_tagPetTraitDef_ToLua_PetTraitDesc);
   tolua_variable(tolua_S,"TiShenMul",tolua_get_tagPetTraitDef_ToLua_TiShenMul,tolua_set_tagPetTraitDef_ToLua_TiShenMul);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagPetLevelDef_ToLua","tagPetLevelDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetLevelDef_ToLua");
   tolua_variable(tolua_S,"Level",tolua_get_tagPetLevelDef_ToLua_Level,tolua_set_tagPetLevelDef_ToLua_Level);
   tolua_variable(tolua_S,"LevelUpExp",tolua_get_tagPetLevelDef_ToLua_unsigned_LevelUpExp,tolua_set_tagPetLevelDef_ToLua_unsigned_LevelUpExp);
   tolua_variable(tolua_S,"PhsicAtk",tolua_get_tagPetLevelDef_ToLua_PhsicAtk,tolua_set_tagPetLevelDef_ToLua_PhsicAtk);
   tolua_variable(tolua_S,"IceAtk",tolua_get_tagPetLevelDef_ToLua_IceAtk,tolua_set_tagPetLevelDef_ToLua_IceAtk);
   tolua_variable(tolua_S,"HP",tolua_get_tagPetLevelDef_ToLua_HP,tolua_set_tagPetLevelDef_ToLua_HP);
   tolua_variable(tolua_S,"PhsicDef",tolua_get_tagPetLevelDef_ToLua_PhsicDef,tolua_set_tagPetLevelDef_ToLua_PhsicDef);
   tolua_variable(tolua_S,"IceDef",tolua_get_tagPetLevelDef_ToLua_IceDef,tolua_set_tagPetLevelDef_ToLua_IceDef);
   tolua_variable(tolua_S,"HitRate",tolua_get_tagPetLevelDef_ToLua_HitRate,tolua_set_tagPetLevelDef_ToLua_HitRate);
   tolua_variable(tolua_S,"Flee",tolua_get_tagPetLevelDef_ToLua_Flee,tolua_set_tagPetLevelDef_ToLua_Flee);
   tolua_variable(tolua_S,"MonMiniExpLimit",tolua_get_tagPetLevelDef_ToLua_unsigned_MonMiniExpLimit,tolua_set_tagPetLevelDef_ToLua_unsigned_MonMiniExpLimit);
   tolua_variable(tolua_S,"MonWeakExpLimit",tolua_get_tagPetLevelDef_ToLua_unsigned_MonWeakExpLimit,tolua_set_tagPetLevelDef_ToLua_unsigned_MonWeakExpLimit);
   tolua_variable(tolua_S,"MonSoftExpLimit",tolua_get_tagPetLevelDef_ToLua_unsigned_MonSoftExpLimit,tolua_set_tagPetLevelDef_ToLua_unsigned_MonSoftExpLimit);
   tolua_variable(tolua_S,"MonNormalExpLimit",tolua_get_tagPetLevelDef_ToLua_unsigned_MonNormalExpLimit,tolua_set_tagPetLevelDef_ToLua_unsigned_MonNormalExpLimit);
   tolua_variable(tolua_S,"MonHardExpLimit",tolua_get_tagPetLevelDef_ToLua_unsigned_MonHardExpLimit,tolua_set_tagPetLevelDef_ToLua_unsigned_MonHardExpLimit);
   tolua_variable(tolua_S,"MonXiExpLimit",tolua_get_tagPetLevelDef_ToLua_unsigned_MonXiExpLimit,tolua_set_tagPetLevelDef_ToLua_unsigned_MonXiExpLimit);
   tolua_variable(tolua_S,"MonJinExpLimit",tolua_get_tagPetLevelDef_ToLua_unsigned_MonJinExpLimit,tolua_set_tagPetLevelDef_ToLua_unsigned_MonJinExpLimit);
   tolua_variable(tolua_S,"MonBossExpLimit",tolua_get_tagPetLevelDef_ToLua_unsigned_MonBossExpLimit,tolua_set_tagPetLevelDef_ToLua_unsigned_MonBossExpLimit);
   tolua_variable(tolua_S,"MonJiExpLimit",tolua_get_tagPetLevelDef_ToLua_unsigned_MonJiExpLimit,tolua_set_tagPetLevelDef_ToLua_unsigned_MonJiExpLimit);
   tolua_variable(tolua_S,"HurtMul",tolua_get_tagPetLevelDef_ToLua_unsigned_HurtMul,tolua_set_tagPetLevelDef_ToLua_unsigned_HurtMul);
   tolua_variable(tolua_S,"AddSkillGrid",tolua_get_tagPetLevelDef_ToLua_unsigned_AddSkillGrid,tolua_set_tagPetLevelDef_ToLua_unsigned_AddSkillGrid);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagPetGeniusNamesDef_ToLua","tagPetGeniusNamesDef_ToLua","",tolua_collect_tagPetGeniusNamesDef_ToLua);
  #else
  tolua_cclass(tolua_S,"tagPetGeniusNamesDef_ToLua","tagPetGeniusNamesDef_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagPetGeniusNamesDef_ToLua");
   tolua_variable(tolua_S,"name",tolua_get_tagPetGeniusNamesDef_ToLua_name,tolua_set_tagPetGeniusNamesDef_ToLua_name);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagPetStrengthenDef_ToLua","tagPetStrengthenDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetStrengthenDef_ToLua");
   tolua_variable(tolua_S,"Level",tolua_get_tagPetStrengthenDef_ToLua_Level,tolua_set_tagPetStrengthenDef_ToLua_Level);
   tolua_variable(tolua_S,"MoneyType",tolua_get_tagPetStrengthenDef_ToLua_MoneyType,tolua_set_tagPetStrengthenDef_ToLua_MoneyType);
   tolua_variable(tolua_S,"MoneyVal",tolua_get_tagPetStrengthenDef_ToLua_MoneyVal,tolua_set_tagPetStrengthenDef_ToLua_MoneyVal);
   tolua_array(tolua_S,"PetGeniusName",tolua_get_GameEngineTolua_tagPetStrengthenDef_ToLua_PetGeniusName,tolua_set_GameEngineTolua_tagPetStrengthenDef_ToLua_PetGeniusName);
   tolua_variable(tolua_S,"UseItemID",tolua_get_tagPetStrengthenDef_ToLua_UseItemID,tolua_set_tagPetStrengthenDef_ToLua_UseItemID);
   tolua_variable(tolua_S,"UseItemNum",tolua_get_tagPetStrengthenDef_ToLua_UseItemNum,tolua_set_tagPetStrengthenDef_ToLua_UseItemNum);
   tolua_array(tolua_S,"LevelRate",tolua_get_GameEngineTolua_tagPetStrengthenDef_ToLua_LevelRate,tolua_set_GameEngineTolua_tagPetStrengthenDef_ToLua_LevelRate);
   tolua_variable(tolua_S,"PerfectRate",tolua_get_tagPetStrengthenDef_ToLua_PerfectRate,tolua_set_tagPetStrengthenDef_ToLua_PerfectRate);
   tolua_variable(tolua_S,"PerfectNum",tolua_get_tagPetStrengthenDef_ToLua_PerfectNum,tolua_set_tagPetStrengthenDef_ToLua_PerfectNum);
   tolua_variable(tolua_S,"MoveMoneyType",tolua_get_tagPetStrengthenDef_ToLua_MoveMoneyType,tolua_set_tagPetStrengthenDef_ToLua_MoveMoneyType);
   tolua_variable(tolua_S,"MoveMoneyVal",tolua_get_tagPetStrengthenDef_ToLua_MoveMoneyVal,tolua_set_tagPetStrengthenDef_ToLua_MoveMoneyVal);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagPetFightAttr_ToLua","tagPetFightAttr_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetFightAttr_ToLua");
   tolua_variable(tolua_S,"PhsicAtk",tolua_get_tagPetFightAttr_ToLua_unsigned_PhsicAtk,tolua_set_tagPetFightAttr_ToLua_unsigned_PhsicAtk);
   tolua_variable(tolua_S,"IceAtk",tolua_get_tagPetFightAttr_ToLua_unsigned_IceAtk,tolua_set_tagPetFightAttr_ToLua_unsigned_IceAtk);
   tolua_variable(tolua_S,"PhsicDef",tolua_get_tagPetFightAttr_ToLua_unsigned_PhsicDef,tolua_set_tagPetFightAttr_ToLua_unsigned_PhsicDef);
   tolua_variable(tolua_S,"IceDef",tolua_get_tagPetFightAttr_ToLua_unsigned_IceDef,tolua_set_tagPetFightAttr_ToLua_unsigned_IceDef);
   tolua_variable(tolua_S,"HitRate",tolua_get_tagPetFightAttr_ToLua_unsigned_HitRate,tolua_set_tagPetFightAttr_ToLua_unsigned_HitRate);
   tolua_variable(tolua_S,"Flee",tolua_get_tagPetFightAttr_ToLua_unsigned_Flee,tolua_set_tagPetFightAttr_ToLua_unsigned_Flee);
   tolua_variable(tolua_S,"HeavyHitRate",tolua_get_tagPetFightAttr_ToLua_HeavyHitRate,tolua_set_tagPetFightAttr_ToLua_HeavyHitRate);
   tolua_variable(tolua_S,"YongQi",tolua_get_tagPetFightAttr_ToLua_YongQi,tolua_set_tagPetFightAttr_ToLua_YongQi);
   tolua_variable(tolua_S,"DecHurtMul",tolua_get_tagPetFightAttr_ToLua_DecHurtMul,tolua_set_tagPetFightAttr_ToLua_DecHurtMul);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagPetSkillGrid_ToLua","tagPetSkillGrid_ToLua","",tolua_collect_tagPetSkillGrid_ToLua);
  #else
  tolua_cclass(tolua_S,"tagPetSkillGrid_ToLua","tagPetSkillGrid_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagPetSkillGrid_ToLua");
   tolua_variable(tolua_S,"SkillID",tolua_get_tagPetSkillGrid_ToLua_unsigned_SkillID,tolua_set_tagPetSkillGrid_ToLua_unsigned_SkillID);
   tolua_variable(tolua_S,"SkillLevel",tolua_get_tagPetSkillGrid_ToLua_unsigned_SkillLevel,tolua_set_tagPetSkillGrid_ToLua_unsigned_SkillLevel);
   tolua_variable(tolua_S,"GridType",tolua_get_tagPetSkillGrid_ToLua_unsigned_GridType,tolua_set_tagPetSkillGrid_ToLua_unsigned_GridType);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagPetSkill_ToLua","tagPetSkill_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetSkill_ToLua");
   tolua_variable(tolua_S,"SkillGridNum",tolua_get_tagPetSkill_ToLua_unsigned_SkillGridNum,tolua_set_tagPetSkill_ToLua_unsigned_SkillGridNum);
   tolua_variable(tolua_S,"AddSkillGridNum",tolua_get_tagPetSkill_ToLua_unsigned_AddSkillGridNum,tolua_set_tagPetSkill_ToLua_unsigned_AddSkillGridNum);
   tolua_variable(tolua_S,"Res",tolua_get_tagPetSkill_ToLua_Res,tolua_set_tagPetSkill_ToLua_Res);
   tolua_array(tolua_S,"SkillGrid",tolua_get_GameEngineTolua_tagPetSkill_ToLua_SkillGrid,tolua_set_GameEngineTolua_tagPetSkill_ToLua_SkillGrid);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagPetId_ToLua","tagPetId_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetId_ToLua");
   tolua_variable(tolua_S,"nHeight",tolua_get_tagPetId_ToLua_nHeight,tolua_set_tagPetId_ToLua_nHeight);
   tolua_variable(tolua_S,"nLow",tolua_get_tagPetId_ToLua_nLow,tolua_set_tagPetId_ToLua_nLow);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagRolePet_ToLua","tagRolePet_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagRolePet_ToLua");
   tolua_variable(tolua_S,"PetID",tolua_get_tagRolePet_ToLua_unsigned_PetID,tolua_set_tagRolePet_ToLua_unsigned_PetID);
   tolua_variable(tolua_S,"TraitID",tolua_get_tagRolePet_ToLua_unsigned_TraitID,tolua_set_tagRolePet_ToLua_unsigned_TraitID);
   tolua_variable(tolua_S,"Name",tolua_get_tagRolePet_ToLua_Name,tolua_set_tagRolePet_ToLua_Name);
   tolua_variable(tolua_S,"WID",tolua_get_tagRolePet_ToLua_WID,tolua_set_tagRolePet_ToLua_WID);
   tolua_variable(tolua_S,"Exp",tolua_get_tagRolePet_ToLua_unsigned_Exp,tolua_set_tagRolePet_ToLua_unsigned_Exp);
   tolua_variable(tolua_S,"MaxHP",tolua_get_tagRolePet_ToLua_unsigned_MaxHP,tolua_set_tagRolePet_ToLua_unsigned_MaxHP);
   tolua_variable(tolua_S,"HP",tolua_get_tagRolePet_ToLua_unsigned_HP,tolua_set_tagRolePet_ToLua_unsigned_HP);
   tolua_variable(tolua_S,"PetDefIdx",tolua_get_tagRolePet_ToLua_PetDefIdx,tolua_set_tagRolePet_ToLua_PetDefIdx);
   tolua_variable(tolua_S,"LoveVal",tolua_get_tagRolePet_ToLua_unsigned_LoveVal,tolua_set_tagRolePet_ToLua_unsigned_LoveVal);
   tolua_variable(tolua_S,"Level",tolua_get_tagRolePet_ToLua_unsigned_Level,tolua_set_tagRolePet_ToLua_unsigned_Level);
   tolua_variable(tolua_S,"PetGenius",tolua_get_tagRolePet_ToLua_unsigned_PetGenius,tolua_set_tagRolePet_ToLua_unsigned_PetGenius);
   tolua_variable(tolua_S,"BreedNum",tolua_get_tagRolePet_ToLua_unsigned_BreedNum,tolua_set_tagRolePet_ToLua_unsigned_BreedNum);
   tolua_variable(tolua_S,"Hierarchy",tolua_get_tagRolePet_ToLua_unsigned_Hierarchy,tolua_set_tagRolePet_ToLua_unsigned_Hierarchy);
   tolua_variable(tolua_S,"StrengthenLevel",tolua_get_tagRolePet_ToLua_unsigned_StrengthenLevel,tolua_set_tagRolePet_ToLua_unsigned_StrengthenLevel);
   tolua_variable(tolua_S,"PhsicAtkGenius",tolua_get_tagRolePet_ToLua_unsigned_PhsicAtkGenius,tolua_set_tagRolePet_ToLua_unsigned_PhsicAtkGenius);
   tolua_variable(tolua_S,"IceAtkGenius",tolua_get_tagRolePet_ToLua_unsigned_IceAtkGenius,tolua_set_tagRolePet_ToLua_unsigned_IceAtkGenius);
   tolua_variable(tolua_S,"HPGenius",tolua_get_tagRolePet_ToLua_unsigned_HPGenius,tolua_set_tagRolePet_ToLua_unsigned_HPGenius);
   tolua_variable(tolua_S,"DefGenius",tolua_get_tagRolePet_ToLua_unsigned_DefGenius,tolua_set_tagRolePet_ToLua_unsigned_DefGenius);
   tolua_variable(tolua_S,"HitRateGenius",tolua_get_tagRolePet_ToLua_unsigned_HitRateGenius,tolua_set_tagRolePet_ToLua_unsigned_HitRateGenius);
   tolua_variable(tolua_S,"FleeGenius",tolua_get_tagRolePet_ToLua_unsigned_FleeGenius,tolua_set_tagRolePet_ToLua_unsigned_FleeGenius);
   tolua_variable(tolua_S,"StrengthenInfo",tolua_get_tagRolePet_ToLua_StrengthenInfo,tolua_set_tagRolePet_ToLua_StrengthenInfo);
   tolua_variable(tolua_S,"NextStrenLvl",tolua_get_tagRolePet_ToLua_unsigned_NextStrenLvl,tolua_set_tagRolePet_ToLua_unsigned_NextStrenLvl);
   tolua_variable(tolua_S,"PetSkills",tolua_get_tagRolePet_ToLua_PetSkills,tolua_set_tagRolePet_ToLua_PetSkills);
   tolua_variable(tolua_S,"StatFlag",tolua_get_tagRolePet_ToLua_unsigned_StatFlag,tolua_set_tagRolePet_ToLua_unsigned_StatFlag);
   tolua_variable(tolua_S,"Gender",tolua_get_tagRolePet_ToLua_unsigned_Gender,tolua_set_tagRolePet_ToLua_unsigned_Gender);
   tolua_variable(tolua_S,"Res",tolua_get_tagRolePet_ToLua_Res,tolua_set_tagRolePet_ToLua_Res);
   tolua_variable(tolua_S,"FightAttr",tolua_get_tagRolePet_ToLua_FightAttr,tolua_set_tagRolePet_ToLua_FightAttr);
   tolua_variable(tolua_S,"HeavyHitRateMul",tolua_get_tagRolePet_ToLua_HeavyHitRateMul,tolua_set_tagRolePet_ToLua_HeavyHitRateMul);
   tolua_variable(tolua_S,"Passive",tolua_get_tagRolePet_ToLua_Passive,tolua_set_tagRolePet_ToLua_Passive);
   tolua_variable(tolua_S,"NativeSkill",tolua_get_tagRolePet_ToLua_NativeSkill,tolua_set_tagRolePet_ToLua_NativeSkill);
   tolua_variable(tolua_S,"IceDefGenius",tolua_get_tagRolePet_ToLua_unsigned_IceDefGenius,tolua_set_tagRolePet_ToLua_unsigned_IceDefGenius);
   tolua_variable(tolua_S,"MiscFlag",tolua_get_tagRolePet_ToLua_MiscFlag,tolua_set_tagRolePet_ToLua_MiscFlag);
   tolua_variable(tolua_S,"LockNum",tolua_get_tagRolePet_ToLua_unsigned_LockNum,tolua_set_tagRolePet_ToLua_unsigned_LockNum);
   tolua_variable(tolua_S,"LockIdxs",tolua_get_tagRolePet_ToLua_LockIdxs,tolua_set_tagRolePet_ToLua_LockIdxs);
   tolua_variable(tolua_S,"StrengthenCount",tolua_get_tagRolePet_ToLua_StrengthenCount,tolua_set_tagRolePet_ToLua_StrengthenCount);
   tolua_variable(tolua_S,"LoveLevel",tolua_get_tagRolePet_ToLua_unsigned_LoveLevel,tolua_set_tagRolePet_ToLua_unsigned_LoveLevel);
   tolua_variable(tolua_S,"Imp",tolua_get_tagRolePet_ToLua_unsigned_Imp,tolua_set_tagRolePet_ToLua_unsigned_Imp);
   tolua_variable(tolua_S,"WenBao",tolua_get_tagRolePet_ToLua_WenBao,tolua_set_tagRolePet_ToLua_WenBao);
   tolua_variable(tolua_S,"ImpExp",tolua_get_tagRolePet_ToLua_ImpExp,tolua_set_tagRolePet_ToLua_ImpExp);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagPetSkillGridDef_ToLua","tagPetSkillGridDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetSkillGridDef_ToLua");
   tolua_variable(tolua_S,"SkillGrid",tolua_get_tagPetSkillGridDef_ToLua_SkillGrid,tolua_set_tagPetSkillGridDef_ToLua_SkillGrid);
   tolua_variable(tolua_S,"Money",tolua_get_tagPetSkillGridDef_ToLua_Money,tolua_set_tagPetSkillGridDef_ToLua_Money);
   tolua_array(tolua_S,"GridRate",tolua_get_GameEngineTolua_tagPetSkillGridDef_ToLua_GridRate,tolua_set_GameEngineTolua_tagPetSkillGridDef_ToLua_GridRate);
   tolua_variable(tolua_S,"TransferRate",tolua_get_tagPetSkillGridDef_ToLua_TransferRate,tolua_set_tagPetSkillGridDef_ToLua_TransferRate);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagCSPetFuseInviteInfo_ToLua","tagCSPetFuseInviteInfo_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagCSPetFuseInviteInfo_ToLua");
   tolua_variable(tolua_S,"MemID",tolua_get_tagCSPetFuseInviteInfo_ToLua_unsigned_MemID,tolua_set_tagCSPetFuseInviteInfo_ToLua_unsigned_MemID);
   tolua_variable(tolua_S,"RoleName",tolua_get_tagCSPetFuseInviteInfo_ToLua_RoleName,tolua_set_tagCSPetFuseInviteInfo_ToLua_RoleName);
   tolua_variable(tolua_S,"Pet",tolua_get_tagCSPetFuseInviteInfo_ToLua_Pet,tolua_set_tagCSPetFuseInviteInfo_ToLua_Pet);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagCSPetFuseUI_ToLua","tagCSPetFuseUI_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagCSPetFuseUI_ToLua");
   tolua_variable(tolua_S,"RoleName",tolua_get_tagCSPetFuseUI_ToLua_RoleName,tolua_set_tagCSPetFuseUI_ToLua_RoleName);
   tolua_variable(tolua_S,"Pet",tolua_get_tagCSPetFuseUI_ToLua_Pet,tolua_set_tagCSPetFuseUI_ToLua_Pet);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagCSPetFuseBaby_ToLua","tagCSPetFuseBaby_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagCSPetFuseBaby_ToLua");
   tolua_variable(tolua_S,"MemID",tolua_get_tagCSPetFuseBaby_ToLua_unsigned_MemID,tolua_set_tagCSPetFuseBaby_ToLua_unsigned_MemID);
   tolua_variable(tolua_S,"Pet",tolua_get_tagCSPetFuseBaby_ToLua_Pet,tolua_set_tagCSPetFuseBaby_ToLua_Pet);
   tolua_variable(tolua_S,"OtherMemID",tolua_get_tagCSPetFuseBaby_ToLua_unsigned_OtherMemID,tolua_set_tagCSPetFuseBaby_ToLua_unsigned_OtherMemID);
   tolua_variable(tolua_S,"OtherPet",tolua_get_tagCSPetFuseBaby_ToLua_OtherPet,tolua_set_tagCSPetFuseBaby_ToLua_OtherPet);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagPetGeniusDef_ToLua","tagPetGeniusDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetGeniusDef_ToLua");
   tolua_variable(tolua_S,"PinZhi",tolua_get_tagPetGeniusDef_ToLua_PinZhi,tolua_set_tagPetGeniusDef_ToLua_PinZhi);
   tolua_variable(tolua_S,"EatMoneyType",tolua_get_tagPetGeniusDef_ToLua_EatMoneyType,tolua_set_tagPetGeniusDef_ToLua_EatMoneyType);
   tolua_variable(tolua_S,"EatMoneyVal",tolua_get_tagPetGeniusDef_ToLua_EatMoneyVal,tolua_set_tagPetGeniusDef_ToLua_EatMoneyVal);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagPetMoneyDef_ToLua","tagPetMoneyDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetMoneyDef_ToLua");
   tolua_variable(tolua_S,"Imp",tolua_get_tagPetMoneyDef_ToLua_Imp,tolua_set_tagPetMoneyDef_ToLua_Imp);
   tolua_array(tolua_S,"Money",tolua_get_GameEngineTolua_tagPetMoneyDef_ToLua_Money,tolua_set_GameEngineTolua_tagPetMoneyDef_ToLua_Money);
   tolua_variable(tolua_S,"Count",tolua_get_tagPetMoneyDef_ToLua_Count,tolua_set_tagPetMoneyDef_ToLua_Count);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagPetImpUpDef_ToLua","tagPetImpUpDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetImpUpDef_ToLua");
   tolua_variable(tolua_S,"Imp",tolua_get_tagPetImpUpDef_ToLua_Imp,tolua_set_tagPetImpUpDef_ToLua_Imp);
   tolua_variable(tolua_S,"ExpUp",tolua_get_tagPetImpUpDef_ToLua_ExpUp,tolua_set_tagPetImpUpDef_ToLua_ExpUp);
   tolua_variable(tolua_S,"UseExp",tolua_get_tagPetImpUpDef_ToLua_UseExp,tolua_set_tagPetImpUpDef_ToLua_UseExp);
   tolua_variable(tolua_S,"TouDecExp",tolua_get_tagPetImpUpDef_ToLua_TouDecExp,tolua_set_tagPetImpUpDef_ToLua_TouDecExp);
   tolua_variable(tolua_S,"AddExp",tolua_get_tagPetImpUpDef_ToLua_AddExp,tolua_set_tagPetImpUpDef_ToLua_AddExp);
   tolua_variable(tolua_S,"UseMoney",tolua_get_tagPetImpUpDef_ToLua_UseMoney,tolua_set_tagPetImpUpDef_ToLua_UseMoney);
   tolua_variable(tolua_S,"UseContri",tolua_get_tagPetImpUpDef_ToLua_UseContri,tolua_set_tagPetImpUpDef_ToLua_UseContri);
   tolua_variable(tolua_S,"UpUseMoney",tolua_get_tagPetImpUpDef_ToLua_UpUseMoney,tolua_set_tagPetImpUpDef_ToLua_UpUseMoney);
   tolua_variable(tolua_S,"UpUseItem",tolua_get_tagPetImpUpDef_ToLua_UpUseItem,tolua_set_tagPetImpUpDef_ToLua_UpUseItem);
   tolua_variable(tolua_S,"UpUseItemNum",tolua_get_tagPetImpUpDef_ToLua_UpUseItemNum,tolua_set_tagPetImpUpDef_ToLua_UpUseItemNum);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagPetImpUpAttrDef_ToLua","tagPetImpUpAttrDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagPetImpUpAttrDef_ToLua");
   tolua_variable(tolua_S,"Imp",tolua_get_tagPetImpUpAttrDef_ToLua_Imp,tolua_set_tagPetImpUpAttrDef_ToLua_Imp);
   tolua_variable(tolua_S,"Type",tolua_get_tagPetImpUpAttrDef_ToLua_Type,tolua_set_tagPetImpUpAttrDef_ToLua_Type);
   tolua_array(tolua_S,"Genius",tolua_get_GameEngineTolua_tagPetImpUpAttrDef_ToLua_Genius,tolua_set_GameEngineTolua_tagPetImpUpAttrDef_ToLua_Genius);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"CLIENT_PET_TYPE_NORMAL",CLIENT_PET_TYPE_NORMAL);
  tolua_constant(tolua_S,"CLIENT_PET_TYPE_ABERRANCE",CLIENT_PET_TYPE_ABERRANCE);
  tolua_constant(tolua_S,"CLIENT_PET_MAX_FIGHT_SHI",CLIENT_PET_MAX_FIGHT_SHI);
  tolua_constant(tolua_S,"CLIENT_MAX_PET_STRENGTHEN_ITEM",CLIENT_MAX_PET_STRENGTHEN_ITEM);
  tolua_constant(tolua_S,"CLIENT_MAX_PET_STRENGTHEN_LEVEL",CLIENT_MAX_PET_STRENGTHEN_LEVEL);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_D",CLIENT_PET_GENIUS_D);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_C",CLIENT_PET_GENIUS_C);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_B",CLIENT_PET_GENIUS_B);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_A",CLIENT_PET_GENIUS_A);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_S",CLIENT_PET_GENIUS_S);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_D_WASH_MONEY",CLIENT_PET_GENIUS_D_WASH_MONEY);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_C_WASH_MONEY",CLIENT_PET_GENIUS_C_WASH_MONEY);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_B_WASH_MONEY",CLIENT_PET_GENIUS_B_WASH_MONEY);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_A_WASH_MONEY",CLIENT_PET_GENIUS_A_WASH_MONEY);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_S_WASH_MONEY",CLIENT_PET_GENIUS_S_WASH_MONEY);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_D_UNBIND_MONEY",CLIENT_PET_GENIUS_D_UNBIND_MONEY);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_C_UNBIND_MONEY",CLIENT_PET_GENIUS_C_UNBIND_MONEY);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_B_UNBIND_MONEY",CLIENT_PET_GENIUS_B_UNBIND_MONEY);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_A_UNBIND_MONEY",CLIENT_PET_GENIUS_A_UNBIND_MONEY);
  tolua_constant(tolua_S,"CLIENT_PET_GENIUS_S_UNBIND_MONEY",CLIENT_PET_GENIUS_S_UNBIND_MONEY);
  tolua_constant(tolua_S,"CLIENT_MIN_RONG_HE_LV",CLIENT_MIN_RONG_HE_LV);
  tolua_constant(tolua_S,"CLIENT_PET_FUSE_FAIL",CLIENT_PET_FUSE_FAIL);
  tolua_constant(tolua_S,"CLIENT_PET_FUSE_SUCCESS",CLIENT_PET_FUSE_SUCCESS);
  tolua_constant(tolua_S,"CLIENT_MAX_RONG_HE_DIST",CLIENT_MAX_RONG_HE_DIST);
  tolua_constant(tolua_S,"CLIENT_MAX_RONG_HE_TIME",CLIENT_MAX_RONG_HE_TIME);
  tolua_constant(tolua_S,"CLIENT_RESTREN_ITEMID",CLIENT_RESTREN_ITEMID);
  tolua_function(tolua_S,"getPetSkillGridDef",tolua_GameEngineTolua_getPetSkillGridDef00);
  tolua_function(tolua_S,"getPetDef",tolua_GameEngineTolua_getPetDef00);
  tolua_function(tolua_S,"getPetGeniusDef",tolua_GameEngineTolua_getPetGeniusDef00);
  tolua_function(tolua_S,"getPetStrengthenDef",tolua_GameEngineTolua_getPetStrengthenDef00);
  tolua_function(tolua_S,"isMaxStrengthenLevel",tolua_GameEngineTolua_isMaxStrengthenLevel00);
  tolua_function(tolua_S,"getPetStrengthenCost",tolua_GameEngineTolua_getPetStrengthenCost00);
  tolua_function(tolua_S,"getPetLevelDef",tolua_GameEngineTolua_getPetLevelDef00);
  tolua_function(tolua_S,"getPetTraitDef",tolua_GameEngineTolua_getPetTraitDef00);
  tolua_function(tolua_S,"getPetMoneyDef",tolua_GameEngineTolua_getPetMoneyDef00);
  tolua_function(tolua_S,"getPetImpUpDef",tolua_GameEngineTolua_getPetImpUpDef00);
  tolua_function(tolua_S,"getPetImpUpAttrDef",tolua_GameEngineTolua_getPetImpUpAttrDef00);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"PetGrowValue","PetGrowValue","",tolua_collect_PetGrowValue);
  #else
  tolua_cclass(tolua_S,"PetGrowValue","PetGrowValue","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"PetGrowValue");
   tolua_variable(tolua_S,"Attack",tolua_get_PetGrowValue_Attack,tolua_set_PetGrowValue_Attack);
   tolua_variable(tolua_S,"HP",tolua_get_PetGrowValue_HP,tolua_set_PetGrowValue_HP);
   tolua_variable(tolua_S,"Defend",tolua_get_PetGrowValue_Defend,tolua_set_PetGrowValue_Defend);
   tolua_variable(tolua_S,"Resist",tolua_get_PetGrowValue_Resist,tolua_set_PetGrowValue_Resist);
   tolua_variable(tolua_S,"Exact",tolua_get_PetGrowValue_Exact,tolua_set_PetGrowValue_Exact);
   tolua_variable(tolua_S,"Dodge",tolua_get_PetGrowValue_Dodge,tolua_set_PetGrowValue_Dodge);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"PetGrowRange","PetGrowRange","",tolua_collect_PetGrowRange);
  #else
  tolua_cclass(tolua_S,"PetGrowRange","PetGrowRange","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"PetGrowRange");
   tolua_variable(tolua_S,"Min",tolua_get_PetGrowRange_Min,tolua_set_PetGrowRange_Min);
   tolua_variable(tolua_S,"Max",tolua_get_PetGrowRange_Max,tolua_set_PetGrowRange_Max);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GamePet","GamePet","",NULL);
  tolua_beginmodule(tolua_S,"GamePet");
   tolua_function(tolua_S,"petPre",tolua_GameEngineTolua_GamePet_petPre00);
   tolua_function(tolua_S,"petBackUp",tolua_GameEngineTolua_GamePet_petBackUp00);
   tolua_function(tolua_S,"petFreedom",tolua_GameEngineTolua_GamePet_petFreedom00);
   tolua_function(tolua_S,"petFreedom",tolua_GameEngineTolua_GamePet_petFreedom01);
   tolua_function(tolua_S,"setPetFightMode",tolua_GameEngineTolua_GamePet_setPetFightMode00);
   tolua_function(tolua_S,"petSkillLearn",tolua_GameEngineTolua_GamePet_petSkillLearn00);
   tolua_function(tolua_S,"petSkillLevelUp",tolua_GameEngineTolua_GamePet_petSkillLevelUp00);
   tolua_function(tolua_S,"petWashSkillGrid",tolua_GameEngineTolua_GamePet_petWashSkillGrid00);
   tolua_function(tolua_S,"isPetStrthenItem",tolua_GameEngineTolua_GamePet_isPetStrthenItem00);
   tolua_function(tolua_S,"petStrengthen",tolua_GameEngineTolua_GamePet_petStrengthen00);
   tolua_function(tolua_S,"petResetStrengthen",tolua_GameEngineTolua_GamePet_petResetStrengthen00);
   tolua_function(tolua_S,"petSaveStrengthen",tolua_GameEngineTolua_GamePet_petSaveStrengthen00);
   tolua_function(tolua_S,"petWatch",tolua_GameEngineTolua_GamePet_petWatch00);
   tolua_function(tolua_S,"canChangePetName",tolua_GameEngineTolua_GamePet_canChangePetName00);
   tolua_function(tolua_S,"petChangeName",tolua_GameEngineTolua_GamePet_petChangeName00);
   tolua_function(tolua_S,"setPetActor",tolua_GameEngineTolua_GamePet_setPetActor00);
   tolua_function(tolua_S,"getPetActor",tolua_GameEngineTolua_GamePet_getPetActor00);
   tolua_function(tolua_S,"getPetActor",tolua_GameEngineTolua_GamePet_getPetActor01);
   tolua_function(tolua_S,"callBackAllPets",tolua_GameEngineTolua_GamePet_callBackAllPets00);
   tolua_function(tolua_S,"addPetSkillGrid",tolua_GameEngineTolua_GamePet_addPetSkillGrid00);
   tolua_function(tolua_S,"addFreedomPet",tolua_GameEngineTolua_GamePet_addFreedomPet00);
   tolua_function(tolua_S,"isPetInFreedom",tolua_GameEngineTolua_GamePet_isPetInFreedom00);
   tolua_function(tolua_S,"getStrthenVal",tolua_GameEngineTolua_GamePet_getStrthenVal00);
   tolua_function(tolua_S,"LockPetSkill",tolua_GameEngineTolua_GamePet_LockPetSkill00);
   tolua_function(tolua_S,"UnLockPetSkill",tolua_GameEngineTolua_GamePet_UnLockPetSkill00);
   tolua_function(tolua_S,"ResetPetSkill",tolua_GameEngineTolua_GamePet_ResetPetSkill00);
   tolua_function(tolua_S,"LevelUpPetSkill",tolua_GameEngineTolua_GamePet_LevelUpPetSkill00);
   tolua_function(tolua_S,"ResetPetGrow",tolua_GameEngineTolua_GamePet_ResetPetGrow00);
   tolua_function(tolua_S,"ResetPetGrow",tolua_GameEngineTolua_GamePet_ResetPetGrow01);
   tolua_function(tolua_S,"ResetPetGrowSave",tolua_GameEngineTolua_GamePet_ResetPetGrowSave00);
   tolua_function(tolua_S,"petFreeHeti",tolua_GameEngineTolua_GamePet_petFreeHeti00);
   tolua_function(tolua_S,"loveLevelUp",tolua_GameEngineTolua_GamePet_loveLevelUp00);
   tolua_function(tolua_S,"getPetNum",tolua_GameEngineTolua_GamePet_getPetNum00);
   tolua_function(tolua_S,"getPetMaxNum",tolua_GameEngineTolua_GamePet_getPetMaxNum00);
   tolua_function(tolua_S,"getBattlePetNum",tolua_GameEngineTolua_GamePet_getBattlePetNum00);
   tolua_function(tolua_S,"isExtraBattlePet",tolua_GameEngineTolua_GamePet_isExtraBattlePet00);
   tolua_function(tolua_S,"isExtraClanJiYangPet",tolua_GameEngineTolua_GamePet_isExtraClanJiYangPet00);
   tolua_function(tolua_S,"petStartStepUp",tolua_GameEngineTolua_GamePet_petStartStepUp00);
   tolua_function(tolua_S,"petStartImpUp",tolua_GameEngineTolua_GamePet_petStartImpUp00);
   tolua_function(tolua_S,"petGiftBookUse",tolua_GameEngineTolua_GamePet_petGiftBookUse00);
   tolua_function(tolua_S,"petStartUnBind",tolua_GameEngineTolua_GamePet_petStartUnBind00);
   tolua_function(tolua_S,"updatePetIndexDelPet",tolua_GameEngineTolua_GamePet_updatePetIndexDelPet00);
   tolua_function(tolua_S,"getPetInfo",tolua_GameEngineTolua_GamePet_getPetInfo00);
   tolua_function(tolua_S,"getPetInfo",tolua_GameEngineTolua_GamePet_getPetInfo01);
   tolua_function(tolua_S,"getPetInfo",tolua_GameEngineTolua_GamePet_getPetInfo02);
   tolua_function(tolua_S,"getPetInfo",tolua_GameEngineTolua_GamePet_getPetInfo03);
   tolua_function(tolua_S,"getPetIndex",tolua_GameEngineTolua_GamePet_getPetIndex00);
   tolua_function(tolua_S,"getWatchPetInfo",tolua_GameEngineTolua_GamePet_getWatchPetInfo00);
   tolua_function(tolua_S,"getPetDef",tolua_GameEngineTolua_GamePet_getPetDef00);
   tolua_function(tolua_S,"isPetInState",tolua_GameEngineTolua_GamePet_isPetInState00);
   tolua_function(tolua_S,"isPetInState",tolua_GameEngineTolua_GamePet_isPetInState01);
   tolua_function(tolua_S,"isPetInState",tolua_GameEngineTolua_GamePet_isPetInState02);
   tolua_function(tolua_S,"isPetInState",tolua_GameEngineTolua_GamePet_isPetInState03);
   tolua_function(tolua_S,"isPetResetSkillLockUseCoin",tolua_GameEngineTolua_GamePet_isPetResetSkillLockUseCoin00);
   tolua_function(tolua_S,"getPetResetSkillLockNum",tolua_GameEngineTolua_GamePet_getPetResetSkillLockNum00);
   tolua_function(tolua_S,"getPetResetSkillLockIdx",tolua_GameEngineTolua_GamePet_getPetResetSkillLockIdx00);
   tolua_function(tolua_S,"getPetResetSkillCostMoney",tolua_GameEngineTolua_GamePet_getPetResetSkillCostMoney00);
   tolua_function(tolua_S,"getPetResetSkillCostMoney",tolua_GameEngineTolua_GamePet_getPetResetSkillCostMoney01);
   tolua_function(tolua_S,"isPetSkillCanLevelUp",tolua_GameEngineTolua_GamePet_isPetSkillCanLevelUp00);
   tolua_function(tolua_S,"getPetSkillLevelUpCostItemCount",tolua_GameEngineTolua_GamePet_getPetSkillLevelUpCostItemCount00);
   tolua_function(tolua_S,"getPetGrowResetCostMoney",tolua_GameEngineTolua_GamePet_getPetGrowResetCostMoney00);
   tolua_function(tolua_S,"getPetGrowResetCostMoney",tolua_GameEngineTolua_GamePet_getPetGrowResetCostMoney01);
   tolua_function(tolua_S,"getPetGrowValue",tolua_GameEngineTolua_GamePet_getPetGrowValue00);
   tolua_function(tolua_S,"getPetGrowValue",tolua_GameEngineTolua_GamePet_getPetGrowValue01);
   tolua_function(tolua_S,"getPetGrowResetRange",tolua_GameEngineTolua_GamePet_getPetGrowResetRange00);
   tolua_function(tolua_S,"getPetGrowResetRange",tolua_GameEngineTolua_GamePet_getPetGrowResetRange01);
   tolua_function(tolua_S,"getPetBlinkMinRange",tolua_GameEngineTolua_GamePet_getPetBlinkMinRange00);
   tolua_function(tolua_S,"getPetGrowResetLimit",tolua_GameEngineTolua_GamePet_getPetGrowResetLimit00);
   tolua_function(tolua_S,"getPetGrowResetLimit",tolua_GameEngineTolua_GamePet_getPetGrowResetLimit01);
   tolua_function(tolua_S,"isPetFull",tolua_GameEngineTolua_GamePet_isPetFull00);
   tolua_function(tolua_S,"canCampaignPet",tolua_GameEngineTolua_GamePet_canCampaignPet00);
   tolua_function(tolua_S,"isPre",tolua_GameEngineTolua_GamePet_isPre00);
   tolua_function(tolua_S,"getPetHeti",tolua_GameEngineTolua_GamePet_getPetHeti00);
   tolua_function(tolua_S,"getFightPet",tolua_GameEngineTolua_GamePet_getFightPet00);
   tolua_function(tolua_S,"setPetHetiEntity",tolua_GameEngineTolua_GamePet_setPetHetiEntity00);
   tolua_function(tolua_S,"setBattlePetEntity",tolua_GameEngineTolua_GamePet_setBattlePetEntity00);
   tolua_function(tolua_S,"isPetStrenthenItem",tolua_GameEngineTolua_GamePet_isPetStrenthenItem00);
   tolua_function(tolua_S,"inviteFuse",tolua_GameEngineTolua_GamePet_inviteFuse00);
   tolua_function(tolua_S,"acceptFuseInvite",tolua_GameEngineTolua_GamePet_acceptFuseInvite00);
   tolua_function(tolua_S,"rejectFuse",tolua_GameEngineTolua_GamePet_rejectFuse00);
   tolua_function(tolua_S,"cancelFuse",tolua_GameEngineTolua_GamePet_cancelFuse00);
   tolua_function(tolua_S,"agreeFuse",tolua_GameEngineTolua_GamePet_agreeFuse00);
   tolua_function(tolua_S,"startEatPet",tolua_GameEngineTolua_GamePet_startEatPet00);
   tolua_function(tolua_S,"startMoveStar",tolua_GameEngineTolua_GamePet_startMoveStar00);
   tolua_function(tolua_S,"getPetFuseInviteInfo",tolua_GameEngineTolua_GamePet_getPetFuseInviteInfo00);
   tolua_function(tolua_S,"getRongHePlayerInfo",tolua_GameEngineTolua_GamePet_getRongHePlayerInfo00);
   tolua_function(tolua_S,"getSelfRongHePetWID",tolua_GameEngineTolua_GamePet_getSelfRongHePetWID00);
   tolua_function(tolua_S,"clearSelfRongHePetInfo",tolua_GameEngineTolua_GamePet_clearSelfRongHePetInfo00);
   tolua_function(tolua_S,"getSuccessFuseInfo",tolua_GameEngineTolua_GamePet_getSuccessFuseInfo00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"MOVE_TIME_INTERVAL_SMALL",MOVE_TIME_INTERVAL_SMALL);
  tolua_constant(tolua_S,"MOVE_SPEED_ZERO",MOVE_SPEED_ZERO);
  tolua_constant(tolua_S,"MOVE_STATUS_FORBID",MOVE_STATUS_FORBID);
  tolua_constant(tolua_S,"MOVE_TYPE_NOT_NORMAL",MOVE_TYPE_NOT_NORMAL);
  tolua_constant(tolua_S,"MOVE_STATE_CANNOT_MOVE",MOVE_STATE_CANNOT_MOVE);
  tolua_constant(tolua_S,"MOVE_IN_TETANIC",MOVE_IN_TETANIC);
  tolua_constant(tolua_S,"MOVE_POINT_CANNOT_WALK",MOVE_POINT_CANNOT_WALK);
  tolua_constant(tolua_S,"MOVE_ALREADY_IN_DEST",MOVE_ALREADY_IN_DEST);
  tolua_constant(tolua_S,"MOVE_DIST_INTERVAL_SMALL",MOVE_DIST_INTERVAL_SMALL);
  tolua_constant(tolua_S,"MOVE_SUCCESS",MOVE_SUCCESS);
  tolua_constant(tolua_S,"CLIENT_CAREER_NON",CLIENT_CAREER_NON);
  tolua_constant(tolua_S,"CLIENT_CAREER_WARRIOR",CLIENT_CAREER_WARRIOR);
  tolua_constant(tolua_S,"CLIENT_CAREER_MAGICOR",CLIENT_CAREER_MAGICOR);
  tolua_constant(tolua_S,"CLIENT_CAREER_GUNER",CLIENT_CAREER_GUNER);
  tolua_constant(tolua_S,"CLIENT_CAREER_CHURCH",CLIENT_CAREER_CHURCH);
  tolua_constant(tolua_S,"CLIENT_CAREER_WARRIOR_SINGLEHAND",CLIENT_CAREER_WARRIOR_SINGLEHAND);
  tolua_constant(tolua_S,"CLIENT_CAREER_WARRIOR_DOUBLEHAND",CLIENT_CAREER_WARRIOR_DOUBLEHAND);
  tolua_constant(tolua_S,"CLIENT_CAREER_MAGICOR_SINGLEHAND",CLIENT_CAREER_MAGICOR_SINGLEHAND);
  tolua_constant(tolua_S,"CLIENT_CAREER_MAGICOR_DOUBLEHAND",CLIENT_CAREER_MAGICOR_DOUBLEHAND);
  tolua_constant(tolua_S,"CLIENT_CAREER_GUNER_SINGLEHAND",CLIENT_CAREER_GUNER_SINGLEHAND);
  tolua_constant(tolua_S,"CLIENT_CAREER_GUNER_DOUBLEHAND",CLIENT_CAREER_GUNER_DOUBLEHAND);
  tolua_constant(tolua_S,"CLIENT_CAREER_CHURCH_SINGLEHAND",CLIENT_CAREER_CHURCH_SINGLEHAND);
  tolua_constant(tolua_S,"CLIENT_CAREER_CHURCH_DOUBLEHAND",CLIENT_CAREER_CHURCH_DOUBLEHAND);
  tolua_constant(tolua_S,"CLIENT_CAREERCHG_LEVEL",CLIENT_CAREERCHG_LEVEL);
  tolua_constant(tolua_S,"CLIENT_CAREERCHG_ITEMID",CLIENT_CAREERCHG_ITEMID);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagConvoyTask","tagConvoyTask","",tolua_collect_tagConvoyTask);
  #else
  tolua_cclass(tolua_S,"tagConvoyTask","tagConvoyTask","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagConvoyTask");
   tolua_function(tolua_S,"new",tolua_GameEngineTolua_tagConvoyTask_new00);
   tolua_function(tolua_S,"new_local",tolua_GameEngineTolua_tagConvoyTask_new00_local);
   tolua_function(tolua_S,".call",tolua_GameEngineTolua_tagConvoyTask_new00_local);
   tolua_variable(tolua_S,"m_bHaveConvoy",tolua_get_tagConvoyTask_m_bHaveConvoy,tolua_set_tagConvoyTask_m_bHaveConvoy);
   tolua_variable(tolua_S,"m_nMonsterID",tolua_get_tagConvoyTask_m_nMonsterID,tolua_set_tagConvoyTask_m_nMonsterID);
   tolua_variable(tolua_S,"m_nMonsterResID",tolua_get_tagConvoyTask_m_nMonsterResID,tolua_set_tagConvoyTask_m_nMonsterResID);
   tolua_variable(tolua_S,"m_nMonsterMapId",tolua_get_tagConvoyTask_m_nMonsterMapId,tolua_set_tagConvoyTask_m_nMonsterMapId);
   tolua_variable(tolua_S,"m_nMonsterPosX",tolua_get_tagConvoyTask_m_nMonsterPosX,tolua_set_tagConvoyTask_m_nMonsterPosX);
   tolua_variable(tolua_S,"m_nMosnterPoxY",tolua_get_tagConvoyTask_m_nMosnterPoxY,tolua_set_tagConvoyTask_m_nMosnterPoxY);
   tolua_variable(tolua_S,"m_nQuestId",tolua_get_tagConvoyTask_m_nQuestId,tolua_set_tagConvoyTask_m_nQuestId);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagReviveMoney_ToLua","tagReviveMoney_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagReviveMoney_ToLua");
   tolua_variable(tolua_S,"MoneyType",tolua_get_tagReviveMoney_ToLua_MoneyType,tolua_set_tagReviveMoney_ToLua_MoneyType);
   tolua_variable(tolua_S,"MoneyVal",tolua_get_tagReviveMoney_ToLua_MoneyVal,tolua_set_tagReviveMoney_ToLua_MoneyVal);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagReviveDef_ToLua","tagReviveDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagReviveDef_ToLua");
   tolua_variable(tolua_S,"Level",tolua_get_tagReviveDef_ToLua_Level,tolua_set_tagReviveDef_ToLua_Level);
   tolua_variable(tolua_S,"StandRevive",tolua_get_tagReviveDef_ToLua_StandRevive,tolua_set_tagReviveDef_ToLua_StandRevive);
   tolua_variable(tolua_S,"PerfectRevive",tolua_get_tagReviveDef_ToLua_PerfectRevive,tolua_set_tagReviveDef_ToLua_PerfectRevive);
   tolua_variable(tolua_S,"ReviveTimes",tolua_get_tagReviveDef_ToLua_ReviveTimes,tolua_set_tagReviveDef_ToLua_ReviveTimes);
   tolua_variable(tolua_S,"PerfectReviveTimes",tolua_get_tagReviveDef_ToLua_PerfectReviveTimes,tolua_set_tagReviveDef_ToLua_PerfectReviveTimes);
   tolua_variable(tolua_S,"IncreaseVal",tolua_get_tagReviveDef_ToLua_IncreaseVal,tolua_set_tagReviveDef_ToLua_IncreaseVal);
   tolua_variable(tolua_S,"HPMPRate",tolua_get_tagReviveDef_ToLua_HPMPRate,tolua_set_tagReviveDef_ToLua_HPMPRate);
   tolua_variable(tolua_S,"StandIncreaseVal",tolua_get_tagReviveDef_ToLua_StandIncreaseVal,tolua_set_tagReviveDef_ToLua_StandIncreaseVal);
   tolua_variable(tolua_S,"StandIncreaseVal2",tolua_get_tagReviveDef_ToLua_StandIncreaseVal2,tolua_set_tagReviveDef_ToLua_StandIncreaseVal2);
   tolua_variable(tolua_S,"StandIncreaseNum",tolua_get_tagReviveDef_ToLua_StandIncreaseNum,tolua_set_tagReviveDef_ToLua_StandIncreaseNum);
   tolua_variable(tolua_S,"PerfectIncreaseVal2",tolua_get_tagReviveDef_ToLua_PerfectIncreaseVal2,tolua_set_tagReviveDef_ToLua_PerfectIncreaseVal2);
   tolua_variable(tolua_S,"PerfectIncreaseNum",tolua_get_tagReviveDef_ToLua_PerfectIncreaseNum,tolua_set_tagReviveDef_ToLua_PerfectIncreaseNum);
   tolua_variable(tolua_S,"DayReviveTimes",tolua_get_tagReviveDef_ToLua_DayReviveTimes,tolua_set_tagReviveDef_ToLua_DayReviveTimes);
   tolua_variable(tolua_S,"DayPerfectReviveTimes",tolua_get_tagReviveDef_ToLua_DayPerfectReviveTimes,tolua_set_tagReviveDef_ToLua_DayPerfectReviveTimes);
   tolua_variable(tolua_S,"PerfectFixedNum",tolua_get_tagReviveDef_ToLua_PerfectFixedNum,tolua_set_tagReviveDef_ToLua_PerfectFixedNum);
   tolua_variable(tolua_S,"PerfectFixedMul",tolua_get_tagReviveDef_ToLua_PerfectFixedMul,tolua_set_tagReviveDef_ToLua_PerfectFixedMul);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagLevelExpDef_ToLua","tagLevelExpDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagLevelExpDef_ToLua");
   tolua_variable(tolua_S,"Level",tolua_get_tagLevelExpDef_ToLua_Level,tolua_set_tagLevelExpDef_ToLua_Level);
   tolua_array(tolua_S,"ExpMul",tolua_get_GameEngineTolua_tagLevelExpDef_ToLua_ExpMul,tolua_set_GameEngineTolua_tagLevelExpDef_ToLua_ExpMul);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagLevelBuffExpDef_ToLua","tagLevelBuffExpDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagLevelBuffExpDef_ToLua");
   tolua_variable(tolua_S,"Level",tolua_get_tagLevelBuffExpDef_ToLua_Level,tolua_set_tagLevelBuffExpDef_ToLua_Level);
   tolua_variable(tolua_S,"Time",tolua_get_tagLevelBuffExpDef_ToLua_Time,tolua_set_tagLevelBuffExpDef_ToLua_Time);
   tolua_variable(tolua_S,"Exp",tolua_get_tagLevelBuffExpDef_ToLua_Exp,tolua_set_tagLevelBuffExpDef_ToLua_Exp);
   tolua_variable(tolua_S,"DayLimit",tolua_get_tagLevelBuffExpDef_ToLua_DayLimit,tolua_set_tagLevelBuffExpDef_ToLua_DayLimit);
   tolua_variable(tolua_S,"LevelAwardLimit",tolua_get_tagLevelBuffExpDef_ToLua_LevelAwardLimit,tolua_set_tagLevelBuffExpDef_ToLua_LevelAwardLimit);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagOfflineExpParameter_ToLua","tagOfflineExpParameter_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagOfflineExpParameter_ToLua");
   tolua_variable(tolua_S,"OfflineExpType",tolua_get_tagOfflineExpParameter_ToLua_OfflineExpType,tolua_set_tagOfflineExpParameter_ToLua_OfflineExpType);
   tolua_variable(tolua_S,"Parameter1",tolua_get_tagOfflineExpParameter_ToLua_Parameter1,tolua_set_tagOfflineExpParameter_ToLua_Parameter1);
   tolua_variable(tolua_S,"Parameter2",tolua_get_tagOfflineExpParameter_ToLua_Parameter2,tolua_set_tagOfflineExpParameter_ToLua_Parameter2);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"MAX_AOSHAN_BRAND_TOLUA",MAX_AOSHAN_BRAND_TOLUA);
  tolua_constant(tolua_S,"MAX_LIFT_BRAND_TOLUA",MAX_LIFT_BRAND_TOLUA);
  tolua_cclass(tolua_S,"MainGamePlayer","MainGamePlayer","GamePlayer",NULL);
  tolua_beginmodule(tolua_S,"MainGamePlayer");
   tolua_function(tolua_S,"canWalk",tolua_GameEngineTolua_MainGamePlayer_canWalk00);
   tolua_function(tolua_S,"canDelayMove",tolua_GameEngineTolua_MainGamePlayer_canDelayMove00);
   tolua_function(tolua_S,"canMove",tolua_GameEngineTolua_MainGamePlayer_canMove00);
   tolua_function(tolua_S,"CmdMovePause",tolua_GameEngineTolua_MainGamePlayer_CmdMovePause00);
   tolua_function(tolua_S,"CmdMoveStop",tolua_GameEngineTolua_MainGamePlayer_CmdMoveStop00);
   tolua_function(tolua_S,"setAFK",tolua_GameEngineTolua_MainGamePlayer_setAFK00);
   tolua_function(tolua_S,"isInPilState",tolua_GameEngineTolua_MainGamePlayer_isInPilState00);
   tolua_function(tolua_S,"setFace",tolua_GameEngineTolua_MainGamePlayer_setFace00);
   tolua_function(tolua_S,"setHair",tolua_GameEngineTolua_MainGamePlayer_setHair00);
   tolua_function(tolua_S,"setHead",tolua_GameEngineTolua_MainGamePlayer_setHead00);
   tolua_function(tolua_S,"isInPVPMap",tolua_GameEngineTolua_MainGamePlayer_isInPVPMap00);
   tolua_function(tolua_S,"getConvoyInfo",tolua_GameEngineTolua_MainGamePlayer_getConvoyInfo00);
   tolua_function(tolua_S,"GetWorldID",tolua_GameEngineTolua_MainGamePlayer_GetWorldID00);
   tolua_function(tolua_S,"getOwnMonster",tolua_GameEngineTolua_MainGamePlayer_getOwnMonster00);
   tolua_function(tolua_S,"getContainer",tolua_GameEngineTolua_MainGamePlayer_getContainer00);
   tolua_function(tolua_S,"getEquip",tolua_GameEngineTolua_MainGamePlayer_getEquip00);
   tolua_function(tolua_S,"getPworldLeaveTime",tolua_GameEngineTolua_MainGamePlayer_getPworldLeaveTime00);
   tolua_function(tolua_S,"getPworldStartTime",tolua_GameEngineTolua_MainGamePlayer_getPworldStartTime00);
   tolua_function(tolua_S,"getOldDayPworldScore",tolua_GameEngineTolua_MainGamePlayer_getOldDayPworldScore00);
   tolua_function(tolua_S,"setOldDayPworldScore",tolua_GameEngineTolua_MainGamePlayer_setOldDayPworldScore00);
   tolua_function(tolua_S,"setShowHead",tolua_GameEngineTolua_MainGamePlayer_setShowHead00);
   tolua_function(tolua_S,"setShowFashion",tolua_GameEngineTolua_MainGamePlayer_setShowFashion00);
   tolua_function(tolua_S,"setShowBack",tolua_GameEngineTolua_MainGamePlayer_setShowBack00);
   tolua_function(tolua_S,"setShowFace",tolua_GameEngineTolua_MainGamePlayer_setShowFace00);
   tolua_function(tolua_S,"setShowLove",tolua_GameEngineTolua_MainGamePlayer_setShowLove00);
   tolua_function(tolua_S,"levelUp",tolua_GameEngineTolua_MainGamePlayer_levelUp00);
   tolua_function(tolua_S,"revivePlayer",tolua_GameEngineTolua_MainGamePlayer_revivePlayer00);
   tolua_function(tolua_S,"endCollect",tolua_GameEngineTolua_MainGamePlayer_endCollect00);
   tolua_function(tolua_S,"kill",tolua_GameEngineTolua_MainGamePlayer_kill00);
   tolua_function(tolua_S,"cast",tolua_GameEngineTolua_MainGamePlayer_cast00);
   tolua_function(tolua_S,"hasFashion",tolua_GameEngineTolua_MainGamePlayer_hasFashion00);
   tolua_function(tolua_S,"checkXP",tolua_GameEngineTolua_MainGamePlayer_checkXP00);
   tolua_function(tolua_S,"isOnMorph",tolua_GameEngineTolua_MainGamePlayer_isOnMorph00);
   tolua_function(tolua_S,"getPathPointNum",tolua_GameEngineTolua_MainGamePlayer_getPathPointNum00);
   tolua_function(tolua_S,"getPathPoint",tolua_GameEngineTolua_MainGamePlayer_getPathPoint00);
   tolua_function(tolua_S,"getCurPosotion",tolua_GameEngineTolua_MainGamePlayer_getCurPosotion00);
   tolua_function(tolua_S,"getAutoFind",tolua_GameEngineTolua_MainGamePlayer_getAutoFind00);
   tolua_function(tolua_S,"setAutoFind",tolua_GameEngineTolua_MainGamePlayer_setAutoFind00);
   tolua_function(tolua_S,"setContinueAutoMove",tolua_GameEngineTolua_MainGamePlayer_setContinueAutoMove00);
   tolua_function(tolua_S,"getOneOfflineExp",tolua_GameEngineTolua_MainGamePlayer_getOneOfflineExp00);
   tolua_function(tolua_S,"getOfflineExp",tolua_GameEngineTolua_MainGamePlayer_getOfflineExp00);
   tolua_function(tolua_S,"getMaxOfflineExp",tolua_GameEngineTolua_MainGamePlayer_getMaxOfflineExp00);
   tolua_function(tolua_S,"setMaxOfflineExp",tolua_GameEngineTolua_MainGamePlayer_setMaxOfflineExp00);
   tolua_function(tolua_S,"getPworldExp",tolua_GameEngineTolua_MainGamePlayer_getPworldExp00);
   tolua_function(tolua_S,"setPworldExp",tolua_GameEngineTolua_MainGamePlayer_setPworldExp00);
   tolua_function(tolua_S,"getMaxPworldExp",tolua_GameEngineTolua_MainGamePlayer_getMaxPworldExp00);
   tolua_function(tolua_S,"setMaxPworldExp",tolua_GameEngineTolua_MainGamePlayer_setMaxPworldExp00);
   tolua_function(tolua_S,"getAutoLine",tolua_GameEngineTolua_MainGamePlayer_getAutoLine00);
   tolua_function(tolua_S,"continueLastAutoFind",tolua_GameEngineTolua_MainGamePlayer_continueLastAutoFind00);
   tolua_function(tolua_S,"ContinueAutoFind",tolua_GameEngineTolua_MainGamePlayer_ContinueAutoFind00);
   tolua_function(tolua_S,"getDiathesisManager",tolua_GameEngineTolua_MainGamePlayer_getDiathesisManager00);
   tolua_function(tolua_S,"setOverlayRegion",tolua_GameEngineTolua_MainGamePlayer_setOverlayRegion00);
   tolua_function(tolua_S,"breakBTypePre",tolua_GameEngineTolua_MainGamePlayer_breakBTypePre00);
   tolua_function(tolua_S,"breakPreAction",tolua_GameEngineTolua_MainGamePlayer_breakPreAction00);
   tolua_function(tolua_S,"breakChannel",tolua_GameEngineTolua_MainGamePlayer_breakChannel00);
   tolua_function(tolua_S,"jump",tolua_GameEngineTolua_MainGamePlayer_jump00);
   tolua_function(tolua_S,"canControl",tolua_GameEngineTolua_MainGamePlayer_canControl00);
   tolua_function(tolua_S,"changeCareer",tolua_GameEngineTolua_MainGamePlayer_changeCareer00);
   tolua_function(tolua_S,"ChangeCareerToFightLevle",tolua_GameEngineTolua_MainGamePlayer_ChangeCareerToFightLevle00);
   tolua_function(tolua_S,"getPkTargetName",tolua_GameEngineTolua_MainGamePlayer_getPkTargetName00);
   tolua_function(tolua_S,"isInPK",tolua_GameEngineTolua_MainGamePlayer_isInPK00);
   tolua_function(tolua_S,"sendLockFace",tolua_GameEngineTolua_MainGamePlayer_sendLockFace00);
   tolua_function(tolua_S,"unLockFace",tolua_GameEngineTolua_MainGamePlayer_unLockFace00);
   tolua_function(tolua_S,"ChangeClanName",tolua_GameEngineTolua_MainGamePlayer_ChangeClanName00);
   tolua_function(tolua_S,"ChangeRoleName",tolua_GameEngineTolua_MainGamePlayer_ChangeRoleName00);
   tolua_function(tolua_S,"requestRideMonsterMachine",tolua_GameEngineTolua_MainGamePlayer_requestRideMonsterMachine00);
   tolua_function(tolua_S,"requestDownMonsterMachine",tolua_GameEngineTolua_MainGamePlayer_requestDownMonsterMachine00);
   tolua_function(tolua_S,"prepareDownMonsterMachine",tolua_GameEngineTolua_MainGamePlayer_prepareDownMonsterMachine00);
   tolua_function(tolua_S,"breakPrepareDownMonsterMachine",tolua_GameEngineTolua_MainGamePlayer_breakPrepareDownMonsterMachine00);
   tolua_function(tolua_S,"requestMachineKickPlayer",tolua_GameEngineTolua_MainGamePlayer_requestMachineKickPlayer00);
   tolua_function(tolua_S,"requestMachinePassenger",tolua_GameEngineTolua_MainGamePlayer_requestMachinePassenger00);
   tolua_function(tolua_S,"requestAcceptOfflineExp",tolua_GameEngineTolua_MainGamePlayer_requestAcceptOfflineExp00);
   tolua_function(tolua_S,"requestCowRangeAward",tolua_GameEngineTolua_MainGamePlayer_requestCowRangeAward00);
   tolua_function(tolua_S,"requestOfflineExpBuff",tolua_GameEngineTolua_MainGamePlayer_requestOfflineExpBuff00);
   tolua_function(tolua_S,"RequestOpenBaoXiang",tolua_GameEngineTolua_MainGamePlayer_RequestOpenBaoXiang00);
   tolua_function(tolua_S,"requestHangHaiRangeAward",tolua_GameEngineTolua_MainGamePlayer_requestHangHaiRangeAward00);
   tolua_function(tolua_S,"requestYangHaiBangAdd",tolua_GameEngineTolua_MainGamePlayer_requestYangHaiBangAdd00);
   tolua_function(tolua_S,"requestYangHaiBangAward",tolua_GameEngineTolua_MainGamePlayer_requestYangHaiBangAward00);
   tolua_function(tolua_S,"requestClanWarAward",tolua_GameEngineTolua_MainGamePlayer_requestClanWarAward00);
   tolua_function(tolua_S,"requestPaoShangOpt",tolua_GameEngineTolua_MainGamePlayer_requestPaoShangOpt00);
   tolua_function(tolua_S,"getReviveDef",tolua_GameEngineTolua_MainGamePlayer_getReviveDef00);
   tolua_function(tolua_S,"getLevelExpDef",tolua_GameEngineTolua_MainGamePlayer_getLevelExpDef00);
   tolua_function(tolua_S,"getLevelBuffExpDef",tolua_GameEngineTolua_MainGamePlayer_getLevelBuffExpDef00);
   tolua_function(tolua_S,"getOfflineExpParameter",tolua_GameEngineTolua_MainGamePlayer_getOfflineExpParameter00);
   tolua_function(tolua_S,"requestSendMotionAction",tolua_GameEngineTolua_MainGamePlayer_requestSendMotionAction00);
   tolua_function(tolua_S,"isHaveGMPerm",tolua_GameEngineTolua_MainGamePlayer_isHaveGMPerm00);
   tolua_function(tolua_S,"isOutSide",tolua_GameEngineTolua_MainGamePlayer_isOutSide00);
   tolua_function(tolua_S,"requestApplyMachineInvite",tolua_GameEngineTolua_MainGamePlayer_requestApplyMachineInvite00);
   tolua_function(tolua_S,"requestRefuseMachineInvite",tolua_GameEngineTolua_MainGamePlayer_requestRefuseMachineInvite00);
   tolua_function(tolua_S,"requestMachineInvite",tolua_GameEngineTolua_MainGamePlayer_requestMachineInvite00);
   tolua_function(tolua_S,"getBattleLimitLeftTime",tolua_GameEngineTolua_MainGamePlayer_getBattleLimitLeftTime00);
   tolua_function(tolua_S,"SelectTarget",tolua_GameEngineTolua_MainGamePlayer_SelectTarget00);
   tolua_function(tolua_S,"getDailyUsedBull",tolua_GameEngineTolua_MainGamePlayer_getDailyUsedBull00);
   tolua_function(tolua_S,"isColorFontValid",tolua_GameEngineTolua_MainGamePlayer_isColorFontValid00);
   tolua_function(tolua_S,"getSpartaVictory",tolua_GameEngineTolua_MainGamePlayer_getSpartaVictory00);
   tolua_function(tolua_S,"getSpartaRunAway",tolua_GameEngineTolua_MainGamePlayer_getSpartaRunAway00);
   tolua_function(tolua_S,"getSpartaDefeat",tolua_GameEngineTolua_MainGamePlayer_getSpartaDefeat00);
   tolua_function(tolua_S,"getWeekCharm",tolua_GameEngineTolua_MainGamePlayer_getWeekCharm00);
   tolua_function(tolua_S,"getOfflineDay",tolua_GameEngineTolua_MainGamePlayer_getOfflineDay00);
   tolua_function(tolua_S,"requestOffLineGift",tolua_GameEngineTolua_MainGamePlayer_requestOffLineGift00);
   tolua_function(tolua_S,"getNormalMachinePworldClanID",tolua_GameEngineTolua_MainGamePlayer_getNormalMachinePworldClanID00);
   tolua_function(tolua_S,"getUnionMachinePworldClanID",tolua_GameEngineTolua_MainGamePlayer_getUnionMachinePworldClanID00);
   tolua_function(tolua_S,"getLoveColorType",tolua_GameEngineTolua_MainGamePlayer_getLoveColorType00);
   tolua_function(tolua_S,"hasLover",tolua_GameEngineTolua_MainGamePlayer_hasLover00);
   tolua_function(tolua_S,"getLoverName",tolua_GameEngineTolua_MainGamePlayer_getLoverName00);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"CompareRoleName",tolua_GameEngineTolua_CompareRoleName00);
  tolua_constant(tolua_S,"GAT_NPC",GAT_NPC);
  tolua_constant(tolua_S,"GAT_MONSTER",GAT_MONSTER);
  tolua_constant(tolua_S,"GAT_ITEM",GAT_ITEM);
  tolua_constant(tolua_S,"GAT_PLAYER",GAT_PLAYER);
  tolua_constant(tolua_S,"GAT_MAINPLAYER",GAT_MAINPLAYER);
  tolua_constant(tolua_S,"GAT_PET",GAT_PET);
  tolua_constant(tolua_S,"GAT_FAIRY",GAT_FAIRY);
  tolua_constant(tolua_S,"GAT_EXTRA_NPC",GAT_EXTRA_NPC);
  tolua_constant(tolua_S,"GAT_OBJ_END",GAT_OBJ_END);
  tolua_constant(tolua_S,"PICK_TYPE_LBUTTON_DOWN",PICK_TYPE_LBUTTON_DOWN);
  tolua_constant(tolua_S,"PICK_TYPE_RBUTTON_DOWN",PICK_TYPE_RBUTTON_DOWN);
  tolua_constant(tolua_S,"HIDE_MODEL_OPTION_MIN",HIDE_MODEL_OPTION_MIN);
  tolua_constant(tolua_S,"HIDE_OTHER_PLAYER_AND_PET",HIDE_OTHER_PLAYER_AND_PET);
  tolua_constant(tolua_S,"HIDE_OTHER_PLAYER_AND_PET_AND_STALL",HIDE_OTHER_PLAYER_AND_PET_AND_STALL);
  tolua_constant(tolua_S,"HIDE_MODEL_NONE",HIDE_MODEL_NONE);
  tolua_constant(tolua_S,"HIDE_MODEL_OPTION_MAX",HIDE_MODEL_OPTION_MAX);
  tolua_constant(tolua_S,"MON_SUB_TYPE_MINI_TOLUA",MON_SUB_TYPE_MINI_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_WEAK_TOLUA",MON_SUB_TYPE_WEAK_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_SOFT_TOLUA",MON_SUB_TYPE_SOFT_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_NORM_TOLUA",MON_SUB_TYPE_NORM_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_HARD_TOLUA",MON_SUB_TYPE_HARD_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_XI_TOLUA",MON_SUB_TYPE_XI_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_JIN_TOLUA",MON_SUB_TYPE_JIN_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_BOSS_TOLUA",MON_SUB_TYPE_BOSS_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_JI_TOLUA",MON_SUB_TYPE_JI_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_SINGLE_CAR_TOLUA",MON_SUB_TYPE_SINGLE_CAR_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_TEAM_CAR_TOLUA",MON_SUB_TYPE_TEAM_CAR_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_HUMAN_FRIEND_TOLUA",MON_SUB_TYPE_HUMAN_FRIEND_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_HUMAN_BROTHER_TOLUA",MON_SUB_TYPE_HUMAN_BROTHER_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_MACHINE_TOLUA",MON_SUB_TYPE_MACHINE_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_CLAN_FACTORY_TOLUA",MON_SUB_TYPE_CLAN_FACTORY_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_TOTEM_TOLUA",MON_SUB_TYPE_TOTEM_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_TMP_TOLUA",MON_SUB_TYPE_TMP_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_TRAP_TOLUA",MON_SUB_TYPE_TRAP_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_COLLECT_TOLUA",MON_SUB_TYPE_COLLECT_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_SINGLE_SAFECAR_TOLUA",MON_SUB_TYPE_SINGLE_SAFECAR_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_TEAM_SAFECAR_TOLUA",MON_SUB_TYPE_TEAM_SAFECAR_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_BUILD_TOLUA",MON_SUB_TYPE_BUILD_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_XUNLUO_TOLUA",MON_SUB_TYPE_XUNLUO_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_SKILL_DESTORY_TOLUA",MON_SUB_TYPE_SKILL_DESTORY_TOLUA);
  tolua_constant(tolua_S,"MON_SUB_TYPE_SKILL_NODESTORY_TOLUA",MON_SUB_TYPE_SKILL_NODESTORY_TOLUA);
  tolua_cclass(tolua_S,"ActorManager","ActorManager","NetMsgHandler",NULL);
  tolua_beginmodule(tolua_S,"ActorManager");
   tolua_function(tolua_S,"FindActor",tolua_GameEngineTolua_ActorManager_FindActor00);
   tolua_function(tolua_S,"getActorIdByResId",tolua_GameEngineTolua_ActorManager_getActorIdByResId00);
   tolua_function(tolua_S,"getMainPlayer",tolua_GameEngineTolua_ActorManager_getMainPlayer00);
   tolua_function(tolua_S,"findActorByName",tolua_GameEngineTolua_ActorManager_findActorByName00);
   tolua_function(tolua_S,"findActorByName",tolua_GameEngineTolua_ActorManager_findActorByName01);
   tolua_function(tolua_S,"findActorByWId",tolua_GameEngineTolua_ActorManager_findActorByWId00);
   tolua_function(tolua_S,"canPickTmpItem",tolua_GameEngineTolua_ActorManager_canPickTmpItem00);
   tolua_function(tolua_S,"tryPickMonsterMachine",tolua_GameEngineTolua_ActorManager_tryPickMonsterMachine00);
   tolua_function(tolua_S,"pickTmpItem",tolua_GameEngineTolua_ActorManager_pickTmpItem00);
   tolua_function(tolua_S,"needConvertName",tolua_GameEngineTolua_ActorManager_needConvertName00);
   tolua_function(tolua_S,"replaceSpecialCode",tolua_GameEngineTolua_ActorManager_replaceSpecialCode00);
   tolua_function(tolua_S,"getNearestActor",tolua_GameEngineTolua_ActorManager_getNearestActor00);
   tolua_function(tolua_S,"isShowOtherPlayerTitle",tolua_GameEngineTolua_ActorManager_isShowOtherPlayerTitle00);
   tolua_function(tolua_S,"getShowOtherPlayerModelOption",tolua_GameEngineTolua_ActorManager_getShowOtherPlayerModelOption00);
   tolua_function(tolua_S,"SetPerfectStarNineActor",tolua_GameEngineTolua_ActorManager_SetPerfectStarNineActor00);
   tolua_function(tolua_S,"addClientSelfDestroy",tolua_GameEngineTolua_ActorManager_addClientSelfDestroy00);
   tolua_function(tolua_S,"getPlayerCount",tolua_GameEngineTolua_ActorManager_getPlayerCount00);
   tolua_function(tolua_S,"getMonsterCount",tolua_GameEngineTolua_ActorManager_getMonsterCount00);
   tolua_function(tolua_S,"getMonster",tolua_GameEngineTolua_ActorManager_getMonster00);
   tolua_function(tolua_S,"getActorNums",tolua_GameEngineTolua_ActorManager_getActorNums00);
   tolua_function(tolua_S,"getActor",tolua_GameEngineTolua_ActorManager_getActor00);
   tolua_function(tolua_S,"updateMonsters",tolua_GameEngineTolua_ActorManager_updateMonsters00);
   tolua_function(tolua_S,"getGameOpt",tolua_GameEngineTolua_ActorManager_getGameOpt00);
   tolua_function(tolua_S,"getGameConfig",tolua_GameEngineTolua_ActorManager_getGameConfig00);
   tolua_function(tolua_S,"getNextActorById",tolua_GameEngineTolua_ActorManager_getNextActorById00);
   tolua_function(tolua_S,"getNextActor",tolua_GameEngineTolua_ActorManager_getNextActor00);
   tolua_function(tolua_S,"changeShowPlayerID",tolua_GameEngineTolua_ActorManager_changeShowPlayerID00);
   tolua_function(tolua_S,"getNextPlayerEnemy",tolua_GameEngineTolua_ActorManager_getNextPlayerEnemy00);
   tolua_function(tolua_S,"getServerId",tolua_GameEngineTolua_ActorManager_getServerId00);
   tolua_function(tolua_S,"getClanFengHao",tolua_GameEngineTolua_ActorManager_getClanFengHao00);
   tolua_function(tolua_S,"setClanFengHao",tolua_GameEngineTolua_ActorManager_setClanFengHao00);
   tolua_function(tolua_S,"GetSpartaLevelName",tolua_GameEngineTolua_ActorManager_GetSpartaLevelName00);
   tolua_variable(tolua_S,"__Ogre__Singleton_ActorManager___",tolua_get_ActorManager___Ogre__Singleton_ActorManager___,NULL);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"getDiathesisDef",tolua_GameEngineTolua_getDiathesisDef00);
  tolua_cclass(tolua_S,"DiathesisManager","DiathesisManager","",NULL);
  tolua_beginmodule(tolua_S,"DiathesisManager");
   tolua_function(tolua_S,"getDiathesisInfo",tolua_GameEngineTolua_DiathesisManager_getDiathesisInfo00);
   tolua_function(tolua_S,"isLearnedGenius",tolua_GameEngineTolua_DiathesisManager_isLearnedGenius00);
   tolua_function(tolua_S,"getLearnedGeniusLevel",tolua_GameEngineTolua_DiathesisManager_getLearnedGeniusLevel00);
   tolua_function(tolua_S,"getDiathesis",tolua_GameEngineTolua_DiathesisManager_getDiathesis00);
   tolua_function(tolua_S,"getAllGeniusNum",tolua_GameEngineTolua_DiathesisManager_getAllGeniusNum00);
   tolua_function(tolua_S,"getLearnedDiathesisNum",tolua_GameEngineTolua_DiathesisManager_getLearnedDiathesisNum00);
   tolua_function(tolua_S,"getDiathesisData",tolua_GameEngineTolua_DiathesisManager_getDiathesisData00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"FAIRY_MAX_STAR_TOLUA",FAIRY_MAX_STAR_TOLUA);
  tolua_constant(tolua_S,"DEC_EVOLVE_TIME_ITEMID_TOLUA",DEC_EVOLVE_TIME_ITEMID_TOLUA);
  tolua_constant(tolua_S,"ZEROREELID_TOLUA",ZEROREELID_TOLUA);
  tolua_cclass(tolua_S,"tagTrumpId","tagTrumpId","",NULL);
  tolua_beginmodule(tolua_S,"tagTrumpId");
   tolua_variable(tolua_S,"nHeight",tolua_get_tagTrumpId_nHeight,tolua_set_tagTrumpId_nHeight);
   tolua_variable(tolua_S,"nLow",tolua_get_tagTrumpId_nLow,tolua_set_tagTrumpId_nLow);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagRoleFairy_ToLua","tagRoleFairy_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagRoleFairy_ToLua");
   tolua_variable(tolua_S,"FairyID",tolua_get_tagRoleFairy_ToLua_unsigned_FairyID,tolua_set_tagRoleFairy_ToLua_unsigned_FairyID);
   tolua_variable(tolua_S,"FairyLevel",tolua_get_tagRoleFairy_ToLua_unsigned_FairyLevel,tolua_set_tagRoleFairy_ToLua_unsigned_FairyLevel);
   tolua_variable(tolua_S,"WID",tolua_get_tagRoleFairy_ToLua_WID,tolua_set_tagRoleFairy_ToLua_WID);
   tolua_variable(tolua_S,"Stat",tolua_get_tagRoleFairy_ToLua_Stat,tolua_set_tagRoleFairy_ToLua_Stat);
   tolua_variable(tolua_S,"EvolveLeftTM",tolua_get_tagRoleFairy_ToLua_unsigned_EvolveLeftTM,tolua_set_tagRoleFairy_ToLua_unsigned_EvolveLeftTM);
   tolua_variable(tolua_S,"GridIdx",tolua_get_tagRoleFairy_ToLua_GridIdx,tolua_set_tagRoleFairy_ToLua_GridIdx);
   tolua_variable(tolua_S,"Flag",tolua_get_tagRoleFairy_ToLua_unsigned_Flag,tolua_set_tagRoleFairy_ToLua_unsigned_Flag);
   tolua_variable(tolua_S,"Exp",tolua_get_tagRoleFairy_ToLua_Exp,tolua_set_tagRoleFairy_ToLua_Exp);
   tolua_variable(tolua_S,"StarLvl",tolua_get_tagRoleFairy_ToLua_StarLvl,tolua_set_tagRoleFairy_ToLua_StarLvl);
   tolua_variable(tolua_S,"TraitID",tolua_get_tagRoleFairy_ToLua_TraitID,tolua_set_tagRoleFairy_ToLua_TraitID);
   tolua_variable(tolua_S,"IsKeyin",tolua_get_tagRoleFairy_ToLua_IsKeyin,tolua_set_tagRoleFairy_ToLua_IsKeyin);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagFairySkill_ToLua","tagFairySkill_ToLua","",tolua_collect_tagFairySkill_ToLua);
  #else
  tolua_cclass(tolua_S,"tagFairySkill_ToLua","tagFairySkill_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagFairySkill_ToLua");
   tolua_variable(tolua_S,"SkillType",tolua_get_tagFairySkill_ToLua_unsigned_SkillType,tolua_set_tagFairySkill_ToLua_unsigned_SkillType);
   tolua_variable(tolua_S,"SkillID",tolua_get_tagFairySkill_ToLua_unsigned_SkillID,tolua_set_tagFairySkill_ToLua_unsigned_SkillID);
   tolua_variable(tolua_S,"SkillLevel",tolua_get_tagFairySkill_ToLua_unsigned_SkillLevel,tolua_set_tagFairySkill_ToLua_unsigned_SkillLevel);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagEvolveStuff_ToLua","tagEvolveStuff_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagEvolveStuff_ToLua");
   tolua_variable(tolua_S,"ItemID",tolua_get_tagEvolveStuff_ToLua_unsigned_ItemID,tolua_set_tagEvolveStuff_ToLua_unsigned_ItemID);
   tolua_variable(tolua_S,"ItemNum",tolua_get_tagEvolveStuff_ToLua_unsigned_ItemNum,tolua_set_tagEvolveStuff_ToLua_unsigned_ItemNum);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagFairyDef_ToLua","tagFairyDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagFairyDef_ToLua");
   tolua_variable(tolua_S,"FairyID",tolua_get_tagFairyDef_ToLua_unsigned_FairyID,tolua_set_tagFairyDef_ToLua_unsigned_FairyID);
   tolua_variable(tolua_S,"Level",tolua_get_tagFairyDef_ToLua_unsigned_Level,tolua_set_tagFairyDef_ToLua_unsigned_Level);
   tolua_variable(tolua_S,"Name",tolua_get_tagFairyDef_ToLua_Name,tolua_set_tagFairyDef_ToLua_Name);
   tolua_variable(tolua_S,"ModeID",tolua_get_tagFairyDef_ToLua_unsigned_ModeID,tolua_set_tagFairyDef_ToLua_unsigned_ModeID);
   tolua_variable(tolua_S,"BuffID",tolua_get_tagFairyDef_ToLua_unsigned_BuffID,tolua_set_tagFairyDef_ToLua_unsigned_BuffID);
   tolua_variable(tolua_S,"FairyDesc",tolua_get_tagFairyDef_ToLua_FairyDesc,tolua_set_tagFairyDef_ToLua_FairyDesc);
   tolua_array(tolua_S,"FairySkillList",tolua_get_GameEngineTolua_tagFairyDef_ToLua_FairySkillList,tolua_set_GameEngineTolua_tagFairyDef_ToLua_FairySkillList);
   tolua_variable(tolua_S,"EvolveTime",tolua_get_tagFairyDef_ToLua_unsigned_EvolveTime,tolua_set_tagFairyDef_ToLua_unsigned_EvolveTime);
   tolua_variable(tolua_S,"EvolveLevelLimit",tolua_get_tagFairyDef_ToLua_unsigned_EvolveLevelLimit,tolua_set_tagFairyDef_ToLua_unsigned_EvolveLevelLimit);
   tolua_variable(tolua_S,"PhyAtk",tolua_get_tagFairyDef_ToLua_unsigned_PhyAtk,tolua_set_tagFairyDef_ToLua_unsigned_PhyAtk);
   tolua_variable(tolua_S,"MgcAtk",tolua_get_tagFairyDef_ToLua_unsigned_MgcAtk,tolua_set_tagFairyDef_ToLua_unsigned_MgcAtk);
   tolua_variable(tolua_S,"BrkAtk",tolua_get_tagFairyDef_ToLua_unsigned_BrkAtk,tolua_set_tagFairyDef_ToLua_unsigned_BrkAtk);
   tolua_variable(tolua_S,"BaseXp",tolua_get_tagFairyDef_ToLua_BaseXp,tolua_set_tagFairyDef_ToLua_BaseXp);
   tolua_variable(tolua_S,"UseMoney",tolua_get_tagFairyDef_ToLua_unsigned_UseMoney,tolua_set_tagFairyDef_ToLua_unsigned_UseMoney);
   tolua_variable(tolua_S,"UseExp",tolua_get_tagFairyDef_ToLua_unsigned_UseExp,tolua_set_tagFairyDef_ToLua_unsigned_UseExp);
   tolua_variable(tolua_S,"GetXpRate",tolua_get_tagFairyDef_ToLua_unsigned_GetXpRate,tolua_set_tagFairyDef_ToLua_unsigned_GetXpRate);
   tolua_variable(tolua_S,"XpUpperLimit",tolua_get_tagFairyDef_ToLua_XpUpperLimit,tolua_set_tagFairyDef_ToLua_XpUpperLimit);
   tolua_variable(tolua_S,"FireAtk",tolua_get_tagFairyDef_ToLua_FireAtk,tolua_set_tagFairyDef_ToLua_FireAtk);
   tolua_variable(tolua_S,"ThunderAtk",tolua_get_tagFairyDef_ToLua_ThunderAtk,tolua_set_tagFairyDef_ToLua_ThunderAtk);
   tolua_variable(tolua_S,"LightAtk",tolua_get_tagFairyDef_ToLua_LightAtk,tolua_set_tagFairyDef_ToLua_LightAtk);
   tolua_variable(tolua_S,"NightAtk",tolua_get_tagFairyDef_ToLua_NightAtk,tolua_set_tagFairyDef_ToLua_NightAtk);
   tolua_variable(tolua_S,"WaterAtk",tolua_get_tagFairyDef_ToLua_WaterAtk,tolua_set_tagFairyDef_ToLua_WaterAtk);
   tolua_variable(tolua_S,"MaxStar",tolua_get_tagFairyDef_ToLua_unsigned_MaxStar,tolua_set_tagFairyDef_ToLua_unsigned_MaxStar);
   tolua_variable(tolua_S,"TraitID",tolua_get_tagFairyDef_ToLua_unsigned_TraitID,tolua_set_tagFairyDef_ToLua_unsigned_TraitID);
   tolua_variable(tolua_S,"PNum",tolua_get_tagFairyDef_ToLua_unsigned_PNum,tolua_set_tagFairyDef_ToLua_unsigned_PNum);
   tolua_array(tolua_S,"PItems",tolua_get_GameEngineTolua_tagFairyDef_ToLua_PItems,tolua_set_GameEngineTolua_tagFairyDef_ToLua_PItems);
   tolua_variable(tolua_S,"ZeroReelID",tolua_get_tagFairyDef_ToLua_ZeroReelID,tolua_set_tagFairyDef_ToLua_ZeroReelID);
   tolua_variable(tolua_S,"KeyinUseXp",tolua_get_tagFairyDef_ToLua_KeyinUseXp,tolua_set_tagFairyDef_ToLua_KeyinUseXp);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagFairyStuffRate_ToLua","tagFairyStuffRate_ToLua","",tolua_collect_tagFairyStuffRate_ToLua);
  #else
  tolua_cclass(tolua_S,"tagFairyStuffRate_ToLua","tagFairyStuffRate_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagFairyStuffRate_ToLua");
   tolua_variable(tolua_S,"Star",tolua_get_tagFairyStuffRate_ToLua_unsigned_Star,tolua_set_tagFairyStuffRate_ToLua_unsigned_Star);
   tolua_variable(tolua_S,"Rate",tolua_get_tagFairyStuffRate_ToLua_unsigned_Rate,tolua_set_tagFairyStuffRate_ToLua_unsigned_Rate);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagFairyStarStuffDef_ToLua","tagFairyStarStuffDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagFairyStarStuffDef_ToLua");
   tolua_variable(tolua_S,"ItemID",tolua_get_tagFairyStarStuffDef_ToLua_ItemID,tolua_set_tagFairyStarStuffDef_ToLua_ItemID);
   tolua_variable(tolua_S,"MinStar",tolua_get_tagFairyStarStuffDef_ToLua_unsigned_MinStar,tolua_set_tagFairyStarStuffDef_ToLua_unsigned_MinStar);
   tolua_variable(tolua_S,"MaxStar",tolua_get_tagFairyStarStuffDef_ToLua_unsigned_MaxStar,tolua_set_tagFairyStarStuffDef_ToLua_unsigned_MaxStar);
   tolua_array(tolua_S,"StuffRate",tolua_get_GameEngineTolua_tagFairyStarStuffDef_ToLua_StuffRate,tolua_set_GameEngineTolua_tagFairyStarStuffDef_ToLua_StuffRate);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagFairyStarStuff_ToLua","tagFairyStarStuff_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagFairyStarStuff_ToLua");
   tolua_variable(tolua_S,"MainStuffID",tolua_get_tagFairyStarStuff_ToLua_MainStuffID,tolua_set_tagFairyStarStuff_ToLua_MainStuffID);
   tolua_variable(tolua_S,"MainStuffNum",tolua_get_tagFairyStarStuff_ToLua_MainStuffNum,tolua_set_tagFairyStarStuff_ToLua_MainStuffNum);
   tolua_variable(tolua_S,"Money",tolua_get_tagFairyStarStuff_ToLua_Money,tolua_set_tagFairyStarStuff_ToLua_Money);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagFairyStarDef_ToLua","tagFairyStarDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagFairyStarDef_ToLua");
   tolua_variable(tolua_S,"FairyID",tolua_get_tagFairyStarDef_ToLua_FairyID,tolua_set_tagFairyStarDef_ToLua_FairyID);
   tolua_variable(tolua_S,"Star",tolua_get_tagFairyStarDef_ToLua_Star,tolua_set_tagFairyStarDef_ToLua_Star);
   tolua_variable(tolua_S,"StarBackRate",tolua_get_tagFairyStarDef_ToLua_unsigned_StarBackRate,tolua_set_tagFairyStarDef_ToLua_unsigned_StarBackRate);
   tolua_variable(tolua_S,"PetExpMul",tolua_get_tagFairyStarDef_ToLua_unsigned_PetExpMul,tolua_set_tagFairyStarDef_ToLua_unsigned_PetExpMul);
   tolua_variable(tolua_S,"AttrType",tolua_get_tagFairyStarDef_ToLua_unsigned_AttrType,tolua_set_tagFairyStarDef_ToLua_unsigned_AttrType);
   tolua_variable(tolua_S,"Atk",tolua_get_tagFairyStarDef_ToLua_Atk,tolua_set_tagFairyStarDef_ToLua_Atk);
   tolua_variable(tolua_S,"StarUpStuff",tolua_get_tagFairyStarDef_ToLua_StarUpStuff,tolua_set_tagFairyStarDef_ToLua_StarUpStuff);
   tolua_variable(tolua_S,"StarSuccRate",tolua_get_tagFairyStarDef_ToLua_StarSuccRate,tolua_set_tagFairyStarDef_ToLua_StarSuccRate);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GameTrump","GameTrump","",NULL);
  tolua_beginmodule(tolua_S,"GameTrump");
   tolua_function(tolua_S,"trumpPre",tolua_GameEngineTolua_GameTrump_trumpPre00);
   tolua_function(tolua_S,"trumpEvolve",tolua_GameEngineTolua_GameTrump_trumpEvolve00);
   tolua_function(tolua_S,"trumpStopEvolve",tolua_GameEngineTolua_GameTrump_trumpStopEvolve00);
   tolua_function(tolua_S,"trumpBack",tolua_GameEngineTolua_GameTrump_trumpBack00);
   tolua_function(tolua_S,"trumpInfuseExp",tolua_GameEngineTolua_GameTrump_trumpInfuseExp00);
   tolua_function(tolua_S,"getTrumpMaxNum",tolua_GameEngineTolua_GameTrump_getTrumpMaxNum00);
   tolua_function(tolua_S,"getTrumpNum",tolua_GameEngineTolua_GameTrump_getTrumpNum00);
   tolua_function(tolua_S,"getRoleFairy",tolua_GameEngineTolua_GameTrump_getRoleFairy00);
   tolua_function(tolua_S,"getCampRoleFairy",tolua_GameEngineTolua_GameTrump_getCampRoleFairy00);
   tolua_function(tolua_S,"isAnyFairyCamp",tolua_GameEngineTolua_GameTrump_isAnyFairyCamp00);
   tolua_function(tolua_S,"getFairyDef",tolua_GameEngineTolua_GameTrump_getFairyDef00);
   tolua_function(tolua_S,"isPre",tolua_GameEngineTolua_GameTrump_isPre00);
   tolua_function(tolua_S,"canBackTrump",tolua_GameEngineTolua_GameTrump_canBackTrump00);
   tolua_function(tolua_S,"canCampaignTrump",tolua_GameEngineTolua_GameTrump_canCampaignTrump00);
   tolua_function(tolua_S,"canCampInPworld",tolua_GameEngineTolua_GameTrump_canCampInPworld00);
   tolua_function(tolua_S,"isFairyInState",tolua_GameEngineTolua_GameTrump_isFairyInState00);
   tolua_function(tolua_S,"getCampFairyId",tolua_GameEngineTolua_GameTrump_getCampFairyId00);
   tolua_function(tolua_S,"getCampFairyLv",tolua_GameEngineTolua_GameTrump_getCampFairyLv00);
   tolua_function(tolua_S,"getFairyStarStuffDef",tolua_GameEngineTolua_GameTrump_getFairyStarStuffDef00);
   tolua_function(tolua_S,"getFairyStarDef",tolua_GameEngineTolua_GameTrump_getFairyStarDef00);
   tolua_function(tolua_S,"getPetTraitDef",tolua_GameEngineTolua_GameTrump_getPetTraitDef00);
   tolua_function(tolua_S,"requestOpStarUp",tolua_GameEngineTolua_GameTrump_requestOpStarUp00);
   tolua_function(tolua_S,"requestOpKeyIn",tolua_GameEngineTolua_GameTrump_requestOpKeyIn00);
   tolua_function(tolua_S,"requestKeyInItem",tolua_GameEngineTolua_GameTrump_requestKeyInItem00);
   tolua_function(tolua_S,"requestDecEvolveTime",tolua_GameEngineTolua_GameTrump_requestDecEvolveTime00);
   tolua_function(tolua_S,"getStrengthFairyLevel",tolua_GameEngineTolua_GameTrump_getStrengthFairyLevel00);
   tolua_function(tolua_S,"clearTrumpData",tolua_GameEngineTolua_GameTrump_clearTrumpData00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GameActor_PVP","GameActor_PVP","",NULL);
  tolua_beginmodule(tolua_S,"GameActor_PVP");
   tolua_function(tolua_S,"getPkMode",tolua_GameEngineTolua_GameActor_PVP_getPkMode00);
   tolua_function(tolua_S,"isForcePkMode",tolua_GameEngineTolua_GameActor_PVP_isForcePkMode00);
   tolua_function(tolua_S,"getAmok",tolua_GameEngineTolua_GameActor_PVP_getAmok00);
   tolua_function(tolua_S,"getAmok",tolua_GameEngineTolua_GameActor_PVP_getAmok01);
   tolua_function(tolua_S,"getPkValue",tolua_GameEngineTolua_GameActor_PVP_getPkValue00);
   tolua_function(tolua_S,"changePKMode",tolua_GameEngineTolua_GameActor_PVP_changePKMode00);
   tolua_function(tolua_S,"changeNextPkMode",tolua_GameEngineTolua_GameActor_PVP_changeNextPkMode00);
   tolua_function(tolua_S,"requestSafePK",tolua_GameEngineTolua_GameActor_PVP_requestSafePK00);
   tolua_function(tolua_S,"requestSafePKRes",tolua_GameEngineTolua_GameActor_PVP_requestSafePKRes00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GameDamageHealInfo","GameDamageHealInfo","",NULL);
  tolua_beginmodule(tolua_S,"GameDamageHealInfo");
   tolua_variable(tolua_S,"damage",tolua_get_GameDamageHealInfo_damage,tolua_set_GameDamageHealInfo_damage);
   tolua_variable(tolua_S,"heal",tolua_get_GameDamageHealInfo_heal,tolua_set_GameDamageHealInfo_heal);
   tolua_variable(tolua_S,"hurt",tolua_get_GameDamageHealInfo_hurt,tolua_set_GameDamageHealInfo_hurt);
   tolua_variable(tolua_S,"time",tolua_get_GameDamageHealInfo_time,tolua_set_GameDamageHealInfo_time);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GameBossInfo","GameBossInfo","",NULL);
  tolua_beginmodule(tolua_S,"GameBossInfo");
   tolua_variable(tolua_S,"targetId",tolua_get_GameBossInfo_targetId,tolua_set_GameBossInfo_targetId);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GameDamageHealCounter","GameDamageHealCounter","",NULL);
  tolua_beginmodule(tolua_S,"GameDamageHealCounter");
   tolua_function(tolua_S,"SetFilter",tolua_GameEngineTolua_GameDamageHealCounter_SetFilter00);
   tolua_function(tolua_S,"getNextPlayer",tolua_GameEngineTolua_GameDamageHealCounter_getNextPlayer00);
   tolua_function(tolua_S,"getPlayerInfo",tolua_GameEngineTolua_GameDamageHealCounter_getPlayerInfo00);
   tolua_function(tolua_S,"reset",tolua_GameEngineTolua_GameDamageHealCounter_reset00);
   tolua_function(tolua_S,"getNextBoss",tolua_GameEngineTolua_GameDamageHealCounter_getNextBoss00);
   tolua_function(tolua_S,"getBossInfo",tolua_GameEngineTolua_GameDamageHealCounter_getBossInfo00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"PworldLimitData","PworldLimitData","",tolua_collect_PworldLimitData);
  #else
  tolua_cclass(tolua_S,"PworldLimitData","PworldLimitData","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"PworldLimitData");
   tolua_variable(tolua_S,"freeTimeTotal",tolua_get_PworldLimitData_freeTimeTotal,tolua_set_PworldLimitData_freeTimeTotal);
   tolua_variable(tolua_S,"freeTimeUse",tolua_get_PworldLimitData_freeTimeUse,tolua_set_PworldLimitData_freeTimeUse);
   tolua_variable(tolua_S,"itemId",tolua_get_PworldLimitData_itemId,tolua_set_PworldLimitData_itemId);
   tolua_variable(tolua_S,"itemTimeTotal",tolua_get_PworldLimitData_itemTimeTotal,tolua_set_PworldLimitData_itemTimeTotal);
   tolua_variable(tolua_S,"itemTimeUse",tolua_get_PworldLimitData_itemTimeUse,tolua_set_PworldLimitData_itemTimeUse);
   tolua_function(tolua_S,"new",tolua_GameEngineTolua_PworldLimitData_new00);
   tolua_function(tolua_S,"new_local",tolua_GameEngineTolua_PworldLimitData_new00_local);
   tolua_function(tolua_S,".call",tolua_GameEngineTolua_PworldLimitData_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"PworldLimitInfo","PworldLimitInfo","",NULL);
  tolua_beginmodule(tolua_S,"PworldLimitInfo");
   tolua_function(tolua_S,"getPworldData",tolua_GameEngineTolua_PworldLimitInfo_getPworldData00);
   tolua_function(tolua_S,"canEnterPworld",tolua_GameEngineTolua_PworldLimitInfo_canEnterPworld00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"BattleLimitData","BattleLimitData","",tolua_collect_BattleLimitData);
  #else
  tolua_cclass(tolua_S,"BattleLimitData","BattleLimitData","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"BattleLimitData");
   tolua_variable(tolua_S,"index",tolua_get_BattleLimitData_index,tolua_set_BattleLimitData_index);
   tolua_variable(tolua_S,"Total",tolua_get_BattleLimitData_Total,tolua_set_BattleLimitData_Total);
   tolua_variable(tolua_S,"Use",tolua_get_BattleLimitData_Use,tolua_set_BattleLimitData_Use);
   tolua_function(tolua_S,"new",tolua_GameEngineTolua_BattleLimitData_new00);
   tolua_function(tolua_S,"new_local",tolua_GameEngineTolua_BattleLimitData_new00_local);
   tolua_function(tolua_S,".call",tolua_GameEngineTolua_BattleLimitData_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"BattleLimitInfo","BattleLimitInfo","",NULL);
  tolua_beginmodule(tolua_S,"BattleLimitInfo");
   tolua_function(tolua_S,"getBattleData",tolua_GameEngineTolua_BattleLimitInfo_getBattleData00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagResPosEngine_ToLua","tagResPosEngine_ToLua","",tolua_collect_tagResPosEngine_ToLua);
  #else
  tolua_cclass(tolua_S,"tagResPosEngine_ToLua","tagResPosEngine_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagResPosEngine_ToLua");
   tolua_variable(tolua_S,"X",tolua_get_tagResPosEngine_ToLua_X,tolua_set_tagResPosEngine_ToLua_X);
   tolua_variable(tolua_S,"Y",tolua_get_tagResPosEngine_ToLua_Y,tolua_set_tagResPosEngine_ToLua_Y);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagCangBaoTuMapInfo_ToLua","tagCangBaoTuMapInfo_ToLua","",tolua_collect_tagCangBaoTuMapInfo_ToLua);
  #else
  tolua_cclass(tolua_S,"tagCangBaoTuMapInfo_ToLua","tagCangBaoTuMapInfo_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagCangBaoTuMapInfo_ToLua");
   tolua_variable(tolua_S,"ItemID",tolua_get_tagCangBaoTuMapInfo_ToLua_unsigned_ItemID,tolua_set_tagCangBaoTuMapInfo_ToLua_unsigned_ItemID);
   tolua_variable(tolua_S,"MapID",tolua_get_tagCangBaoTuMapInfo_ToLua_unsigned_MapID,tolua_set_tagCangBaoTuMapInfo_ToLua_unsigned_MapID);
   tolua_variable(tolua_S,"Pos",tolua_get_tagCangBaoTuMapInfo_ToLua_Pos,tolua_set_tagCangBaoTuMapInfo_ToLua_Pos);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagCangBaoTuInfo_ToLua","tagCangBaoTuInfo_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagCangBaoTuInfo_ToLua");
   tolua_variable(tolua_S,"UpdateDayTime",tolua_get_tagCangBaoTuInfo_ToLua_unsigned_UpdateDayTime,tolua_set_tagCangBaoTuInfo_ToLua_unsigned_UpdateDayTime);
   tolua_variable(tolua_S,"DayTimes",tolua_get_tagCangBaoTuInfo_ToLua_DayTimes,tolua_set_tagCangBaoTuInfo_ToLua_DayTimes);
   tolua_array(tolua_S,"CangBaoTuMapInfo",tolua_get_GameEngineTolua_tagCangBaoTuInfo_ToLua_CangBaoTuMapInfo,tolua_set_GameEngineTolua_tagCangBaoTuInfo_ToLua_CangBaoTuMapInfo);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagCangBaoTuDef_ToLua","tagCangBaoTuDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagCangBaoTuDef_ToLua");
   tolua_variable(tolua_S,"MapID",tolua_get_tagCangBaoTuDef_ToLua_unsigned_MapID,tolua_set_tagCangBaoTuDef_ToLua_unsigned_MapID);
   tolua_variable(tolua_S,"Level",tolua_get_tagCangBaoTuDef_ToLua_unsigned_Level,tolua_set_tagCangBaoTuDef_ToLua_unsigned_Level);
   tolua_variable(tolua_S,"ItemID",tolua_get_tagCangBaoTuDef_ToLua_unsigned_ItemID,tolua_set_tagCangBaoTuDef_ToLua_unsigned_ItemID);
   tolua_variable(tolua_S,"MapPic",tolua_get_tagCangBaoTuDef_ToLua_MapPic,tolua_set_tagCangBaoTuDef_ToLua_MapPic);
   tolua_array(tolua_S,"Pos",tolua_get_GameEngineTolua_tagCangBaoTuDef_ToLua_Pos,tolua_set_GameEngineTolua_tagCangBaoTuDef_ToLua_Pos);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"getCangBaoTuDefDef",tolua_GameEngineTolua_getCangBaoTuDefDef00);
  tolua_cclass(tolua_S,"GameCBT","GameCBT","",NULL);
  tolua_beginmodule(tolua_S,"GameCBT");
   tolua_function(tolua_S,"isCangBaoTuItem",tolua_GameEngineTolua_GameCBT_isCangBaoTuItem00);
   tolua_function(tolua_S,"getMaxCangBaoTuMap",tolua_GameEngineTolua_GameCBT_getMaxCangBaoTuMap00);
   tolua_function(tolua_S,"getCangBaoTuMapInfo",tolua_GameEngineTolua_GameCBT_getCangBaoTuMapInfo00);
   tolua_function(tolua_S,"getCangBaoTuMapInfo",tolua_GameEngineTolua_GameCBT_getCangBaoTuMapInfo01);
   tolua_function(tolua_S,"getCangBaoTuMapInfoByItemID",tolua_GameEngineTolua_GameCBT_getCangBaoTuMapInfoByItemID00);
   tolua_function(tolua_S,"isArriveMaxCangBaoTimesOneDay",tolua_GameEngineTolua_GameCBT_isArriveMaxCangBaoTimesOneDay00);
   tolua_function(tolua_S,"getAlreadyUseTimes",tolua_GameEngineTolua_GameCBT_getAlreadyUseTimes00);
   tolua_function(tolua_S,"getCanUseTimes",tolua_GameEngineTolua_GameCBT_getCanUseTimes00);
   tolua_function(tolua_S,"send_reset",tolua_GameEngineTolua_GameCBT_send_reset00);
   tolua_function(tolua_S,"isRequestReset",tolua_GameEngineTolua_GameCBT_isRequestReset00);
   tolua_function(tolua_S,"setRequestReset",tolua_GameEngineTolua_GameCBT_setRequestReset00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagMachinePassengerUIInfo_ToLua","tagMachinePassengerUIInfo_ToLua","",tolua_collect_tagMachinePassengerUIInfo_ToLua);
  #else
  tolua_cclass(tolua_S,"tagMachinePassengerUIInfo_ToLua","tagMachinePassengerUIInfo_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagMachinePassengerUIInfo_ToLua");
   tolua_variable(tolua_S,"PassengerID",tolua_get_tagMachinePassengerUIInfo_ToLua_PassengerID,tolua_set_tagMachinePassengerUIInfo_ToLua_PassengerID);
   tolua_variable(tolua_S,"Level",tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Level,tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Level);
   tolua_variable(tolua_S,"Career",tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Career,tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Career);
   tolua_variable(tolua_S,"Head",tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Head,tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Head);
   tolua_variable(tolua_S,"Hair",tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Hair,tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Hair);
   tolua_variable(tolua_S,"Face",tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Face,tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Face);
   tolua_variable(tolua_S,"Gender",tolua_get_tagMachinePassengerUIInfo_ToLua_unsigned_Gender,tolua_set_tagMachinePassengerUIInfo_ToLua_unsigned_Gender);
   tolua_variable(tolua_S,"RoleName",tolua_get_tagMachinePassengerUIInfo_ToLua_RoleName,tolua_set_tagMachinePassengerUIInfo_ToLua_RoleName);
   tolua_variable(tolua_S,"ClanName",tolua_get_tagMachinePassengerUIInfo_ToLua_ClanName,tolua_set_tagMachinePassengerUIInfo_ToLua_ClanName);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagCSActionMachinePassengerInfo_ToLua","tagCSActionMachinePassengerInfo_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagCSActionMachinePassengerInfo_ToLua");
   tolua_variable(tolua_S,"MaxPassenger",tolua_get_tagCSActionMachinePassengerInfo_ToLua_MaxPassenger,tolua_set_tagCSActionMachinePassengerInfo_ToLua_MaxPassenger);
   tolua_array(tolua_S,"Passengers",tolua_get_GameEngineTolua_tagCSActionMachinePassengerInfo_ToLua_Passengers,tolua_set_GameEngineTolua_tagCSActionMachinePassengerInfo_ToLua_Passengers);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagMachineMonsterInfo","tagMachineMonsterInfo","",NULL);
  tolua_beginmodule(tolua_S,"tagMachineMonsterInfo");
   tolua_variable(tolua_S,"m_nMonsterMemID",tolua_get_tagMachineMonsterInfo_m_nMonsterMemID,tolua_set_tagMachineMonsterInfo_m_nMonsterMemID);
   tolua_variable(tolua_S,"m_nMonsterDefID",tolua_get_tagMachineMonsterInfo_m_nMonsterDefID,tolua_set_tagMachineMonsterInfo_m_nMonsterDefID);
   tolua_variable(tolua_S,"m_nCollcetTime",tolua_get_tagMachineMonsterInfo_m_nCollcetTime,tolua_set_tagMachineMonsterInfo_m_nCollcetTime);
   tolua_variable(tolua_S,"m_nCollcetVal",tolua_get_tagMachineMonsterInfo_m_nCollcetVal,tolua_set_tagMachineMonsterInfo_m_nCollcetVal);
   tolua_array(tolua_S,"m_nOre",tolua_get_GameEngineTolua_tagMachineMonsterInfo_m_nOre,tolua_set_GameEngineTolua_tagMachineMonsterInfo_m_nOre);
   tolua_variable(tolua_S,"m_nMaxOre",tolua_get_tagMachineMonsterInfo_m_nMaxOre,tolua_set_tagMachineMonsterInfo_m_nMaxOre);
   tolua_variable(tolua_S,"m_nEnergy",tolua_get_tagMachineMonsterInfo_m_nEnergy,tolua_set_tagMachineMonsterInfo_m_nEnergy);
   tolua_variable(tolua_S,"m_nMaxEnergy",tolua_get_tagMachineMonsterInfo_m_nMaxEnergy,tolua_set_tagMachineMonsterInfo_m_nMaxEnergy);
   tolua_variable(tolua_S,"m_nMaxPassenger",tolua_get_tagMachineMonsterInfo_m_nMaxPassenger,tolua_set_tagMachineMonsterInfo_m_nMaxPassenger);
   tolua_array(tolua_S,"m_nPassengerID",tolua_get_GameEngineTolua_tagMachineMonsterInfo_m_nPassengerID,tolua_set_GameEngineTolua_tagMachineMonsterInfo_m_nPassengerID);
   tolua_variable(tolua_S,"m_OwnerType",tolua_get_tagMachineMonsterInfo_m_OwnerType,tolua_set_tagMachineMonsterInfo_m_OwnerType);
   tolua_variable(tolua_S,"m_OwnerClanWID",tolua_get_tagMachineMonsterInfo_m_OwnerClanWID,tolua_set_tagMachineMonsterInfo_m_OwnerClanWID);
   tolua_variable(tolua_S,"m_nCollectType",tolua_get_tagMachineMonsterInfo_m_nCollectType,tolua_set_tagMachineMonsterInfo_m_nCollectType);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagMachinePlayerInfo","tagMachinePlayerInfo","",NULL);
  tolua_beginmodule(tolua_S,"tagMachinePlayerInfo");
   tolua_variable(tolua_S,"m_nMonsterMemID",tolua_get_tagMachinePlayerInfo_m_nMonsterMemID,tolua_set_tagMachinePlayerInfo_m_nMonsterMemID);
   tolua_variable(tolua_S,"m_nMonsterDefID",tolua_get_tagMachinePlayerInfo_m_nMonsterDefID,tolua_set_tagMachinePlayerInfo_m_nMonsterDefID);
   tolua_variable(tolua_S,"m_nSitIdx",tolua_get_tagMachinePlayerInfo_m_nSitIdx,tolua_set_tagMachinePlayerInfo_m_nSitIdx);
   tolua_variable(tolua_S,"m_bBind",tolua_get_tagMachinePlayerInfo_m_bBind,tolua_set_tagMachinePlayerInfo_m_bBind);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagMonMachineOreLimit_ToLua","tagMonMachineOreLimit_ToLua","",tolua_collect_tagMonMachineOreLimit_ToLua);
  #else
  tolua_cclass(tolua_S,"tagMonMachineOreLimit_ToLua","tagMonMachineOreLimit_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagMonMachineOreLimit_ToLua");
   tolua_variable(tolua_S,"OreItemID",tolua_get_tagMonMachineOreLimit_ToLua_OreItemID,tolua_set_tagMonMachineOreLimit_ToLua_OreItemID);
   tolua_variable(tolua_S,"ID",tolua_get_tagMonMachineOreLimit_ToLua_ID,tolua_set_tagMonMachineOreLimit_ToLua_ID);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagMonMachineDef_ToLua","tagMonMachineDef_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagMonMachineDef_ToLua");
   tolua_variable(tolua_S,"MonsterID",tolua_get_tagMonMachineDef_ToLua_unsigned_MonsterID,tolua_set_tagMonMachineDef_ToLua_unsigned_MonsterID);
   tolua_variable(tolua_S,"MaxEnergy",tolua_get_tagMonMachineDef_ToLua_MaxEnergy,tolua_set_tagMonMachineDef_ToLua_MaxEnergy);
   tolua_variable(tolua_S,"CollcetTime",tolua_get_tagMonMachineDef_ToLua_CollcetTime,tolua_set_tagMonMachineDef_ToLua_CollcetTime);
   tolua_variable(tolua_S,"CollcetVal",tolua_get_tagMonMachineDef_ToLua_CollcetVal,tolua_set_tagMonMachineDef_ToLua_CollcetVal);
   tolua_variable(tolua_S,"MaxPackOre",tolua_get_tagMonMachineDef_ToLua_MaxPackOre,tolua_set_tagMonMachineDef_ToLua_MaxPackOre);
   tolua_variable(tolua_S,"BootyOreID",tolua_get_tagMonMachineDef_ToLua_BootyOreID,tolua_set_tagMonMachineDef_ToLua_BootyOreID);
   tolua_variable(tolua_S,"PassengerNum",tolua_get_tagMonMachineDef_ToLua_PassengerNum,tolua_set_tagMonMachineDef_ToLua_PassengerNum);
   tolua_variable(tolua_S,"CollectType",tolua_get_tagMonMachineDef_ToLua_CollectType,tolua_set_tagMonMachineDef_ToLua_CollectType);
   tolua_variable(tolua_S,"EnergyID",tolua_get_tagMonMachineDef_ToLua_EnergyID,tolua_set_tagMonMachineDef_ToLua_EnergyID);
   tolua_variable(tolua_S,"EnergyDec",tolua_get_tagMonMachineDef_ToLua_EnergyDec,tolua_set_tagMonMachineDef_ToLua_EnergyDec);
   tolua_array(tolua_S,"Ore",tolua_get_GameEngineTolua_tagMonMachineDef_ToLua_Ore,tolua_set_GameEngineTolua_tagMonMachineDef_ToLua_Ore);
   tolua_array(tolua_S,"LimitMapID",tolua_get_GameEngineTolua_tagMonMachineDef_ToLua_LimitMapID,tolua_set_GameEngineTolua_tagMonMachineDef_ToLua_LimitMapID);
   tolua_variable(tolua_S,"CtrlFlag",tolua_get_tagMonMachineDef_ToLua_CtrlFlag,tolua_set_tagMonMachineDef_ToLua_CtrlFlag);
   tolua_variable(tolua_S,"OreViewDist",tolua_get_tagMonMachineDef_ToLua_OreViewDist,tolua_set_tagMonMachineDef_ToLua_OreViewDist);
   tolua_array(tolua_S,"LimitOreMonD",tolua_get_GameEngineTolua_tagMonMachineDef_ToLua_LimitOreMonD,tolua_set_GameEngineTolua_tagMonMachineDef_ToLua_LimitOreMonD);
   tolua_variable(tolua_S,"CollcetEnergyDec",tolua_get_tagMonMachineDef_ToLua_CollcetEnergyDec,tolua_set_tagMonMachineDef_ToLua_CollcetEnergyDec);
   tolua_variable(tolua_S,"PlayerDie",tolua_get_tagMonMachineDef_ToLua_PlayerDie,tolua_set_tagMonMachineDef_ToLua_PlayerDie);
   tolua_variable(tolua_S,"LeaveLimit",tolua_get_tagMonMachineDef_ToLua_LeaveLimit,tolua_set_tagMonMachineDef_ToLua_LeaveLimit);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"MonsterMachine","MonsterMachine","",NULL);
  tolua_beginmodule(tolua_S,"MonsterMachine");
   tolua_function(tolua_S,"isInMonsterMachine",tolua_GameEngineTolua_MonsterMachine_isInMonsterMachine00);
   tolua_function(tolua_S,"getOre",tolua_GameEngineTolua_MonsterMachine_getOre00);
   tolua_function(tolua_S,"getMaxOre",tolua_GameEngineTolua_MonsterMachine_getMaxOre00);
   tolua_function(tolua_S,"getEnergy",tolua_GameEngineTolua_MonsterMachine_getEnergy00);
   tolua_function(tolua_S,"getMaxEnergy",tolua_GameEngineTolua_MonsterMachine_getMaxEnergy00);
   tolua_function(tolua_S,"getOreId",tolua_GameEngineTolua_MonsterMachine_getOreId00);
   tolua_function(tolua_S,"getPlayerMonsterMachine",tolua_GameEngineTolua_MonsterMachine_getPlayerMonsterMachine00);
   tolua_function(tolua_S,"getMonMachineDef",tolua_GameEngineTolua_MonsterMachine_getMonMachineDef00);
   tolua_function(tolua_S,"cancelSkillSelectData",tolua_GameEngineTolua_MonsterMachine_cancelSkillSelectData00);
   tolua_function(tolua_S,"getLeavePrepareTime",tolua_GameEngineTolua_MonsterMachine_getLeavePrepareTime00);
   tolua_function(tolua_S,"getMachinePassgerInfo",tolua_GameEngineTolua_MonsterMachine_getMachinePassgerInfo00);
   tolua_function(tolua_S,"canChangeSide",tolua_GameEngineTolua_MonsterMachine_canChangeSide00);
   tolua_function(tolua_S,"getMonMachineDef",tolua_GameEngineTolua_MonsterMachine_getMonMachineDef01);
   tolua_function(tolua_S,"canRideOn",tolua_GameEngineTolua_MonsterMachine_canRideOn00);
   tolua_function(tolua_S,"isMainPlayerDriver",tolua_GameEngineTolua_MonsterMachine_isMainPlayerDriver00);
   tolua_function(tolua_S,"getPassenger",tolua_GameEngineTolua_MonsterMachine_getPassenger00);
   tolua_function(tolua_S,"getPassengerNum",tolua_GameEngineTolua_MonsterMachine_getPassengerNum00);
   tolua_variable(tolua_S,"m_nOwnerID",tolua_get_MonsterMachine_m_nOwnerID,tolua_set_MonsterMachine_m_nOwnerID);
   tolua_variable(tolua_S,"m_FromItemWID",tolua_get_MonsterMachine_m_FromItemWID,tolua_set_MonsterMachine_m_FromItemWID);
   tolua_variable(tolua_S,"m_monsterInfo",tolua_get_MonsterMachine_m_monsterInfo,tolua_set_MonsterMachine_m_monsterInfo);
   tolua_variable(tolua_S,"m_playerInfo",tolua_get_MonsterMachine_m_playerInfo,tolua_set_MonsterMachine_m_playerInfo);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"GhostSchema",0);
  tolua_beginmodule(tolua_S,"GhostSchema");
   tolua_function(tolua_S,"enter",tolua_GameEngineTolua_GhostSchema_enter00);
   tolua_function(tolua_S,"exit",tolua_GameEngineTolua_GhostSchema_exit00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"EffectManage","EffectManage","",NULL);
  tolua_beginmodule(tolua_S,"EffectManage");
   tolua_function(tolua_S,"playEffect",tolua_GameEngineTolua_EffectManage_playEffect00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"NAME_FONT",NAME_FONT);
  tolua_constant(tolua_S,"NORMAL_MAIN_ATTACK_FONT",NORMAL_MAIN_ATTACK_FONT);
  tolua_constant(tolua_S,"NORMAL_MAIN_PET_ATTACK_FONT",NORMAL_MAIN_PET_ATTACK_FONT);
  tolua_constant(tolua_S,"SKILL_MAIN_NORMAL_ATTACK_FONT",SKILL_MAIN_NORMAL_ATTACK_FONT);
  tolua_constant(tolua_S,"NORMAL_MAIN_DAMAGED_FONT",NORMAL_MAIN_DAMAGED_FONT);
  tolua_constant(tolua_S,"NORMAL_MAINPET_DAMAGED_FONT",NORMAL_MAINPET_DAMAGED_FONT);
  tolua_constant(tolua_S,"NORMAL_MAIN_HEAVY_ATTACK_FONT",NORMAL_MAIN_HEAVY_ATTACK_FONT);
  tolua_constant(tolua_S,"HEAVY_MAINPET_ATTACK_FONT",HEAVY_MAINPET_ATTACK_FONT);
  tolua_constant(tolua_S,"SKILL_MAIN_HEAVY_ATTACK_FONT",SKILL_MAIN_HEAVY_ATTACK_FONT);
  tolua_constant(tolua_S,"HEAVY_MAIN_DAMAGED_FONT",HEAVY_MAIN_DAMAGED_FONT);
  tolua_constant(tolua_S,"HEAVY_MAINPET_DAMAGED_FONT",HEAVY_MAINPET_DAMAGED_FONT);
  tolua_constant(tolua_S,"HP_ADD_FONT",HP_ADD_FONT);
  tolua_constant(tolua_S,"MP_ADD_FONT",MP_ADD_FONT);
  tolua_constant(tolua_S,"MISS_IMMUNE_FONT",MISS_IMMUNE_FONT);
  tolua_constant(tolua_S,"EXP_ADD_FONT",EXP_ADD_FONT);
  tolua_constant(tolua_S,"MONEY_ADD_FONT",MONEY_ADD_FONT);
  tolua_constant(tolua_S,"BINDGOLD_ADD_FONT",BINDGOLD_ADD_FONT);
  tolua_constant(tolua_S,"HPBAR",HPBAR);
  tolua_constant(tolua_S,"HPBAR_BACKGROUP",HPBAR_BACKGROUP);
  tolua_constant(tolua_S,"CRYSTAL_FONT",CRYSTAL_FONT);
  tolua_constant(tolua_S,"ORE_FONT",ORE_FONT);
  tolua_constant(tolua_S,"OWN_MONSTER_FLAG",OWN_MONSTER_FLAG);
  tolua_constant(tolua_S,"TEAM_LEADER",TEAM_LEADER);
  tolua_constant(tolua_S,"TEAM_MEMBER",TEAM_MEMBER);
  tolua_constant(tolua_S,"MACHINE_ENERGY",MACHINE_ENERGY);
  tolua_constant(tolua_S,"MACHINE_RESOURCE",MACHINE_RESOURCE);
  tolua_constant(tolua_S,"TASK_SPY_GONG",TASK_SPY_GONG);
  tolua_constant(tolua_S,"TASK_SPY_FANG",TASK_SPY_FANG);
  tolua_constant(tolua_S,"STRONG_GLORY",STRONG_GLORY);
  tolua_constant(tolua_S,"MACHINE_COLLECT",MACHINE_COLLECT);
  tolua_constant(tolua_S,"RUNE_EX_DO",RUNE_EX_DO);
  tolua_constant(tolua_S,"ZHENGYI_ADD_FONT",ZHENGYI_ADD_FONT);
  tolua_constant(tolua_S,"LIFTBRAND_ADD_FONT",LIFTBRAND_ADD_FONT);
  tolua_constant(tolua_S,"FONT_END",FONT_END);
  tolua_function(tolua_S,"AddFlyFont",tolua_GameEngineTolua_AddFlyFont00);
  tolua_constant(tolua_S,"WORLD_CITY_STAT_NORMAL_TOLUA",WORLD_CITY_STAT_NORMAL_TOLUA);
  tolua_constant(tolua_S,"WORLD_CITY_STAT_CLEAR_TOLUA",WORLD_CITY_STAT_CLEAR_TOLUA);
  tolua_constant(tolua_S,"WORLD_CITY_STAT_FIGHT_TOLUA",WORLD_CITY_STAT_FIGHT_TOLUA);
  tolua_constant(tolua_S,"WorldCityMapID",WorldCityMapID);
  tolua_cclass(tolua_S,"CityBuildInfo","CityBuildInfo","",NULL);
  tolua_beginmodule(tolua_S,"CityBuildInfo");
   tolua_variable(tolua_S,"DefID",tolua_get_CityBuildInfo_DefID,tolua_set_CityBuildInfo_DefID);
   tolua_variable(tolua_S,"MemID",tolua_get_CityBuildInfo_MemID,tolua_set_CityBuildInfo_MemID);
   tolua_variable(tolua_S,"State",tolua_get_CityBuildInfo_State,tolua_set_CityBuildInfo_State);
   tolua_variable(tolua_S,"Type",tolua_get_CityBuildInfo_Type,tolua_set_CityBuildInfo_Type);
   tolua_variable(tolua_S,"BuildIdx",tolua_get_CityBuildInfo_BuildIdx,tolua_set_CityBuildInfo_BuildIdx);
   tolua_variable(tolua_S,"BuildLevel",tolua_get_CityBuildInfo_BuildLevel,tolua_set_CityBuildInfo_BuildLevel);
   tolua_variable(tolua_S,"HP",tolua_get_CityBuildInfo_HP,tolua_set_CityBuildInfo_HP);
   tolua_variable(tolua_S,"MaxHP",tolua_get_CityBuildInfo_MaxHP,tolua_set_CityBuildInfo_MaxHP);
   tolua_variable(tolua_S,"Energy",tolua_get_CityBuildInfo_Energy,tolua_set_CityBuildInfo_Energy);
   tolua_variable(tolua_S,"MaxEnergy",tolua_get_CityBuildInfo_MaxEnergy,tolua_set_CityBuildInfo_MaxEnergy);
   tolua_variable(tolua_S,"ClanName",tolua_get_CityBuildInfo_ClanName,tolua_set_CityBuildInfo_ClanName);
   tolua_variable(tolua_S,"WarnEndTime",tolua_get_CityBuildInfo_WarnEndTime,tolua_set_CityBuildInfo_WarnEndTime);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"resPos_ToLua","resPos_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"resPos_ToLua");
   tolua_variable(tolua_S,"X",tolua_get_resPos_ToLua_X,tolua_set_resPos_ToLua_X);
   tolua_variable(tolua_S,"Y",tolua_get_resPos_ToLua_Y,tolua_set_resPos_ToLua_Y);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"tagCSCityMemInfo_ToLua","tagCSCityMemInfo_ToLua","",tolua_collect_tagCSCityMemInfo_ToLua);
  #else
  tolua_cclass(tolua_S,"tagCSCityMemInfo_ToLua","tagCSCityMemInfo_ToLua","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"tagCSCityMemInfo_ToLua");
   tolua_variable(tolua_S,"MemID",tolua_get_tagCSCityMemInfo_ToLua_MemID,tolua_set_tagCSCityMemInfo_ToLua_MemID);
   tolua_variable(tolua_S,"Pos",tolua_get_tagCSCityMemInfo_ToLua_Pos,tolua_set_tagCSCityMemInfo_ToLua_Pos);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"tagCSCityMapPosInfo_ToLua","tagCSCityMapPosInfo_ToLua","",NULL);
  tolua_beginmodule(tolua_S,"tagCSCityMapPosInfo_ToLua");
   tolua_variable(tolua_S,"MemNum",tolua_get_tagCSCityMapPosInfo_ToLua_MemNum,tolua_set_tagCSCityMapPosInfo_ToLua_MemNum);
   tolua_array(tolua_S,"Members",tolua_get_GameEngineTolua_tagCSCityMapPosInfo_ToLua_Members,tolua_set_GameEngineTolua_tagCSCityMapPosInfo_ToLua_Members);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"WorldCityManager","WorldCityManager","",NULL);
  tolua_beginmodule(tolua_S,"WorldCityManager");
   tolua_function(tolua_S,"getCityBuildInfo",tolua_GameEngineTolua_WorldCityManager_getCityBuildInfo00);
   tolua_function(tolua_S,"getFirstCityBuildId",tolua_GameEngineTolua_WorldCityManager_getFirstCityBuildId00);
   tolua_function(tolua_S,"getNextCityBuildId",tolua_GameEngineTolua_WorldCityManager_getNextCityBuildId00);
   tolua_function(tolua_S,"getCityBuildPosX",tolua_GameEngineTolua_WorldCityManager_getCityBuildPosX00);
   tolua_function(tolua_S,"getCityBuildPosY",tolua_GameEngineTolua_WorldCityManager_getCityBuildPosY00);
   tolua_function(tolua_S,"getCityBuildResID",tolua_GameEngineTolua_WorldCityManager_getCityBuildResID00);
   tolua_function(tolua_S,"getCityBuildMapIconId",tolua_GameEngineTolua_WorldCityManager_getCityBuildMapIconId00);
   tolua_function(tolua_S,"CityBuildCanDisplay",tolua_GameEngineTolua_WorldCityManager_CityBuildCanDisplay00);
   tolua_function(tolua_S,"CityBuildUpgradeId",tolua_GameEngineTolua_WorldCityManager_CityBuildUpgradeId00);
   tolua_function(tolua_S,"CityBuildCanRepair",tolua_GameEngineTolua_WorldCityManager_CityBuildCanRepair00);
   tolua_function(tolua_S,"CityBuildCanSupply",tolua_GameEngineTolua_WorldCityManager_CityBuildCanSupply00);
   tolua_function(tolua_S,"CityBuildCanRemove",tolua_GameEngineTolua_WorldCityManager_CityBuildCanRemove00);
   tolua_function(tolua_S,"getCityBuildFirstConstruct",tolua_GameEngineTolua_WorldCityManager_getCityBuildFirstConstruct00);
   tolua_function(tolua_S,"getCityBuildNextConstruct",tolua_GameEngineTolua_WorldCityManager_getCityBuildNextConstruct00);
   tolua_function(tolua_S,"getCityProductMapIconId",tolua_GameEngineTolua_WorldCityManager_getCityProductMapIconId00);
   tolua_function(tolua_S,"getCityProductBuildIconId",tolua_GameEngineTolua_WorldCityManager_getCityProductBuildIconId00);
   tolua_function(tolua_S,"getCityProductBuildTips",tolua_GameEngineTolua_WorldCityManager_getCityProductBuildTips00);
   tolua_function(tolua_S,"getCityProductBuildDesc",tolua_GameEngineTolua_WorldCityManager_getCityProductBuildDesc00);
   tolua_function(tolua_S,"UpgradeCityBuild",tolua_GameEngineTolua_WorldCityManager_UpgradeCityBuild00);
   tolua_function(tolua_S,"ConstructCityBuild",tolua_GameEngineTolua_WorldCityManager_ConstructCityBuild00);
   tolua_function(tolua_S,"RepairCityBuild",tolua_GameEngineTolua_WorldCityManager_RepairCityBuild00);
   tolua_function(tolua_S,"SupplyCityBuild",tolua_GameEngineTolua_WorldCityManager_SupplyCityBuild00);
   tolua_function(tolua_S,"RemoveCityBuild",tolua_GameEngineTolua_WorldCityManager_RemoveCityBuild00);
   tolua_function(tolua_S,"IsWorldCityKeeper",tolua_GameEngineTolua_WorldCityManager_IsWorldCityKeeper00);
   tolua_function(tolua_S,"IsWorldCityKeeper",tolua_GameEngineTolua_WorldCityManager_IsWorldCityKeeper01);
   tolua_function(tolua_S,"IsCityBuildFight",tolua_GameEngineTolua_WorldCityManager_IsCityBuildFight00);
   tolua_function(tolua_S,"IsCityBuildFight",tolua_GameEngineTolua_WorldCityManager_IsCityBuildFight01);
   tolua_function(tolua_S,"GetCityBuildDefID",tolua_GameEngineTolua_WorldCityManager_GetCityBuildDefID00);
   tolua_function(tolua_S,"GetCityBuildDefID",tolua_GameEngineTolua_WorldCityManager_GetCityBuildDefID01);
   tolua_function(tolua_S,"GetCityBuildRepairCost",tolua_GameEngineTolua_WorldCityManager_GetCityBuildRepairCost00);
   tolua_function(tolua_S,"GetCityBuildSupplyCost",tolua_GameEngineTolua_WorldCityManager_GetCityBuildSupplyCost00);
   tolua_function(tolua_S,"GetCityBuildConstructCost",tolua_GameEngineTolua_WorldCityManager_GetCityBuildConstructCost00);
   tolua_function(tolua_S,"GetCityBuildConstructNextResource",tolua_GameEngineTolua_WorldCityManager_GetCityBuildConstructNextResource00);
   tolua_function(tolua_S,"GetCityBuildConstructResourceCost",tolua_GameEngineTolua_WorldCityManager_GetCityBuildConstructResourceCost00);
   tolua_function(tolua_S,"GetCityFightEnableStat",tolua_GameEngineTolua_WorldCityManager_GetCityFightEnableStat00);
   tolua_function(tolua_S,"RequestClanMemberPos",tolua_GameEngineTolua_WorldCityManager_RequestClanMemberPos00);
   tolua_function(tolua_S,"GetCityKeeperClanID",tolua_GameEngineTolua_WorldCityManager_GetCityKeeperClanID00);
   tolua_function(tolua_S,"GetCityKeepClanWID",tolua_GameEngineTolua_WorldCityManager_GetCityKeepClanWID00);
   tolua_function(tolua_S,"GerCityFightEnableStat",tolua_GameEngineTolua_WorldCityManager_GerCityFightEnableStat00);
   tolua_function(tolua_S,"GetCityOwnerKeepNum",tolua_GameEngineTolua_WorldCityManager_GetCityOwnerKeepNum00);
   tolua_function(tolua_S,"GetCityOwnerAwardMoney",tolua_GameEngineTolua_WorldCityManager_GetCityOwnerAwardMoney00);
   tolua_function(tolua_S,"GetCityStat",tolua_GameEngineTolua_WorldCityManager_GetCityStat00);
   tolua_function(tolua_S,"GetWorldCityClanNum",tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanNum00);
   tolua_function(tolua_S,"GetWorldCityClanName",tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanName00);
   tolua_function(tolua_S,"GetWorldCityClanGetReviveNum",tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanGetReviveNum00);
   tolua_function(tolua_S,"GetWorldCityClanGetControlNum",tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanGetControlNum00);
   tolua_function(tolua_S,"GetWorldCityClanBuffNum",tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanBuffNum00);
   tolua_function(tolua_S,"GetWorldCityClanDoorNum",tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanDoorNum00);
   tolua_function(tolua_S,"GetWorldCityClanDefNum",tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanDefNum00);
   tolua_function(tolua_S,"GetWorldCityClanTotal",tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanTotal00);
   tolua_function(tolua_S,"GetWorldCityClanTime",tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanTime00);
   tolua_function(tolua_S,"GetWorldCitySelClanTotal",tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelClanTotal00);
   tolua_function(tolua_S,"GetWorldCityClanAwardMoneyType",tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanAwardMoneyType00);
   tolua_function(tolua_S,"GetWorldCityClanAwardMoney",tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanAwardMoney00);
   tolua_function(tolua_S,"GetWorldCityClanAwardItemID",tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanAwardItemID00);
   tolua_function(tolua_S,"GetWorldCityClanAwardExp",tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanAwardExp00);
   tolua_function(tolua_S,"GetWorldCityClanEnterTime",tolua_GameEngineTolua_WorldCityManager_GetWorldCityClanEnterTime00);
   tolua_function(tolua_S,"GetWorldCitySelfClanRank",tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelfClanRank00);
   tolua_function(tolua_S,"GetWorldCitySelfClanMoneyType",tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelfClanMoneyType00);
   tolua_function(tolua_S,"GetWorldCitySelfClanMoney",tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelfClanMoney00);
   tolua_function(tolua_S,"GetWorldCitySelfContineKill",tolua_GameEngineTolua_WorldCityManager_GetWorldCitySelfContineKill00);
   tolua_function(tolua_S,"ClearWorldCitySelfContineKill",tolua_GameEngineTolua_WorldCityManager_ClearWorldCitySelfContineKill00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"GameXYZ","GameXYZ","",tolua_collect_GameXYZ);
  #else
  tolua_cclass(tolua_S,"GameXYZ","GameXYZ","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"GameXYZ");
   tolua_variable(tolua_S,"x",tolua_get_GameXYZ_x,tolua_set_GameXYZ_x);
   tolua_variable(tolua_S,"y",tolua_get_GameXYZ_y,tolua_set_GameXYZ_y);
   tolua_variable(tolua_S,"z",tolua_get_GameXYZ_z,tolua_set_GameXYZ_z);
  tolua_endmodule(tolua_S);
 tolua_endmodule(tolua_S);
 return 1;
}


#if defined(LUA_VERSION_NUM) && LUA_VERSION_NUM >= 501
 TOLUA_API int luaopen_GameEngineTolua (lua_State* tolua_S) {
 return tolua_GameEngineTolua_open(tolua_S);
};
#endif

