/********************************************************************
**       This head file is generated by program,                   **
**            Please do not change it directly.                    **
********************************************************************/

#ifndef TBUS_COMM_H
#define TBUS_COMM_H

/*   
 User Define Macros.   */

#define TBUS_MAX_DESC_STRING_LEN                 	128 	/* max length of discription */
#define TBUS_CHANNEL_SIDE_NUM                    	2 	/* tbus通道有两端 */
#define TBUS_DEFAUL_BUSSINESS_ID                 	0 	/* 缺省业务ID */
#define TBUS_CHANNEL_DEFAULT_SIZE                	2048000 	/* default size of tbus channel */
#define TBUS_CHANNEL_DEFAULT_PRIORITY            	8
#define TBUS_RELAY_URL_STRATEGY                  	1
#define TBUS_DEFAULT_CHANNEL_DATA_ALIGN          	8 	/* 数据存储时缺省字节对齐方式 */
#define TBUS_MAX_CHANNEL_DATA_ALIGN              	256 	/* 数据存储时最大字节对齐值 */


#ifdef __cplusplus
extern "C" {
#endif

/*   Define c types.   */


#ifndef TDR_CUSTOM_C_TYPES
#define TDR_CUSTOM_C_TYPES
#if defined(WIN32) &&  _MSC_VER < 1300
typedef __int64 tdr_longlong;
typedef unsigned __int64 tdr_ulonglong;
#else
typedef long long tdr_longlong;
typedef unsigned long long tdr_ulonglong;
#endif  /*defined(WIN32) &&  _MSC_VER < 1300*/
typedef unsigned short tdr_wchar_t;  /**<Wchar基本数据类型*/
typedef unsigned int tdr_date_t;	/**<data基本数据类型*/
typedef unsigned int tdr_time_t;	/**<time基本数据类型*/
typedef tdr_ulonglong tdr_datetime_t;  /**<datetime基本数据类型*/
typedef unsigned long int tdr_ip_t;  /**<IPv4数据类型*/
#endif /*TDR_CUSTOM_C_TYPES*/



/*   Structs/unions prototype.   */

struct tagChannelCnf;
typedef struct tagChannelCnf                       	CHANNELCNF;
typedef struct tagChannelCnf                       	*LPCHANNELCNF;

struct tagChannelCnfInter;
typedef struct tagChannelCnfInter                  	CHANNELCNFINTER;
typedef struct tagChannelCnfInter                  	*LPCHANNELCNFINTER;

struct tagShmRelay;
typedef struct tagShmRelay                         	SHMRELAY;
typedef struct tagShmRelay                         	*LPSHMRELAY;

struct tagRelayCnfInter;
typedef struct tagRelayCnfInter                    	RELAYCNFINTER;
typedef struct tagRelayCnfInter                    	*LPRELAYCNFINTER;



/*   Define structs/unions.   */

#pragma pack(1)

struct tagChannelCnf
{
    unsigned int dwPriority;                     
    unsigned int dwAddressCount;                 
    char aszAddress[TBUS_CHANNEL_SIDE_NUM][TBUS_MAX_ADDR_STRING_LEN]; 	/*   two channel address */
    int interAddr[TBUS_CHANNEL_SIDE_NUM];
    unsigned int dwRecvSize;                      	/*   size of recv queue for msg exchange in bytes from the viewer with first address, default is 2M */
    unsigned int dwSendSize;                      	/*   size of send queue for msg exchange in bytes from the viewer with first address, default is 2M */
    char szDesc[TBUS_MAX_DESC_STRING_LEN];
    int iShmID;                          	/*  Ver.3 shmid for channel,usually should not configure */
};

struct tagChannelCnfInter
{
    unsigned int dwPriority;                     
    int address[TBUS_CHANNEL_SIDE_NUM];  	/*   two channel address */
    unsigned int dwRecvSize;                      	/*   size of recv queue for msg exchange in bytes from the viewer with first address, default is 2M */
    unsigned int dwSendSize;                      	/*   size of send queue for msg exchange in bytes from the viewer with first address, default is 2M */
    int iShmID;                          	/*  Ver.3 shmid for channel,usually should not configure */
};

struct tagShmRelay
{
    unsigned int dwEnable;                        	/*   bit set: 0001 -- relay node valid */
    char szAddr[TBUS_MAX_ADDR_STRING_LEN]; 	/*   ip format: xxx.xxx.xxx.xxx, primary key, should be unique in share memory. Message sent to this addr would be forwarded via network */
    unsigned int dwPriority;                     
    char szMConn[TBUS_MAX_HOST_URL_LEN];  	/*   master connection information */
    char szSConn[TBUS_MAX_HOST_URL_LEN];  	/*   slave connection information */
    unsigned int dwStrategy;                      	/*   strategy between master connection and slave connection */
    char szDesc[TBUS_MAX_DESC_STRING_LEN];
};

struct tagRelayCnfInter
{
    int iAddress;                        	/*   channel address should be relay */
    char szMConn[TBUS_MAX_HOST_URL_LEN];  	/*   master connection information */
};


#pragma pack()

#ifdef __cplusplus
}
#endif


#endif /* TBUS_COMM_H */
