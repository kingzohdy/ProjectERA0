/********************************************************************
**       This head file is generated by program,                   **
**            Please do not change it directly.                    **
********************************************************************/

#ifndef ROBOT_CONF_DESC_H
#define ROBOT_CONF_DESC_H


#ifndef TDR_METALIB_ROBOT_VERSION 
#define TDR_METALIB_ROBOT_VERSION 	10 /*version of metalib*/
#endif

#ifndef TDR_METALIB_ROBOT_HASH 
#define TDR_METALIB_ROBOT_HASH 	"d36da8dd618f9b0291b7046ed27313cf" /*hash of metalib*/
#endif
/*   
 User Define Macros.   */

#define WORLD_NAME_LEN_ROBOT                     	128
#define CHAT_LEN                                 	32
#define IP_LEN                                   	32
#define MAX_GM_CMD                               	16
#define MAX_ARM                                  	10


#ifdef __cplusplus
extern "C" {
#endif

/*   Define c types.   */


#ifndef TDR_CUSTOM_C_TYPES
#define TDR_CUSTOM_C_TYPES
#if defined(WIN32) &&  _MSC_VER < 1300
typedef __int64 tdr_longlong;
typedef unsigned __int64 tdr_ulonglong;
#else
typedef long long tdr_longlong;
typedef unsigned long long tdr_ulonglong;
#endif  /*defined(WIN32) &&  _MSC_VER < 1300*/
typedef unsigned short tdr_wchar_t;  /**<Wchar基本数据类型*/
typedef unsigned int tdr_date_t;	/**<data基本数据类型*/
typedef unsigned int tdr_time_t;	/**<time基本数据类型*/
typedef tdr_ulonglong tdr_datetime_t;  /**<datetime基本数据类型*/
typedef unsigned long int tdr_ip_t;  /**<IPv4数据类型*/
#endif /*TDR_CUSTOM_C_TYPES*/



/*   Structs/unions prototype.   */

struct tagROLELOGIN;
typedef struct tagROLELOGIN                        	ROLELOGIN;
typedef struct tagROLELOGIN                        	*LPROLELOGIN;

struct tagROLEMOVE;
typedef struct tagROLEMOVE                         	ROLEMOVE;
typedef struct tagROLEMOVE                         	*LPROLEMOVE;

struct tagROLECHAT;
typedef struct tagROLECHAT                         	ROLECHAT;
typedef struct tagROLECHAT                         	*LPROLECHAT;

struct tagROLESKILL;
typedef struct tagROLESKILL                        	ROLESKILL;
typedef struct tagROLESKILL                        	*LPROLESKILL;

struct tagCOMMCMD;
typedef struct tagCOMMCMD                          	COMMCMD;
typedef struct tagCOMMCMD                          	*LPCOMMCMD;

struct tagFSCMD;
typedef struct tagFSCMD                            	FSCMD;
typedef struct tagFSCMD                            	*LPFSCMD;

struct tagJSCMD;
typedef struct tagJSCMD                            	JSCMD;
typedef struct tagJSCMD                            	*LPJSCMD;

struct tagZSCMD;
typedef struct tagZSCMD                            	ZSCMD;
typedef struct tagZSCMD                            	*LPZSCMD;

struct tagQSCMD;
typedef struct tagQSCMD                            	QSCMD;
typedef struct tagQSCMD                            	*LPQSCMD;

struct tagARM;
typedef struct tagARM                              	ARM;
typedef struct tagARM                              	*LPARM;

struct tagrobotconf;
typedef struct tagrobotconf                        	ROBOTCONF;
typedef struct tagrobotconf                        	*LPROBOTCONF;

struct tagrobotrun_status;
typedef struct tagrobotrun_status                  	ROBOTRUN_STATUS;
typedef struct tagrobotrun_status                  	*LPROBOTRUN_STATUS;



/*   Define structs/unions.   */

#pragma pack(1)

struct tagROLELOGIN
{
    unsigned int dwLoginNum;                      	/*   登录的人数 */
    unsigned int dwLoginID;                       	/*   登录账号 */
    unsigned int dwInterval;                      	/*   登录时间间隔 */
    char szWorldName[WORLD_NAME_LEN_ROBOT];
    char szDirIP[IP_LEN];                
    int iDirPort;                       
    char szAuthIP[IP_LEN];               
    int iAuthPort;                      
    int iJsNum;                          	/*   祭师人数 */
    int iQsNum;                          	/*   枪手人数 */
    int iZsNum;                          	/*   战士人数 */
    int iFsNum;                          	/*   法师人数 */
};

struct tagROLEMOVE
{
    unsigned int dwMoveInterval;                  	/*   移动时间间隔 */
    unsigned int dwMoveDistance;                  	/*   每次移动距离 */
    unsigned int dwMoveNum;                       	/*   移动人数 */
};

struct tagROLECHAT
{
    unsigned int dwChatInterval;                  	/*   聊天时间间隔 */
    char szStrChat[CHAT_LEN];             	/*   聊天内容 */
    unsigned int dwChatNum;                       	/*   聊天人数 */
};

struct tagROLESKILL
{
    unsigned int dwSkillNum;                      	/*   战斗人数 */
    unsigned int dwSkillInterval;                 	/*   战斗时间间隔 */
    int iSkillID;                        	/*   技能ID */
};

struct tagCOMMCMD
{
    char szStrChat[CHAT_LEN];             	/*   聊天内容 */
};

struct tagFSCMD
{
    char szStrChat[CHAT_LEN];             	/*   聊天内容 */
};

struct tagJSCMD
{
    char szStrChat[CHAT_LEN];             	/*   聊天内容 */
};

struct tagZSCMD
{
    char szStrChat[CHAT_LEN];             	/*   聊天内容 */
};

struct tagQSCMD
{
    char szStrChat[CHAT_LEN];             	/*   聊天内容 */
};

struct tagARM
{
    int iArmID;                         
};

struct tagrobotconf
{
    ROLELOGIN stRoleLogin;                     	/*   登录相关 */
    ROLEMOVE stRoleMove;                      	/*   移动相关 */
    ROLECHAT stRoleChat;                      	/*   聊天相关 */
    ROLESKILL stRoleSkill;                     	/*   战斗相关 */
    int iCommCount;                      	/*   公共Gm指令数 */
    COMMCMD astCommGmCmd[MAX_GM_CMD];       
    int iFsCount;                        	/*   法师Gm指令数 */
    FSCMD astFsGmCmd[MAX_GM_CMD];         
    int iFsArmNum;                      
    ARM astFsArm[MAX_ARM];              
    int iJsCount;                        	/*   祭师Gm指令数 */
    JSCMD astJsGmCmd[MAX_GM_CMD];         
    int iJsArmNum;                      
    ARM astJsArm[MAX_ARM];              
    int iZsCount;                        	/*   战士Gm指令数 */
    ZSCMD astZsGmCmd[MAX_GM_CMD];         
    int iZsArmNum;                      
    ARM astZsArm[MAX_ARM];              
    int iQsCount;                        	/*   枪手Gm指令数 */
    QSCMD astQsGmCmd[MAX_GM_CMD];         
    int iQsArmNum;                      
    ARM astQsArm[MAX_ARM];              
};

struct tagrobotrun_status
{
    int iRes;                           
};


#pragma pack()

#ifdef __cplusplus
}
#endif


#endif /* ROBOT_CONF_DESC_H */
