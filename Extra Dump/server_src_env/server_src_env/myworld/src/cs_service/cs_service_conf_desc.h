/********************************************************************
**       This head file is generated by program,                   **
**            Please do not change it directly.                    **
********************************************************************/

#ifndef CS_SERVICE_CONF_DESC_H
#define CS_SERVICE_CONF_DESC_H


#ifndef TDR_METALIB_CS_SERVICE_VERSION 
#define TDR_METALIB_CS_SERVICE_VERSION 	10 /*version of metalib*/
#endif

#ifndef TDR_METALIB_CS_SERVICE_HASH 
#define TDR_METALIB_CS_SERVICE_HASH 	"8766cc8caf0f4f8b5677620e9b189a9f" /*hash of metalib*/
#endif
/*   
 User Define Macros.   */


/* SOAP_ENCODING_TYPE*/
enum tagSOAP_ENCODING_TYPE 
{
    SOAP_ENCODING_TYPE_UTF8 = 0, 	/* UTF8 */
    SOAP_ENCODING_TYPE_GBK = 1, 	/* GBK */
};
#define DEFAULT_FIND_HANDLE_NUM                  	20 	/* 查询句柄总数 */
#define DEFAULT_FIND_HANDLE_TIMEOUT              	1200 	/* 查询句柄超时时间|单位秒|20分钟 */
#define RESTRICT_IP_NUM                          	5 	/* 受限IP数量 */
#define ALLOW_OPERATION_NUM                      	64 	/* 受限IP允许的操作 */


#ifdef __cplusplus
extern "C" {
#endif

/*   Define c types.   */


#ifndef TDR_CUSTOM_C_TYPES
#define TDR_CUSTOM_C_TYPES
#if defined(WIN32) &&  _MSC_VER < 1300
typedef __int64 tdr_longlong;
typedef unsigned __int64 tdr_ulonglong;
#else
typedef long long tdr_longlong;
typedef unsigned long long tdr_ulonglong;
#endif  /*defined(WIN32) &&  _MSC_VER < 1300*/
typedef unsigned short tdr_wchar_t;  /**<Wchar基本数据类型*/
typedef unsigned int tdr_date_t;	/**<data基本数据类型*/
typedef unsigned int tdr_time_t;	/**<time基本数据类型*/
typedef tdr_ulonglong tdr_datetime_t;  /**<datetime基本数据类型*/
typedef unsigned long int tdr_ip_t;  /**<IPv4数据类型*/
#endif /*TDR_CUSTOM_C_TYPES*/



/*   Structs/unions prototype.   */

struct tagOperationInfo;
typedef struct tagOperationInfo                    	OPERATIONINFO;
typedef struct tagOperationInfo                    	*LPOPERATIONINFO;

struct tagCsRestrictInfo;
typedef struct tagCsRestrictInfo                   	CSRESTRICTINFO;
typedef struct tagCsRestrictInfo                   	*LPCSRESTRICTINFO;

struct tagcs_serviceconf;
typedef struct tagcs_serviceconf                   	CS_SERVICECONF;
typedef struct tagcs_serviceconf                   	*LPCS_SERVICECONF;

struct tagcs_servicerun_status;
typedef struct tagcs_servicerun_status             	CS_SERVICERUN_STATUS;
typedef struct tagcs_servicerun_status             	*LPCS_SERVICERUN_STATUS;



/*   Define structs/unions.   */

#pragma pack(1)

struct tagOperationInfo
{
    char Name[128];                       	/*   操作名 */
};

struct tagCsRestrictInfo
{
    int RestrictIpNum;                   	/*   ip数量 */
    char RestrictIP[RESTRICT_IP_NUM][24]; 	/*   受限的ip地址 */
    int AllowOperationNum;               	/*   允许的操作数量 */
    OPERATIONINFO AllowOperation[ALLOW_OPERATION_NUM]; 	/*   允许的操作名 */
};

struct tagcs_serviceconf
{
    char SpawnIP[24];                     	/*   spawn-fcgi绑定的IP地址 */
    int SpawnPort;                       	/*   spawn-fcgi绑定的端口 */
    char ConvertEncoding[32];             	/*   转换的字符集 */
    char FcgiWebServerIPList[512];        	/*   配置Fastcgi Web服务器的ip地址列表以逗号(,)分割,不在列表内的ip地址将被禁止访问,未设置则全部允许访问|FCGI_WEB_SERVER_ADDRS */
    int FindHandleNum;                   	/*   查询句柄总数 */
    int FindHandleTimeout;               	/*   查询句柄超时时间|单位秒 */
    char TdrFile[256];                    	/*   proto_ss.tdr文件路径 */
    char CgiConfigFile[256];              	/*   cs_cgi.xml文件路径 */
    int SoapEncoding;                    	/*   soap输入输出编码格式 Bind Macrosgroup:SOAP_ENCODING_TYPE,*/
    CSRESTRICTINFO RestrictInfo;                    	/*   受限ip信息 */
};

struct tagcs_servicerun_status
{
    int Res;                            
};


#pragma pack()

#ifdef __cplusplus
}
#endif


#endif /* CS_SERVICE_CONF_DESC_H */
