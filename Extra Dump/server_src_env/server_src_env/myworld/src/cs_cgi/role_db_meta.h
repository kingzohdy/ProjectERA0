/********************************************************************
**       This head file is generated by program,                   **
**            Please do not change it directly.                    **
********************************************************************/

#ifndef ROLE_DB_META_H
#define ROLE_DB_META_H


#ifndef TDR_METALIB_ROLE_DB_META_VERSION 
#define TDR_METALIB_ROLE_DB_META_VERSION 	2555 /*version of metalib*/
#endif

#ifndef TDR_METALIB_ROLE_DB_META_HASH 
#define TDR_METALIB_ROLE_DB_META_HASH 	"8620ab5daee8b2ad8e023a135dbcb9f7" /*hash of metalib*/
#endif
/*   
 User Define Macros.   */


/* QUICK_STATUS_TYPE*/
enum tagQUICK_STATUS_TYPE 
{
    QUICK_STATUS_NORMAL = 0, 	/* 普通帐号 */
    QUICK_STATUS_QUICK = 1, 	/* 快速试玩帐号 */
    QUICK_STATUS_REG = 2, 	/* 转正的帐号 */
};

/* ACTIVE_KEY_STATUS_TYPE*/
enum tagACTIVE_KEY_STATUS_TYPE 
{
    ACTIVE_KEY_STATUS_INIT = 0, 	/* 未激活 */
    ACTIVE_KEY_STATUS_ACTIVE = 1, 	/* 已激活 */
};
#define ACTIVE_LEN                               	255
#define MAX_LIST_BILL_NUM                        	16 	/* 充值信息的数量 */
#define MAX_DB_META_NAME_LEN                     	64 	/* 最大元数据名长度 */
#define MAX_DB_SQL_LEN                           	20480 	/* SQL长度 */

/* META_DATA_TYPE*/
enum tagMETA_DATA_TYPE 
{
    META_DATA_TYPE_NULL = 0, 	/* 空 */
    META_DATA_TYPE_ACCOUNT = 1, 	/* 帐号 */
    META_DATA_TYPE_UPDATEPASSWD = 2, 	/* 修改密码 */
    META_DATA_TYPE_UPDATEACCOUNT = 3, 	/* 修改帐号生日 */
    META_DATA_TYPE_ADDBILLRECORD = 4, 	/* 充值记录 */
    META_DATA_TYPE_BILL = 5, 	/* 充值 */
    META_DATA_TYPE_ACCGIFT = 6, 	/* 运营礼包 */
    META_DATA_TYPE_UPDATEPASSWDCARD = 7, 	/* 修改密保卡 */
    META_DATA_TYPE_ACCOUNTUINFLAG = 8, 	/* 修改帐号UinFlag */
};
#define MAX_ACC_PASSWD_NUM                       	16 	/* 帐号密码返回的数量 */


#ifdef __cplusplus
extern "C" {
#endif

/*   Define c types.   */


#ifndef TDR_CUSTOM_C_TYPES
#define TDR_CUSTOM_C_TYPES
#if defined(WIN32) &&  _MSC_VER < 1300
typedef __int64 tdr_longlong;
typedef unsigned __int64 tdr_ulonglong;
#else
typedef long long tdr_longlong;
typedef unsigned long long tdr_ulonglong;
#endif  /*defined(WIN32) &&  _MSC_VER < 1300*/
typedef unsigned short tdr_wchar_t;  /**<Wchar基本数据类型*/
typedef unsigned int tdr_date_t;	/**<data基本数据类型*/
typedef unsigned int tdr_time_t;	/**<time基本数据类型*/
typedef tdr_ulonglong tdr_datetime_t;  /**<datetime基本数据类型*/
typedef unsigned long int tdr_ip_t;  /**<IPv4数据类型*/
#endif /*TDR_CUSTOM_C_TYPES*/



/*   Structs/unions prototype.   */

struct tagNameID;
typedef struct tagNameID                           	NAMEID;
typedef struct tagNameID                           	*LPNAMEID;

struct tagChgNameID;
typedef struct tagChgNameID                        	CHGNAMEID;
typedef struct tagChgNameID                        	*LPCHGNAMEID;

struct tagNameIDType;
typedef struct tagNameIDType                       	NAMEIDTYPE;
typedef struct tagNameIDType                       	*LPNAMEIDTYPE;

struct tagBuddyInfo;
typedef struct tagBuddyInfo                        	BUDDYINFO;
typedef struct tagBuddyInfo                        	*LPBUDDYINFO;

struct tagBuddy;
typedef struct tagBuddy                            	BUDDY;
typedef struct tagBuddy                            	*LPBUDDY;

struct tagRelation;
typedef struct tagRelation                         	RELATION;
typedef struct tagRelation                         	*LPRELATION;

struct tagClan;
typedef struct tagClan                             	CLAN;
typedef struct tagClan                             	*LPCLAN;

struct tagMailEntry;
typedef struct tagMailEntry                        	MAILENTRY;
typedef struct tagMailEntry                        	*LPMAILENTRY;

struct tagAccount;
typedef struct tagAccount                          	ACCOUNT;
typedef struct tagAccount                          	*LPACCOUNT;

struct tagActive;
typedef struct tagActive                           	ACTIVE;
typedef struct tagActive                           	*LPACTIVE;

struct tagActiveCodeGiftDef;
typedef struct tagActiveCodeGiftDef                	ACTIVECODEGIFTDEF;
typedef struct tagActiveCodeGiftDef                	*LPACTIVECODEGIFTDEF;

struct tagAccSafePwd;
typedef struct tagAccSafePwd                       	ACCSAFEPWD;
typedef struct tagAccSafePwd                       	*LPACCSAFEPWD;

struct tagIPBlock;
typedef struct tagIPBlock                          	IPBLOCK;
typedef struct tagIPBlock                          	*LPIPBLOCK;

struct tagAccountArchive;
typedef struct tagAccountArchive                   	ACCOUNTARCHIVE;
typedef struct tagAccountArchive                   	*LPACCOUNTARCHIVE;

struct tagAccountLastLogout;
typedef struct tagAccountLastLogout                	ACCOUNTLASTLOGOUT;
typedef struct tagAccountLastLogout                	*LPACCOUNTLASTLOGOUT;

struct tagAccountRoleWorldID;
typedef struct tagAccountRoleWorldID               	ACCOUNTROLEWORLDID;
typedef struct tagAccountRoleWorldID               	*LPACCOUNTROLEWORLDID;

struct tagAccountUinFlag;
typedef struct tagAccountUinFlag                   	ACCOUNTUINFLAG;
typedef struct tagAccountUinFlag                   	*LPACCOUNTUINFLAG;

struct tagAccountSilenceEndTime;
typedef struct tagAccountSilenceEndTime            	ACCOUNTSILENCEENDTIME;
typedef struct tagAccountSilenceEndTime            	*LPACCOUNTSILENCEENDTIME;

struct tagAccountFreezeEndTime;
typedef struct tagAccountFreezeEndTime             	ACCOUNTFREEZEENDTIME;
typedef struct tagAccountFreezeEndTime             	*LPACCOUNTFREEZEENDTIME;

struct tagAccountActiveKey;
typedef struct tagAccountActiveKey                 	ACCOUNTACTIVEKEY;
typedef struct tagAccountActiveKey                 	*LPACCOUNTACTIVEKEY;

struct tagUpdatePasswd;
typedef struct tagUpdatePasswd                     	UPDATEPASSWD;
typedef struct tagUpdatePasswd                     	*LPUPDATEPASSWD;

struct tagUpdateFirstLoginCltType;
typedef struct tagUpdateFirstLoginCltType          	UPDATEFIRSTLOGINCLTTYPE;
typedef struct tagUpdateFirstLoginCltType          	*LPUPDATEFIRSTLOGINCLTTYPE;

struct tagUpdateAccount;
typedef struct tagUpdateAccount                    	UPDATEACCOUNT;
typedef struct tagUpdateAccount                    	*LPUPDATEACCOUNT;

struct tagAccountQuickUpdate;
typedef struct tagAccountQuickUpdate               	ACCOUNTQUICKUPDATE;
typedef struct tagAccountQuickUpdate               	*LPACCOUNTQUICKUPDATE;

struct tagAccountBirthdayUpdate;
typedef struct tagAccountBirthdayUpdate            	ACCOUNTBIRTHDAYUPDATE;
typedef struct tagAccountBirthdayUpdate            	*LPACCOUNTBIRTHDAYUPDATE;

struct tagAccountAuthInfo;
typedef struct tagAccountAuthInfo                  	ACCOUNTAUTHINFO;
typedef struct tagAccountAuthInfo                  	*LPACCOUNTAUTHINFO;

struct tagUpdatePasswdCard;
typedef struct tagUpdatePasswdCard                 	UPDATEPASSWDCARD;
typedef struct tagUpdatePasswdCard                 	*LPUPDATEPASSWDCARD;

struct tagAccountValidPasswd;
typedef struct tagAccountValidPasswd               	ACCOUNTVALIDPASSWD;
typedef struct tagAccountValidPasswd               	*LPACCOUNTVALIDPASSWD;

struct tagAccountRole;
typedef struct tagAccountRole                      	ACCOUNTROLE;
typedef struct tagAccountRole                      	*LPACCOUNTROLE;

struct tagAccountRoleName;
typedef struct tagAccountRoleName                  	ACCOUNTROLENAME;
typedef struct tagAccountRoleName                  	*LPACCOUNTROLENAME;

struct tagAccountRoleFirstLogin;
typedef struct tagAccountRoleFirstLogin            	ACCOUNTROLEFIRSTLOGIN;
typedef struct tagAccountRoleFirstLogin            	*LPACCOUNTROLEFIRSTLOGIN;

struct tagAccountRoleDelTime;
typedef struct tagAccountRoleDelTime               	ACCOUNTROLEDELTIME;
typedef struct tagAccountRoleDelTime               	*LPACCOUNTROLEDELTIME;

struct tagAccountRoleOnline;
typedef struct tagAccountRoleOnline                	ACCOUNTROLEONLINE;
typedef struct tagAccountRoleOnline                	*LPACCOUNTROLEONLINE;

struct tagAccountRoleLogout;
typedef struct tagAccountRoleLogout                	ACCOUNTROLELOGOUT;
typedef struct tagAccountRoleLogout                	*LPACCOUNTROLELOGOUT;

struct tagBillData;
typedef struct tagBillData                         	BILLDATA;
typedef struct tagBillData                         	*LPBILLDATA;

struct tagOnlineReCord;
typedef struct tagOnlineReCord                     	ONLINERECORD;
typedef struct tagOnlineReCord                     	*LPONLINERECORD;

struct tagLogRoleLogin;
typedef struct tagLogRoleLogin                     	LOGROLELOGIN;
typedef struct tagLogRoleLogin                     	*LPLOGROLELOGIN;

struct tagLogMapRoleNum;
typedef struct tagLogMapRoleNum                    	LOGMAPROLENUM;
typedef struct tagLogMapRoleNum                    	*LPLOGMAPROLENUM;

struct tagLogRoleNew;
typedef struct tagLogRoleNew                       	LOGROLENEW;
typedef struct tagLogRoleNew                       	*LPLOGROLENEW;

struct tagLogRoleLogout;
typedef struct tagLogRoleLogout                    	LOGROLELOGOUT;
typedef struct tagLogRoleLogout                    	*LPLOGROLELOGOUT;

struct tagLogRoleShop;
typedef struct tagLogRoleShop                      	LOGROLESHOP;
typedef struct tagLogRoleShop                      	*LPLOGROLESHOP;

struct tagLogRoleTask;
typedef struct tagLogRoleTask                      	LOGROLETASK;
typedef struct tagLogRoleTask                      	*LPLOGROLETASK;

struct tagLogRoleChat;
typedef struct tagLogRoleChat                      	LOGROLECHAT;
typedef struct tagLogRoleChat                      	*LPLOGROLECHAT;

struct tagLogRoleClan;
typedef struct tagLogRoleClan                      	LOGROLECLAN;
typedef struct tagLogRoleClan                      	*LPLOGROLECLAN;

struct tagLogRoleDel;
typedef struct tagLogRoleDel                       	LOGROLEDEL;
typedef struct tagLogRoleDel                       	*LPLOGROLEDEL;

struct tagLogRoleRespact;
typedef struct tagLogRoleRespact                   	LOGROLERESPACT;
typedef struct tagLogRoleRespact                   	*LPLOGROLERESPACT;

struct tagLogRoleDesignation;
typedef struct tagLogRoleDesignation               	LOGROLEDESIGNATION;
typedef struct tagLogRoleDesignation               	*LPLOGROLEDESIGNATION;

struct tagLogRoleFengyin;
typedef struct tagLogRoleFengyin                   	LOGROLEFENGYIN;
typedef struct tagLogRoleFengyin                   	*LPLOGROLEFENGYIN;

struct tagLogMailData;
typedef struct tagLogMailData                      	LOGMAILDATA;
typedef struct tagLogMailData                      	*LPLOGMAILDATA;

struct tagLogRoleMail;
typedef struct tagLogRoleMail                      	LOGROLEMAIL;
typedef struct tagLogRoleMail                      	*LPLOGROLEMAIL;

struct tagExchgPetData;
typedef struct tagExchgPetData                     	EXCHGPETDATA;
typedef struct tagExchgPetData                     	*LPEXCHGPETDATA;

struct tagLogExchgData;
typedef struct tagLogExchgData                     	LOGEXCHGDATA;
typedef struct tagLogExchgData                     	*LPLOGEXCHGDATA;

struct tagLogRoleExchg;
typedef struct tagLogRoleExchg                     	LOGROLEEXCHG;
typedef struct tagLogRoleExchg                     	*LPLOGROLEEXCHG;

struct tagLogStore;
typedef struct tagLogStore                         	LOGSTORE;
typedef struct tagLogStore                         	*LPLOGSTORE;

struct tagLogStallItem;
typedef struct tagLogStallItem                     	LOGSTALLITEM;
typedef struct tagLogStallItem                     	*LPLOGSTALLITEM;

struct tagLogStallPet;
typedef struct tagLogStallPet                      	LOGSTALLPET;
typedef struct tagLogStallPet                      	*LPLOGSTALLPET;

struct tagLogRoleStall;
typedef struct tagLogRoleStall                     	LOGROLESTALL;
typedef struct tagLogRoleStall                     	*LPLOGROLESTALL;

struct tagLogRoleStallBuy;
typedef struct tagLogRoleStallBuy                  	LOGROLESTALLBUY;
typedef struct tagLogRoleStallBuy                  	*LPLOGROLESTALLBUY;

struct tagLogMachiningArmData;
typedef struct tagLogMachiningArmData              	LOGMACHININGARMDATA;
typedef struct tagLogMachiningArmData              	*LPLOGMACHININGARMDATA;

struct tagLogRoleArmMachining;
typedef struct tagLogRoleArmMachining              	LOGROLEARMMACHINING;
typedef struct tagLogRoleArmMachining              	*LPLOGROLEARMMACHINING;

struct tagLogMosterDie;
typedef struct tagLogMosterDie                     	LOGMOSTERDIE;
typedef struct tagLogMosterDie                     	*LPLOGMOSTERDIE;

struct tagLogPlayerDie;
typedef struct tagLogPlayerDie                     	LOGPLAYERDIE;
typedef struct tagLogPlayerDie                     	*LPLOGPLAYERDIE;

struct tagLogRolePickItem;
typedef struct tagLogRolePickItem                  	LOGROLEPICKITEM;
typedef struct tagLogRolePickItem                  	*LPLOGROLEPICKITEM;

struct tagLogRoleDropItem;
typedef struct tagLogRoleDropItem                  	LOGROLEDROPITEM;
typedef struct tagLogRoleDropItem                  	*LPLOGROLEDROPITEM;

struct tagLogRolePet;
typedef struct tagLogRolePet                       	LOGROLEPET;
typedef struct tagLogRolePet                       	*LPLOGROLEPET;

struct tagLogPetSkillOne;
typedef struct tagLogPetSkillOne                   	LOGPETSKILLONE;
typedef struct tagLogPetSkillOne                   	*LPLOGPETSKILLONE;

struct tagLogPetDiathesisOne;
typedef struct tagLogPetDiathesisOne               	LOGPETDIATHESISONE;
typedef struct tagLogPetDiathesisOne               	*LPLOGPETDIATHESISONE;

struct tagLogPetAttrChg;
typedef struct tagLogPetAttrChg                    	LOGPETATTRCHG;
typedef struct tagLogPetAttrChg                    	*LPLOGPETATTRCHG;

struct tagLogRoleMapChg;
typedef struct tagLogRoleMapChg                    	LOGROLEMAPCHG;
typedef struct tagLogRoleMapChg                    	*LPLOGROLEMAPCHG;

struct tagLogRoleSkillChg;
typedef struct tagLogRoleSkillChg                  	LOGROLESKILLCHG;
typedef struct tagLogRoleSkillChg                  	*LPLOGROLESKILLCHG;

struct tagLogRoleDiathesisChg;
typedef struct tagLogRoleDiathesisChg              	LOGROLEDIATHESISCHG;
typedef struct tagLogRoleDiathesisChg              	*LPLOGROLEDIATHESISCHG;

struct tagLogRoleFairyChg;
typedef struct tagLogRoleFairyChg                  	LOGROLEFAIRYCHG;
typedef struct tagLogRoleFairyChg                  	*LPLOGROLEFAIRYCHG;

struct tagLogRoleRideChg;
typedef struct tagLogRoleRideChg                   	LOGROLERIDECHG;
typedef struct tagLogRoleRideChg                   	*LPLOGROLERIDECHG;

struct tagLogRoleGmCmd;
typedef struct tagLogRoleGmCmd                     	LOGROLEGMCMD;
typedef struct tagLogRoleGmCmd                     	*LPLOGROLEGMCMD;

struct tagLogRoleSnapshot;
typedef struct tagLogRoleSnapshot                  	LOGROLESNAPSHOT;
typedef struct tagLogRoleSnapshot                  	*LPLOGROLESNAPSHOT;

struct tagLogUseXp;
typedef struct tagLogUseXp                         	LOGUSEXP;
typedef struct tagLogUseXp                         	*LPLOGUSEXP;

struct tagLogGift;
typedef struct tagLogGift                          	LOGGIFT;
typedef struct tagLogGift                          	*LPLOGGIFT;

struct tagLogMediaGift;
typedef struct tagLogMediaGift                     	LOGMEDIAGIFT;
typedef struct tagLogMediaGift                     	*LPLOGMEDIAGIFT;

struct tagLogLtrGift;
typedef struct tagLogLtrGift                       	LOGLTRGIFT;
typedef struct tagLogLtrGift                       	*LPLOGLTRGIFT;

struct tagLogPworldTime;
typedef struct tagLogPworldTime                    	LOGPWORLDTIME;
typedef struct tagLogPworldTime                    	*LPLOGPWORLDTIME;

struct tagLogRoleGetMailGoods;
typedef struct tagLogRoleGetMailGoods              	LOGROLEGETMAILGOODS;
typedef struct tagLogRoleGetMailGoods              	*LPLOGROLEGETMAILGOODS;

struct tagLogRoleEnterPworld;
typedef struct tagLogRoleEnterPworld               	LOGROLEENTERPWORLD;
typedef struct tagLogRoleEnterPworld               	*LPLOGROLEENTERPWORLD;

struct tagLogRoleSecondarySkill;
typedef struct tagLogRoleSecondarySkill            	LOGROLESECONDARYSKILL;
typedef struct tagLogRoleSecondarySkill            	*LPLOGROLESECONDARYSKILL;

struct tagLogRoleDieDrop;
typedef struct tagLogRoleDieDrop                   	LOGROLEDIEDROP;
typedef struct tagLogRoleDieDrop                   	*LPLOGROLEDIEDROP;

struct tagLogTaskAwardItem;
typedef struct tagLogTaskAwardItem                 	LOGTASKAWARDITEM;
typedef struct tagLogTaskAwardItem                 	*LPLOGTASKAWARDITEM;

struct tagLogRoleSecSkillRecipe;
typedef struct tagLogRoleSecSkillRecipe            	LOGROLESECSKILLRECIPE;
typedef struct tagLogRoleSecSkillRecipe            	*LPLOGROLESECSKILLRECIPE;

struct tagLogAccLogin;
typedef struct tagLogAccLogin                      	LOGACCLOGIN;
typedef struct tagLogAccLogin                      	*LPLOGACCLOGIN;

struct tagLogAccLogout;
typedef struct tagLogAccLogout                     	LOGACCLOGOUT;
typedef struct tagLogAccLogout                     	*LPLOGACCLOGOUT;

struct tagLogRoleItemDrop;
typedef struct tagLogRoleItemDrop                  	LOGROLEITEMDROP;
typedef struct tagLogRoleItemDrop                  	*LPLOGROLEITEMDROP;

struct tagLogRolePworldAward;
typedef struct tagLogRolePworldAward               	LOGROLEPWORLDAWARD;
typedef struct tagLogRolePworldAward               	*LPLOGROLEPWORLDAWARD;

struct tagLogRolePworldCard;
typedef struct tagLogRolePworldCard                	LOGROLEPWORLDCARD;
typedef struct tagLogRolePworldCard                	*LPLOGROLEPWORLDCARD;

struct tagLogRoleBattleAward;
typedef struct tagLogRoleBattleAward               	LOGROLEBATTLEAWARD;
typedef struct tagLogRoleBattleAward               	*LPLOGROLEBATTLEAWARD;

struct tagLogRolePetCatch;
typedef struct tagLogRolePetCatch                  	LOGROLEPETCATCH;
typedef struct tagLogRolePetCatch                  	*LPLOGROLEPETCATCH;

struct tagLogRoleRecipeMake;
typedef struct tagLogRoleRecipeMake                	LOGROLERECIPEMAKE;
typedef struct tagLogRoleRecipeMake                	*LPLOGROLERECIPEMAKE;

struct tagLogWorldCitySiege;
typedef struct tagLogWorldCitySiege                	LOGWORLDCITYSIEGE;
typedef struct tagLogWorldCitySiege                	*LPLOGWORLDCITYSIEGE;

struct tagCDKeyTypeDef;
typedef struct tagCDKeyTypeDef                     	CDKEYTYPEDEF;
typedef struct tagCDKeyTypeDef                     	*LPCDKEYTYPEDEF;

struct tagCDKeyDef;
typedef struct tagCDKeyDef                         	CDKEYDEF;
typedef struct tagCDKeyDef                         	*LPCDKEYDEF;

struct tagCDKeyGet;
typedef struct tagCDKeyGet                         	CDKEYGET;
typedef struct tagCDKeyGet                         	*LPCDKEYGET;

struct tagBill;
typedef struct tagBill                             	BILL;
typedef struct tagBill                             	*LPBILL;

struct tagReduceBill;
typedef struct tagReduceBill                       	REDUCEBILL;
typedef struct tagReduceBill                       	*LPREDUCEBILL;

struct tagListBill;
typedef struct tagListBill                         	LISTBILL;
typedef struct tagListBill                         	*LPLISTBILL;

struct tagAddBillRecord;
typedef struct tagAddBillRecord                    	ADDBILLRECORD;
typedef struct tagAddBillRecord                    	*LPADDBILLRECORD;

struct tagDecBillRecord;
typedef struct tagDecBillRecord                    	DECBILLRECORD;
typedef struct tagDecBillRecord                    	*LPDECBILLRECORD;

struct tagGodCoinConsumeRecord;
typedef struct tagGodCoinConsumeRecord             	GODCOINCONSUMERECORD;
typedef struct tagGodCoinConsumeRecord             	*LPGODCOINCONSUMERECORD;

struct tagShadowAccData;
typedef struct tagShadowAccData                    	SHADOWACCDATA;
typedef struct tagShadowAccData                    	*LPSHADOWACCDATA;

struct tagAccShare;
typedef struct tagAccShare                         	ACCSHARE;
typedef struct tagAccShare                         	*LPACCSHARE;

struct tagRoleDrop;
typedef struct tagRoleDrop                         	ROLEDROP;
typedef struct tagRoleDrop                         	*LPROLEDROP;

struct tagRoleDropName;
typedef struct tagRoleDropName                     	ROLEDROPNAME;
typedef struct tagRoleDropName                     	*LPROLEDROPNAME;

struct tagGMIPMacLimit;
typedef struct tagGMIPMacLimit                     	GMIPMACLIMIT;
typedef struct tagGMIPMacLimit                     	*LPGMIPMACLIMIT;

union tagMetaData;
typedef union  tagMetaData                         	METADATA;
typedef union  tagMetaData                         	*LPMETADATA;

struct tagMetaInfo;
typedef struct tagMetaInfo                         	METAINFO;
typedef struct tagMetaInfo                         	*LPMETAINFO;

struct tagAccDBFailedOpLog;
typedef struct tagAccDBFailedOpLog                 	ACCDBFAILEDOPLOG;
typedef struct tagAccDBFailedOpLog                 	*LPACCDBFAILEDOPLOG;

struct tagAccPasswdRes;
typedef struct tagAccPasswdRes                     	ACCPASSWDRES;
typedef struct tagAccPasswdRes                     	*LPACCPASSWDRES;

struct tagBiDBFailedOpLog;
typedef struct tagBiDBFailedOpLog                  	BIDBFAILEDOPLOG;
typedef struct tagBiDBFailedOpLog                  	*LPBIDBFAILEDOPLOG;

struct tagljy_member_profile;
typedef struct tagljy_member_profile               	LJY_MEMBER_PROFILE;
typedef struct tagljy_member_profile               	*LPLJY_MEMBER_PROFILE;



/*   Define structs/unions.   */

#pragma pack(1)

struct tagNameID
{
    tdr_ulonglong GID;                            
    char Name[NAME_LEN];                 
    unsigned int NewTime;                        
    char NameType;                       
};

struct tagChgNameID
{
    tdr_ulonglong GID;                            
    char Name[NAME_LEN];                 
};

struct tagNameIDType
{
    tdr_ulonglong GID;                            
    char NameType;                       
};

struct tagBuddyInfo
{
    tdr_ulonglong RoleID;                         
    unsigned char Head;                           
    unsigned char Career;                         
    unsigned char Level;                          
    unsigned char Hair;                            	/*  Ver.99  */
    char Emotion[EMOTION_LEN];            	/*   心情签名 */
    unsigned int ClanID;                          	/*  Ver.86  */
    char ClanName[NAME_LEN];              	/*  Ver.86  */
    unsigned char Face;                            	/*  Ver.99  */
};

struct tagBuddy
{
    unsigned short BuddyNum;                       
    unsigned short Res;                            
    BUDDYINFO BuddyInfos[MAX_BUDDY];          
};

struct tagRelation
{
    tdr_ulonglong GID;                            
    BUDDY Buddy;                          
};

struct tagClan
{
    CLANPROF ClanProf;                        	/*   概要 */
    CLANBRIEF ClanBrief;                       	/*   简介 */
    CLANINNER ClanInner;                       	/*   对内部公会成员可见 */
    CLANCITY ClanCity;                        	/*  Ver.119 公会城市信息 */
    CLANCORE ClanCore;                        	/*  Ver.119 公会核心信息，秘不公开 */
    int ClanDestroyTime;                 	/*   强制解散计时 */
    int ClanActiveTime;                  	/*   最近的一次公会成员登录时间 */
    CLANADVANCE ClanAdvance;                     	/*  Ver.405 公会高级信息,科技制造仓库相关 */
    CLANBOON ClanBoon;                        	/*  Ver.2000 福利 */
    CLANPET ClanPet;                         	/*  Ver.2289 公会宠物 */
};

struct tagMailEntry
{
    MAIL Mail;                           
};

struct tagAccount
{
    int Uin;                            
    int UinFlag;                         	/*   帐号标记，例如vip用户等 */
    char Pass9Account[ACCOUNT_LOGIN_NAME_LEN];
    char PasswdHash[16];                  	/*   用户密码的二次hash:md5(md5(pwd)) */
    char BirthDay[BIRTHDAY_LEN];          	/*   生日 */
    char Gender;                          	/*  Ver.119 性别 */
    char RegisterTs[REGISTER_TIME_LEN];   	/*  Ver.119 注册时间 e.g. 201008181302 */
    int SilenceEndTime;                  	/*  Ver.104 禁言结束时间 */
    int SilenceStartTime;                	/*  Ver.181 什么时候开始禁言的 */
    char FreezeReason[FREEZE_REASON_LEN]; 	/*  Ver.119 冻结,封停原因 */
    int FreezeStartTime;                 	/*  Ver.119 冻结开始时间 */
    int FreezeEndTime;                   	/*  Ver.104 冻结结束时间 */
    int LastLoginTime;                   	/*  Ver.168 最后一次登录时间 */
    unsigned int LastLoginIP;                     	/*  Ver.168 最后一次登录IP */
    int AccountCreateTime;               	/*  Ver.265 账号创建时间 */
    int LastLoginWorldID;                	/*  Ver.358 最后下线服务器ID */
    char SafePwd[SAFE_LOCK_PASSWD_LEN];   	/*  Ver.840 安全锁 */
    int QuickStatus;                     	/*  Ver.1220 快速试玩状态 0普通帐号 1快速试玩帐号 2 转正的帐号 QUICK_STATUS_TYPE Bind Macrosgroup:QUICK_STATUS_TYPE,*/
    int ActiveKeyStatus;                 	/*  Ver.1386 激活码状态 0未激活 1已激活 ACTIVE_KEY_STATUS_TYPE */
    int LastLogout;                      	/*  Ver.1401 最后退出时间 */
    int FirstLoginCltType;               	/*  Ver.1680 第一登录时的客户端类型 */
    int TuiGuangNum;                     	/*  Ver.1680 推广码 */
    int TopTuiGuangNum;                  	/*  Ver.1680 上一级推广码 */
    PASSWDCARD PasswdCard;                      	/*  Ver.1792 密保卡 */
};

struct tagActive
{
    char ActiveCode[ACTIVE_LEN];         
    int IsActive;                        	/*   此鸡和马是否使用过 */
    char Pass9Account[ACCOUNT_LOGIN_NAME_LEN];
};

/* 激活码和帐号礼包关系对应表 */
struct tagActiveCodeGiftDef
{
    char PreCode[16];                     	/*   激活码前缀 */
    char Comment[32];                     	/*   描述信息 */
    char GiftName[32];                    	/*   礼包名 */
    int ItemID;                          	/*   物品ID */
    int ItemNum;                         	/*   物品数量 */
};

struct tagAccSafePwd
{
    int Uin;                            
    char SafePwd[SAFE_LOCK_PASSWD_LEN];   	/*   安全锁 */
};

struct tagIPBlock
{
    int IP;                             
    int Mask;                           
    int BlockEnd;                        	/*   冻结结束时间,-1表示永久冻结 */
};

struct tagAccountArchive
{
    int Uin;                            
    int LastLoginTime;                   	/*   最后一次登录时间 */
    unsigned int LastLoginIP;                     	/*   最后一次登录IP */
};

struct tagAccountLastLogout
{
    int Uin;                            
    int LastLogout;                      	/*   最后退出时间 */
};

struct tagAccountRoleWorldID
{
    int Uin;                            
    int LastLoginWorldID;                	/*   最后下线服务器ID */
};

struct tagAccountUinFlag
{
    int Uin;                            
    int UinFlag;                         	/*   帐号标记，例如vip用户等 */
};

struct tagAccountSilenceEndTime
{
    int Uin;                            
    int SilenceEndTime;                  	/*   禁言结束时间 */
    int SilenceStartTime;                	/*  Ver.181 什么时候开始禁言的 */
};

struct tagAccountFreezeEndTime
{
    int Uin;                            
    int FreezeEndTime;                   	/*   冻结结束时间 */
    int FreezeStartTime;                 	/*  Ver.121 冻结开始时间 */
    char FreezeReason[FREEZE_REASON_LEN]; 	/*  Ver.121 冻结,封停原因 */
};

/* 激活码状态 */
struct tagAccountActiveKey
{
    int Uin;                             	/*   帐号Uin */
    int ActiveKeyStatus;                 	/*   激活状态 0未激活 1已激活 ACTIVE_KEY_STATUS_TYPE */
};

struct tagUpdatePasswd
{
    int Uin;                            
    char PasswdHash[16];                  	/*   用户密码的二次hash:md5(md5(pwd)) */
};

struct tagUpdateFirstLoginCltType
{
    int Uin;                            
    int FirstLoginCltType;               	/*   第一登录时的客户端类型 */
};

struct tagUpdateAccount
{
    int Uin;                            
    char Pass9Account[ACCOUNT_LOGIN_NAME_LEN];
    char BirthDay[BIRTHDAY_LEN];          	/*   生日 */
    char Gender;                          	/*   性别 */
};

struct tagAccountQuickUpdate
{
    int Uin;                            
    char Pass9Account[ACCOUNT_LOGIN_NAME_LEN];
    int UinFlag;                         	/*   帐号标记，例如vip用户等 */
    char PasswdHash[16];                  	/*   用户密码的二次hash:md5(md5(pwd)) */
    int QuickStatus;                     	/*   快速试玩状态 0普通帐号 1快速试玩帐号 2 转正的帐号 QUICK_STATUS_TYPE Bind Macrosgroup:QUICK_STATUS_TYPE,*/
    char BirthDay[BIRTHDAY_LEN];          	/*  Ver.1225 生日 */
    char Gender;                          	/*  Ver.1225 性别 */
};

struct tagAccountBirthdayUpdate
{
    int Uin;                            
    char BirthDay[BIRTHDAY_LEN];          	/*   生日 */
    char Gender;                          	/*   性别 */
};

struct tagAccountAuthInfo
{
    char Pass9Account[ACCOUNT_LOGIN_NAME_LEN];
    int Uin;                            
    int UinFlag;                         	/*   帐号标记，例如vip用户等 */
    char BirthDay[BIRTHDAY_LEN];          	/*   生日 */
    int SilenceEndTime;                  	/*   禁言结束时间 */
    char PasswdHash[16];                  	/*   用户密码的二次hash:md5(md5(pwd)) */
};

struct tagUpdatePasswdCard
{
    int Uin;                            
    PASSWDCARD PasswdCard;                      	/*   密保卡 */
};

/* 密码状态更新 */
struct tagAccountValidPasswd
{
    int Uin;                             	/*   帐号Uin */
    int UinFlag;                         	/*   帐号标记，例如vip用户等 */
    int ActiveKeyStatus;                 	/*   激活状态 0未激活 1已激活 ACTIVE_KEY_STATUS_TYPE */
    PASSWDCARD PasswdCard;                      	/*   密保卡 */
    char PasswdHash[16];                  	/*   用户密码的二次hash:md5(md5(pwd)) */
};

struct tagAccountRole
{
    tdr_ulonglong RoleWID;                         	/*   角色唯一ID */
    int Uin;                            
    char Pass9Account[ACCOUNT_LOGIN_NAME_LEN];
    char RoleName[ROLE_NAME_LEN];         	/*   角色名，索引 */
    int DelTime;                         	/*   删除标记 */
    int RegionID;                        	/*   区ID */
    int ServerID;                        	/*   服ID */
    int CreateTime;                      	/*  Ver.175 角色创建时间 */
    int OnlineFlag;                      	/*  Ver.265 在线标记 1-online  0-outline */
    char MacAddr[MAC_ADDR_LEN];           	/*  Ver.1639 Mac地址 */
    int Level;                           	/*  Ver.1743 等级 */
    int LastLogout;                      	/*  Ver.1743  */
    unsigned int LastLoginIP;                     	/*  Ver.1743  */
    int FirstLoginTime;                  	/*  Ver.1866  */
    int SecondLoginTime;                 	/*  Ver.1866  */
};

struct tagAccountRoleName
{
    tdr_ulonglong RoleWID;                         	/*   角色唯一ID */
    char RoleName[ROLE_NAME_LEN];         	/*   角色名，索引 */
};

struct tagAccountRoleFirstLogin
{
    tdr_ulonglong RoleWID;                         	/*   角色唯一ID */
    int FirstLoginTime;                 
    int SecondLoginTime;                
};

struct tagAccountRoleDelTime
{
    tdr_ulonglong RoleWID;                         	/*   角色唯一ID */
    int DelTime;                         	/*   删除标记 */
};

struct tagAccountRoleOnline
{
    tdr_ulonglong RoleWID;                         	/*   角色唯一ID */
    int OnlineFlag;                      	/*   在线标记 1-online  0-outline */
    char MacAddr[MAC_ADDR_LEN];           	/*  Ver.1639 Mac地址 */
    unsigned int LastLoginIP;                     	/*  Ver.1743  */
};

struct tagAccountRoleLogout
{
    tdr_ulonglong RoleWID;                         	/*   角色唯一ID */
    int OnlineFlag;                      	/*   在线标记 1-online  0-outline */
    int Level;                           	/*  Ver.1743 等级 */
    int LastLogout;                      	/*  Ver.1743 最后退出的时间 */
};

struct tagBillData
{
    char Pass9Account[ACCOUNT_LOGIN_NAME_LEN];
};

struct tagOnlineReCord
{
    unsigned int RegionID;                        	/*  Ver.182  */
    unsigned int WorldID;                        
    unsigned int MudOnlineNum;                    	/*  Ver.648 Mud在线人数 */
    unsigned int OnlineNum;                       	/*   在线人数 */
    char MapInfo[MAX_MAP_INFO];           	/*  Ver.372 地图人数信息 */
    tdr_datetime_t Time;                            	/*   记录时间 */
};

struct tagLogRoleLogin
{
    OPROLELOGIN LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogMapRoleNum
{
    OPMAPROLENUM LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleNew
{
    OPROLENEW LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleLogout
{
    int Uin;                             	/*  Ver.151  */
    char AccountLoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.111  */
    tdr_ulonglong RoleID;                         
    char RoleName[ROLE_NAME_LEN];        
    int Duration;                        	/*   此次登录的在线时长 */
    char IP[IPV4_LEN];                    	/*  Ver.111  */
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleShop
{
    int Uin;                             	/*  Ver.151  */
    char LoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    tdr_ulonglong RoleID;                         
    char RoleName[ROLE_NAME_LEN];        
    int ShopAct;                         	/*    Bind Macrosgroup:OPLOG_SHOP,*/
    OPSHOPDATA OldShopData;                    
    OPSHOPDATA NowShopData;                    
    OPGOODSDATA GoodsData;                      
    ITEMDEC ItemDec;                         	/*  Ver.911  */
    int ClanConDec;                      	/*  Ver.911  */
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleTask
{
    OPROLETASK LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleChat
{
    int Uin;                             	/*  Ver.151  */
    char LoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    ROLEMEMBER RoleInfo;                        	/*   角色信息 */
    unsigned char ChatType;                        	/*   聊天类型 */
    char ToName[NAME_LEN];                	/*   发送给谁 */
    char Content[OPLOG_CLT_MSG_LEN];      	/*   内容 */
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleClan
{
    OPROLECLAN LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleDel
{
    OPROLEDEL LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleRespact
{
    OPROLERESPACT LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleDesignation
{
    OPROLEDESIGNATION LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleFengyin
{
    int Type;                            	/*   0-封印 1-解封 */
    OPROLEINFO RoleInfo;                        	/*   被封印者角色信息 */
    OPROLEINFO FengyinInfo;                     	/*   封印者角色信息 */
    LOGGRIDDATA LogArm;                          	/*   装备信息 */
    int UnFengyinUse;                    	/*   消耗金卷,type为1有效 */
    tdr_datetime_t LogTime;                        
};

struct tagLogMailData
{
    tdr_ulonglong WID;                            
    int Flags;                          
    char To[ROLE_NAME_LEN_SAVE];         
    char Send[ROLE_NAME_LEN_SAVE];       
    char Title[SHORT_DESC_LEN];          
    unsigned char ItemNum;                        
    LOGGRIDDATA Items[MAIL_MAX_ITEM];           
    unsigned int Money;                          
};

struct tagLogRoleMail
{
    int Uin;                             	/*  Ver.151  */
    char LoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    tdr_ulonglong RoleID;                         
    char RoleName[ROLE_NAME_LEN_SAVE];   
    unsigned char Operation;                      
    LOGMAILDATA RoleMailData;                   
    tdr_datetime_t LogTime;                        
};

struct tagExchgPetData
{
    unsigned short PetID;                          
    tdr_ulonglong WID;                             	/*  Ver.141 宠物唯一标识 */
    unsigned int Exp;                             	/*  Ver.141 宠物经验值 */
    unsigned int MaxHP;                           	/*  Ver.141 最大HP */
    unsigned char Level;                          
    unsigned char PetGenius;                       	/*  Ver.141 资质 Bind Macrosgroup:PET_GENIUS_TYPE,*/
    unsigned char BreedNum;                        	/*  Ver.141 繁殖的次数 */
    unsigned char Hierarchy;                       	/*  Ver.141 第几代 */
    unsigned char StrengthenLevel;                 	/*  Ver.141 强化等级 */
    int StrengthenInfo[MAX_PET_STRENGTHEN_LEVEL]; 	/*  Ver.141 强化信息 */
};

struct tagLogExchgData
{
    int Money;                          
    unsigned char ItemNum;                        
    EXCHGGRIDDATA RoleGrid[EXCHG_MAX_ITEM_NUM];   
    unsigned char PetNum;                         
    EXCHGPETDATA RolePet[EXCHG_MAX_PET_NUM];     
};

struct tagLogRoleExchg
{
    tdr_ulonglong EventLogWID;                     	/*  Ver.969 事件流水号 */
    int Uin;                             	/*  Ver.151  */
    char LoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    tdr_ulonglong RoleID;                         
    char RoleName[ROLE_NAME_LEN];        
    int ExchgObjUin;                     	/*  Ver.151  */
    char ExchgObjLoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    tdr_ulonglong ExchgObjRoleID;                 
    char ExchgObjName[ROLE_NAME_LEN];    
    LOGEXCHGDATA ExchgIn;                        
    LOGEXCHGDATA ExchgOut;                       
    tdr_datetime_t LogTime;                        
};

struct tagLogStore
{
    char Type;                            	/*   0-开店1-上架2-下架 3-卖 4-关店5-注入资金 */
    int StoreID;                        
    char StoreName[NAME_LEN];            
    char StoreOwnerName[NAME_LEN];       
    tdr_ulonglong StoreOwnerRoleID;               
    char BuyName[NAME_LEN];              
    tdr_ulonglong BuyRoleID;                      
    int Money;                          
    int Num;                            
    int PreMoney;                       
    int CurrMoney;                      
    EXCHGGRIDDATA Grid;                           
    tdr_datetime_t LogTime;                         	/*   入库时间 */
};

struct tagLogStallItem
{
    int ItemID;                         
    tdr_ulonglong WID;                            
    unsigned int Price;                          
    int Num;                             	/*  Ver.831  */
};

struct tagLogStallPet
{
    tdr_ulonglong WID;                             	/*  Ver.151  */
    unsigned int PetID;                           	/*  Ver.151  */
    unsigned int PetLv;                           	/*  Ver.151  */
    unsigned int Price;                          
};

struct tagLogRoleStall
{
    int Uin;                             	/*  Ver.151  */
    char LoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    tdr_ulonglong StallRoleID;                    
    char StallOwner[ROLE_NAME_LEN];      
    int StallFlag;                       	/*  Ver.726  */
    unsigned char ItemNum;                        
    LOGSTALLITEM StallItem[STALL_MAX_ITEM];      
    unsigned char PetNum;                         
    LOGSTALLPET StallPet[STALL_MAX_PET];        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleStallBuy
{
    int StallUin;                        	/*  Ver.151  */
    char OwnerLoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    tdr_ulonglong StallRoleID;                    
    char StallOwner[ROLE_NAME_LEN];      
    int Uin;                             	/*  Ver.151  */
    char BuyLoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    tdr_ulonglong RoleID;                         
    char RoleName[ROLE_NAME_LEN];        
    unsigned int Price;                          
    unsigned char Type;                            	/*    Bind Macrosgroup:STALL_TYPE,*/
    LOGGRIDDATA RoleGrid;                        	/* STALL_TYPE_ITEM,   */
    LOGROLEPETDATA RolePet;                         	/* STALL_TYPE_PET,   */
    tdr_datetime_t LogTime;                        
};

struct tagLogMachiningArmData
{
    LOGGRIDDATA OldRoleArm;                     
    LOGGRIDDATA NewRoleArm;                     
};

struct tagLogRoleArmMachining
{
    int Uin;                             	/*  Ver.151  */
    char LoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    tdr_ulonglong RoleID;                         
    char RoleName[ROLE_NAME_LEN];        
    unsigned char MachiningActType;                	/*    Bind Macrosgroup:OP_MACHINING_TYPE,*/
    MACHINNGEXPENDDATA ExpendData;                     
    LOGMACHININGARMDATA ArmData;                        
    unsigned char SuccFlag;                        	/*   成功失败标志，0失败 1成功 */
    ITEMDEC ObtainItem[MAX_OBTAIN];          	/*  Ver.911 加工后获得新的道具，宝石升级操作获得的物品 */
    tdr_datetime_t LogTime;                        
};

struct tagLogMosterDie
{
    tdr_ulonglong EventLogWID;                     	/*  Ver.969 事件流水号 */
    unsigned int MosterID;                        	/*   被干死的怪物ID */
    unsigned char KillerType;                      	/*   怪物是被哪种类型的东西干死 */
    int PlayerUin;                       	/*  Ver.180  */
    char PlayerLoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    ROLEMEMBER PlayerInfo;                     
    MONSTERINFO MonsterInfo;                    
    ROLEMEMBER PetInfo;                        
    unsigned int MapID;                           	/*   事发地图 */
    RESPOS Pos;                             	/*   事发地点 */
    unsigned char SubType;                         	/*  Ver.149  */
    int PetID;                           	/*  Ver.746 宠物ID|被宠物杀死有效 */
    int LifeTime;                        	/*  Ver.954 生存了多久 */
    tdr_datetime_t LogTime;                        
};

struct tagLogPlayerDie
{
    tdr_ulonglong EventLogWID;                     	/*  Ver.969 事件流水号 */
    int PlayerUin;                      
    char PlayerLoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    ROLEMEMBER PlayerInfo;                      	/*   受害人信息 */
    unsigned char KillerType;                      	/*   被哪种类型的东西干死 */
    int KillerUin;                       	/*  Ver.180  */
    char KillerLoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    ROLEMEMBER KillerPlayerInfo;               
    MONSTERINFO KillerMonsterInfo;              
    ROLEMEMBER KillerPetInfo;                  
    unsigned int MapID;                           	/*   事发地图 */
    RESPOS Pos;                             	/*   事发地点 */
    int PlayerLevel;                     	/*  Ver.298 受害人等级 */
    int Money;                           	/*  Ver.746 掉落银币 */
    int KillerLv;                        	/*  Ver.746 Killer等级|被人和宠物杀死有效 */
    int KillerCareer;                    	/*  Ver.1401  */
    int Career;                          	/*  Ver.1401  */
    int PetID;                           	/*  Ver.746 宠物ID|被宠物杀死有效 */
    int Exp;                             	/*  Ver.746  */
    tdr_datetime_t LogTime;                        
};

struct tagLogRolePickItem
{
    int Uin;                             	/*  Ver.151  */
    char LoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    ROLEMEMBER RoleInfo;                        	/*   拾取物品的角色 */
    unsigned char How;                             	/*   怎么拾取这件物品 Bind Macrosgroup:OPLOG_HOWTO_PICK,*/
    LOGGRIDDATA Items;                           	/*   拾取的物品 */
    int Map;                             	/*  Ver.474 地图 */
    int X;                               	/*  Ver.474 坐标 */
    int Y;                               	/*  Ver.474 坐标 */
    int RoleCareer;                      	/*  Ver.474 角色职业 */
    int CareerLimit;                     	/*  Ver.474 职业限制 */
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleDropItem
{
    tdr_ulonglong EventLogWID;                     	/*  Ver.969 事件流水号 */
    int DropType;                       
    unsigned int DropMap;                        
    RESPOS DropPos;                        
    LOGGRIDDATA LogDropItem;                    
    int FromType;                        	/*  Ver.675 从什么身上掉落出来 0 未知(脚本) 1 角色 2 怪物 */
    tdr_ulonglong FromID;                          	/*  Ver.675 怪物ID或者RoleID */
    char FromName[RES_NAME_LEN];          	/*  Ver.675  */
    tdr_datetime_t LogTime;                        
};

struct tagLogRolePet
{
    tdr_ulonglong EventLogWID;                     	/*  Ver.969 事件流水号 */
    int Uin;                             	/*  Ver.151  */
    char LoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    ROLEMEMBER RoleInfo;                        	/*   角色信息 */
    unsigned char Event;                           	/*   事件 Bind Macrosgroup:OPLOG_PET_OP,*/
    LOGROLEPETDATA PetInfo;                         	/*   宠物信息 */
    ITEMDEC GetItem;                         	/*  Ver.935 放生获得的道具信息 */
    ITEMDEC ItemDec;                         	/*  Ver.935  */
    int Money;                           	/*  Ver.935 消耗的金钱 */
    PETSTRENINFO PetStrenInfo;                    	/*  Ver.987 强化信息 */
    tdr_datetime_t LogTime;                        
};

struct tagLogPetSkillOne
{
    unsigned short SkillID;                        
    unsigned char SkillLevel;                     
};

struct tagLogPetDiathesisOne
{
    unsigned short DiathesisID;                    
    unsigned char Level;                          
};

struct tagLogPetAttrChg
{
    int OwnerUin;                       
    char OwnerLoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    ROLEMEMBER OwnerInfo;                      
    unsigned char PetActType;                      	/*    Bind Macrosgroup:OP_PET_ATTR_CHG,*/
    unsigned short ActObjID;                       
    LOGROLEPETDATA PetInfo;                         	/*   宠物信息 */
    ITEMDEC ItemDec;                         	/*  Ver.1180 扣除道具 */
    USEMONEY UseMoney;                        	/*  Ver.1180 消耗金钱 */
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleMapChg
{
    int Uin;                            
    char LoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    ROLEMEMBER RoleInfo;                        	/*   角色信息 */
    int Lvl;                             	/*  Ver.1401  */
    unsigned int MapID;                           	/*   当前地图 */
    RESPOS Pos;                             	/*   当前地点 */
    unsigned int PreMapID;                        	/*   改变前地图 */
    RESPOS PrePos;                          	/*   改变前地点 */
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleSkillChg
{
    OPROLESKILLCHG LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleDiathesisChg
{
    OPROLEDIATHESISCHG LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleFairyChg
{
    OPFAIRY LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleRideChg
{
    OPROLERIDE LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleGmCmd
{
    OPGMCMD LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleSnapshot
{
    OPROLESNAPSHOT LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogUseXp
{
    OPUSEXPSKILL LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogGift
{
    OPGIFT LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogMediaGift
{
    OPMEDIAGIFT LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogLtrGift
{
    OPLTRGIFT LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogPworldTime
{
    OPPWORLDTIME LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleGetMailGoods
{
    int Uin;                             	/*  Ver.180  */
    char LoginName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.180  */
    ROLEMEMBER RoleInfo;                       
    tdr_ulonglong MailWID;                        
    unsigned char ItemNum;                        
    LOGGRIDDATA Items[MAIL_MAX_ITEM];           
    unsigned int Money;                          
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleEnterPworld
{
    int Uin;                            
    char LoginName[ACCOUNT_LOGIN_NAME_LEN];
    ROLEMEMBER RoleInfo;                        	/*   角色信息 */
    int RoleLevel;                       	/*   角色等级 */
    int PworldID;                        	/*   副本ID */
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleSecondarySkill
{
    OPROLESECONDARYSKILL LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleDieDrop
{
    tdr_ulonglong EventLogWID;                     	/*  Ver.969 事件流水号 */
    int Uin;                            
    char LoginName[ACCOUNT_LOGIN_NAME_LEN];
    ROLEMEMBER RoleInfo;                        	/*   角色信息 */
    int DropNum;                        
    LOGGRIDDATA DropItem[DIE_DROP_ITEM_NUM];    
    tdr_datetime_t LogTime;                        
};

struct tagLogTaskAwardItem
{
    tdr_ulonglong EventLogWID;                     	/*  Ver.969 事件流水号 */
    OPROLEINFO RoleInfo;                       
    int TaskID;                         
    int AwardNum;                       
    LOGGRIDDATA AwardItem[OP_MAX_TASK_AWARD_ITEM];
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleSecSkillRecipe
{
    OPROLESECSKILLRECIPE LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogAccLogin
{
    OPACCLOGIN LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogAccLogout
{
    OPACCLOGOUT LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleItemDrop
{
    int Uin;                             	/*   帐号Uin */
    ROLEMEMBER RoleInfo;                        	/*   角色信息 */
    char Pass9Account[ACCOUNT_LOGIN_NAME_LEN]; 	/*   帐号名 */
    LOGGRIDDATA GridData;                        	/*   物品信息 */
    tdr_datetime_t LogTime;                         	/*   入库时间 */
};

struct tagLogRolePworldAward
{
    tdr_ulonglong EventLogWID;                     	/*  Ver.969 事件流水号 */
    int Uin;                             	/*   帐号Uin */
    ROLEMEMBER RoleInfo;                        	/*   角色信息 */
    char Pass9Account[ACCOUNT_LOGIN_NAME_LEN]; 	/*   帐号名 */
    int PworldID;                       
    int Money;                          
    int Exp;                            
    tdr_datetime_t LogTime;                        
};

struct tagLogRolePworldCard
{
    tdr_ulonglong EventLogWID;                     	/*  Ver.969 事件流水号 */
    int Uin;                             	/*   帐号Uin */
    ROLEMEMBER RoleInfo;                        	/*   角色信息 */
    char Pass9Account[ACCOUNT_LOGIN_NAME_LEN]; 	/*   帐号名 */
    int PworldID;                       
    int Money;                          
    int Exp;                            
    LOGGRIDDATA Item;                            	/*   物品信息 */
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleBattleAward
{
    OPROLEBATTLEAWARD LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRolePetCatch
{
    OPROLEPETCATCH LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagLogRoleRecipeMake
{
    int Uin;                             	/*   帐号Uin */
    ROLEMEMBER RoleInfo;                        	/*   角色信息 */
    char Pass9Account[ACCOUNT_LOGIN_NAME_LEN]; 	/*   帐号名 */
    unsigned char SkillType;                       	/*   生活技能类型 Bind Macrosgroup:SECONDARY_SKILL_TYPE,*/
    int SkillLevel;                      	/*   生活技能等级 */
    int RecipeID;                        	/*   生活技能配方ID */
    ITEMDEC DecItem[MAX_RECIPE_STUFF];      
    ITEMDEC GetItem;                        
    LOGGRIDDATA ResolveItem;                    
    tdr_datetime_t LogTime;                        
};

struct tagLogWorldCitySiege
{
    OPWORLDCITYSIEGE LogData;                        
    tdr_datetime_t LogTime;                        
};

struct tagCDKeyTypeDef
{
    char KeyType[CDKEY_TYPE_LEN];         	/*   字符串首,表示不同种类的兑奖卷 */
    tdr_datetime_t EndTime;                         	/*   到期时间 */
    int LimitNum;                        	/*   一个角色能领取次数,0表示无限 */
    GIFTITEM Items[CDKEY_ITEM_NUM];           	/*   奖励道具数组 */
    char SubType;                         	/*  Ver.2110 1-微信礼包 */
    int LvlLowLimit;                     	/*  Ver.2289 最低等级限制 */
    int LvlHighLimt;                     	/*  Ver.2289 最高等级限制 */
};

struct tagCDKeyDef
{
    char CDKey[CDKEY_LEN];               
    int State;                           	/*   0表示能领取|非零表示领取过了(服务器写回) */
    tdr_ulonglong RoleID;                          	/*   领取角色ID(服务器写回) */
    int SvrID;                           	/*   领取角色服ID(服务器写回) */
};

struct tagCDKeyGet
{
    char CDKey[CDKEY_LEN];               
    tdr_ulonglong RoleID;                          	/*   领取角色ID(服务器写回) */
    int SvrID;                           	/*   领取角色服ID(服务器写回) */
};

struct tagBill
{
    int Uin;                             	/*   操作的角色uin */
    tdr_ulonglong Sequence;                        	/*   最新一笔冲值的流水帐号 */
    tdr_ulonglong ServerID;                        	/*   大区id */
    tdr_ulonglong Amount;                          	/*   充值金额,以分为单位 */
    tdr_ulonglong Points;                          	/*   充值点数 */
    tdr_ulonglong Bonus;                           	/*   奖励点数 */
    tdr_ulonglong FreezePoint;                     	/*  Ver.167 冻结的点券 */
    int FreezeLastTime;                  	/*  Ver.167 冻结的最后修改时间,MAX_TRADE_SHOE_TIME小时后自动解冻 */
    tdr_ulonglong CashTotalPoints;                 	/*  Ver.629 充值总点数 */
    tdr_ulonglong UsedTotalPoints;                 	/*  Ver.629 提取总点数 */
};

struct tagReduceBill
{
    int Uin;                             	/*   操作的角色uin */
    tdr_ulonglong Amount;                          	/*   扣除的额度 */
    tdr_ulonglong Points;                          	/*   扣除的点数 */
};

/* 各区的充值信息 */
struct tagListBill
{
    int Num;                             	/*   充值信息 */
    BILL Bill[MAX_LIST_BILL_NUM];         	/*   充值信息 */
};

struct tagAddBillRecord
{
    char Sequence[32];                    	/*   交易流水号 */
    unsigned int BillType;                        	/*   消息类型 */
    int Uin;                             	/*   操作的角色uin */
    unsigned int ServerID;                        	/*   充值到的大区编号 */
    tdr_ulonglong Amount;                          	/*   充值金额 */
    tdr_ulonglong Points;                          	/*   充值点数 */
    tdr_ulonglong Bonus;                           	/*   奖励点数 */
    tdr_ulonglong PropsID;                         	/*   赠送的道具包编号 */
    char PropsName[200];                  	/*   道具包名称 */
    tdr_datetime_t LogTime;                         	/*   入库时间 */
};

struct tagDecBillRecord
{
    tdr_ulonglong seqID;                           	/*   自增 */
    int Uin;                             	/*   操作的角色uin */
    tdr_ulonglong RoleID;                          	/*   操作的角色id */
    int RoleLevel;                      
    int WorldID;                         	/*   操作的服id */
    char OperType;                        	/*   0，表示兑换点券 */
    tdr_ulonglong GodPointNum;                     	/*   金券的数量 */
    tdr_datetime_t LogTime;                         	/*   入库时间 */
};

struct tagGodCoinConsumeRecord
{
    tdr_ulonglong seqID;                           	/*   自增 */
    int Uin;                             	/*   操作的角色uin */
    tdr_ulonglong RoleID;                          	/*   操作的角色id */
    int RoleLevel;                      
    int WorldID;                         	/*   操作的服id */
    int OperType;                        	/*   操作类型 */
    int OperSubType;                     	/*   操作子类型 */
    tdr_ulonglong GodCoin;                         	/*   金券数 */
    unsigned int ShopID;                          	/*   商品的id,没有就填0 */
    unsigned int ShopNum;                         	/*   商品的个数,没有就填0 */
    char OperDesc[512];                  
    tdr_datetime_t LogTime;                         	/*   入库时间 */
};

struct tagShadowAccData
{
    int Uin;                             	/*   帐号ID */
    tdr_longlong MudExp;                          	/*   挂机获得的经验总合 */
    int TakeTime;                        	/*   偷经验的时间 */
    int DayTimes;                        	/*   当天偷经验的次数 */
};

struct tagAccShare
{
    int Uin;                             	/*   帐号 */
    int LastLogout;                      	/*   最后登出时间 */
    int OfflineExp;                      	/*   离线补偿经验 */
    tdr_longlong TakeMudExp;                      	/*   提取的Mud离线补偿经验 */
    int GrabTime;                        	/*  Ver.1787 帐号异常时间 */
};

struct tagRoleDrop
{
    int Uin;                             	/*   帐号ID */
    tdr_ulonglong RoleID;                          	/*   角色ID */
    char RoleName[ROLE_NAME_LEN];        
    ROLEDROPDATA DropData;                        	/*   丢弃数据 */
};

struct tagRoleDropName
{
    tdr_ulonglong RoleID;                          	/*   角色ID */
    char RoleName[ROLE_NAME_LEN];        
};

struct tagGMIPMacLimit
{
    char IP[IPV4_LEN];                    	/*   IP地址 */
    char Mac[MAC_ADDR_LEN];               	/*   Mac地址 */
    int Perm;                            	/*   权限，按位分配 */
};

/* 元数据信息 */
union tagMetaData
{
    int Null;                            	/* META_DATA_TYPE_NULL,  空信息 */
    ACCOUNT Account;                         	/* META_DATA_TYPE_ACCOUNT,  帐号信息 */
    UPDATEPASSWD UpdatePasswd;                    	/* META_DATA_TYPE_UPDATEPASSWD,  修改密码 */
    UPDATEACCOUNT UpdateAccount;                   	/* META_DATA_TYPE_UPDATEACCOUNT,  修改帐号生日 */
    ADDBILLRECORD AddBillRecord;                   	/* META_DATA_TYPE_ADDBILLRECORD, Ver.1705 充值记录 */
    BILL Bill;                            	/* META_DATA_TYPE_BILL, Ver.1705 充值 */
    ACCGIFT AccGift;                         	/* META_DATA_TYPE_ACCGIFT, Ver.1790 运营礼包 */
    UPDATEPASSWDCARD UpdatePasswdCard;                	/* META_DATA_TYPE_UPDATEPASSWDCARD, Ver.1792 修改密保卡 */
    ACCOUNTUINFLAG AccountUinFlag;                  	/* META_DATA_TYPE_ACCOUNTUINFLAG, Ver.1845 修改帐号UinFlag */
};

/* 元数据信息 */
struct tagMetaInfo
{
    char Name[MAX_DB_META_NAME_LEN];      	/*   元数据名 */
    int Type;                            	/*   元数据类型 Bind Macrosgroup:META_DATA_TYPE,*/
    METADATA Data;                            	/*   元数据 */
    int Version;                         	/*   元数据版本 */
};

/* 未成功的DB操作记录 */
struct tagAccDBFailedOpLog
{
    int LogID;                           	/*   记录流水号 */
    int Ip;                              	/*   acc_service的绑定ip|区分不同的service */
    int Port;                            	/*   acc_service的绑定prot|区分不同的service */
    int RegionID;                        	/*   区ID */
    int ErrCode;                         	/*   操作失败错误码|ACC_ERR Bind Macrosgroup:ACC_ERR,*/
    int OpType;                          	/*   数据操作类型(TDR_DBOP_UPDATE) */
    char OpSql[MAX_DB_SQL_LEN];           	/*   sql语句 */
    METAINFO MetaInfo;                        	/*   元数据信息 */
    int ClientTimeStamp;                 	/*   客户端发过来的时间戳(客户端的唯一标识) */
    int ClientIp;                        	/*   客户端的IP */
    int LogTime;                         	/*   记录时间 */
    int Redo;                            	/*   重做标记|0未重做 1已重做 */
    int RedoTime;                        	/*   重做时间 */
};

/* 帐号密码获取返回 */
struct tagAccPasswdRes
{
    int Num;                             	/*   数量 */
    int RegionID[MAX_ACC_PASSWD_NUM];    	/*   区ID */
    UPDATEPASSWD AccPasswd[MAX_ACC_PASSWD_NUM];   	/*   帐号密码信息 */
};

/* 未成功的DB操作记录 */
struct tagBiDBFailedOpLog
{
    int LogID;                           	/*   记录流水号 */
    int Ip;                              	/*   bi_service的绑定ip|区分不同的service */
    int Port;                            	/*   bi_service的绑定prot|区分不同的service */
    int RegionID;                        	/*   区ID */
    int ErrCode;                         	/*   操作失败错误码|ACC_ERR Bind Macrosgroup:BI_ERR,*/
    int MysqlErrCode;                    	/*  Ver.1705 mysql query操作失败错误码|ER_DUP_KEY */
    int MysqlStage;                      	/*  Ver.1705 Mysql 执行到第几步 */
    int Uin;                             	/*  Ver.1705  */
    char AccName[ACCOUNT_LOGIN_NAME_LEN]; 	/*  Ver.1705  */
    int OpType;                          	/*   数据操作类型(TDR_DBOP_UPDATE) */
    char OpSql[MAX_DB_SQL_LEN];           	/*   sql语句 */
    METAINFO MetaInfo;                        	/*   元数据信息 */
    int ClientTimeStamp;                 	/*   客户端发过来的时间戳(客户端的唯一标识) */
    unsigned int ClientIp;                        	/*   客户端的IP */
    int LogTime;                         	/*   记录时间 */
    int Redo;                            	/*   重做标记|0未重做 1已重做 */
    int RedoTime;                        	/*   重做时间 */
};

/* 官网wanyou库中的表格|不完整 */
struct tagljy_member_profile
{
    int uid;                             	/*   官网uid */
    char username[NAME_LEN];              	/*   帐号名 */
    char mobile[NAME_LEN];                	/*   手机号码 */
};


#pragma pack()

#ifdef __cplusplus
}
#endif


#endif /* ROLE_DB_META_H */
