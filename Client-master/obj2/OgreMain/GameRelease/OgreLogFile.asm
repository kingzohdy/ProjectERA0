; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	i:\svnroot\client\OgreMain\OgreLogFile.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB ; std::_Is_swap_move<std::_Swap_move_tag>::_Value
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB
CONST	SEGMENT
?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB DB 01H ; std::_Is_swap_move<std::_Swap_move_tag>::_Value
CONST	ENDS
_DATA	SEGMENT
__bad_alloc_Message DD FLAT:$SG5714
_DATA	ENDS
CONST	SEGMENT
$SG5714	DB	'bad allocation', 00H
	ORG $+1
$SG113480 DB	'\', 00H
	ORG $+2
$SG113485 DB	'\', 00H
	ORG $+2
$SG113486 DB	'wt', 00H
	ORG $+1
$SG113503 DB	'%s', 0aH, 00H
CONST	ENDS
PUBLIC	??1LogHandler@Ogre@@UAE@XZ			; Ogre::LogHandler::~LogHandler
PUBLIC	??_7FileLogHandler@Ogre@@6B@			; Ogre::FileLogHandler::`vftable'
PUBLIC	??0LogHandler@Ogre@@QAE@I@Z			; Ogre::LogHandler::LogHandler
PUBLIC	__$ArrayPad$
PUBLIC	??0FileLogHandler@Ogre@@QAE@IPBDI@Z		; Ogre::FileLogHandler::FileLogHandler
PUBLIC	??_R4FileLogHandler@Ogre@@6B@			; Ogre::FileLogHandler::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFileLogHandler@Ogre@@@8			; Ogre::FileLogHandler `RTTI Type Descriptor'
PUBLIC	??_R3FileLogHandler@Ogre@@8			; Ogre::FileLogHandler::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FileLogHandler@Ogre@@8			; Ogre::FileLogHandler::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FileLogHandler@Ogre@@8		; Ogre::FileLogHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@LogHandler@Ogre@@8		; Ogre::LogHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVLogHandler@Ogre@@@8			; Ogre::LogHandler `RTTI Type Descriptor'
PUBLIC	??_R3LogHandler@Ogre@@8				; Ogre::LogHandler::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2LogHandler@Ogre@@8				; Ogre::LogHandler::`RTTI Base Class Array'
PUBLIC	?Handle@FileLogHandler@Ogre@@UAE_NPBDHI0@Z	; Ogre::FileLogHandler::Handle
EXTRN	__imp__fopen:PROC
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	__imp__CreateDirectoryA@8:PROC
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	__imp_?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z:PROC
EXTRN	__imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB:DWORD
EXTRN	__imp_?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_EFileLogHandler@Ogre@@UAEPAXI@Z:PROC		; Ogre::FileLogHandler::`vector deleting destructor'
;	COMDAT ??_R2LogHandler@Ogre@@8
; File i:\svnroot\client\ogremain\ogrelogfile.cpp
rdata$r	SEGMENT
??_R2LogHandler@Ogre@@8 DD FLAT:??_R1A@?0A@EA@LogHandler@Ogre@@8 ; Ogre::LogHandler::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3LogHandler@Ogre@@8
rdata$r	SEGMENT
??_R3LogHandler@Ogre@@8 DD 00H				; Ogre::LogHandler::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2LogHandler@Ogre@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVLogHandler@Ogre@@@8
_DATA	SEGMENT
??_R0?AVLogHandler@Ogre@@@8 DD FLAT:??_7type_info@@6B@	; Ogre::LogHandler `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLogHandler@Ogre@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@LogHandler@Ogre@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@LogHandler@Ogre@@8 DD FLAT:??_R0?AVLogHandler@Ogre@@@8 ; Ogre::LogHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3LogHandler@Ogre@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FileLogHandler@Ogre@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FileLogHandler@Ogre@@8 DD FLAT:??_R0?AVFileLogHandler@Ogre@@@8 ; Ogre::FileLogHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FileLogHandler@Ogre@@8
rdata$r	ENDS
;	COMDAT ??_R2FileLogHandler@Ogre@@8
rdata$r	SEGMENT
??_R2FileLogHandler@Ogre@@8 DD FLAT:??_R1A@?0A@EA@FileLogHandler@Ogre@@8 ; Ogre::FileLogHandler::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@LogHandler@Ogre@@8
rdata$r	ENDS
;	COMDAT ??_R3FileLogHandler@Ogre@@8
rdata$r	SEGMENT
??_R3FileLogHandler@Ogre@@8 DD 00H			; Ogre::FileLogHandler::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2FileLogHandler@Ogre@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFileLogHandler@Ogre@@@8
_DATA	SEGMENT
??_R0?AVFileLogHandler@Ogre@@@8 DD FLAT:??_7type_info@@6B@ ; Ogre::FileLogHandler `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFileLogHandler@Ogre@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FileLogHandler@Ogre@@6B@
rdata$r	SEGMENT
??_R4FileLogHandler@Ogre@@6B@ DD 00H			; Ogre::FileLogHandler::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFileLogHandler@Ogre@@@8
	DD	FLAT:??_R3FileLogHandler@Ogre@@8
rdata$r	ENDS
;	COMDAT ??_7FileLogHandler@Ogre@@6B@
CONST	SEGMENT
??_7FileLogHandler@Ogre@@6B@ DD FLAT:??_R4FileLogHandler@Ogre@@6B@ ; Ogre::FileLogHandler::`vftable'
	DD	FLAT:??_EFileLogHandler@Ogre@@UAEPAXI@Z
	DD	FLAT:?Handle@FileLogHandler@Ogre@@UAE_NPBDHI0@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0FileLogHandler@Ogre@@QAE@IPBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0FileLogHandler@Ogre@@QAE@IPBDI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0FileLogHandler@Ogre@@QAE@IPBDI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0FileLogHandler@Ogre@@QAE@IPBDI@Z$2
__ehfuncinfo$??0FileLogHandler@Ogre@@QAE@IPBDI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0FileLogHandler@Ogre@@QAE@IPBDI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv145 = -88						; size = 4
tv82 = -84						; size = 4
_this$ = -80						; size = 4
$T117767 = -76						; size = 28
_pos$ = -48						; size = 4
_strName$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_levels$ = 8						; size = 4
_filename$ = 12						; size = 4
_maxlength$ = 16					; size = 4
??0FileLogHandler@Ogre@@QAE@IPBDI@Z PROC		; Ogre::FileLogHandler::FileLogHandler
; _this$ = ecx

; 11   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0FileLogHandler@Ogre@@QAE@IPBDI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _levels$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0LogHandler@Ogre@@QAE@I@Z		; Ogre::LogHandler::LogHandler
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7FileLogHandler@Ogre@@6B@

; 12   : 		string strName(filename);

	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strName$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 13   : 		size_t pos = strName.find("\\");

	push	0
	push	OFFSET $SG113480
	lea	ecx, DWORD PTR _strName$[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z
	mov	DWORD PTR _pos$[ebp], eax
$LN2@FileLogHan:

; 14   : 		while( pos != strName.npos )

	mov	eax, DWORD PTR __imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
	mov	ecx, DWORD PTR _pos$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $LN1@FileLogHan

; 15   : 		{
; 16   : 			::CreateDirectory(strName.substr(0,pos).c_str(),NULL);

	push	0
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	push	0
	lea	eax, DWORD PTR $T117767[ebp]
	push	eax
	lea	ecx, DWORD PTR _strName$[ebp]
	call	DWORD PTR __imp_?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv82[ebp], eax
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv145[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv145[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	call	DWORD PTR __imp__CreateDirectoryA@8
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T117767[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 17   : 			pos = strName.find("\\",pos+1);

	mov	edx, DWORD PTR _pos$[ebp]
	add	edx, 1
	push	edx
	push	OFFSET $SG113485
	lea	ecx, DWORD PTR _strName$[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z
	mov	DWORD PTR _pos$[ebp], eax

; 18   : 		}

	jmp	SHORT $LN2@FileLogHan
$LN1@FileLogHan:

; 19   : 		m_fp = fopen(filename, "wt");

	push	OFFSET $SG113486
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 20   : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strName$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0FileLogHandler@Ogre@@QAE@IPBDI@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1LogHandler@Ogre@@UAE@XZ		; Ogre::LogHandler::~LogHandler
__unwindfunclet$??0FileLogHandler@Ogre@@QAE@IPBDI@Z$1:
	lea	ecx, DWORD PTR _strName$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$??0FileLogHandler@Ogre@@QAE@IPBDI@Z$2:
	lea	ecx, DWORD PTR $T117767[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$??0FileLogHandler@Ogre@@QAE@IPBDI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0FileLogHandler@Ogre@@QAE@IPBDI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0FileLogHandler@Ogre@@QAE@IPBDI@Z ENDP		; Ogre::FileLogHandler::FileLogHandler
PUBLIC	??_7LogHandler@Ogre@@6B@			; Ogre::LogHandler::`vftable'
PUBLIC	??_R4LogHandler@Ogre@@6B@			; Ogre::LogHandler::`RTTI Complete Object Locator'
EXTRN	??_ELogHandler@Ogre@@UAEPAXI@Z:PROC		; Ogre::LogHandler::`vector deleting destructor'
EXTRN	__purecall:PROC
;	COMDAT ??_R4LogHandler@Ogre@@6B@
; File i:\svnroot\client\ogremain\ogrelog.h
rdata$r	SEGMENT
??_R4LogHandler@Ogre@@6B@ DD 00H			; Ogre::LogHandler::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVLogHandler@Ogre@@@8
	DD	FLAT:??_R3LogHandler@Ogre@@8
rdata$r	ENDS
;	COMDAT ??_7LogHandler@Ogre@@6B@
CONST	SEGMENT
??_7LogHandler@Ogre@@6B@ DD FLAT:??_R4LogHandler@Ogre@@6B@ ; Ogre::LogHandler::`vftable'
	DD	FLAT:??_ELogHandler@Ogre@@UAEPAXI@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0LogHandler@Ogre@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_levels$ = 8						; size = 4
??0LogHandler@Ogre@@QAE@I@Z PROC			; Ogre::LogHandler::LogHandler, COMDAT
; _this$ = ecx

; 25   : 		LogHandler(unsigned int levels) : m_LevelFlags(levels){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LogHandler@Ogre@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _levels$[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0LogHandler@Ogre@@QAE@I@Z ENDP			; Ogre::LogHandler::LogHandler
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1LogHandler@Ogre@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1LogHandler@Ogre@@UAE@XZ PROC				; Ogre::LogHandler::~LogHandler, COMDAT
; _this$ = ecx

; 27   : 		virtual ~LogHandler(){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LogHandler@Ogre@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1LogHandler@Ogre@@UAE@XZ ENDP				; Ogre::LogHandler::~LogHandler
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp
;	COMDAT ??_GLogHandler@Ogre@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GLogHandler@Ogre@@UAEPAXI@Z PROC			; Ogre::LogHandler::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1LogHandler@Ogre@@UAE@XZ		; Ogre::LogHandler::~LogHandler
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GLogHandler@Ogre@@UAEPAXI@Z ENDP			; Ogre::LogHandler::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1FileLogHandler@Ogre@@UAE@XZ			; Ogre::FileLogHandler::~FileLogHandler
; Function compile flags: /Odtp
;	COMDAT ??_GFileLogHandler@Ogre@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GFileLogHandler@Ogre@@UAEPAXI@Z PROC			; Ogre::FileLogHandler::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FileLogHandler@Ogre@@UAE@XZ		; Ogre::FileLogHandler::~FileLogHandler
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFileLogHandler@Ogre@@UAEPAXI@Z ENDP			; Ogre::FileLogHandler::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp__fclose:PROC
xdata$x	SEGMENT
__unwindtable$??1FileLogHandler@Ogre@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1FileLogHandler@Ogre@@UAE@XZ$0
__ehfuncinfo$??1FileLogHandler@Ogre@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1FileLogHandler@Ogre@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
; File i:\svnroot\client\ogremain\ogrelogfile.cpp
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1FileLogHandler@Ogre@@UAE@XZ PROC			; Ogre::FileLogHandler::~FileLogHandler
; _this$ = ecx

; 23   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1FileLogHandler@Ogre@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FileLogHandler@Ogre@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 24   : 		if( m_fp ) fclose(m_fp);

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN2@FileLogHan@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
$LN2@FileLogHan@2:

; 25   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1LogHandler@Ogre@@UAE@XZ		; Ogre::LogHandler::~LogHandler
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1FileLogHandler@Ogre@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1LogHandler@Ogre@@UAE@XZ		; Ogre::LogHandler::~LogHandler
__ehhandler$??1FileLogHandler@Ogre@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1FileLogHandler@Ogre@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1FileLogHandler@Ogre@@UAE@XZ ENDP			; Ogre::FileLogHandler::~FileLogHandler
EXTRN	__imp__fflush:PROC
EXTRN	__imp__fprintf:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pfilename$ = 8						; size = 4
_line$ = 12						; size = 4
_level$ = 16						; size = 4
_pstr$ = 20						; size = 4
?Handle@FileLogHandler@Ogre@@UAE_NPBDHI0@Z PROC		; Ogre::FileLogHandler::Handle
; _this$ = ecx

; 28   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 29   : 		if( m_fp )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@Handle

; 30   : 		{
; 31   : 			fprintf( m_fp, "%s\n", pstr );

	mov	ecx, DWORD PTR _pstr$[ebp]
	push	ecx
	push	OFFSET $SG113503
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH

; 32   : 			fflush(m_fp);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__fflush
	add	esp, 4

; 33   : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@Handle
	jmp	SHORT $LN3@Handle
$LN2@Handle:

; 34   : 		}
; 35   : 		else return false;

	xor	al, al
$LN3@Handle:

; 36   : 	}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Handle@FileLogHandler@Ogre@@UAE_NPBDHI0@Z ENDP		; Ogre::FileLogHandler::Handle
_TEXT	ENDS
END
