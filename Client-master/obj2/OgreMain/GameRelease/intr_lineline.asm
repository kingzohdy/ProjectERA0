; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	i:\svnroot\client\sdk\ozcollide\intr_lineline.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	__real@0000000000000000
PUBLIC	??GVec2f@ozcollide@@QBE?AV01@ABV01@@Z		; ozcollide::Vec2f::operator-
PUBLIC	?testIntersectionLineLine@ozcollide@@YA_NABVVec2f@1@000PAM@Z ; ozcollide::testIntersectionLineLine
EXTRN	__fltused:DWORD
;	COMDAT __real@0000000000000000
; File i:\svnroot\client\sdk\ozcollide\intr_lineline.cpp
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp
CONST	ENDS
_TEXT	SEGMENT
_dist$6250 = -24					; size = 4
_d1$ = -20						; size = 8
_d2$ = -12						; size = 8
_denom$ = -4						; size = 4
__p1$ = 8						; size = 4
__p2$ = 12						; size = 4
__p3$ = 16						; size = 4
__p4$ = 20						; size = 4
__t$ = 24						; size = 4
?testIntersectionLineLine@ozcollide@@YA_NABVVec2f@1@000PAM@Z PROC ; ozcollide::testIntersectionLineLine

; 34   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 35   : 	Vec2f d1 = _p2 - _p1;

	mov	eax, DWORD PTR __p1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _d1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __p2$[ebp]
	call	??GVec2f@ozcollide@@QBE?AV01@ABV01@@Z	; ozcollide::Vec2f::operator-

; 36   : 	Vec2f d2 = _p3 - _p4;

	mov	edx, DWORD PTR __p4$[ebp]
	push	edx
	lea	eax, DWORD PTR _d2$[ebp]
	push	eax
	mov	ecx, DWORD PTR __p3$[ebp]
	call	??GVec2f@ozcollide@@QBE?AV01@ABV01@@Z	; ozcollide::Vec2f::operator-

; 37   : 
; 38   : 	float denom = d2.y*d1.x - d2.x*d1.y;

	fld	DWORD PTR _d2$[ebp+4]
	fmul	DWORD PTR _d1$[ebp]
	fld	DWORD PTR _d2$[ebp]
	fmul	DWORD PTR _d1$[ebp+4]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _denom$[ebp]

; 39   : 	if (!denom)

	fld	DWORD PTR _denom$[ebp]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@testInters

; 40   : 		return false;

	xor	al, al
	jmp	SHORT $LN3@testInters
$LN2@testInters:

; 41   : 
; 42   : 	if (_t) {

	cmp	DWORD PTR __t$[ebp], 0
	je	SHORT $LN1@testInters

; 43   : 		float dist = d2.x*(_p1.y-_p3.y) - d2.y*(_p1.x-_p3.x);

	mov	ecx, DWORD PTR __p1$[ebp]
	fld	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR __p3$[ebp]
	fsub	DWORD PTR [edx+4]
	fmul	DWORD PTR _d2$[ebp]
	mov	eax, DWORD PTR __p1$[ebp]
	fld	DWORD PTR [eax]
	mov	ecx, DWORD PTR __p3$[ebp]
	fsub	DWORD PTR [ecx]
	fmul	DWORD PTR _d2$[ebp+4]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _dist$6250[ebp]

; 44   : 		dist /= denom;

	fld	DWORD PTR _dist$6250[ebp]
	fdiv	DWORD PTR _denom$[ebp]
	fstp	DWORD PTR _dist$6250[ebp]

; 45   : 		*_t = dist;

	mov	edx, DWORD PTR __t$[ebp]
	fld	DWORD PTR _dist$6250[ebp]
	fstp	DWORD PTR [edx]
$LN1@testInters:

; 46   : 	}
; 47   : 
; 48   : 	return true;

	mov	al, 1
$LN3@testInters:

; 49   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?testIntersectionLineLine@ozcollide@@YA_NABVVec2f@1@000PAM@Z ENDP ; ozcollide::testIntersectionLineLine
_TEXT	ENDS
PUBLIC	??0Vec2f@ozcollide@@QAE@MM@Z			; ozcollide::Vec2f::Vec2f
; Function compile flags: /Odtp
; File i:\svnroot\client\sdk\ozcollide\vec2f.h
;	COMDAT ??GVec2f@ozcollide@@QBE?AV01@ABV01@@Z
_TEXT	SEGMENT
tv82 = -12						; size = 4
tv79 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__v$ = 12						; size = 4
??GVec2f@ozcollide@@QBE?AV01@ABV01@@Z PROC		; ozcollide::Vec2f::operator-, COMDAT
; _this$ = ecx

; 79   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return Vec2f(x - _v.x, y - _v.y);

	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+4]
	mov	ecx, DWORD PTR __v$[ebp]
	fsub	DWORD PTR [ecx+4]
	fstp	DWORD PTR tv79[ebp]
	fld	DWORD PTR tv79[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [edx]
	mov	eax, DWORD PTR __v$[ebp]
	fsub	DWORD PTR [eax]
	fstp	DWORD PTR tv82[ebp]
	fld	DWORD PTR tv82[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vec2f@ozcollide@@QAE@MM@Z		; ozcollide::Vec2f::Vec2f
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 81   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??GVec2f@ozcollide@@QBE?AV01@ABV01@@Z ENDP		; ozcollide::Vec2f::operator-
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0Vec2f@ozcollide@@QAE@MM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0Vec2f@ozcollide@@QAE@MM@Z PROC			; ozcollide::Vec2f::Vec2f, COMDAT
; _this$ = ecx

; 39   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR __x$[ebp]
	fstp	DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR __y$[ebp]
	fstp	DWORD PTR [ecx+4]

; 40   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0Vec2f@ozcollide@@QAE@MM@Z ENDP			; ozcollide::Vec2f::Vec2f
_TEXT	ENDS
END
