/********************************************************************
**       This head file is generated by program,                   **
**            Please do not change it directly.                    **
********************************************************************/

#ifndef TLOGDDEF_H
#define TLOGDDEF_H

#include "tlogfiledef.h"
#include "tlognetdef.h"

#include "tlogfilterdef.h"
#include "tlogvecdef.h"
#include "tloganydef.h"


#ifndef TDR_METALIB_TLOGD_VERSION 
#define TDR_METALIB_TLOGD_VERSION 	11 /*version of metalib*/
#endif

#ifndef TDR_METALIB_TLOGD_HASH 
#define TDR_METALIB_TLOGD_HASH 	"5df8671a280d9949e277214f4fef620e" /*hash of metalib*/
#endif
/*   
 User Define Macros.   */

#define TLOGD_NAME_LEN                          	32
#define TLOGD_URL_LEN                           	128
#define TLOGD_MAX_TDR                           	16
#define TLOGD_MAX_PDU                           	16
#define TLOGD_MAX_NETTRANS                      	16
#define TLOGD_MAX_THTTP_UPPKG_LEN               	4096
#define TLOGD_MAX_NONE_PKG_LEN                  	8192

/* PDULenParserID*/
enum tagPDULenParserIDLogd
{
    PDULENPARSERID_BY_TDR_LOGD = 0, 	/* 使用TDR方法进行分析 */
    PDULENPARSERID_BY_NULL_LOGD = 1, 	/* 通过数据中出现NULL('\0')字符分析长度 */
    PDULENPARSERID_BY_NONE_LOGD = 10, 	/* Doing nothing */
};


#ifdef __cplusplus
extern "C" {
#endif

/*   Define c types.   */


#ifndef TDR_CUSTOM_C_TYPES
#define TDR_CUSTOM_C_TYPES
#if defined(WIN32) &&  _MSC_VER < 1300
typedef __int64 tdr_longlong;
typedef unsigned __int64 tdr_ulonglong;
#else
typedef long long tdr_longlong;
typedef unsigned long long tdr_ulonglong;
#endif  /*defined(WIN32) &&  _MSC_VER < 1300*/
typedef unsigned short tdr_wchar_t;  /**<Wchar基本数据类型*/
typedef unsigned int tdr_date_t;	/**<data基本数据类型*/
typedef unsigned int tdr_time_t;	/**<time基本数据类型*/
typedef tdr_ulonglong tdr_datetime_t;  /**<datetime基本数据类型*/
typedef unsigned long int tdr_ip_t;  /**<IPv4数据类型*/
#endif /*TDR_CUSTOM_C_TYPES*/



/*   Structs/unions prototype.   */

struct tagTransLimitlogd;
typedef struct tagTransLimitlogd                       	TRANSLIMITLOGD;
typedef struct tagTransLimitlogd                      	*LPTRANSLIMITLOGD;

struct tagTransMetriclogd;
typedef struct tagTransMetriclogd                      	TRANSMETRICLOGD;
typedef struct tagTransMetriclogd                      	*LPTRANSMETRICLOGD;

struct tagConnLimitlogd;
typedef struct tagConnLimitlogd                        	CONNLIMITLOGD;
typedef struct tagConnLimitlogd                        	*LPCONNLIMITLOGD;

struct tagConnMetriclogd;
typedef struct tagConnMetriclogd                       	CONNMETRICLOGD;
typedef struct tagConnMetriclogd                       	*LPCONNMETRICLOGD;

struct tagTDRlogd;
typedef struct tagTDRlogd                              	TDRLOGD;
typedef struct tagTDRlogd                              	*LPTDRLOGD;

struct tagTDRListlogd;
typedef struct tagTDRListlogd                          	TDRLISTLOGD;
typedef struct tagTDRListlogd                          	*LPTDRLISTLOGD;

struct tagPDULenTDRParserlogd;
typedef struct tagPDULenTDRParserlogd                  	PDULENTDRPARSERLOGD;
typedef struct tagPDULenTDRParserlogd                  	*LPPDULENTDRPARSERLOGD;

struct tagPDULenTHTTParserlogd;
typedef struct tagPDULenTHTTParserlogd                 	PDULENTHTTPARSERLOGD;
typedef struct tagPDULenTHTTParserlogd                 	*LPPDULENTHTTPARSERLOGD;

struct tagPDULenNoneParserlogd;
typedef struct tagPDULenNoneParserlogd                 	PDULENNONEPARSERLOGD;
typedef struct tagPDULenNoneParserlogd                 	*LPPDULENNONEPARSERLOGD;

union tagPDULenParserlogd;
typedef union  tagPDULenParserlogd                     	PDULENPARSERLOGD;
typedef union  tagPDULenParserlogd                     	*LPPDULENPARSERLOGD;

struct tagPDUlogd;
typedef struct tagPDUlogd                              	PDULOGD;
typedef struct tagPDUlogd                              	*LPPDULOGD;

struct tagPDUListlogd;
typedef struct tagPDUListlogd                          	PDULISTLOGD;
typedef struct tagPDUListlogd                          	*LPPDULISTLOGD;

struct tagListenerlogd;
typedef struct tagListenerlogd                         	LISTENERLOGD;
typedef struct tagListenerlogd                         	*LPLISTENERLOGD;

struct tagListenerListlogd;
typedef struct tagListenerListlogd                     	LISTENERLISTLOGD;
typedef struct tagListenerListlogd                     	*LPLISTENERLISTLOGD;

struct tagListenerRunlogd;
typedef struct tagListenerRunlogd                     	LISTENERRUNLOGD;
typedef struct tagListenerRunlogd                      	*LPLISTENERRUNLOGD;

struct tagListenerRunListlogd;
typedef struct tagListenerRunListlogd                  	LISTENERRUNLISTLOGD;
typedef struct tagListenerRunListlogd                 	*LPLISTENERRUNLISTLOGD;

struct tagSerializerlogd;
typedef struct tagSerializerlogd                       	SERIALIZERLOGD;
typedef struct tagSerializerlogd                       	*LPSERIALIZERLOGD;

struct tagSerializerListlogd;
typedef struct tagSerializerListlogd                   	SERIALIZERLISTLOGD;
typedef struct tagSerializerListlogd                   	*LPSERIALIZERLISTLOGD;

struct tagSerializerRunlogd;
typedef struct tagSerializerRunlogd                    	SERIALIZERRUNLOGD;
typedef struct tagSerializerRunlogd                    	*LPSERIALIZERRUNLOGD;

struct tagSerializerRunListlogd;
typedef struct tagSerializerRunListlogd                	SERIALIZERRUNLISTLOGD;
typedef struct tagSerializerRunListlogd                	*LPSERIALIZERRUNLISTLOGD;

struct tagNetTranslogd;
typedef struct tagNetTranslogd                         	NETTRANSLOGD;
typedef struct tagNetTranslogd                        	*LPNETTRANSLOGD;

struct tagNetTransListlogd;
typedef struct tagNetTransListlogd                    	NETTRANSLISTLOGD;
typedef struct tagNetTransListlogd                     	*LPNETTRANSLISTLOGD;

struct tagNetTransRunlogd;
typedef struct tagNetTransRunlogd                      	NETTRANSRUNLOGD;
typedef struct tagNetTransRunlogd                      	*LPNETTRANSRUNLOGD;

struct tagNetTransRunListlogd;
typedef struct tagNetTransRunListlogd                  	NETTRANSRUNLISTLOGD;
typedef struct tagNetTransRunListlogd                  	*LPNETTRANSRUNLISTLOGD;

struct tagtconndlogd;
typedef struct tagtconndlogd                           	TLOGD;
typedef struct tagtconndlogd                           	*LPTLOGD;

struct tagtlogdconflogd;
typedef struct tagtlogdconflogd                        	TLOGDCONFLOGD;
typedef struct tagtlogdconflogd                        	*LPTLOGDCONFLOGD;

struct tagtconndrunlogd;
typedef struct tagtconndrunlogd                        	TCONNDRUNLOGD;
typedef struct tagtconndrunlogd                        	*LPTCONNDRUNLOGD;

struct tagtlogdrunlogd;
typedef struct tagtlogdrunlogd                        	TLOGDRUNLOGD;
typedef struct tagtlogdrunlogd                        	*LPTLOGDRUNLOGD;



/*   Define structs/unions.   */

#pragma pack(1)

struct tagTransLimitlogd
{
    int iPkgHiMark;                     
    int iPkgLoMark;                     
    int iPeriod;                        
    int iDecay;                         
};

struct tagTransMetriclogd
{
    tdr_longlong llSendPkg;                      
    tdr_longlong llRecvPkg;                      
    tdr_longlong llSendByte;                     
    tdr_longlong llRecvByte;                     
    tdr_longlong llFailPkg;                      
    tdr_longlong llFailByte;                     
};

struct tagConnLimitlogd
{
    int iBacklog;                       
    int iMaxConn;                       
    int iPermit;                        
    int iHighMark;                      
    int iLowMark;                       
    int iPeriod;                        
};

struct tagConnMetriclogd
{
    int iTotal;                         
    int iActive;                        
    int iTry;                           
    int iRefuse;                        
    int iNetLost;                       
    int iAllocFail;                     
    int iEpollFail;                     
    int iAcceptFail;                    
    int iNetFail;                       
};

struct tagTDRlogd
{
    char szName[TLOGD_NAME_LEN];        
    char szPath[TLOGD_URL_LEN];         
};

struct tagTDRListlogd
{
    int iCount;                         
    TDR astTDRs[TLOGD_MAX_TDR];        
};

/* 使用TDR方法来分析数据包的长度 */
struct tagPDULenTDRParserlogd
{
    char szTDR[TLOGD_NAME_LEN];          	/*   PDU数据结构所在元数据描述库文件 */
    char szPkg[TLOGD_NAME_LEN];          	/*   PDU数据结构元数据描述名 */
    char szPkgLen[TLOGD_NAME_LEN];       	/*   PDU数据结构中记录数据包总长度信息成员的元数据描述路径名 */
    char szHeadLen[TLOGD_NAME_LEN];      	/*   PDU数据结构中记录数据包头部长度信息的成员的元数据描述路径名 */
    char szBodyLen[TLOGD_NAME_LEN];      	/*   PDU数据结构中记录数据包消息体长度信息的成员的元数据描述路径名 */
    char szMsgID[TLOGD_NAME_LEN];       
    char szMsgCls[TLOGD_NAME_LEN];      
    int iPkgLenMultiplex;               
    int iHeadLenMultiplex;              
    int iBodyLenMultiplex;              
};

/* 通过数据中出现NULL('\0')字符分析长度 */
struct tagPDULenTHTTParserlogd
{
    int iMaxUpPkgLen;                    	/*   上行PDU数据包最大长度 */
};

/*  */
struct tagPDULenNoneParserlogd
{
    int iMaxPkgLen;                      	/*   上行PDU数据包最大长度 */
};

/* 分析协议数据单元(PDU)长度信息的数据结构，用于将数据流分解成应用定义的数据通信消息 */
union tagPDULenParserlogd
{
    PDULENTDRPARSERLOGD stTDRParser;                     	/* PDULENPARSERID_BY_TDR,  使用TDR方法进行分析 */
    PDULENTDRPARSERLOGD stThttpParser;                   	/* PDULENPARSERID_BY_NULL,  通过数据中出现NULL('\0')字符分析长度 */
    PDULENTDRPARSERLOGD stNoneParser;                    	/* PDULENPARSERID_BY_NONE,  FWD */
};

struct tagPDUlogd
{
    char szName[TLOGD_NAME_LEN];        
    int iSize;                           	/*   PDU数据单元存储空间最大字节数 */
    int iLenParsertype;                  	/*  Ver.11  Bind Macrosgroup:PDULenParserID,*/
    PDULENPARSERLOGD stLenParser;                     	/*  Ver.11 分析协议数据单元(PDU)长度信息的成员 */
};

struct tagPDUListlogd
{
    int iCount;                         
    PDULOGD astPDUs[TLOGD_MAX_PDU];        
};

struct tagListenerlogd
{
    char szName[TLOGD_NAME_LEN];        
    char szUrl[TLOGD_URL_LEN];          
    int iSendBuff;                      
    int iRecvBuff;                      
    int iMaxIdle;                       
    int iLogBin;                        
    TRANSLIMITLOGD stTransLimit;                   
    CONNLIMITLOGD stConnLimit;                    
    int iFailWait;                      
    int iFailOp;                        
};

struct tagListenerListlogd
{
    int iCount;                         
    LISTENERLOGD stListeners[TLOGD_MAX_NETTRANS];
};

struct tagListenerRunlogd
{
    char szName[TLOGD_NAME_LEN];        
    TRANSMETRICLOGD stTransStat;                    
    CONNMETRICLOGD stConnStat;                     
};

struct tagListenerRunListlogd
{
    int iCount;                         
    LISTENERRUNLOGD astListeners[TLOGD_MAX_NETTRANS];
};

struct tagSerializerlogd
{
    char szName[TLOGD_NAME_LEN];
    TLOGDEVANY  stLogger;                       
    int iDropHead;                       	/*   valid only if the data is describled by tdr */
};

struct tagSerializerListlogd
{
    int iCount;                         
    SERIALIZERLOGD astSerializers[TLOGD_MAX_NETTRANS];
};

struct tagSerializerRunlogd
{
    char szName[TLOGD_NAME_LEN];        
    TRANSMETRICLOGD stTransStat;                    
    CONNMETRICLOGD stConnStat;                     
};

struct tagSerializerRunListlogd
{
    int iCount;                         
    SERIALIZERRUNLOGD astSerializers[TLOGD_MAX_NETTRANS];
};

struct tagNetTranslogd
{
    char szName[TLOGD_NAME_LEN];        
    int iLoadRatio;                     
    int iMaxFD;                         
    int iUseTimeStamp;                  
    int iRes;                            	/*   Just hold for reservation */
    char szPDU[TLOGD_NAME_LEN];         
    char szListener[TLOGD_NAME_LEN];    
    char szSerializer[TLOGD_NAME_LEN];  
};

struct tagNetTransListlogd
{
    int iCount;                         
    NETTRANSLOGD astNetTrans[TLOGD_MAX_NETTRANS];
};

struct tagNetTransRunlogd
{
    char szName[TLOGD_NAME_LEN];        
    TRANSMETRICLOGD stTransStat;                    
};

struct tagNetTransRunListlogd
{
    int iCount;                         
    NETTRANSRUNLOGD astNetTrans[TLOGD_MAX_NETTRANS];
};

struct tagtconndlogd
{
    int iThreading;                     
    int iEnableViewer;                  
    int iMaxFD;                         
    int iMaxScanOnce;                   
    int iScanRatioOnce;                 
    int iScanRatio;                     
    TDRLISTLOGD stTDRList;                      
    PDULISTLOGD stPDUList;                      
    LISTENERLISTLOGD stListenerList;                 
    SERIALIZERLISTLOGD stSerializerList;               
    NETTRANSLISTLOGD stNetTransList;                 
};

struct tagtlogdconflogd
{
    int iThreading;                     
    int iEnableViewer;                  
    int iMaxFD;                         
    int iMaxScanOnce;                   
    int iScanRatioOnce;                 
    int iScanRatio;                     
    TDRLISTLOGD stTDRList;                      
    PDULISTLOGD stPDUList;                      
    LISTENERLISTLOGD stListenerList;                 
    SERIALIZERLISTLOGD stSerializerList;               
    NETTRANSLISTLOGD stNetTransList;                 
};

struct tagtconndrunlogd
{
    int iUpTime;                        
    int iTotalConns;                    
    TRANSMETRICLOGD stTotalTrans;                   
    LISTENERRUNLISTLOGD stListenerRunList;              
    SERIALIZERRUNLISTLOGD stSerializerRunList;            
    NETTRANSRUNLISTLOGD stNetTransRunList;              
};

struct tagtlogdrunlogd
{
    int iUpTime;                        
    int iTotalConns;                    
    TRANSMETRICLOGD stTotalTrans;                   
    LISTENERRUNLISTLOGD stListenerRunList;              
    SERIALIZERRUNLISTLOGD stSerializerRunList;            
    NETTRANSRUNLISTLOGD stNetTransRunList;              
};


#pragma pack()

#ifdef __cplusplus
}
#endif


#endif /* TLOGDDEF_H */
