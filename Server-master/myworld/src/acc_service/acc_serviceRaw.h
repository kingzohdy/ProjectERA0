/* acc_serviceRaw.h
   Generated by wsdl2h 2.8.9 from acc_service.wsdl and typemap.dat
   2014-07-04 09:34:11 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2012 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on acc_serviceRaw.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://www.ljy0.com/AccService/                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://www.ljy0.com/AccService/"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://www.ljy0.com/AccService/"
//gsoap ns1   schema namespace:	http://www.ljy0.com/AccService/
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/



/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.ljy0.com/AccService/                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.ljy0.com/AccService/                                          *
 *                                                                            *
\******************************************************************************/


/// "http://www.ljy0.com/AccService/":ErrorResponse is a complexType.
struct ns1__ErrorResponse
{
/// Element ErrorText of type xs:string.
    char*                                ErrorText                      0;	///< Optional element.
};

/// "http://www.ljy0.com/AccService/":InsertAccountReq is a complexType.
struct ns1__InsertAccountReq
{
/// Element RegionID of type xs:int.
    int*                                 RegionID                       0;	///< Optional element.
/// Element AccName of type xs:string.
    char*                                AccName                        0;	///< Optional element.
/// Element PasswordHex of type xs:string.
    char*                                PasswordHex                    0;	///< Optional element.
/// Element Birthday of type xs:string.
    char*                                Birthday                       0;	///< Optional element.
};

/// "http://www.ljy0.com/AccService/":InsertAccountRes is a complexType.
struct ns1__InsertAccountRes
{
/// Element ErrorCode of type xs:int.
    int                                  ErrorCode                      1 = 0;	///< Default value="0".
/// Element StrError of type "http://www.ljy0.com/AccService/":ErrorResponse.
    struct ns1__ErrorResponse*           StrError                       0;	///< Optional element.
};

/// "http://www.ljy0.com/AccService/":UpdateAccountPasswdReq is a complexType.
struct ns1__UpdateAccountPasswdReq
{
/// Element RegionID of type xs:int.
    int*                                 RegionID                       0;	///< Optional element.
/// Element AccName of type xs:string.
    char*                                AccName                        0;	///< Optional element.
/// Element PasswordHex of type xs:string.
    char*                                PasswordHex                    0;	///< Optional element.
};

/// "http://www.ljy0.com/AccService/":UpdateAccountPasswdRes is a complexType.
struct ns1__UpdateAccountPasswdRes
{
/// Element ErrorCode of type xs:int.
    int                                  ErrorCode                      1 = 0;	///< Default value="0".
/// Element StrError of type "http://www.ljy0.com/AccService/":ErrorResponse.
    struct ns1__ErrorResponse*           StrError                       0;	///< Optional element.
};

/// "http://www.ljy0.com/AccService/":UpdateAccountBirthdayReq is a complexType.
struct ns1__UpdateAccountBirthdayReq
{
/// Element RegionID of type xs:int.
    int*                                 RegionID                       0;	///< Optional element.
/// Element AccName of type xs:string.
    char*                                AccName                        0;	///< Optional element.
/// Element Birthday of type xs:string.
    char*                                Birthday                       0;	///< Optional element.
/// Element Gender of type xs:int.
    int*                                 Gender                         0;	///< Optional element.
};

/// "http://www.ljy0.com/AccService/":UpdateAccountBirthdayRes is a complexType.
struct ns1__UpdateAccountBirthdayRes
{
/// Element ErrorCode of type xs:int.
    int                                  ErrorCode                      1 = 0;	///< Default value="0".
/// Element StrError of type "http://www.ljy0.com/AccService/":ErrorResponse.
    struct ns1__ErrorResponse*           StrError                       0;	///< Optional element.
};

/// "http://www.ljy0.com/AccService/":GetAccountPasswdReq is a complexType.
struct ns1__GetAccountPasswdReq
{
/// Element AccName of type xs:string.
    char*                                AccName                        0;	///< Optional element.
};

/// "http://www.ljy0.com/AccService/":GetAccountPasswdRes is a complexType.
struct ns1__GetAccountPasswdRes
{
/// Element ErrorCode of type xs:int.
    int                                  ErrorCode                      1 = 0;	///< Default value="0".
/// Element StrError of type "http://www.ljy0.com/AccService/":ErrorResponse.
    struct ns1__ErrorResponse*           StrError                       0;	///< Optional element.
/// Element StrXML of type xs:string.
    char*                                StrXML                         0;	///< Optional element.
};

/// "http://www.ljy0.com/AccService/":UpdateAccountPasswdCardReq is a complexType.
struct ns1__UpdateAccountPasswdCardReq
{
/// Element RegionID of type xs:int.
    int*                                 RegionID                       0;	///< Optional element.
/// Element AccName of type xs:string.
    char*                                AccName                        0;	///< Optional element.
/// Element BindType of type xs:int.
    int*                                 BindType                       0;	///< Optional element.
/// Element RowNum of type xs:int.
    int*                                 RowNum                         0;	///< Optional element.
/// Element ColumnNum of type xs:int.
    int*                                 ColumnNum                      0;	///< Optional element.
/// Element PasswdCard of type xs:string.
    char*                                PasswdCard                     0;	///< Optional element.
};

/// "http://www.ljy0.com/AccService/":UpdateAccountPasswdCardRes is a complexType.
struct ns1__UpdateAccountPasswdCardRes
{
/// Element ErrorCode of type xs:int.
    int                                  ErrorCode                      1 = 0;	///< Default value="0".
/// Element StrError of type "http://www.ljy0.com/AccService/":ErrorResponse.
    struct ns1__ErrorResponse*           StrError                       0;	///< Optional element.
};

/// "http://www.ljy0.com/AccService/":BindSafeEmailReq is a complexType.
struct ns1__BindSafeEmailReq
{
/// Element RegionID of type xs:int.
    int*                                 RegionID                       0;	///< Optional element.
/// Element AccName of type xs:string.
    char*                                AccName                        0;	///< Optional element.
};

/// "http://www.ljy0.com/AccService/":BindSafeEmailRes is a complexType.
struct ns1__BindSafeEmailRes
{
/// Element ErrorCode of type xs:int.
    int                                  ErrorCode                      1 = 0;	///< Default value="0".
/// Element StrError of type "http://www.ljy0.com/AccService/":ErrorResponse.
    struct ns1__ErrorResponse*           StrError                       0;	///< Optional element.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.ljy0.com/AccService/                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.ljy0.com/AccService/                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	AccServiceSoap 
//gsoap ns1  service type:	AccServiceSoap 
//gsoap ns1  service port:	http://192.168.0.57:800/cgi-bin/acc_service 
//gsoap ns1  service namespace:	http://www.ljy0.com/AccService/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref AccServiceSoap

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page AccServiceSoap Binding "AccServiceSoap"

@section AccService_service Service Documentation "AccService"
LJY acc_service 

@section AccServiceSoap_operations Operations of Binding  "AccServiceSoap"

  - @ref __ns1__BindSafeEmail

  - @ref __ns1__UpdateAccountPasswdCard

  - @ref __ns1__InsertAccount

  - @ref __ns1__UpdateAccountPasswd

  - @ref __ns1__UpdateAccountBirthday

  - @ref __ns1__GetAccountPasswd

@section AccServiceSoap_ports Endpoints of Binding  "AccServiceSoap"

  - http://192.168.0.57:800/cgi-bin/acc_service

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   AccServiceSoap                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__BindSafeEmail                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__BindSafeEmail" of service binding "AccServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://www.ljy0.com/acc_service/BindSafeEmail"

  - Addressing method action: "http://www.ljy0.com/AccService//AccServiceSoap/BindSafeEmail"

  - Addressing method output action: "http://www.ljy0.com/AccService//AccServiceSoap/BindSafeEmailResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__BindSafeEmail(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__BindSafeEmailReq*       BindSafeEmailReq,
    // response parameters:
    struct ns1__BindSafeEmailRes*       BindSafeEmailRes
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__BindSafeEmail(
    struct soap *soap,
    // request parameters:
    struct ns1__BindSafeEmailReq*       BindSafeEmailReq,
    // response parameters:
    struct ns1__BindSafeEmailRes*       BindSafeEmailRes
  );
@endcode

*/

//gsoap ns1  service method-style:	BindSafeEmail document
//gsoap ns1  service method-encoding:	BindSafeEmail literal
//gsoap ns1  service method-action:	BindSafeEmail http://www.ljy0.com/acc_service/BindSafeEmail
//gsoap ns1  service method-output-action:	BindSafeEmail http://www.ljy0.com/AccService//AccServiceSoap/BindSafeEmailResponse
int __ns1__BindSafeEmail(
    struct ns1__BindSafeEmailReq*       BindSafeEmailReq,	///< Request parameter
    struct ns1__BindSafeEmailRes*       BindSafeEmailRes	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UpdateAccountPasswdCard                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UpdateAccountPasswdCard" of service binding "AccServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://www.ljy0.com/acc_service/UpdateAccountPasswdCard"

  - Addressing method action: "http://www.ljy0.com/AccService//AccServiceSoap/UpdateAccountPasswdCard"

  - Addressing method output action: "http://www.ljy0.com/AccService//AccServiceSoap/UpdateAccountPasswdCardResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UpdateAccountPasswdCard(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__UpdateAccountPasswdCardReq* UpdateAccountPasswdCardReq,
    // response parameters:
    struct ns1__UpdateAccountPasswdCardRes* UpdateAccountPasswdCardRes
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UpdateAccountPasswdCard(
    struct soap *soap,
    // request parameters:
    struct ns1__UpdateAccountPasswdCardReq* UpdateAccountPasswdCardReq,
    // response parameters:
    struct ns1__UpdateAccountPasswdCardRes* UpdateAccountPasswdCardRes
  );
@endcode

*/

//gsoap ns1  service method-style:	UpdateAccountPasswdCard document
//gsoap ns1  service method-encoding:	UpdateAccountPasswdCard literal
//gsoap ns1  service method-action:	UpdateAccountPasswdCard http://www.ljy0.com/acc_service/UpdateAccountPasswdCard
//gsoap ns1  service method-output-action:	UpdateAccountPasswdCard http://www.ljy0.com/AccService//AccServiceSoap/UpdateAccountPasswdCardResponse
int __ns1__UpdateAccountPasswdCard(
    struct ns1__UpdateAccountPasswdCardReq* UpdateAccountPasswdCardReq,	///< Request parameter
    struct ns1__UpdateAccountPasswdCardRes* UpdateAccountPasswdCardRes	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertAccount                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertAccount" of service binding "AccServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://www.ljy0.com/acc_service/InsertAccount"

  - Addressing method action: "http://www.ljy0.com/AccService//AccServiceSoap/InsertAccount"

  - Addressing method output action: "http://www.ljy0.com/AccService//AccServiceSoap/InsertAccountResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertAccount(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__InsertAccountReq*       InsertAccountReq,
    // response parameters:
    struct ns1__InsertAccountRes*       InsertAccountRes
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertAccount(
    struct soap *soap,
    // request parameters:
    struct ns1__InsertAccountReq*       InsertAccountReq,
    // response parameters:
    struct ns1__InsertAccountRes*       InsertAccountRes
  );
@endcode

*/

//gsoap ns1  service method-style:	InsertAccount document
//gsoap ns1  service method-encoding:	InsertAccount literal
//gsoap ns1  service method-action:	InsertAccount http://www.ljy0.com/acc_service/InsertAccount
//gsoap ns1  service method-output-action:	InsertAccount http://www.ljy0.com/AccService//AccServiceSoap/InsertAccountResponse
int __ns1__InsertAccount(
    struct ns1__InsertAccountReq*       InsertAccountReq,	///< Request parameter
    struct ns1__InsertAccountRes*       InsertAccountRes	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UpdateAccountPasswd                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UpdateAccountPasswd" of service binding "AccServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://www.ljy0.com/acc_service/UpdateAccountPasswd"

  - Addressing method action: "http://www.ljy0.com/AccService//AccServiceSoap/UpdateAccountPasswd"

  - Addressing method output action: "http://www.ljy0.com/AccService//AccServiceSoap/UpdateAccountPasswdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UpdateAccountPasswd(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__UpdateAccountPasswdReq* UpdateAccountPasswdReq,
    // response parameters:
    struct ns1__UpdateAccountPasswdRes* UpdateAccountPasswdRes
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UpdateAccountPasswd(
    struct soap *soap,
    // request parameters:
    struct ns1__UpdateAccountPasswdReq* UpdateAccountPasswdReq,
    // response parameters:
    struct ns1__UpdateAccountPasswdRes* UpdateAccountPasswdRes
  );
@endcode

*/

//gsoap ns1  service method-style:	UpdateAccountPasswd document
//gsoap ns1  service method-encoding:	UpdateAccountPasswd literal
//gsoap ns1  service method-action:	UpdateAccountPasswd http://www.ljy0.com/acc_service/UpdateAccountPasswd
//gsoap ns1  service method-output-action:	UpdateAccountPasswd http://www.ljy0.com/AccService//AccServiceSoap/UpdateAccountPasswdResponse
int __ns1__UpdateAccountPasswd(
    struct ns1__UpdateAccountPasswdReq* UpdateAccountPasswdReq,	///< Request parameter
    struct ns1__UpdateAccountPasswdRes* UpdateAccountPasswdRes	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UpdateAccountBirthday                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UpdateAccountBirthday" of service binding "AccServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://www.ljy0.com/acc_service/UpdateAccountBirthday"

  - Addressing method action: "http://www.ljy0.com/AccService//AccServiceSoap/UpdateAccountBirthday"

  - Addressing method output action: "http://www.ljy0.com/AccService//AccServiceSoap/UpdateAccountBirthdayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UpdateAccountBirthday(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__UpdateAccountBirthdayReq* UpdateAccountBirthdayReq,
    // response parameters:
    struct ns1__UpdateAccountBirthdayRes* UpdateAccountBirthdayRes
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UpdateAccountBirthday(
    struct soap *soap,
    // request parameters:
    struct ns1__UpdateAccountBirthdayReq* UpdateAccountBirthdayReq,
    // response parameters:
    struct ns1__UpdateAccountBirthdayRes* UpdateAccountBirthdayRes
  );
@endcode

*/

//gsoap ns1  service method-style:	UpdateAccountBirthday document
//gsoap ns1  service method-encoding:	UpdateAccountBirthday literal
//gsoap ns1  service method-action:	UpdateAccountBirthday http://www.ljy0.com/acc_service/UpdateAccountBirthday
//gsoap ns1  service method-output-action:	UpdateAccountBirthday http://www.ljy0.com/AccService//AccServiceSoap/UpdateAccountBirthdayResponse
int __ns1__UpdateAccountBirthday(
    struct ns1__UpdateAccountBirthdayReq* UpdateAccountBirthdayReq,	///< Request parameter
    struct ns1__UpdateAccountBirthdayRes* UpdateAccountBirthdayRes	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAccountPasswd                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetAccountPasswd" of service binding "AccServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://www.ljy0.com/acc_service/GetAccountPasswd"

  - Addressing method action: "http://www.ljy0.com/AccService//AccServiceSoap/GetAccountPasswd"

  - Addressing method output action: "http://www.ljy0.com/AccService//AccServiceSoap/GetAccountPasswdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAccountPasswd(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__GetAccountPasswdReq*    GetAccountPasswdReq,
    // response parameters:
    struct ns1__GetAccountPasswdRes*    GetAccountPasswdRes
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAccountPasswd(
    struct soap *soap,
    // request parameters:
    struct ns1__GetAccountPasswdReq*    GetAccountPasswdReq,
    // response parameters:
    struct ns1__GetAccountPasswdRes*    GetAccountPasswdRes
  );
@endcode

*/

//gsoap ns1  service method-style:	GetAccountPasswd document
//gsoap ns1  service method-encoding:	GetAccountPasswd literal
//gsoap ns1  service method-action:	GetAccountPasswd http://www.ljy0.com/acc_service/GetAccountPasswd
//gsoap ns1  service method-output-action:	GetAccountPasswd http://www.ljy0.com/AccService//AccServiceSoap/GetAccountPasswdResponse
int __ns1__GetAccountPasswd(
    struct ns1__GetAccountPasswdReq*    GetAccountPasswdReq,	///< Request parameter
    struct ns1__GetAccountPasswdRes*    GetAccountPasswdRes	///< Response parameter
);

/**

@page AccServiceSoap Binding "AccServiceSoap"

@section AccServiceSoap_policy_enablers Policy Enablers of Binding  "AccServiceSoap"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns1 Top-level root elements of schema "http://www.ljy0.com/AccService/"

*/

/* End of acc_serviceRaw.h */
