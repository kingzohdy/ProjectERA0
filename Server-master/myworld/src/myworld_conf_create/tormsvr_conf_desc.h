/********************************************************************
**       This head file is generated by program,                   **
**            Please do not change it directly.                    **
********************************************************************/

#ifndef TORMSVR_CONF_DESC_H
#define TORMSVR_CONF_DESC_H


#ifndef TDR_METALIB_TORMSVR_VERSION 
#define TDR_METALIB_TORMSVR_VERSION 	11 /*version of metalib*/
#endif

#ifndef TDR_METALIB_TORMSVR_HASH 
#define TDR_METALIB_TORMSVR_HASH 	"44f6a6c09f678abd0c73e5190d9df2fc" /*hash of metalib*/
#endif
/*   
 User Define Macros.   */

#define TORMSVR_STRING_LEN                       	256
#define TORM_MAX_CHANNEL                         	256
#define TORM_MAX_DBCONN                          	32
#define TORM_MAX_TABLE                           	128
#define TORM_MAX_DBMETALIB                       	128
#define TORM_MAX_CACHEMETA                       	128
#define TORM_MAX_RECORDS_NUM_PERSELECT           	100 	/* 单个select查询能检索出的记录行最大数目 */
#define TORM_MAX_CACHE_PERCENT_SYN_SCTMSLCT_RES  	80 	/* 当将自定义查询条件中的记录添加的cache中时，如果cache使用比例超过此值时停止添加记录到cache中 */


#ifdef __cplusplus
extern "C" {
#endif

/*   Define c types.   */


#ifndef TDR_CUSTOM_C_TYPES
#define TDR_CUSTOM_C_TYPES
#if defined(WIN32) &&  _MSC_VER < 1300
typedef __int64 tdr_longlong;
typedef unsigned __int64 tdr_ulonglong;
#else
typedef long long tdr_longlong;
typedef unsigned long long tdr_ulonglong;
#endif  /*defined(WIN32) &&  _MSC_VER < 1300*/
typedef unsigned short tdr_wchar_t;  /**<Wchar基本数据类型*/
typedef unsigned int tdr_date_t;	/**<data基本数据类型*/
typedef unsigned int tdr_time_t;	/**<time基本数据类型*/
typedef tdr_ulonglong tdr_datetime_t;  /**<datetime基本数据类型*/
typedef unsigned long int tdr_ip_t;  /**<IPv4数据类型*/
#endif /*TDR_CUSTOM_C_TYPES*/



/*   Structs/unions prototype.   */

struct tagTORMConnectDBInfo;
typedef struct tagTORMConnectDBInfo                	TORMCONNECTDBINFO;
typedef struct tagTORMConnectDBInfo                	*LPTORMCONNECTDBINFO;

struct tagTORMShmConf;
typedef struct tagTORMShmConf                      	TORMSHMCONF;
typedef struct tagTORMShmConf                      	*LPTORMSHMCONF;

struct tagTORMMetaLibInfo;
typedef struct tagTORMMetaLibInfo                  	TORMMETALIBINFO;
typedef struct tagTORMMetaLibInfo                  	*LPTORMMETALIBINFO;

struct tagTORMChannelConf;
typedef struct tagTORMChannelConf                  	TORMCHANNELCONF;
typedef struct tagTORMChannelConf                  	*LPTORMCHANNELCONF;

struct tagTORMTableConf;
typedef struct tagTORMTableConf                    	TORMTABLECONF;
typedef struct tagTORMTableConf                    	*LPTORMTABLECONF;

struct tagTORMCacheVar;
typedef struct tagTORMCacheVar                     	TORMCACHEVAR;
typedef struct tagTORMCacheVar                     	*LPTORMCACHEVAR;

struct tagTORMCacheConf;
typedef struct tagTORMCacheConf                    	TORMCACHECONF;
typedef struct tagTORMCacheConf                    	*LPTORMCACHECONF;

struct tagtormsvrconf;
typedef struct tagtormsvrconf                      	TORMSVRCONF;
typedef struct tagtormsvrconf                      	*LPTORMSVRCONF;

struct tagtormsvrrun_cumulate;
typedef struct tagtormsvrrun_cumulate              	TORMSVRRUN_CUMULATE;
typedef struct tagtormsvrrun_cumulate              	*LPTORMSVRRUN_CUMULATE;



/*   Define structs/unions.   */

#pragma pack(1)

/* dbms server  info */
struct tagTORMConnectDBInfo
{
    int IDX;                            
    int MajorVersion;                   
    int MinVersion;                     
    char DBMSName[TORMSVR_STRING_LEN];   
    char DBMSConnectionInfo[TORMSVR_STRING_LEN];
    char DBMSCurDatabaseName[TORMSVR_STRING_LEN];
    char DBMSUser[TORMSVR_STRING_LEN];   
    char DBMSPassword[TORMSVR_STRING_LEN];
    char DBMSSock[TORMSVR_STRING_LEN];   
};

struct tagTORMShmConf
{
    char Key[TORMSVR_STRING_LEN];        
    int Size;                           
};

struct tagTORMMetaLibInfo
{
    char MetaLibPath[TORMSVR_STRING_LEN];
};

struct tagTORMChannelConf
{
    char ChannelKey[TORMSVR_STRING_LEN]; 
    int UpSize;                         
    int DownSize;                       
};

struct tagTORMTableConf
{
    char TableName[TORMSVR_STRING_LEN];  
    int TableDBConnIdx;                 
};

struct tagTORMCacheVar
{
    char TableMetaName[TORMSVR_STRING_LEN];
    int CacheNum;                        	/*   number of the cached records  */
    int ScanNum;                        
    int SyncNum;                        
    int EliminateNum;                   
};

struct tagTORMCacheConf
{
    TORMSHMCONF CacheShm;                       
    int CacheVarNum;                    
    TORMCACHEVAR CacheVar[TORM_MAX_CACHEMETA];   
};

struct tagtormsvrconf
{
    int MaxProcessTime;                 
    TORMMETALIBINFO MetaLibInfo;                    
    char DispFuncSOFile[TORMSVR_STRING_LEN];
    char DispFunc[TORMSVR_STRING_LEN];   
    TORMSHMCONF ProtoVerHashShm;                
    int ChannelNum;                     
    TORMCHANNELCONF ChannelConf[TORM_MAX_CHANNEL];  
    int ConnectDBNum;                   
    TORMCONNECTDBINFO ConnectDBInfo[TORM_MAX_DBCONN]; 
    int TableNum;                       
    TORMTABLECONF TableConf[TORM_MAX_TABLE];      
    TORMCACHECONF CacheConf;                      
    int SynCstmSlctRes2Cache;            	/*  Ver.11 是否将自定义查询条件检索出的记录同步到cache中，缺省不同步 */
    int SynCstmSlctResMaxPercent;        	/*  Ver.11 当将自定义查询条件中的记录添加的cache中时，如果cache使用比例超过此值时停止添加记录到cache中 */
    int MaxRowsNumPerSelect;             	/*  Ver.11 配置单个select查询能检索出的记录行最大数目 */
};

struct tagtormsvrrun_cumulate
{
    tdr_longlong RecvMsg;                        
    tdr_longlong RecvByte;                       
    tdr_longlong RecvBadMsg;                     
    tdr_longlong RecvInsertMsg;                  
    tdr_longlong RecvUpdateMsg;                  
    tdr_longlong RecvUpdateHitCache;             
    tdr_longlong RecvDeleteMsg;                  
    tdr_longlong RecvSelectMsg;                  
    tdr_longlong RecvSelectHitCache;             
    tdr_longlong SendMsg;                        
    tdr_longlong SendByte;                       
};


#pragma pack()

#ifdef __cplusplus
}
#endif


#endif /* TORMSVR_CONF_DESC_H */
