/********************************************************************
**       This head file is generated by program,                   **
**            Please do not change it directly.                    **
********************************************************************/

#ifndef TFRAMEHEAD_H
#define TFRAMEHEAD_H


#ifndef TDR_METALIB_TFRAMEHEAD_VERSION 
#define TDR_METALIB_TFRAMEHEAD_VERSION 	10 /*version of metalib*/
#endif

#ifndef TDR_METALIB_TFRAMEHEAD_HASH 
#define TDR_METALIB_TFRAMEHEAD_HASH 	"b713230a9f3fc0438548cb2206fe3d12" /*hash of metalib*/
#endif
/*   
 User Define Macros.   */

#define TFRAMEHEAD_CMD_START                     	0
#define TFRAMEHEAD_CMD_STOP                      	1
#define TFRAMEHEAD_CMD_INPROC                    	2
#define TFRAMEHEAD_CMD_RELAY                     	3
#define TFRAMEHEAD_CMD_NOTIFY                    	4
#define TFRAMEHEAD_CMD_SETROUTING                	5
#define TFRAMEHEAD_MAX_BATCH_IDENT               	512
#define TFRAMEHEAD_EXTRA_IP                      	1
#define TFRAMEHEAD_TIMESTAMP_TIMEVAL             	1
#define SERLIZER_NAME_LEN                        	32
#define TFRAMEHEAD_SET_ROUTING                   	1

/* TFRAMEHEAD_STOP_REASON*/
enum tagTFRAMEHEAD_STOP_REASON 
{
    TFRAMEHEAD_REASON_NONE = 0, 
    TFRAMEHEAD_REASON_IDLE_CLOSE = 1, 
    TFRAMEHEAD_REASON_PEER_CLOSE = 2, 
    TFRAMEHEAD_REASON_NETWORK_FAIL = 3, 
    TFRAMEHEAD_REASON_BAD_PKGLEN = 4, 
    TFRAMEHEAD_REASON_TCONND_SHUTDOWN = 6, 
    TFRAMEHEAD_REASON_SELF_CLOSE = 7, 
    TFRAMEHEAD_REASON_AUTH_FAIL = 8, 
    TFRAMEHEAD_REASON_TRANS_LOST = 9, 
    TFRAMEHEAD_REASON_ENC_NOSUP = 10, 
    TFRAMEHEAD_REASON_SVR_CLOSE = 11, 
    TFRAMEHEAD_REASON_SVR_KICKOFF = 12, 
    TFRAMEHEAD_REASON_CLI_RELOGIN = 13, 
    TFRAMEHEAD_REASON_CLI_LOGOUT = 14, 
    TFRAMEHEAD_REASON_SVR_RESV = 100, 
};

/* TFRAMEHEAD_RELAYTYPE*/
enum tagTFRAMEHEAD_RELAYTYPE 
{
    TFRAMEHEAD_JUMP_SERVER_RELAY = 1, 
    TFRAMEHEAD_NETWORK_FAILURE_RELAY = 2, 
    TFRAMEHEAD_CLIENT_CRASH_RELAY = 3, 
};
#define TFRAMEHEAD_CONNECTKEY_LEN                	16
#define TFRAMEHEAD_IDENTITY_LEN                  	16


#ifdef __cplusplus
extern "C" {
#endif

/*   Define c types.   */


#ifndef TDR_CUSTOM_C_TYPES
#define TDR_CUSTOM_C_TYPES
#if defined(WIN32) &&  _MSC_VER < 1300
typedef __int64 tdr_longlong;
typedef unsigned __int64 tdr_ulonglong;
#else
typedef long long tdr_longlong;
typedef unsigned long long tdr_ulonglong;
#endif  /*defined(WIN32) &&  _MSC_VER < 1300*/
typedef unsigned short tdr_wchar_t;  /**<Wchar基本数据类型*/
typedef unsigned int tdr_date_t;	/**<data基本数据类型*/
typedef unsigned int tdr_time_t;	/**<time基本数据类型*/
typedef tdr_ulonglong tdr_datetime_t;  /**<datetime基本数据类型*/
typedef unsigned long int tdr_ip_t;  /**<IPv4数据类型*/
#endif /*TDR_CUSTOM_C_TYPES*/



/*   Structs/unions prototype.   */

struct tagTIPInfo;
typedef struct tagTIPInfo                          	TIPINFO;
typedef struct tagTIPInfo                          	*LPTIPINFO;

union tagTFrameHeadData;
typedef union  tagTFrameHeadData                   	TFRAMEHEADDATA;
typedef union  tagTFrameHeadData                   	*LPTFRAMEHEADDATA;

struct tagTFrameAuthQQ;
typedef struct tagTFrameAuthQQ                     	TFRAMEAUTHQQ;
typedef struct tagTFrameAuthQQ                     	*LPTFRAMEAUTHQQ;

union tagTFrameAuthData;
typedef union  tagTFrameAuthData                   	TFRAMEAUTHDATA;
typedef union  tagTFrameAuthData                   	*LPTFRAMEAUTHDATA;

struct tagTFrameCmdStart;
typedef struct tagTFrameCmdStart                   	TFRAMECMDSTART;
typedef struct tagTFrameCmdStart                   	*LPTFRAMECMDSTART;

struct tagTFrameCmdStop;
typedef struct tagTFrameCmdStop                    	TFRAMECMDSTOP;
typedef struct tagTFrameCmdStop                    	*LPTFRAMECMDSTOP;

struct tagTFrameIdent;
typedef struct tagTFrameIdent                      	TFRAMEIDENT;
typedef struct tagTFrameIdent                      	*LPTFRAMEIDENT;

struct tagTFrameCmdInProc;
typedef struct tagTFrameCmdInProc                  	TFRAMECMDINPROC;
typedef struct tagTFrameCmdInProc                  	*LPTFRAMECMDINPROC;

struct tagTFrameCmdRelay;
typedef struct tagTFrameCmdRelay                   	TFRAMECMDRELAY;
typedef struct tagTFrameCmdRelay                   	*LPTFRAMECMDRELAY;

struct tagTFrameCmdSetRouting;
typedef struct tagTFrameCmdSetRouting              	TFRAMECMDSETROUTING;
typedef struct tagTFrameCmdSetRouting              	*LPTFRAMECMDSETROUTING;

union tagTRoutingOption;
typedef union  tagTRoutingOption                   	TROUTINGOPTION;
typedef union  tagTRoutingOption                   	*LPTROUTINGOPTION;

struct tagTFrameCmdNotify;
typedef struct tagTFrameCmdNotify                  	TFRAMECMDNOTIFY;
typedef struct tagTFrameCmdNotify                  	*LPTFRAMECMDNOTIFY;

union tagTFrameCmdData;
typedef union  tagTFrameCmdData                    	TFRAMECMDDATA;
typedef union  tagTFrameCmdData                    	*LPTFRAMECMDDATA;

struct tagTTimeVal;
typedef struct tagTTimeVal                         	TTIMEVAL;
typedef struct tagTTimeVal                         	*LPTTIMEVAL;

union tagTTimeStampData;
typedef union  tagTTimeStampData                   	TTIMESTAMPDATA;
typedef union  tagTTimeStampData                   	*LPTTIMESTAMPDATA;

struct tagtframehead;
typedef struct tagtframehead                       	TFRAMEHEAD;
typedef struct tagtframehead                       	*LPTFRAMEHEAD;



/*   Define structs/unions.   */

#pragma pack(1)

struct tagTIPInfo
{
    short nFamily;                        
    unsigned short wPort;                          
    tdr_ip_t ulIp;                           
};

union tagTFrameHeadData
{
    TIPINFO stIPInfo;                        	/* TFRAMEHEAD_EXTRA_IP,   */
};

struct tagTFrameAuthQQ
{
    long lUin;                           
};

union tagTFrameAuthData
{
    TFRAMEAUTHQQ stAuthQQV1;                      	/* TSEC_AUTH_QQV1,   */
    TFRAMEAUTHQQ stAuthQQV2;                      	/* TSEC_AUTH_QQV2,   */
    TFRAMEAUTHQQ stAuthQQUnified;                 	/* TSEC_AUTH_QQUNIFIED,   */
};

struct tagTFrameCmdStart
{
    int iAuthType;                       	/*    Bind Macrosgroup:TSEC_AUTH,*/
    TFRAMEAUTHDATA stAuthData;                     
    int iWaitTime;                       	/*   连接排队时间 */
};

struct tagTFrameCmdStop
{
    int iReason;                        
};

struct tagTFrameIdent
{
    int iID;                            
    int iConnIdx;                       
};

struct tagTFrameCmdInProc
{
    char chValid;                        
    char chNoEnc;                        
    short nCount;                         
    TFRAMEIDENT astIdents[TFRAMEHEAD_MAX_BATCH_IDENT];
};

struct tagTFrameCmdRelay
{
    long lUin;                           
    int iRelayType;                     
    TFRAMEIDENT stOld;                          
    TFRAMEIDENT stNew;                          
};

struct tagTFrameCmdSetRouting
{
    char szSerializerName[SERLIZER_NAME_LEN];
    int iID;                             	/*   连接在逻辑服务端上的索引,含义同head字段 */
};

union tagTRoutingOption
{
    TFRAMECMDSETROUTING stCmdRouting;                    	/* TFRAMEHEAD_SET_ROUTING,   */
};

struct tagTFrameCmdNotify
{
    long lUin;                           
    char szConnKey[TFRAMEHEAD_CONNECTKEY_LEN];
    char szIdentity[TFRAMEHEAD_IDENTITY_LEN];
    unsigned char bISetRouting;                   
    TROUTINGOPTION stRouting;                      
};

union tagTFrameCmdData
{
    TFRAMECMDSTART stStart;                         	/* TFRAMEHEAD_CMD_START,   */
    TFRAMECMDSTOP stStop;                          	/* TFRAMEHEAD_CMD_STOP,   */
    TFRAMECMDINPROC stInProc;                        	/* TFRAMEHEAD_CMD_INPROC,   */
    TFRAMECMDRELAY stRelay;                         	/* TFRAMEHEAD_CMD_RELAY,   */
    TFRAMECMDNOTIFY stNotify;                        	/* TFRAMEHEAD_CMD_NOTIFY,   */
    TFRAMECMDSETROUTING stSetRouting;                    	/* TFRAMEHEAD_CMD_SETROUTING,   */
};

struct tagTTimeVal
{
    int iSec;                           
    int iUsec;                          
};

union tagTTimeStampData
{
    TTIMEVAL stTimeVal;                       	/* TFRAMEHEAD_TIMESTAMP_TIMEVAL,   */
};

struct tagtframehead
{
    char chVer;                           	/*   版本信息,默认为零 */
    char chCmd;                          
    char chExtraType;                    
    char chTimeStampType;                
    int iID;                            
    int iConnIdx;                       
    TFRAMEHEADDATA stExtraInfo;                    
    TTIMESTAMPDATA stTimeStamp;                    
    TFRAMECMDDATA stCmdData;                      
};


#pragma pack()

#ifdef __cplusplus
}
#endif


#endif /* TFRAMEHEAD_H */
