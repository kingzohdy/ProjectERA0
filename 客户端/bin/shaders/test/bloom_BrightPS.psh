
#include "header.fx"

#define MAX_SAMPLES 16
float g_lum		=	0.3f;	 

sampler MeshTextureSampler : register(s0);
sampler BlendTextureSampler : register(s1);
sampler BloomSampler : register(s2);
sampler BlurSampler : register(s3);

struct VS_OUTPUT
{
    float4 Position   : POSITION;   // vertex position 
    float3 TextureUV  : TEXCOORD0;  // vertex texture coords 
};

struct PS_OUTPUT
{
    float4 RGBColor : COLOR0;  // Pixel color    
};

PS_OUTPUT PSMain( VS_OUTPUT In ) 
{ 
    PS_OUTPUT Output;
    
    float4 vSample = tex2D( MeshTextureSampler, In.TextureUV.xy );

#if BLUR_TYPE != 2
    // Subtract out dark pixels
    vSample.rgb -= 0.9f*normalize(vSample.rgb)*g_lum;
    // Clamp to 0
    vSample = max(vSample, 0.0f);
    
    vSample.rgb = vSample.rgb * vSample.rgb;

#endif
    
    Output.RGBColor = vSample;

    return Output;
}
