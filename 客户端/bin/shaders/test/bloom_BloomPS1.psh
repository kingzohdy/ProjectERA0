
#include "header.fx"

#define MAX_SAMPLES 16

float g_avSampleOffsets[MAX_SAMPLES];
float g_avSampleWeights[MAX_SAMPLES];

sampler MeshTextureSampler : register(s0);
sampler BlendTextureSampler : register(s1);
sampler BloomSampler : register(s2);
sampler BlurSampler : register(s3);

struct VS_OUTPUT
{
    float4 Position   : POSITION;   // vertex position 
    float3 TextureUV  : TEXCOORD0;  // vertex texture coords 
};

struct PS_OUTPUT
{
    float4 RGBColor : COLOR0;  // Pixel color    
};

PS_OUTPUT PSMain(VS_OUTPUT In)
{
    PS_OUTPUT Output;
    float4 vSample = 0.0f;
    float4 vColor = 0.0f;
        
    float2 vSamplePosition;    
    // Perform a one-directional gaussian blur
    for(int iSample = 0; iSample < 15; iSample++)
    {
        vSamplePosition =  In.TextureUV.xy + float2(g_avSampleOffsets[iSample], 0);
        vColor = tex2D(BlurSampler, vSamplePosition);
        vSample += g_avSampleWeights[iSample]*vColor;
    }
    Output.RGBColor = vSample;

    return Output;
}
